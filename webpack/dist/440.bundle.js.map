{"version":3,"file":"440.bundle.js","mappings":"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","sources":["webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.css","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.css?a1b1","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Find widget */\n.monaco-editor .find-widget {\n\tposition: absolute;\n\tz-index: 35;\n\theight: 33px;\n\toverflow: hidden;\n\tline-height: 19px;\n\ttransition: transform 200ms linear;\n\tpadding: 0 4px;\n\tbox-sizing: border-box;\n\ttransform: translateY(calc(-100% - 10px)); /* shadow (10px) */\n\tborder-bottom-left-radius: 4px;\n\tborder-bottom-right-radius: 4px;\n}\n\n.monaco-workbench.reduce-motion .monaco-editor .find-widget {\n\ttransition: transform 0ms linear;\n}\n\n.monaco-editor .find-widget textarea {\n\tmargin: 0px;\n}\n\n.monaco-editor .find-widget.hiddenEditor {\n\tdisplay: none;\n}\n\n/* Find widget when replace is toggled on */\n.monaco-editor .find-widget.replaceToggled > .replace-part {\n\tdisplay: flex;\n}\n\n.monaco-editor .find-widget.visible  {\n\ttransform: translateY(0);\n}\n\n.monaco-editor .find-widget .monaco-inputbox.synthetic-focus {\n\toutline: 1px solid -webkit-focus-ring-color;\n\toutline-offset: -1px;\n}\n\n.monaco-editor .find-widget .monaco-inputbox .input {\n\tbackground-color: transparent;\n\tmin-height: 0;\n}\n\n.monaco-editor .find-widget .monaco-findInput .input {\n\tfont-size: 13px;\n}\n\n.monaco-editor .find-widget > .find-part,\n.monaco-editor .find-widget > .replace-part {\n\tmargin: 3px 25px 0 17px;\n\tfont-size: 12px;\n\tdisplay: flex;\n}\n\n.monaco-editor .find-widget > .find-part .monaco-inputbox,\n.monaco-editor .find-widget > .replace-part .monaco-inputbox {\n\tmin-height: 25px;\n}\n\n\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .mirror {\n\tpadding-right: 22px;\n}\n\n.monaco-editor .find-widget > .find-part .monaco-inputbox > .ibwrapper > .input,\n.monaco-editor .find-widget > .find-part .monaco-inputbox > .ibwrapper > .mirror,\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .input,\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .mirror {\n\tpadding-top: 2px;\n\tpadding-bottom: 2px;\n}\n\n.monaco-editor .find-widget > .find-part .find-actions {\n\theight: 25px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.monaco-editor .find-widget > .replace-part .replace-actions {\n\theight: 25px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.monaco-editor .find-widget .monaco-findInput {\n\tvertical-align: middle;\n\tdisplay: flex;\n\tflex:1;\n}\n\n.monaco-editor .find-widget .monaco-findInput .monaco-scrollable-element {\n\t/* Make sure textarea inherits the width correctly */\n\twidth: 100%;\n}\n\n.monaco-editor .find-widget .monaco-findInput .monaco-scrollable-element .scrollbar.vertical {\n\t/* Hide vertical scrollbar */\n\topacity: 0;\n}\n\n.monaco-editor .find-widget .matchesCount {\n\tdisplay: flex;\n\tflex: initial;\n\tmargin: 0 0 0 3px;\n\tpadding: 2px 0 0 2px;\n\theight: 25px;\n\tvertical-align: middle;\n\tbox-sizing: border-box;\n\ttext-align: center;\n\tline-height: 23px;\n}\n\n.monaco-editor .find-widget .button {\n\twidth: 16px;\n\theight: 16px;\n\tpadding: 3px;\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tflex: initial;\n\tmargin-left: 3px;\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n/* find in selection button */\n.monaco-editor .find-widget .codicon-find-selection {\n\twidth: 22px;\n\theight: 22px;\n\tpadding: 3px;\n\tborder-radius: 5px;\n}\n\n.monaco-editor .find-widget .button.left {\n\tmargin-left: 0;\n\tmargin-right: 3px;\n}\n\n.monaco-editor .find-widget .button.wide {\n\twidth: auto;\n\tpadding: 1px 6px;\n\ttop: -1px;\n}\n\n.monaco-editor .find-widget .button.toggle {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 3px;\n\twidth: 18px;\n\theight: 100%;\n\tborder-radius: 0;\n\tbox-sizing: border-box;\n}\n\n.monaco-editor .find-widget .button.toggle.disabled {\n\tdisplay: none;\n}\n\n.monaco-editor .find-widget .disabled {\n\tcolor: var(--vscode-disabledForeground);\n\tcursor: default;\n}\n\n.monaco-editor .find-widget > .replace-part {\n\tdisplay: none;\n}\n\n.monaco-editor .find-widget > .replace-part > .monaco-findInput {\n\tposition: relative;\n\tdisplay: flex;\n\tvertical-align: middle;\n\tflex: auto;\n\tflex-grow: 0;\n\tflex-shrink: 0;\n}\n\n.monaco-editor .find-widget > .replace-part > .monaco-findInput > .controls {\n\tposition: absolute;\n\ttop: 3px;\n\tright: 2px;\n}\n\n/* REDUCED */\n.monaco-editor .find-widget.reduced-find-widget .matchesCount {\n\tdisplay:none;\n}\n\n/* NARROW (SMALLER THAN REDUCED) */\n.monaco-editor .find-widget.narrow-find-widget {\n\tmax-width: 257px !important;\n}\n\n/* COLLAPSED (SMALLER THAN NARROW) */\n.monaco-editor .find-widget.collapsed-find-widget {\n\tmax-width: 170px !important;\n}\n\n.monaco-editor .find-widget.collapsed-find-widget .button.previous,\n.monaco-editor .find-widget.collapsed-find-widget .button.next,\n.monaco-editor .find-widget.collapsed-find-widget .button.replace,\n.monaco-editor .find-widget.collapsed-find-widget .button.replace-all,\n.monaco-editor .find-widget.collapsed-find-widget > .find-part .monaco-findInput .controls {\n\tdisplay:none;\n}\n\n.monaco-editor .findMatch {\n\tanimation-duration: 0;\n\tanimation-name: inherit !important;\n}\n\n.monaco-editor .find-widget .monaco-sash {\n\tleft: 0 !important;\n}\n\n.monaco-editor.hc-black .find-widget .button:before {\n\tposition: relative;\n\ttop: 1px;\n\tleft: 2px;\n}\n\n/* Close button position. */\n.monaco-editor .find-widget > .button.codicon-widget-close {\n\tposition: absolute;\n\ttop: 5px;\n\tright: 4px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.css\"],\"names\":[],\"mappings\":\"AAAA;;;+FAG+F;;AAE/F,gBAAgB;AAChB;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,iBAAiB;CACjB,kCAAkC;CAClC,cAAc;CACd,sBAAsB;CACtB,yCAAyC,EAAE,kBAAkB;CAC7D,8BAA8B;CAC9B,+BAA+B;AAChC;;AAEA;CACC,gCAAgC;AACjC;;AAEA;CACC,WAAW;AACZ;;AAEA;CACC,aAAa;AACd;;AAEA,2CAA2C;AAC3C;CACC,aAAa;AACd;;AAEA;CACC,wBAAwB;AACzB;;AAEA;CACC,2CAA2C;CAC3C,oBAAoB;AACrB;;AAEA;CACC,6BAA6B;CAC7B,aAAa;AACd;;AAEA;CACC,eAAe;AAChB;;AAEA;;CAEC,uBAAuB;CACvB,eAAe;CACf,aAAa;AACd;;AAEA;;CAEC,gBAAgB;AACjB;;;AAGA;CACC,mBAAmB;AACpB;;AAEA;;;;CAIC,gBAAgB;CAChB,mBAAmB;AACpB;;AAEA;CACC,YAAY;CACZ,aAAa;CACb,mBAAmB;AACpB;;AAEA;CACC,YAAY;CACZ,aAAa;CACb,mBAAmB;AACpB;;AAEA;CACC,sBAAsB;CACtB,aAAa;CACb,MAAM;AACP;;AAEA;CACC,oDAAoD;CACpD,WAAW;AACZ;;AAEA;CACC,4BAA4B;CAC5B,UAAU;AACX;;AAEA;CACC,aAAa;CACb,aAAa;CACb,iBAAiB;CACjB,oBAAoB;CACpB,YAAY;CACZ,sBAAsB;CACtB,sBAAsB;CACtB,kBAAkB;CAClB,iBAAiB;AAClB;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,YAAY;CACZ,kBAAkB;CAClB,aAAa;CACb,aAAa;CACb,gBAAgB;CAChB,kCAAkC;CAClC,4BAA4B;CAC5B,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,uBAAuB;AACxB;;AAEA,6BAA6B;AAC7B;CACC,WAAW;CACX,YAAY;CACZ,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,cAAc;CACd,iBAAiB;AAClB;;AAEA;CACC,WAAW;CACX,gBAAgB;CAChB,SAAS;AACV;;AAEA;CACC,kBAAkB;CAClB,MAAM;CACN,SAAS;CACT,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,uCAAuC;CACvC,eAAe;AAChB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,sBAAsB;CACtB,UAAU;CACV,YAAY;CACZ,cAAc;AACf;;AAEA;CACC,kBAAkB;CAClB,QAAQ;CACR,UAAU;AACX;;AAEA,YAAY;AACZ;CACC,YAAY;AACb;;AAEA,kCAAkC;AAClC;CACC,2BAA2B;AAC5B;;AAEA,oCAAoC;AACpC;CACC,2BAA2B;AAC5B;;AAEA;;;;;CAKC,YAAY;AACb;;AAEA;CACC,qBAAqB;CACrB,kCAAkC;AACnC;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,kBAAkB;CAClB,QAAQ;CACR,SAAS;AACV;;AAEA,2BAA2B;AAC3B;CACC,kBAAkB;CAClB,QAAQ;CACR,UAAU;AACX\",\"sourcesContent\":[\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\n/* Find widget */\\n.monaco-editor .find-widget {\\n\\tposition: absolute;\\n\\tz-index: 35;\\n\\theight: 33px;\\n\\toverflow: hidden;\\n\\tline-height: 19px;\\n\\ttransition: transform 200ms linear;\\n\\tpadding: 0 4px;\\n\\tbox-sizing: border-box;\\n\\ttransform: translateY(calc(-100% - 10px)); /* shadow (10px) */\\n\\tborder-bottom-left-radius: 4px;\\n\\tborder-bottom-right-radius: 4px;\\n}\\n\\n.monaco-workbench.reduce-motion .monaco-editor .find-widget {\\n\\ttransition: transform 0ms linear;\\n}\\n\\n.monaco-editor .find-widget textarea {\\n\\tmargin: 0px;\\n}\\n\\n.monaco-editor .find-widget.hiddenEditor {\\n\\tdisplay: none;\\n}\\n\\n/* Find widget when replace is toggled on */\\n.monaco-editor .find-widget.replaceToggled > .replace-part {\\n\\tdisplay: flex;\\n}\\n\\n.monaco-editor .find-widget.visible  {\\n\\ttransform: translateY(0);\\n}\\n\\n.monaco-editor .find-widget .monaco-inputbox.synthetic-focus {\\n\\toutline: 1px solid -webkit-focus-ring-color;\\n\\toutline-offset: -1px;\\n}\\n\\n.monaco-editor .find-widget .monaco-inputbox .input {\\n\\tbackground-color: transparent;\\n\\tmin-height: 0;\\n}\\n\\n.monaco-editor .find-widget .monaco-findInput .input {\\n\\tfont-size: 13px;\\n}\\n\\n.monaco-editor .find-widget > .find-part,\\n.monaco-editor .find-widget > .replace-part {\\n\\tmargin: 3px 25px 0 17px;\\n\\tfont-size: 12px;\\n\\tdisplay: flex;\\n}\\n\\n.monaco-editor .find-widget > .find-part .monaco-inputbox,\\n.monaco-editor .find-widget > .replace-part .monaco-inputbox {\\n\\tmin-height: 25px;\\n}\\n\\n\\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .mirror {\\n\\tpadding-right: 22px;\\n}\\n\\n.monaco-editor .find-widget > .find-part .monaco-inputbox > .ibwrapper > .input,\\n.monaco-editor .find-widget > .find-part .monaco-inputbox > .ibwrapper > .mirror,\\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .input,\\n.monaco-editor .find-widget > .replace-part .monaco-inputbox > .ibwrapper > .mirror {\\n\\tpadding-top: 2px;\\n\\tpadding-bottom: 2px;\\n}\\n\\n.monaco-editor .find-widget > .find-part .find-actions {\\n\\theight: 25px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n\\n.monaco-editor .find-widget > .replace-part .replace-actions {\\n\\theight: 25px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n\\n.monaco-editor .find-widget .monaco-findInput {\\n\\tvertical-align: middle;\\n\\tdisplay: flex;\\n\\tflex:1;\\n}\\n\\n.monaco-editor .find-widget .monaco-findInput .monaco-scrollable-element {\\n\\t/* Make sure textarea inherits the width correctly */\\n\\twidth: 100%;\\n}\\n\\n.monaco-editor .find-widget .monaco-findInput .monaco-scrollable-element .scrollbar.vertical {\\n\\t/* Hide vertical scrollbar */\\n\\topacity: 0;\\n}\\n\\n.monaco-editor .find-widget .matchesCount {\\n\\tdisplay: flex;\\n\\tflex: initial;\\n\\tmargin: 0 0 0 3px;\\n\\tpadding: 2px 0 0 2px;\\n\\theight: 25px;\\n\\tvertical-align: middle;\\n\\tbox-sizing: border-box;\\n\\ttext-align: center;\\n\\tline-height: 23px;\\n}\\n\\n.monaco-editor .find-widget .button {\\n\\twidth: 16px;\\n\\theight: 16px;\\n\\tpadding: 3px;\\n\\tborder-radius: 5px;\\n\\tdisplay: flex;\\n\\tflex: initial;\\n\\tmargin-left: 3px;\\n\\tbackground-position: center center;\\n\\tbackground-repeat: no-repeat;\\n\\tcursor: pointer;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\\n\\n/* find in selection button */\\n.monaco-editor .find-widget .codicon-find-selection {\\n\\twidth: 22px;\\n\\theight: 22px;\\n\\tpadding: 3px;\\n\\tborder-radius: 5px;\\n}\\n\\n.monaco-editor .find-widget .button.left {\\n\\tmargin-left: 0;\\n\\tmargin-right: 3px;\\n}\\n\\n.monaco-editor .find-widget .button.wide {\\n\\twidth: auto;\\n\\tpadding: 1px 6px;\\n\\ttop: -1px;\\n}\\n\\n.monaco-editor .find-widget .button.toggle {\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tleft: 3px;\\n\\twidth: 18px;\\n\\theight: 100%;\\n\\tborder-radius: 0;\\n\\tbox-sizing: border-box;\\n}\\n\\n.monaco-editor .find-widget .button.toggle.disabled {\\n\\tdisplay: none;\\n}\\n\\n.monaco-editor .find-widget .disabled {\\n\\tcolor: var(--vscode-disabledForeground);\\n\\tcursor: default;\\n}\\n\\n.monaco-editor .find-widget > .replace-part {\\n\\tdisplay: none;\\n}\\n\\n.monaco-editor .find-widget > .replace-part > .monaco-findInput {\\n\\tposition: relative;\\n\\tdisplay: flex;\\n\\tvertical-align: middle;\\n\\tflex: auto;\\n\\tflex-grow: 0;\\n\\tflex-shrink: 0;\\n}\\n\\n.monaco-editor .find-widget > .replace-part > .monaco-findInput > .controls {\\n\\tposition: absolute;\\n\\ttop: 3px;\\n\\tright: 2px;\\n}\\n\\n/* REDUCED */\\n.monaco-editor .find-widget.reduced-find-widget .matchesCount {\\n\\tdisplay:none;\\n}\\n\\n/* NARROW (SMALLER THAN REDUCED) */\\n.monaco-editor .find-widget.narrow-find-widget {\\n\\tmax-width: 257px !important;\\n}\\n\\n/* COLLAPSED (SMALLER THAN NARROW) */\\n.monaco-editor .find-widget.collapsed-find-widget {\\n\\tmax-width: 170px !important;\\n}\\n\\n.monaco-editor .find-widget.collapsed-find-widget .button.previous,\\n.monaco-editor .find-widget.collapsed-find-widget .button.next,\\n.monaco-editor .find-widget.collapsed-find-widget .button.replace,\\n.monaco-editor .find-widget.collapsed-find-widget .button.replace-all,\\n.monaco-editor .find-widget.collapsed-find-widget > .find-part .monaco-findInput .controls {\\n\\tdisplay:none;\\n}\\n\\n.monaco-editor .findMatch {\\n\\tanimation-duration: 0;\\n\\tanimation-name: inherit !important;\\n}\\n\\n.monaco-editor .find-widget .monaco-sash {\\n\\tleft: 0 !important;\\n}\\n\\n.monaco-editor.hc-black .find-widget .button:before {\\n\\tposition: relative;\\n\\ttop: 1px;\\n\\tleft: 2px;\\n}\\n\\n/* Close button position. */\\n.monaco-editor .find-widget > .button.codicon-widget-close {\\n\\tposition: absolute;\\n\\ttop: 5px;\\n\\tright: 4px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static matchIndex(index) {\n        return new ReplacePiece(null, index, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(40 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    get isSearching() { return this._isSearching; }\n    get filters() { return this._filters; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","\n      import API from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../css-loader/dist/cjs.js!./findWidget.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../css-loader/dist/cjs.js!./findWidget.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, toolbarHoverBackground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(89 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(89 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(142 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(40 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(40 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(40 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                const globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(40 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(89 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(89 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(40 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(40 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(40 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(82 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    const selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n        this._domNode.role = 'dialog';\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(this._closeBtn.domNode);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n    getViewState() {\n        let widgetViewZoneVisible = false;\n        if (this._viewZone && this._viewZoneId) {\n            widgetViewZoneVisible = this._viewZone.heightInPx > this._codeEditor.getScrollTop();\n        }\n        return {\n            widgetViewZoneVisible,\n            scrollTop: this._codeEditor.getScrollTop()\n        };\n    }\n    setViewState(state) {\n        if (!state) {\n            return;\n        }\n        if (state.widgetViewZoneVisible) {\n            // we should add the view zone\n            this._layoutViewZone(state.scrollTop);\n        }\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const widgetBorderColor = theme.getColor(widgetBorder);\n    if (widgetBorderColor) {\n        collector.addRule(`.monaco-editor .find-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","FindDecorations","constructor","editor","this","_editor","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","getPosition","dispose","removeDecorations","_allDecorations","reset","getCount","length","getFindScope","getModel","getDecorationRange","getFindScopes","scopes","map","findScopeDecorationId","filter","element","getStartPosition","setStartPosition","newStartPosition","setCurrentFindMatch","_getDecorationIndex","decorationId","index","indexOf","getDecorationRangeAt","getCurrentMatchesPosition","desiredRange","candidates","getDecorationsInRange","candidate","candidateOpts","options","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","nextMatch","newCurrentDecorationId","matchPosition","i","len","range","equalsRange","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","startLineNumber","endLineNumber","endColumn","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","startColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","set","findMatches","findScopes","accessor","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","deltaDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","position","r","lineNumber","column","matchAfterPosition","result","concat","register","description","stickiness","zIndex","className","showIfCollapsed","overviewRuler","color","Center","minimap","Inline","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","getEditOperations","model","builder","ops","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","plusRange","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection","StaticValueReplacePattern","staticValue","kind","DynamicPiecesReplacePattern","pieces","ReplacePattern","fromStaticValue","value","ReplacePiece","hasReplacementPatterns","_state","buildReplaceString","matches","preserveCase","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","join","remainder","String","floor","ReplacePieceBuilder","source","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_WIDGET_NOT_VISIBLE","toNegated","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","primary","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","StartFindAction","StartFindWithSelection","StartFindWithArgs","NextMatchFindAction","PreviousMatchFindAction","GoToMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","CloseFindWidgetCommand","ToggleCaseSensitiveCommand","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","MATCHES_LIMIT","FindModelBoundToEditorModel","state","_toDispose","_isDisposed","_startSearchingTimer","add","_updateDecorationsScheduler","research","onDidChangeCursorPosition","e","reason","_ignoreModelContentChanged","onDidChangeModelContent","isFlush","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","cancel","setIfNotSet","moveCursor","_getSearchRange","getFullModelRange","newFindScope","isArray","_findMatches","getSelection","currentMatchesPosition","matchAfterSelection","changeMatchInfo","undefined","getOption","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","matchesPosition","setSelection","_prevSearchPosition","before","isUsingLineStops","_moveToPrevMatch","isRecursed","canNavigateBack","nextMatchRange","prevMatchRange","isEmpty","equals","searchRange","getEndPosition","isBefore","prevMatch","findPreviousMatch","containsRange","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_moveToMatch","decorationRange","moveToMatch","_getReplacePattern","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode","fromCharCode","parseReplaceString","replace","replacePattern","selection","command","_executeEditorCommand","limitResultCount","searchRanges","scope","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","modelText","getValue","fullModelRange","resultText","arguments","m","selectAllMatches","selections","setSelections","pushUndoStop","executeCommand","effectiveOptionValue","override","FindReplaceState","_searchString","_replaceString","isRevealed","_isRevealed","_isReplaceRevealed","_isRegexOverride","_isRegex","_wholeWordOverride","_wholeWord","_matchCaseOverride","_matchCase","_preserveCaseOverride","_preserveCase","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","_searchScope","_matchesPosition","_matchesCount","currentMatch","_currentMatch","isSearching","_isSearching","filters","_filters","super","_onFindReplaceStateChange","_register","event","_loop","changeEvent","updateHistory","loop","somethingChanged","fire","change","newState","_a","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","update","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","findSelectionIcon","nls","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_DIALOG_LABEL","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","domNode","document","createElement","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","keybindingService","contextKeyService","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_keybindingService","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isVisible","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","supportLoop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","__awaiter","thisArg","_arguments","generator","globalBufferTerm","getGlobalBufferTerm","select","P","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","_findInputFocused","bindTo","_findFocusTracker","dom","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","addOverlayWidget","onDidChangeModel","_viewZoneId","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","getId","ID","getDomNode","_domNode","preference","setValue","_reveal","_hide","width","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","checked","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","bind","addToHistory","label","style","minWidth","title","firstChild","removeChild","strings","appendChild","createTextNode","_getAriaLabel","clientWidth","ariaLabel","getLineContent","isSelection","isChecked","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","setAttribute","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","top","leftOfFindWidget","endCoords","focusTheEditor","remove","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","focusFindInput","focusReplaceInput","highlightFindOptions","getSelections","setEndPosition","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","dispatchEvent","target","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","_onReplaceInputKeyDown","info","store","getVerticalSashLeft","_sash","_keybindingLabelFor","actionId","kb","lookupKeybinding","getLabel","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","inputBoxStyles","toggleStyles","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","onMouseDown","SimpleButton","icon","onTrigger","getAction","run","findPart","actionsContainer","inputActiveOptionBackground","inputActiveOptionBorder","inputActiveOptionForeground","onChange","isEnabled","appendPreserveCaseLabel","history","getPreserveCase","onPreserveCaseKeyDown","enabled","replacePart","replaceActionsContainer","role","_resizeSash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","onDidReset","currentWidth","setFocusInputOnOptionClick","getViewState","widgetViewZoneVisible","scrollTop","setViewState","opts","_opts","asClassName","tabIndex","onclick","onkeydown","_b","call","expanded","asClassNameArray","theme","collector","addBackgroundColorRule","selector","addRule","getColor","widgetShadowColor","widgetBorderColor","findMatchHighlightBorder","type","findMatchBorder","findRangeHighlightBorder","hcBorder","foreground","error","resizeBorderBackground","border","toolbarHoverBackgroundColor","focusOutline"],"sourceRoot":""}