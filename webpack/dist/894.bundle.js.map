{"version":3,"file":"894.bundle.js","mappings":"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","sources":["webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/breakpointsView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/loadedScriptsPicker.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugSessionPicker.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugCommands.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugIcons.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugModel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugSource.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/disassemblyViewInput.js"],"sourcesContent":["import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Gesture } from 'monaco-editor/esm/vs/base/browser/touch.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { IconLabel } from 'monaco-editor/esm/vs/base/browser/ui/iconLabel/iconLabel.js';\nimport { InputBox } from 'monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { MarkdownString } from 'monaco-editor/esm/vs/base/common/htmlContent.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createAndFillInActionBarActions, createAndFillInContextMenuActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { registerAction2, Action2, MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { WorkbenchList } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { defaultInputBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { debugBreakpointUnsupported, logBreakpoint, conditionalBreakpoint, watchExpressionsAddFuncBreakpoint, breakpointsActivate, breakpointsRemoveAll, dataBreakpoint, functionBreakpoint, breakpoint } from './debugIcons.js';\nimport { BREAKPOINTS_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, IDebugService, CONTEXT_BREAKPOINT_ITEM_TYPE, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_IN_DEBUG_MODE, CONTEXT_BREAKPOINT_SUPPORTS_CONDITION, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_BREAKPOINTS_FOCUSED, DEBUG_SCHEME, DebuggerString } from '../common/debug.js';\nimport { DataBreakpoint, FunctionBreakpoint, InstructionBreakpoint, Breakpoint, ExceptionBreakpoint } from '../common/debugModel.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IHoverService } from '../../../services/hover/browser/hover.js';\nconst $ = dom.$;\nfunction createCheckbox(disposables) {\n    const checkbox = $('input');\n    checkbox.type = 'checkbox';\n    checkbox.tabIndex = -1;\n    disposables.push(Gesture.ignoreTarget(checkbox));\n    return checkbox;\n}\nconst MAX_VISIBLE_BREAKPOINTS = 9;\nfunction getExpandedBodySize(model, sessionId, countLimit) {\n    const length = model.getBreakpoints().length + model.getExceptionBreakpointsForSession(sessionId).length + model.getFunctionBreakpoints().length + model.getDataBreakpoints().length + model.getInstructionBreakpoints().length;\n    return Math.min(countLimit, length) * 22;\n}\nlet BreakpointsView = class BreakpointsView extends ViewPane {\n    constructor(options, contextMenuService, debugService, keybindingService, instantiationService, themeService, editorService, contextViewService, configurationService, viewDescriptorService, contextKeyService, openerService, telemetryService, labelService, menuService, hoverService, languageService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.debugService = debugService;\n        this.editorService = editorService;\n        this.contextViewService = contextViewService;\n        this.labelService = labelService;\n        this.hoverService = hoverService;\n        this.languageService = languageService;\n        this.needsRefresh = false;\n        this.needsStateChange = false;\n        this.ignoreLayout = false;\n        this.autoFocusedIndex = -1;\n        this.menu = menuService.createMenu(MenuId.DebugBreakpointsContext, contextKeyService);\n        this._register(this.menu);\n        this.breakpointItemType = CONTEXT_BREAKPOINT_ITEM_TYPE.bindTo(contextKeyService);\n        this.breakpointSupportsCondition = CONTEXT_BREAKPOINT_SUPPORTS_CONDITION.bindTo(contextKeyService);\n        this.breakpointInputFocused = CONTEXT_BREAKPOINT_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._register(this.debugService.getModel().onDidChangeBreakpoints(() => this.onBreakpointsChange()));\n        this._register(this.debugService.getViewModel().onDidFocusSession(() => this.onBreakpointsChange()));\n        this._register(this.debugService.onDidChangeState(() => this.onStateChange()));\n        this.hintDelayer = this._register(( new RunOnceScheduler(() => this.updateBreakpointsHint(true), 4000)));\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.element.classList.add('debug-pane');\n        container.classList.add('debug-breakpoints');\n        const delegate = ( new BreakpointsDelegate(this));\n        this.list = this.instantiationService.createInstance(WorkbenchList, 'Breakpoints', container, delegate, [\n            this.instantiationService.createInstance(BreakpointsRenderer, this.menu, this.breakpointSupportsCondition, this.breakpointItemType),\n            ( new ExceptionBreakpointsRenderer(\n                this.menu,\n                this.breakpointSupportsCondition,\n                this.breakpointItemType,\n                this.debugService\n            )),\n            ( new ExceptionBreakpointInputRenderer(this, this.debugService, this.contextViewService)),\n            this.instantiationService.createInstance(FunctionBreakpointsRenderer, this.menu, this.breakpointSupportsCondition, this.breakpointItemType),\n            this.instantiationService.createInstance(DataBreakpointsRenderer),\n            ( new FunctionBreakpointInputRenderer(this, this.debugService, this.contextViewService, this.labelService)),\n            this.instantiationService.createInstance(InstructionBreakpointsRenderer),\n        ], {\n            identityProvider: { getId: (element) => element.getId() },\n            multipleSelectionSupport: false,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e) => e },\n            accessibilityProvider: ( new BreakpointsAccessibilityProvider(this.debugService, this.labelService)),\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        CONTEXT_BREAKPOINTS_FOCUSED.bindTo(this.list.contextKeyService);\n        this._register(this.list.onContextMenu(this.onListContextMenu, this));\n        this.list.onMouseMiddleClick(async ({ element }) => {\n            if (element instanceof Breakpoint) {\n                await this.debugService.removeBreakpoints(element.getId());\n            }\n            else if (element instanceof FunctionBreakpoint) {\n                await this.debugService.removeFunctionBreakpoints(element.getId());\n            }\n            else if (element instanceof DataBreakpoint) {\n                await this.debugService.removeDataBreakpoints(element.getId());\n            }\n            else if (element instanceof InstructionBreakpoint) {\n                await this.debugService.removeInstructionBreakpoints(element.instructionReference);\n            }\n        });\n        this._register(this.list.onDidOpen(async (e) => {\n            if (!e.element) {\n                return;\n            }\n            if (e.browserEvent instanceof MouseEvent && e.browserEvent.button === 1) {\n                return;\n            }\n            if (e.element instanceof Breakpoint) {\n                openBreakpointSource(e.element, e.sideBySide, e.editorOptions.preserveFocus || false, e.editorOptions.pinned || !e.editorOptions.preserveFocus, this.debugService, this.editorService);\n            }\n            if (e.element instanceof InstructionBreakpoint) {\n                const disassemblyView = await this.editorService.openEditor(DisassemblyViewInput.instance);\n                disassemblyView.goToAddress(e.element.instructionReference, e.browserEvent instanceof MouseEvent && e.browserEvent.detail === 2);\n            }\n            if (e.browserEvent instanceof MouseEvent && e.browserEvent.detail === 2 && e.element instanceof FunctionBreakpoint && e.element !== this.inputBoxData?.breakpoint) {\n                this.renderInputBox({ breakpoint: e.element, type: 'name' });\n            }\n        }));\n        this.list.splice(0, this.list.length, this.elements);\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible) {\n                if (this.needsRefresh) {\n                    this.onBreakpointsChange();\n                }\n                if (this.needsStateChange) {\n                    this.onStateChange();\n                }\n            }\n        }));\n        const containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id));\n        this._register(containerModel.onDidChangeAllViewDescriptors(() => {\n            this.updateSize();\n        }));\n    }\n    renderHeaderTitle(container, title) {\n        super.renderHeaderTitle(container, title);\n        const iconLabelContainer = dom.append(container, $('span.breakpoint-warning'));\n        this.hintContainer = this._register(( new IconLabel(iconLabelContainer, {\n            supportIcons: true, hoverDelegate: {\n                showHover: (options, focus) => this.hoverService.showHover({ content: options.content, target: this.hintContainer.element }, focus),\n                delay: this.configurationService.getValue('workbench.hover.delay')\n            }\n        })));\n        dom.hide(this.hintContainer.element);\n    }\n    focus() {\n        super.focus();\n        this.list?.domFocus();\n    }\n    renderInputBox(data) {\n        this._inputBoxData = data;\n        this.onBreakpointsChange();\n        this._inputBoxData = undefined;\n    }\n    get inputBoxData() {\n        return this._inputBoxData;\n    }\n    layoutBody(height, width) {\n        if (this.ignoreLayout) {\n            return;\n        }\n        super.layoutBody(height, width);\n        this.list?.layout(height, width);\n        try {\n            this.ignoreLayout = true;\n            this.updateSize();\n        }\n        finally {\n            this.ignoreLayout = false;\n        }\n    }\n    onListContextMenu(e) {\n        const element = e.element;\n        const type = element instanceof Breakpoint ? 'breakpoint' : element instanceof ExceptionBreakpoint ? 'exceptionBreakpoint' :\n            element instanceof FunctionBreakpoint ? 'functionBreakpoint' : element instanceof DataBreakpoint ? 'dataBreakpoint' :\n                element instanceof InstructionBreakpoint ? 'instructionBreakpoint' : undefined;\n        this.breakpointItemType.set(type);\n        const session = this.debugService.getViewModel().focusedSession;\n        const conditionSupported = element instanceof ExceptionBreakpoint ? element.supportsCondition : (!session || !!session.capabilities.supportsConditionalBreakpoints);\n        this.breakpointSupportsCondition.set(conditionSupported);\n        const secondary = [];\n        createAndFillInContextMenuActions(this.menu, { arg: e.element, shouldForwardArgs: false }, { primary: [], secondary }, 'inline');\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => e.anchor,\n            getActions: () => secondary,\n            getActionsContext: () => element\n        });\n    }\n    updateSize() {\n        const containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id));\n        const sessionId = this.debugService.getViewModel().focusedSession?.getId();\n        this.minimumBodySize = this.orientation === 0  ? getExpandedBodySize(this.debugService.getModel(), sessionId, MAX_VISIBLE_BREAKPOINTS) : 170;\n        this.maximumBodySize = this.orientation === 0  && containerModel.visibleViewDescriptors.length > 1 ? getExpandedBodySize(this.debugService.getModel(), sessionId, Number.POSITIVE_INFINITY) : Number.POSITIVE_INFINITY;\n    }\n    updateBreakpointsHint(delayed = false) {\n        if (!this.hintContainer) {\n            return;\n        }\n        const currentType = this.debugService.getViewModel().focusedSession?.configuration.type;\n        const dbg = currentType ? this.debugService.getAdapterManager().getDebugger(currentType) : undefined;\n        const message = dbg?.strings?.[DebuggerString.UnverifiedBreakpoints];\n        const debuggerHasUnverifiedBps = message && this.debugService.getModel().getBreakpoints().filter(bp => {\n            if (bp.verified || !bp.enabled) {\n                return false;\n            }\n            const langId = this.languageService.guessLanguageIdByFilepathOrFirstLine(bp.uri);\n            return langId && dbg.interestedInLanguage(langId);\n        });\n        if (message && debuggerHasUnverifiedBps?.length && this.debugService.getModel().areBreakpointsActivated()) {\n            if (delayed) {\n                const mdown = ( new MarkdownString(undefined, { isTrusted: true })).appendMarkdown(message);\n                this.hintContainer.setLabel('$(warning)', undefined, { title: { markdown: mdown, markdownNotSupportedFallback: message } });\n                dom.show(this.hintContainer.element);\n            }\n            else {\n                this.hintDelayer.schedule();\n            }\n        }\n        else {\n            dom.hide(this.hintContainer.element);\n        }\n    }\n    onBreakpointsChange() {\n        if (this.isBodyVisible()) {\n            this.updateSize();\n            if (this.list) {\n                const lastFocusIndex = this.list.getFocus()[0];\n                const needsRefocus = lastFocusIndex && !this.elements.includes(this.list.element(lastFocusIndex));\n                this.list.splice(0, this.list.length, this.elements);\n                this.needsRefresh = false;\n                if (needsRefocus) {\n                    this.list.focusNth(Math.min(lastFocusIndex, this.list.length - 1));\n                }\n            }\n            this.updateBreakpointsHint();\n        }\n        else {\n            this.needsRefresh = true;\n        }\n    }\n    onStateChange() {\n        if (this.isBodyVisible()) {\n            this.needsStateChange = false;\n            const thread = this.debugService.getViewModel().focusedThread;\n            let found = false;\n            if (thread && thread.stoppedDetails && thread.stoppedDetails.hitBreakpointIds && thread.stoppedDetails.hitBreakpointIds.length > 0) {\n                const hitBreakpointIds = thread.stoppedDetails.hitBreakpointIds;\n                const elements = this.elements;\n                const index = elements.findIndex(e => {\n                    const id = e.getIdFromAdapter(thread.session.getId());\n                    return typeof id === 'number' && hitBreakpointIds.indexOf(id) !== -1;\n                });\n                if (index >= 0) {\n                    this.list.setFocus([index]);\n                    this.list.setSelection([index]);\n                    found = true;\n                    this.autoFocusedIndex = index;\n                }\n            }\n            if (!found) {\n                const focus = this.list.getFocus();\n                const selection = this.list.getSelection();\n                if (this.autoFocusedIndex >= 0 && equals(focus, selection) && focus.indexOf(this.autoFocusedIndex) >= 0) {\n                    this.list.setFocus([]);\n                    this.list.setSelection([]);\n                }\n                this.autoFocusedIndex = -1;\n            }\n            this.updateBreakpointsHint();\n        }\n        else {\n            this.needsStateChange = true;\n        }\n    }\n    get elements() {\n        const model = this.debugService.getModel();\n        const sessionId = this.debugService.getViewModel().focusedSession?.getId();\n        const elements = model.getExceptionBreakpointsForSession(sessionId).concat(model.getFunctionBreakpoints()).concat(model.getDataBreakpoints()).concat(model.getBreakpoints()).concat(model.getInstructionBreakpoints());\n        return elements;\n    }\n};\nBreakpointsView = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IThemeService)),\n    ( __param(6, IEditorService)),\n    ( __param(7, IContextViewService)),\n    ( __param(8, IConfigurationService)),\n    ( __param(9, IViewDescriptorService)),\n    ( __param(10, IContextKeyService)),\n    ( __param(11, IOpenerService)),\n    ( __param(12, ITelemetryService)),\n    ( __param(13, ILabelService)),\n    ( __param(14, IMenuService)),\n    ( __param(15, IHoverService)),\n    ( __param(16, ILanguageService))\n], BreakpointsView));\nclass BreakpointsDelegate {\n    constructor(view) {\n        this.view = view;\n    }\n    getHeight(_element) {\n        return 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof Breakpoint) {\n            return BreakpointsRenderer.ID;\n        }\n        if (element instanceof FunctionBreakpoint) {\n            const inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n            if (!element.name || (inputBoxBreakpoint && inputBoxBreakpoint.getId() === element.getId())) {\n                return FunctionBreakpointInputRenderer.ID;\n            }\n            return FunctionBreakpointsRenderer.ID;\n        }\n        if (element instanceof ExceptionBreakpoint) {\n            const inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n            if (inputBoxBreakpoint && inputBoxBreakpoint.getId() === element.getId()) {\n                return ExceptionBreakpointInputRenderer.ID;\n            }\n            return ExceptionBreakpointsRenderer.ID;\n        }\n        if (element instanceof DataBreakpoint) {\n            return DataBreakpointsRenderer.ID;\n        }\n        if (element instanceof InstructionBreakpoint) {\n            return InstructionBreakpointsRenderer.ID;\n        }\n        return '';\n    }\n}\nconst breakpointIdToActionBarDomeNode = ( new Map());\nlet BreakpointsRenderer = class BreakpointsRenderer {\n    constructor(menu, breakpointSupportsCondition, breakpointItemType, debugService, labelService) {\n        this.menu = menu;\n        this.breakpointSupportsCondition = breakpointSupportsCondition;\n        this.breakpointItemType = breakpointItemType;\n        this.debugService = debugService;\n        this.labelService = labelService;\n    }\n    static { this.ID = 'breakpoints'; }\n    get templateId() {\n        return BreakpointsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDispose = [];\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox(data.toDispose);\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n            this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.filePath = dom.append(data.breakpoint, $('span.file-path'));\n        data.actionBar = ( new ActionBar(data.breakpoint));\n        data.toDispose.push(data.actionBar);\n        const lineNumberContainer = dom.append(data.breakpoint, $('.line-number-container'));\n        data.lineNumber = dom.append(lineNumberContainer, $('span.line-number.monaco-count-badge'));\n        return data;\n    }\n    renderElement(breakpoint, index, data) {\n        data.context = breakpoint;\n        data.breakpoint.classList.toggle('disabled', !this.debugService.getModel().areBreakpointsActivated());\n        data.name.textContent = resources.basenameOrAuthority(breakpoint.uri);\n        data.lineNumber.textContent = ( breakpoint.lineNumber.toString());\n        if (breakpoint.column) {\n            data.lineNumber.textContent += `:${breakpoint.column}`;\n        }\n        data.filePath.textContent = this.labelService.getUriLabel(resources.dirname(breakpoint.uri), { relative: true });\n        data.checkbox.checked = breakpoint.enabled;\n        const { message, icon } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), breakpoint, this.labelService);\n        data.icon.className = ThemeIcon.asClassName(icon);\n        data.breakpoint.title = breakpoint.message || message || '';\n        const debugActive = this.debugService.state === 3  || this.debugService.state === 2 ;\n        if (debugActive && !breakpoint.verified) {\n            data.breakpoint.classList.add('disabled');\n        }\n        const primary = [];\n        const session = this.debugService.getViewModel().focusedSession;\n        this.breakpointSupportsCondition.set(!session || !!session.capabilities.supportsConditionalBreakpoints);\n        this.breakpointItemType.set('breakpoint');\n        createAndFillInActionBarActions(this.menu, { arg: breakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n        data.actionBar.clear();\n        data.actionBar.push(primary, { icon: true, label: false });\n        breakpointIdToActionBarDomeNode.set(breakpoint.getId(), data.actionBar.domNode);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n};\nBreakpointsRenderer = ( __decorate([\n    ( __param(3, IDebugService)),\n    ( __param(4, ILabelService))\n], BreakpointsRenderer));\nclass ExceptionBreakpointsRenderer {\n    constructor(menu, breakpointSupportsCondition, breakpointItemType, debugService) {\n        this.menu = menu;\n        this.breakpointSupportsCondition = breakpointSupportsCondition;\n        this.breakpointItemType = breakpointItemType;\n        this.debugService = debugService;\n    }\n    static { this.ID = 'exceptionbreakpoints'; }\n    get templateId() {\n        return ExceptionBreakpointsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDispose = [];\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.checkbox = createCheckbox(data.toDispose);\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n            this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.condition = dom.append(data.breakpoint, $('span.condition'));\n        data.breakpoint.classList.add('exception');\n        data.actionBar = ( new ActionBar(data.breakpoint));\n        data.toDispose.push(data.actionBar);\n        return data;\n    }\n    renderElement(exceptionBreakpoint, index, data) {\n        data.context = exceptionBreakpoint;\n        data.name.textContent = exceptionBreakpoint.label || `${exceptionBreakpoint.filter} exceptions`;\n        data.breakpoint.title = exceptionBreakpoint.verified ? (exceptionBreakpoint.description || data.name.textContent) : exceptionBreakpoint.message || ( localize('unverifiedExceptionBreakpoint', \"Unverified Exception Breakpoint\"));\n        data.breakpoint.classList.toggle('disabled', !exceptionBreakpoint.verified);\n        data.checkbox.checked = exceptionBreakpoint.enabled;\n        data.condition.textContent = exceptionBreakpoint.condition || '';\n        data.condition.title = ( localize(\n            'expressionCondition',\n            \"Expression condition: {0}\",\n            exceptionBreakpoint.condition\n        ));\n        const primary = [];\n        this.breakpointSupportsCondition.set(exceptionBreakpoint.supportsCondition);\n        this.breakpointItemType.set('exceptionBreakpoint');\n        createAndFillInActionBarActions(this.menu, { arg: exceptionBreakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n        data.actionBar.clear();\n        data.actionBar.push(primary, { icon: true, label: false });\n        breakpointIdToActionBarDomeNode.set(exceptionBreakpoint.getId(), data.actionBar.domNode);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n}\nlet FunctionBreakpointsRenderer = class FunctionBreakpointsRenderer {\n    constructor(menu, breakpointSupportsCondition, breakpointItemType, debugService, labelService) {\n        this.menu = menu;\n        this.breakpointSupportsCondition = breakpointSupportsCondition;\n        this.breakpointItemType = breakpointItemType;\n        this.debugService = debugService;\n        this.labelService = labelService;\n    }\n    static { this.ID = 'functionbreakpoints'; }\n    get templateId() {\n        return FunctionBreakpointsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDispose = [];\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox(data.toDispose);\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n            this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.condition = dom.append(data.breakpoint, $('span.condition'));\n        data.actionBar = ( new ActionBar(data.breakpoint));\n        data.toDispose.push(data.actionBar);\n        return data;\n    }\n    renderElement(functionBreakpoint, _index, data) {\n        data.context = functionBreakpoint;\n        data.name.textContent = functionBreakpoint.name;\n        const { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), functionBreakpoint, this.labelService);\n        data.icon.className = ThemeIcon.asClassName(icon);\n        data.icon.title = message ? message : '';\n        data.checkbox.checked = functionBreakpoint.enabled;\n        data.breakpoint.title = message ? message : '';\n        if (functionBreakpoint.condition && functionBreakpoint.hitCondition) {\n            data.condition.textContent = ( localize(\n                'expressionAndHitCount',\n                \"Expression: {0} | Hit Count: {1}\",\n                functionBreakpoint.condition,\n                functionBreakpoint.hitCondition\n            ));\n        }\n        else {\n            data.condition.textContent = functionBreakpoint.condition || functionBreakpoint.hitCondition || '';\n        }\n        const session = this.debugService.getViewModel().focusedSession;\n        data.breakpoint.classList.toggle('disabled', (session && !session.capabilities.supportsFunctionBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n        if (session && !session.capabilities.supportsFunctionBreakpoints) {\n            data.breakpoint.title = ( localize(\n                'functionBreakpointsNotSupported',\n                \"Function breakpoints are not supported by this debug type\"\n            ));\n        }\n        const primary = [];\n        this.breakpointSupportsCondition.set(!session || !!session.capabilities.supportsConditionalBreakpoints);\n        this.breakpointItemType.set('functionBreakpoint');\n        createAndFillInActionBarActions(this.menu, { arg: functionBreakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n        data.actionBar.clear();\n        data.actionBar.push(primary, { icon: true, label: false });\n        breakpointIdToActionBarDomeNode.set(functionBreakpoint.getId(), data.actionBar.domNode);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n};\nFunctionBreakpointsRenderer = ( __decorate([\n    ( __param(3, IDebugService)),\n    ( __param(4, ILabelService))\n], FunctionBreakpointsRenderer));\nlet DataBreakpointsRenderer = class DataBreakpointsRenderer {\n    constructor(debugService, labelService) {\n        this.debugService = debugService;\n        this.labelService = labelService;\n    }\n    static { this.ID = 'databreakpoints'; }\n    get templateId() {\n        return DataBreakpointsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.toDispose = [];\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox(data.toDispose);\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n            this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.accessType = dom.append(data.breakpoint, $('span.access-type'));\n        return data;\n    }\n    renderElement(dataBreakpoint, _index, data) {\n        data.context = dataBreakpoint;\n        data.name.textContent = dataBreakpoint.description;\n        const { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), dataBreakpoint, this.labelService);\n        data.icon.className = ThemeIcon.asClassName(icon);\n        data.icon.title = message ? message : '';\n        data.checkbox.checked = dataBreakpoint.enabled;\n        data.breakpoint.title = message ? message : '';\n        const session = this.debugService.getViewModel().focusedSession;\n        data.breakpoint.classList.toggle('disabled', (session && !session.capabilities.supportsDataBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n        if (session && !session.capabilities.supportsDataBreakpoints) {\n            data.breakpoint.title = ( localize(\n                'dataBreakpointsNotSupported',\n                \"Data breakpoints are not supported by this debug type\"\n            ));\n        }\n        if (dataBreakpoint.accessType) {\n            const accessType = dataBreakpoint.accessType === 'read' ? ( localize('read', \"Read\")) : dataBreakpoint.accessType === 'write' ? ( localize('write', \"Write\")) : ( localize('access', \"Access\"));\n            data.accessType.textContent = accessType;\n        }\n        else {\n            data.accessType.textContent = '';\n        }\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n};\nDataBreakpointsRenderer = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, ILabelService))\n], DataBreakpointsRenderer));\nlet InstructionBreakpointsRenderer = class InstructionBreakpointsRenderer {\n    constructor(debugService, labelService) {\n        this.debugService = debugService;\n        this.labelService = labelService;\n    }\n    static { this.ID = 'instructionBreakpoints'; }\n    get templateId() {\n        return InstructionBreakpointsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDispose = [];\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox(data.toDispose);\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n            this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.address = dom.append(data.breakpoint, $('span.file-path'));\n        data.actionBar = ( new ActionBar(data.breakpoint));\n        data.toDispose.push(data.actionBar);\n        return data;\n    }\n    renderElement(breakpoint, index, data) {\n        data.context = breakpoint;\n        data.breakpoint.classList.toggle('disabled', !this.debugService.getModel().areBreakpointsActivated());\n        data.name.textContent = breakpoint.instructionReference;\n        data.checkbox.checked = breakpoint.enabled;\n        const { message, icon } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), breakpoint, this.labelService);\n        data.icon.className = ThemeIcon.asClassName(icon);\n        data.breakpoint.title = breakpoint.message || message || '';\n        const debugActive = this.debugService.state === 3  || this.debugService.state === 2 ;\n        if (debugActive && !breakpoint.verified) {\n            data.breakpoint.classList.add('disabled');\n        }\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n};\nInstructionBreakpointsRenderer = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, ILabelService))\n], InstructionBreakpointsRenderer));\nclass FunctionBreakpointInputRenderer {\n    constructor(view, debugService, contextViewService, labelService) {\n        this.view = view;\n        this.debugService = debugService;\n        this.contextViewService = contextViewService;\n        this.labelService = labelService;\n    }\n    static { this.ID = 'functionbreakpointinput'; }\n    get templateId() {\n        return FunctionBreakpointInputRenderer.ID;\n    }\n    renderTemplate(container) {\n        const template = Object.create(null);\n        const toDispose = [];\n        const breakpoint = dom.append(container, $('.breakpoint'));\n        template.icon = $('.icon');\n        template.checkbox = createCheckbox(toDispose);\n        dom.append(breakpoint, template.icon);\n        dom.append(breakpoint, template.checkbox);\n        this.view.breakpointInputFocused.set(true);\n        const inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n        const inputBox = ( new InputBox(\n            inputBoxContainer,\n            this.contextViewService,\n            { inputBoxStyles: defaultInputBoxStyles }\n        ));\n        const wrapUp = (success) => {\n            template.updating = true;\n            try {\n                this.view.breakpointInputFocused.set(false);\n                const id = template.breakpoint.getId();\n                if (success) {\n                    if (template.type === 'name') {\n                        this.debugService.updateFunctionBreakpoint(id, { name: inputBox.value });\n                    }\n                    if (template.type === 'condition') {\n                        this.debugService.updateFunctionBreakpoint(id, { condition: inputBox.value });\n                    }\n                    if (template.type === 'hitCount') {\n                        this.debugService.updateFunctionBreakpoint(id, { hitCondition: inputBox.value });\n                    }\n                }\n                else {\n                    if (template.type === 'name' && !template.breakpoint.name) {\n                        this.debugService.removeFunctionBreakpoints(id);\n                    }\n                    else {\n                        this.view.renderInputBox(undefined);\n                    }\n                }\n            }\n            finally {\n                template.updating = false;\n            }\n        };\n        toDispose.push(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e) => {\n            const isEscape = e.equals(9 );\n            const isEnter = e.equals(3 );\n            if (isEscape || isEnter) {\n                e.preventDefault();\n                e.stopPropagation();\n                wrapUp(isEnter);\n            }\n        }));\n        toDispose.push(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n            if (!template.updating) {\n                wrapUp(!!inputBox.value);\n            }\n        }));\n        template.inputBox = inputBox;\n        template.toDispose = toDispose;\n        return template;\n    }\n    renderElement(functionBreakpoint, _index, data) {\n        data.breakpoint = functionBreakpoint;\n        data.type = this.view.inputBoxData?.type || 'name';\n        const { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), functionBreakpoint, this.labelService);\n        data.icon.className = ThemeIcon.asClassName(icon);\n        data.icon.title = message ? message : '';\n        data.checkbox.checked = functionBreakpoint.enabled;\n        data.checkbox.disabled = true;\n        data.inputBox.value = functionBreakpoint.name || '';\n        let placeholder = ( localize('functionBreakpointPlaceholder', \"Function to break on\"));\n        let ariaLabel = ( localize('functionBreakPointInputAriaLabel', \"Type function breakpoint.\"));\n        if (data.type === 'condition') {\n            data.inputBox.value = functionBreakpoint.condition || '';\n            placeholder = ( localize(\n                'functionBreakpointExpressionPlaceholder',\n                \"Break when expression evaluates to true\"\n            ));\n            ariaLabel = ( localize(\n                'functionBreakPointExpresionAriaLabel',\n                \"Type expression. Function breakpoint will break when expression evaluates to true\"\n            ));\n        }\n        else if (data.type === 'hitCount') {\n            data.inputBox.value = functionBreakpoint.hitCondition || '';\n            placeholder = ( localize('functionBreakpointHitCountPlaceholder', \"Break when hit count is met\"));\n            ariaLabel = ( localize(\n                'functionBreakPointHitCountAriaLabel',\n                \"Type hit count. Function breakpoint will break when hit count is met.\"\n            ));\n        }\n        data.inputBox.setAriaLabel(ariaLabel);\n        data.inputBox.setPlaceHolder(placeholder);\n        setTimeout(() => {\n            data.inputBox.focus();\n            data.inputBox.select();\n        }, 0);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n}\nclass ExceptionBreakpointInputRenderer {\n    constructor(view, debugService, contextViewService) {\n        this.view = view;\n        this.debugService = debugService;\n        this.contextViewService = contextViewService;\n    }\n    static { this.ID = 'exceptionbreakpointinput'; }\n    get templateId() {\n        return ExceptionBreakpointInputRenderer.ID;\n    }\n    renderTemplate(container) {\n        const template = Object.create(null);\n        const toDispose = [];\n        const breakpoint = dom.append(container, $('.breakpoint'));\n        breakpoint.classList.add('exception');\n        template.checkbox = createCheckbox(toDispose);\n        dom.append(breakpoint, template.checkbox);\n        this.view.breakpointInputFocused.set(true);\n        const inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n        const inputBox = ( new InputBox(inputBoxContainer, this.contextViewService, {\n            ariaLabel: ( localize('exceptionBreakpointAriaLabel', \"Type exception breakpoint condition\")),\n            inputBoxStyles: defaultInputBoxStyles\n        }));\n        const wrapUp = (success) => {\n            this.view.breakpointInputFocused.set(false);\n            let newCondition = template.breakpoint.condition;\n            if (success) {\n                newCondition = inputBox.value !== '' ? inputBox.value : undefined;\n            }\n            this.debugService.setExceptionBreakpointCondition(template.breakpoint, newCondition);\n        };\n        toDispose.push(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e) => {\n            const isEscape = e.equals(9 );\n            const isEnter = e.equals(3 );\n            if (isEscape || isEnter) {\n                e.preventDefault();\n                e.stopPropagation();\n                wrapUp(isEnter);\n            }\n        }));\n        toDispose.push(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n            setTimeout(() => {\n                wrapUp(true);\n            });\n        }));\n        template.inputBox = inputBox;\n        template.toDispose = toDispose;\n        return template;\n    }\n    renderElement(exceptionBreakpoint, _index, data) {\n        const placeHolder = exceptionBreakpoint.conditionDescription || ( localize(\n            'exceptionBreakpointPlaceholder',\n            \"Break when expression evaluates to true\"\n        ));\n        data.inputBox.setPlaceHolder(placeHolder);\n        data.breakpoint = exceptionBreakpoint;\n        data.checkbox.checked = exceptionBreakpoint.enabled;\n        data.checkbox.disabled = true;\n        data.inputBox.value = exceptionBreakpoint.condition || '';\n        setTimeout(() => {\n            data.inputBox.focus();\n            data.inputBox.select();\n        }, 0);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n}\nclass BreakpointsAccessibilityProvider {\n    constructor(debugService, labelService) {\n        this.debugService = debugService;\n        this.labelService = labelService;\n    }\n    getWidgetAriaLabel() {\n        return ( localize('breakpoints', \"Breakpoints\"));\n    }\n    getRole() {\n        return 'checkbox';\n    }\n    isChecked(breakpoint) {\n        return breakpoint.enabled;\n    }\n    getAriaLabel(element) {\n        if (element instanceof ExceptionBreakpoint) {\n            return ( element.toString());\n        }\n        const { message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), element, this.labelService);\n        const toString = ( element.toString());\n        return message ? `${toString}, ${message}` : toString;\n    }\n}\nfunction openBreakpointSource(breakpoint, sideBySide, preserveFocus, pinned, debugService, editorService) {\n    if (breakpoint.uri.scheme === DEBUG_SCHEME && debugService.state === 0 ) {\n        return Promise.resolve(undefined);\n    }\n    const selection = breakpoint.endLineNumber ? {\n        startLineNumber: breakpoint.lineNumber,\n        endLineNumber: breakpoint.endLineNumber,\n        startColumn: breakpoint.column || 1,\n        endColumn: breakpoint.endColumn || 1073741824\n    } : {\n        startLineNumber: breakpoint.lineNumber,\n        startColumn: breakpoint.column || 1,\n        endLineNumber: breakpoint.lineNumber,\n        endColumn: breakpoint.column || 1073741824\n    };\n    return editorService.openEditor({\n        resource: breakpoint.uri,\n        options: {\n            preserveFocus,\n            selection,\n            revealIfOpened: true,\n            selectionRevealType: 1 ,\n            pinned\n        }\n    }, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n}\nfunction getBreakpointMessageAndIcon(state, breakpointsActivated, breakpoint$1, labelService) {\n    const debugActive = state === 3  || state === 2 ;\n    const breakpointIcon = breakpoint$1 instanceof DataBreakpoint ? dataBreakpoint : breakpoint$1 instanceof FunctionBreakpoint ? functionBreakpoint : breakpoint$1.logMessage ? logBreakpoint : breakpoint;\n    if (!breakpoint$1.enabled || !breakpointsActivated) {\n        return {\n            icon: breakpointIcon.disabled,\n            message: breakpoint$1.logMessage ? ( localize('disabledLogpoint', \"Disabled Logpoint\")) : ( localize('disabledBreakpoint', \"Disabled Breakpoint\")),\n        };\n    }\n    const appendMessage = (text) => {\n        return ('message' in breakpoint$1 && breakpoint$1.message) ? text.concat(', ' + breakpoint$1.message) : text;\n    };\n    if (debugActive && !breakpoint$1.verified) {\n        return {\n            icon: breakpointIcon.unverified,\n            message: ('message' in breakpoint$1 && breakpoint$1.message) ? breakpoint$1.message : (breakpoint$1.logMessage ? ( localize('unverifiedLogpoint', \"Unverified Logpoint\")) : ( localize('unverifiedBreakpoint', \"Unverified Breakpoint\"))),\n            showAdapterUnverifiedMessage: true\n        };\n    }\n    if (breakpoint$1 instanceof DataBreakpoint) {\n        if (!breakpoint$1.supported) {\n            return {\n                icon: breakpointIcon.unverified,\n                message: ( localize(\n                    'dataBreakpointUnsupported',\n                    \"Data breakpoints not supported by this debug type\"\n                )),\n            };\n        }\n        return {\n            icon: breakpointIcon.regular,\n            message: breakpoint$1.message || ( localize('dataBreakpoint', \"Data Breakpoint\"))\n        };\n    }\n    if (breakpoint$1 instanceof FunctionBreakpoint) {\n        if (!breakpoint$1.supported) {\n            return {\n                icon: breakpointIcon.unverified,\n                message: ( localize(\n                    'functionBreakpointUnsupported',\n                    \"Function breakpoints not supported by this debug type\"\n                )),\n            };\n        }\n        const messages = [];\n        messages.push(breakpoint$1.message || ( localize('functionBreakpoint', \"Function Breakpoint\")));\n        if (breakpoint$1.condition) {\n            messages.push(( localize('expression', \"Expression condition: {0}\", breakpoint$1.condition)));\n        }\n        if (breakpoint$1.hitCondition) {\n            messages.push(( localize('hitCount', \"Hit Count: {0}\", breakpoint$1.hitCondition)));\n        }\n        return {\n            icon: breakpointIcon.regular,\n            message: appendMessage(messages.join('\\n'))\n        };\n    }\n    if (breakpoint$1 instanceof InstructionBreakpoint) {\n        if (!breakpoint$1.supported) {\n            return {\n                icon: breakpointIcon.unverified,\n                message: ( localize(\n                    'instructionBreakpointUnsupported',\n                    \"Instruction breakpoints not supported by this debug type\"\n                )),\n            };\n        }\n        const messages = [];\n        if (breakpoint$1.message) {\n            messages.push(breakpoint$1.message);\n        }\n        else if (breakpoint$1.instructionReference) {\n            messages.push(( localize(\n                'instructionBreakpointAtAddress',\n                \"Instruction breakpoint at address {0}\",\n                breakpoint$1.instructionReference\n            )));\n        }\n        else {\n            messages.push(( localize('instructionBreakpoint', \"Instruction breakpoint\")));\n        }\n        if (breakpoint$1.hitCondition) {\n            messages.push(( localize('hitCount', \"Hit Count: {0}\", breakpoint$1.hitCondition)));\n        }\n        return {\n            icon: breakpointIcon.regular,\n            message: appendMessage(messages.join('\\n'))\n        };\n    }\n    if (breakpoint$1.logMessage || breakpoint$1.condition || breakpoint$1.hitCondition) {\n        const messages = [];\n        if (!breakpoint$1.supported) {\n            return {\n                icon: debugBreakpointUnsupported,\n                message: ( localize(\n                    'breakpointUnsupported',\n                    \"Breakpoints of this type are not supported by the debugger\"\n                )),\n            };\n        }\n        if (breakpoint$1.logMessage) {\n            messages.push(( localize('logMessage', \"Log Message: {0}\", breakpoint$1.logMessage)));\n        }\n        if (breakpoint$1.condition) {\n            messages.push(( localize('expression', \"Expression condition: {0}\", breakpoint$1.condition)));\n        }\n        if (breakpoint$1.hitCondition) {\n            messages.push(( localize('hitCount', \"Hit Count: {0}\", breakpoint$1.hitCondition)));\n        }\n        return {\n            icon: breakpoint$1.logMessage ? logBreakpoint.regular : conditionalBreakpoint.regular,\n            message: appendMessage(messages.join('\\n'))\n        };\n    }\n    const message = ('message' in breakpoint$1 && breakpoint$1.message) ? breakpoint$1.message : breakpoint$1 instanceof Breakpoint && labelService ? labelService.getUriLabel(breakpoint$1.uri) : ( localize('breakpoint', \"Breakpoint\"));\n    return {\n        icon: breakpointIcon.regular,\n        message\n    };\n}\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.addFunctionBreakpointAction',\n            title: {\n                value: ( localize('addFunctionBreakpoint', \"Add Function Breakpoint\")),\n                original: 'Add Function Breakpoint',\n                mnemonicTitle: ( localize(\n                    { key: 'miFunctionBreakpoint', comment: ['&& denotes a mnemonic'] },\n                    \"&&Function Breakpoint...\"\n                ))\n            },\n            f1: true,\n            icon: watchExpressionsAddFuncBreakpoint,\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 10,\n                    when: ( ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID))\n                }, {\n                    id: MenuId.MenubarNewBreakpointMenu,\n                    group: '1_breakpoints',\n                    order: 3,\n                    when: CONTEXT_DEBUGGERS_AVAILABLE\n                }]\n        });\n    }\n    run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        debugService.addFunctionBreakpoint();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.toggleBreakpointsActivatedAction',\n            title: { value: ( localize('activateBreakpoints', \"Toggle Activate Breakpoints\")), original: 'Toggle Activate Breakpoints' },\n            f1: true,\n            icon: breakpointsActivate,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                order: 20,\n                when: ( ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID))\n            }\n        });\n    }\n    run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        debugService.setBreakpointsActivated(!debugService.getModel().areBreakpointsActivated());\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.removeBreakpoint',\n            title: ( localize('removeBreakpoint', \"Remove Breakpoint\")),\n            icon: Codicon.removeClose,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: '3_modification',\n                    order: 10,\n                    when: ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n                }, {\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'inline',\n                    order: 20,\n                    when: ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n                }]\n        });\n    }\n    async run(accessor, breakpoint) {\n        const debugService = accessor.get(IDebugService);\n        if (breakpoint instanceof Breakpoint) {\n            await debugService.removeBreakpoints(breakpoint.getId());\n        }\n        else if (breakpoint instanceof FunctionBreakpoint) {\n            await debugService.removeFunctionBreakpoints(breakpoint.getId());\n        }\n        else if (breakpoint instanceof DataBreakpoint) {\n            await debugService.removeDataBreakpoints(breakpoint.getId());\n        }\n        else if (breakpoint instanceof InstructionBreakpoint) {\n            await debugService.removeInstructionBreakpoints(breakpoint.instructionReference);\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.removeAllBreakpoints',\n            title: {\n                original: 'Remove All Breakpoints',\n                value: ( localize('removeAllBreakpoints', \"Remove All Breakpoints\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miRemoveAllBreakpoints', comment: ['&& denotes a mnemonic'] },\n                    \"Remove &&All Breakpoints\"\n                ))\n            },\n            f1: true,\n            icon: breakpointsRemoveAll,\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 30,\n                    when: ( ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID))\n                }, {\n                    id: MenuId.DebugBreakpointsContext,\n                    group: '3_modification',\n                    order: 20,\n                    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))))\n                }, {\n                    id: MenuId.MenubarDebugMenu,\n                    group: '5_breakpoints',\n                    order: 3,\n                    when: CONTEXT_DEBUGGERS_AVAILABLE\n                }]\n        });\n    }\n    run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        debugService.removeBreakpoints();\n        debugService.removeFunctionBreakpoints();\n        debugService.removeDataBreakpoints();\n        debugService.removeInstructionBreakpoints();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.enableAllBreakpoints',\n            title: {\n                original: 'Enable All Breakpoints',\n                value: ( localize('enableAllBreakpoints', \"Enable All Breakpoints\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miEnableAllBreakpoints', comment: ['&& denotes a mnemonic'] },\n                    \"&&Enable All Breakpoints\"\n                )),\n            },\n            f1: true,\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'z_commands',\n                    order: 10,\n                    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))))\n                }, {\n                    id: MenuId.MenubarDebugMenu,\n                    group: '5_breakpoints',\n                    order: 1,\n                    when: CONTEXT_DEBUGGERS_AVAILABLE\n                }]\n        });\n    }\n    async run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        await debugService.enableOrDisableBreakpoints(true);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.disableAllBreakpoints',\n            title: {\n                original: 'Disable All Breakpoints',\n                value: ( localize('disableAllBreakpoints', \"Disable All Breakpoints\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miDisableAllBreakpoints', comment: ['&& denotes a mnemonic'] },\n                    \"Disable A&&ll Breakpoints\"\n                ))\n            },\n            f1: true,\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'z_commands',\n                    order: 20,\n                    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))))\n                }, {\n                    id: MenuId.MenubarDebugMenu,\n                    group: '5_breakpoints',\n                    order: 2,\n                    when: CONTEXT_DEBUGGERS_AVAILABLE\n                }]\n        });\n    }\n    async run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        await debugService.enableOrDisableBreakpoints(false);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.debug.viewlet.action.reapplyBreakpointsAction',\n            title: { value: ( localize('reapplyAllBreakpoints', \"Reapply All Breakpoints\")), original: 'Reapply All Breakpoints' },\n            f1: true,\n            precondition: CONTEXT_IN_DEBUG_MODE,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'z_commands',\n                    order: 30,\n                    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, ( CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))))\n                }]\n        });\n    }\n    async run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        await debugService.setBreakpointsActivated(true);\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'debug.editBreakpoint',\n            viewId: BREAKPOINTS_VIEW_ID,\n            title: ( localize('editCondition', \"Edit Condition...\")),\n            icon: Codicon.edit,\n            precondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'navigation',\n                    order: 10\n                }, {\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'inline',\n                    order: 10\n                }]\n        });\n    }\n    async runInView(accessor, view, breakpoint) {\n        const debugService = accessor.get(IDebugService);\n        const editorService = accessor.get(IEditorService);\n        if (breakpoint instanceof Breakpoint) {\n            const editor = await openBreakpointSource(breakpoint, false, false, true, debugService, editorService);\n            if (editor) {\n                const codeEditor = editor.getControl();\n                if (isCodeEditor(codeEditor)) {\n                    codeEditor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(breakpoint.lineNumber, breakpoint.column);\n                }\n            }\n        }\n        else if (breakpoint instanceof FunctionBreakpoint) {\n            const contextMenuService = accessor.get(IContextMenuService);\n            const actions = [( new Action('breakpoint.editCondition', ( localize('editCondition', \"Edit Condition...\")), undefined, true, async () => view.renderInputBox({ breakpoint, type: 'condition' }))),\n                ( new Action('breakpoint.editCondition', ( localize('editHitCount', \"Edit Hit Count...\")), undefined, true, async () => view.renderInputBox({ breakpoint, type: 'hitCount' })))];\n            const domNode = breakpointIdToActionBarDomeNode.get(breakpoint.getId());\n            if (domNode) {\n                contextMenuService.showContextMenu({\n                    getActions: () => actions,\n                    getAnchor: () => domNode,\n                    onHide: () => dispose(actions)\n                });\n            }\n        }\n        else {\n            view.renderInputBox({ breakpoint, type: 'condition' });\n        }\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'debug.editFunctionBreakpoint',\n            viewId: BREAKPOINTS_VIEW_ID,\n            title: ( localize('editBreakpoint', \"Edit Function Breakpoint...\")),\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: '1_breakpoints',\n                    order: 10,\n                    when: ( CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('functionBreakpoint'))\n                }]\n        });\n    }\n    runInView(_accessor, view, breakpoint) {\n        view.renderInputBox({ breakpoint, type: 'name' });\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'debug.editFunctionBreakpointHitCount',\n            viewId: BREAKPOINTS_VIEW_ID,\n            title: ( localize('editHitCount', \"Edit Hit Count...\")),\n            precondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n            menu: [{\n                    id: MenuId.DebugBreakpointsContext,\n                    group: 'navigation',\n                    order: 20,\n                    when: ( CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('functionBreakpoint'))\n                }]\n        });\n    }\n    runInView(_accessor, view, breakpoint) {\n        view.renderInputBox({ breakpoint, type: 'hitCount' });\n    }\n});\nexport { BreakpointsView, getBreakpointMessageAndIcon, getExpandedBodySize, openBreakpointSource };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IDebugService } from './debug.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { getIconClasses } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nasync function showLoadedScriptMenu(accessor) {\n    const quickInputService = accessor.get(IQuickInputService);\n    const debugService = accessor.get(IDebugService);\n    const editorService = accessor.get(IEditorService);\n    const sessions = debugService.getModel().getSessions(false);\n    const modelService = accessor.get(IModelService);\n    const languageService = accessor.get(ILanguageService);\n    const labelService = accessor.get(ILabelService);\n    const localDisposableStore = ( new DisposableStore());\n    const quickPick = quickInputService.createQuickPick();\n    localDisposableStore.add(quickPick);\n    quickPick.matchOnLabel = quickPick.matchOnDescription = quickPick.matchOnDetail = quickPick.sortByLabel = false;\n    quickPick.placeholder = ( nls.localize('moveFocusedView.selectView', \"Search loaded scripts by name\"));\n    quickPick.items = await _getPicks(quickPick.value, sessions, editorService, modelService, languageService, labelService);\n    localDisposableStore.add(quickPick.onDidChangeValue(async () => {\n        quickPick.items = await _getPicks(quickPick.value, sessions, editorService, modelService, languageService, labelService);\n    }));\n    localDisposableStore.add(quickPick.onDidAccept(() => {\n        const selectedItem = quickPick.selectedItems[0];\n        selectedItem.accept();\n        quickPick.hide();\n        localDisposableStore.dispose();\n    }));\n    quickPick.show();\n}\nasync function _getPicksFromSession(session, filter, editorService, modelService, languageService, labelService) {\n    const items = [];\n    items.push({ type: 'separator', label: session.name });\n    const sources = await session.getLoadedSources();\n    sources.forEach((element) => {\n        const pick = _createPick(element, filter, editorService, modelService, languageService, labelService);\n        if (pick) {\n            items.push(pick);\n        }\n    });\n    return items;\n}\nasync function _getPicks(filter, sessions, editorService, modelService, languageService, labelService) {\n    const loadedScriptPicks = [];\n    const picks = await Promise.all(( sessions.map(\n        (session) => _getPicksFromSession(session, filter, editorService, modelService, languageService, labelService)\n    )));\n    for (const row of picks) {\n        for (const elem of row) {\n            loadedScriptPicks.push(elem);\n        }\n    }\n    return loadedScriptPicks;\n}\nfunction _createPick(source, filter, editorService, modelService, languageService, labelService) {\n    const label = labelService.getUriBasenameLabel(source.uri);\n    const desc = labelService.getUriLabel(dirname(source.uri));\n    const labelHighlights = matchesFuzzy(filter, label, true);\n    const descHighlights = matchesFuzzy(filter, desc, true);\n    if (labelHighlights || descHighlights) {\n        return {\n            label,\n            description: desc === '.' ? undefined : desc,\n            highlights: { label: labelHighlights ?? undefined, description: descHighlights ?? undefined },\n            iconClasses: getIconClasses(modelService, languageService, source.uri),\n            accept: () => {\n                if (source.available) {\n                    source.openInEditor(editorService, { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 });\n                }\n            }\n        };\n    }\n    return undefined;\n}\nexport { showLoadedScriptMenu };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IDebugService, REPL_VIEW_ID } from '../common/debug.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nasync function showDebugSessionMenu(accessor, selectAndStartID) {\n    const quickInputService = accessor.get(IQuickInputService);\n    const debugService = accessor.get(IDebugService);\n    const viewsService = accessor.get(IViewsService);\n    const commandService = accessor.get(ICommandService);\n    const localDisposableStore = ( new DisposableStore());\n    const quickPick = quickInputService.createQuickPick();\n    localDisposableStore.add(quickPick);\n    quickPick.matchOnLabel = quickPick.matchOnDescription = quickPick.matchOnDetail = quickPick.sortByLabel = false;\n    quickPick.placeholder = ( nls.localize('moveFocusedView.selectView', 'Search debug sessions by name'));\n    const pickItems = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService);\n    quickPick.items = pickItems.picks;\n    quickPick.activeItems = pickItems.activeItems;\n    localDisposableStore.add(quickPick.onDidChangeValue(async () => {\n        quickPick.items = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService).picks;\n    }));\n    localDisposableStore.add(quickPick.onDidAccept(() => {\n        const selectedItem = quickPick.selectedItems[0];\n        selectedItem.accept();\n        quickPick.hide();\n        localDisposableStore.dispose();\n    }));\n    quickPick.show();\n}\nfunction _getPicksAndActiveItem(filter, selectAndStartID, debugService, viewsService, commandService) {\n    const debugConsolePicks = [];\n    const headerSessions = [];\n    const currSession = debugService.getViewModel().focusedSession;\n    const sessions = debugService.getModel().getSessions(false);\n    const activeItems = [];\n    sessions.forEach((session) => {\n        if (session.compact && session.parentSession) {\n            headerSessions.push(session.parentSession);\n        }\n    });\n    sessions.forEach((session) => {\n        const isHeader = headerSessions.includes(session);\n        if (!session.parentSession) {\n            debugConsolePicks.push({ type: 'separator', label: isHeader ? session.name : undefined });\n        }\n        if (!isHeader) {\n            const pick = _createPick(session, filter, debugService, viewsService);\n            if (pick) {\n                debugConsolePicks.push(pick);\n                if (session.getId() === currSession?.getId()) {\n                    activeItems.push(pick);\n                }\n            }\n        }\n    });\n    if (debugConsolePicks.length) {\n        debugConsolePicks.push({ type: 'separator' });\n    }\n    const createDebugSessionLabel = ( nls.localize('workbench.action.debug.startDebug', 'Start a New Debug Session'));\n    debugConsolePicks.push({\n        label: `$(plus) ${createDebugSessionLabel}`,\n        ariaLabel: createDebugSessionLabel,\n        accept: () => commandService.executeCommand(selectAndStartID)\n    });\n    return { picks: debugConsolePicks, activeItems };\n}\nfunction _getSessionInfo(session) {\n    const label = (!session.configuration.name.length) ? session.name : session.configuration.name;\n    const parentName = session.compact ? undefined : session.parentSession?.configuration.name;\n    let description = '';\n    let ariaLabel = '';\n    if (parentName) {\n        ariaLabel = ( nls.localize(\n            'workbench.action.debug.spawnFrom',\n            'Session {0} spawned from {1}',\n            label,\n            parentName\n        ));\n        description = parentName;\n    }\n    return { label, description, ariaLabel };\n}\nfunction _createPick(session, filter, debugService, viewsService, commandService) {\n    const pickInfo = _getSessionInfo(session);\n    const highlights = matchesFuzzy(filter, pickInfo.label, true);\n    if (highlights) {\n        return {\n            label: pickInfo.label,\n            description: pickInfo.description,\n            ariaLabel: pickInfo.ariaLabel,\n            highlights: { label: highlights },\n            accept: () => {\n                debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n                if (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n                    viewsService.openView(REPL_VIEW_ID, true);\n                }\n            }\n        };\n    }\n    return undefined;\n}\nexport { showDebugSessionMenu };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { List } from 'monaco-editor/esm/vs/base/browser/ui/list/listWidget.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IDebugService, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_IN_DEBUG_REPL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, REPL_VIEW_ID, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_VARIABLES_FOCUSED, CONTEXT_EXPRESSION_SELECTED, CONTEXT_BREAKPOINT_INPUT_FOCUSED } from '../common/debug.js';\nimport { Expression, Variable, Breakpoint, FunctionBreakpoint, DataBreakpoint } from '../common/debugModel.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { MenuRegistry, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { IContextKeyService, ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { openBreakpointSource } from './breakpointsView.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { InputFocusedContext } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nimport { PanelFocusContext } from '../../../common/contextkeys.js';\nimport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { ITextResourcePropertiesService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { isWeb, isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { showLoadedScriptMenu } from '../common/loadedScriptsPicker.js';\nimport { showDebugSessionMenu } from './debugSessionPicker.js';\nconst ADD_CONFIGURATION_ID = 'debug.addConfiguration';\nconst TOGGLE_INLINE_BREAKPOINT_ID = 'editor.debug.action.toggleInlineBreakpoint';\nconst COPY_STACK_TRACE_ID = 'debug.copyStackTrace';\nconst REVERSE_CONTINUE_ID = 'workbench.action.debug.reverseContinue';\nconst STEP_BACK_ID = 'workbench.action.debug.stepBack';\nconst RESTART_SESSION_ID = 'workbench.action.debug.restart';\nconst TERMINATE_THREAD_ID = 'workbench.action.debug.terminateThread';\nconst STEP_OVER_ID = 'workbench.action.debug.stepOver';\nconst STEP_INTO_ID = 'workbench.action.debug.stepInto';\nconst STEP_INTO_TARGET_ID = 'workbench.action.debug.stepIntoTarget';\nconst STEP_OUT_ID = 'workbench.action.debug.stepOut';\nconst PAUSE_ID = 'workbench.action.debug.pause';\nconst DISCONNECT_ID = 'workbench.action.debug.disconnect';\nconst DISCONNECT_AND_SUSPEND_ID = 'workbench.action.debug.disconnectAndSuspend';\nconst STOP_ID = 'workbench.action.debug.stop';\nconst RESTART_FRAME_ID = 'workbench.action.debug.restartFrame';\nconst CONTINUE_ID = 'workbench.action.debug.continue';\nconst FOCUS_REPL_ID = 'workbench.debug.action.focusRepl';\nconst JUMP_TO_CURSOR_ID = 'debug.jumpToCursor';\nconst FOCUS_SESSION_ID = 'workbench.action.debug.focusProcess';\nconst SELECT_AND_START_ID = 'workbench.action.debug.selectandstart';\nconst SELECT_DEBUG_CONSOLE_ID = 'workbench.action.debug.selectDebugConsole';\nconst SELECT_DEBUG_SESSION_ID = 'workbench.action.debug.selectDebugSession';\nconst DEBUG_CONFIGURE_COMMAND_ID = 'workbench.action.debug.configure';\nconst DEBUG_START_COMMAND_ID = 'workbench.action.debug.start';\nconst EDIT_EXPRESSION_COMMAND_ID = 'debug.renameWatchExpression';\nconst SET_EXPRESSION_COMMAND_ID = 'debug.setWatchExpression';\nconst REMOVE_EXPRESSION_COMMAND_ID = 'debug.removeWatchExpression';\nconst NEXT_DEBUG_CONSOLE_ID = 'workbench.action.debug.nextConsole';\nconst PREV_DEBUG_CONSOLE_ID = 'workbench.action.debug.prevConsole';\nconst SHOW_LOADED_SCRIPTS_ID = 'workbench.action.debug.showLoadedScripts';\nconst CALLSTACK_TOP_ID = 'workbench.action.debug.callStackTop';\nconst CALLSTACK_BOTTOM_ID = 'workbench.action.debug.callStackBottom';\nconst CALLSTACK_UP_ID = 'workbench.action.debug.callStackUp';\nconst CALLSTACK_DOWN_ID = 'workbench.action.debug.callStackDown';\nconst DEBUG_COMMAND_CATEGORY = { original: 'Debug', value: ( nls.localize('debug', 'Debug')) };\nconst RESTART_LABEL = { value: ( nls.localize('restartDebug', \"Restart\")), original: 'Restart' };\nconst STEP_OVER_LABEL = { value: ( nls.localize('stepOverDebug', \"Step Over\")), original: 'Step Over' };\nconst STEP_INTO_LABEL = { value: ( nls.localize('stepIntoDebug', \"Step Into\")), original: 'Step Into' };\nconst STEP_INTO_TARGET_LABEL = { value: ( nls.localize('stepIntoTargetDebug', \"Step Into Target\")), original: 'Step Into Target' };\nconst STEP_OUT_LABEL = { value: ( nls.localize('stepOutDebug', \"Step Out\")), original: 'Step Out' };\nconst PAUSE_LABEL = { value: ( nls.localize('pauseDebug', \"Pause\")), original: 'Pause' };\nconst DISCONNECT_LABEL = { value: ( nls.localize('disconnect', \"Disconnect\")), original: 'Disconnect' };\nconst DISCONNECT_AND_SUSPEND_LABEL = { value: ( nls.localize('disconnectSuspend', \"Disconnect and Suspend\")), original: 'Disconnect and Suspend' };\nconst STOP_LABEL = { value: ( nls.localize('stop', \"Stop\")), original: 'Stop' };\nconst CONTINUE_LABEL = { value: ( nls.localize('continueDebug', \"Continue\")), original: 'Continue' };\nconst FOCUS_SESSION_LABEL = { value: ( nls.localize('focusSession', \"Focus Session\")), original: 'Focus Session' };\nconst SELECT_AND_START_LABEL = { value: ( nls.localize('selectAndStartDebugging', \"Select and Start Debugging\")), original: 'Select and Start Debugging' };\nconst DEBUG_CONFIGURE_LABEL = ( nls.localize('openLaunchJson', \"Open '{0}'\", 'launch.json'));\nconst NEXT_DEBUG_CONSOLE_LABEL = { value: ( nls.localize('nextDebugConsole', \"Focus Next Debug Console\")), original: 'Focus Next Debug Console' };\nconst PREV_DEBUG_CONSOLE_LABEL = { value: ( nls.localize('prevDebugConsole', \"Focus Previous Debug Console\")), original: 'Focus Previous Debug Console' };\nconst OPEN_LOADED_SCRIPTS_LABEL = { value: ( nls.localize('openLoadedScript', \"Open Loaded Script...\")), original: 'Open Loaded Script...' };\nconst CALLSTACK_TOP_LABEL = { value: ( nls.localize('callStackTop', \"Navigate to Top of Call Stack\")), original: 'Navigate to Top of Call Stack' };\nconst CALLSTACK_BOTTOM_LABEL = { value: ( nls.localize('callStackBottom', \"Navigate to Bottom of Call Stack\")), original: 'Navigate to Bottom of Call Stack' };\nconst CALLSTACK_UP_LABEL = { value: ( nls.localize('callStackUp', \"Navigate Up Call Stack\")), original: 'Navigate Up Call Stack' };\nconst CALLSTACK_DOWN_LABEL = { value: ( nls.localize('callStackDown', \"Navigate Down Call Stack\")), original: 'Navigate Down Call Stack' };\nconst SELECT_DEBUG_CONSOLE_LABEL = { value: ( nls.localize('selectDebugConsole', \"Select Debug Console\")), original: 'Select Debug Console' };\nconst SELECT_DEBUG_SESSION_LABEL = { value: ( nls.localize('selectDebugSession', \"Select Debug Session\")), original: 'Select Debug Session' };\nconst DEBUG_QUICK_ACCESS_PREFIX = 'debug ';\nconst DEBUG_CONSOLE_QUICK_ACCESS_PREFIX = 'debug consoles ';\nfunction isThreadContext(obj) {\n    return obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string';\n}\nasync function getThreadAndRun(accessor, sessionAndThreadId, run) {\n    const debugService = accessor.get(IDebugService);\n    let thread;\n    if (isThreadContext(sessionAndThreadId)) {\n        const session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n        if (session) {\n            thread = session.getAllThreads().find(t => t.getId() === sessionAndThreadId.threadId);\n        }\n    }\n    else if (isSessionContext(sessionAndThreadId)) {\n        const session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n        if (session) {\n            const threads = session.getAllThreads();\n            thread = threads.length > 0 ? threads[0] : undefined;\n        }\n    }\n    if (!thread) {\n        thread = debugService.getViewModel().focusedThread;\n        if (!thread) {\n            const focusedSession = debugService.getViewModel().focusedSession;\n            const threads = focusedSession ? focusedSession.getAllThreads() : undefined;\n            thread = threads && threads.length ? threads[0] : undefined;\n        }\n    }\n    if (thread) {\n        await run(thread);\n    }\n}\nfunction isStackFrameContext(obj) {\n    return obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string' && typeof obj.frameId === 'string';\n}\nfunction getFrame(debugService, context) {\n    if (isStackFrameContext(context)) {\n        const session = debugService.getModel().getSession(context.sessionId);\n        if (session) {\n            const thread = session.getAllThreads().find(t => t.getId() === context.threadId);\n            if (thread) {\n                return thread.getCallStack().find(sf => sf.getId() === context.frameId);\n            }\n        }\n    }\n    else {\n        return debugService.getViewModel().focusedStackFrame;\n    }\n    return undefined;\n}\nfunction isSessionContext(obj) {\n    return obj && typeof obj.sessionId === 'string';\n}\nasync function changeDebugConsoleFocus(accessor, next) {\n    const debugService = accessor.get(IDebugService);\n    const viewsService = accessor.get(IViewsService);\n    const sessions = debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl());\n    let currSession = debugService.getViewModel().focusedSession;\n    let nextIndex = 0;\n    if (sessions.length > 0 && currSession) {\n        while (currSession && !currSession.hasSeparateRepl()) {\n            currSession = currSession.parentSession;\n        }\n        if (currSession) {\n            const currIndex = sessions.indexOf(currSession);\n            if (next) {\n                nextIndex = (currIndex === (sessions.length - 1) ? 0 : (currIndex + 1));\n            }\n            else {\n                nextIndex = (currIndex === 0 ? (sessions.length - 1) : (currIndex - 1));\n            }\n        }\n    }\n    await debugService.focusStackFrame(undefined, undefined, sessions[nextIndex], { explicit: true });\n    if (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n        await viewsService.openView(REPL_VIEW_ID, true);\n    }\n}\nasync function navigateCallStack(debugService, down) {\n    const frame = debugService.getViewModel().focusedStackFrame;\n    if (frame) {\n        let callStack = frame.thread.getCallStack();\n        let index = callStack.findIndex(elem => elem.frameId === frame.frameId);\n        let nextVisibleFrame;\n        if (down) {\n            if (index >= callStack.length - 1) {\n                if (frame.thread.reachedEndOfCallStack) {\n                    goToTopOfCallStack(debugService);\n                    return;\n                }\n                else {\n                    await debugService.getModel().fetchCallstack(frame.thread, 20);\n                    callStack = frame.thread.getCallStack();\n                    index = callStack.findIndex(elem => elem.frameId === frame.frameId);\n                }\n            }\n            nextVisibleFrame = findNextVisibleFrame(true, callStack, index);\n        }\n        else {\n            if (index <= 0) {\n                goToBottomOfCallStack(debugService);\n                return;\n            }\n            nextVisibleFrame = findNextVisibleFrame(false, callStack, index);\n        }\n        if (nextVisibleFrame) {\n            debugService.focusStackFrame(nextVisibleFrame);\n        }\n    }\n}\nasync function goToBottomOfCallStack(debugService) {\n    const thread = debugService.getViewModel().focusedThread;\n    if (thread) {\n        await debugService.getModel().fetchCallstack(thread);\n        const callStack = thread.getCallStack();\n        if (callStack.length > 0) {\n            const nextVisibleFrame = findNextVisibleFrame(false, callStack, 0);\n            if (nextVisibleFrame) {\n                debugService.focusStackFrame(nextVisibleFrame);\n            }\n        }\n    }\n}\nfunction goToTopOfCallStack(debugService) {\n    const thread = debugService.getViewModel().focusedThread;\n    if (thread) {\n        debugService.focusStackFrame(thread.getTopStackFrame());\n    }\n}\nfunction findNextVisibleFrame(down, callStack, startIndex) {\n    if (startIndex >= callStack.length) {\n        startIndex = callStack.length - 1;\n    }\n    else if (startIndex < 0) {\n        startIndex = 0;\n    }\n    let index = startIndex;\n    let currFrame;\n    do {\n        if (down) {\n            if (index === callStack.length - 1) {\n                index = 0;\n            }\n            else {\n                index++;\n            }\n        }\n        else {\n            if (index === 0) {\n                index = callStack.length - 1;\n            }\n            else {\n                index--;\n            }\n        }\n        currFrame = callStack[index];\n        if (!(currFrame.source.presentationHint === 'deemphasize' || currFrame.presentationHint === 'deemphasize')) {\n            return currFrame;\n        }\n    } while (index !== startIndex);\n    return undefined;\n}\nCommandsRegistry.registerCommand({\n    id: COPY_STACK_TRACE_ID,\n    handler: async (accessor, _, context) => {\n        const textResourcePropertiesService = accessor.get(ITextResourcePropertiesService);\n        const clipboardService = accessor.get(IClipboardService);\n        const debugService = accessor.get(IDebugService);\n        const frame = getFrame(debugService, context);\n        if (frame) {\n            const eol = textResourcePropertiesService.getEOL(frame.source.uri);\n            await clipboardService.writeText(( frame.thread.getCallStack().map(sf => ( sf.toString()))).join(eol));\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: REVERSE_CONTINUE_ID,\n    handler: async (accessor, _, context) => {\n        await getThreadAndRun(accessor, context, thread => thread.reverseContinue());\n    }\n});\nCommandsRegistry.registerCommand({\n    id: STEP_BACK_ID,\n    handler: async (accessor, _, context) => {\n        const contextKeyService = accessor.get(IContextKeyService);\n        if (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepBack('instruction'));\n        }\n        else {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepBack());\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: TERMINATE_THREAD_ID,\n    handler: async (accessor, _, context) => {\n        await getThreadAndRun(accessor, context, thread => thread.terminate());\n    }\n});\nCommandsRegistry.registerCommand({\n    id: JUMP_TO_CURSOR_ID,\n    handler: async (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        const stackFrame = debugService.getViewModel().focusedStackFrame;\n        const editorService = accessor.get(IEditorService);\n        const activeEditorControl = editorService.activeTextEditorControl;\n        const notificationService = accessor.get(INotificationService);\n        const quickInputService = accessor.get(IQuickInputService);\n        if (stackFrame && isCodeEditor(activeEditorControl) && activeEditorControl.hasModel()) {\n            const position = activeEditorControl.getPosition();\n            const resource = activeEditorControl.getModel().uri;\n            const source = stackFrame.thread.session.getSourceForUri(resource);\n            if (source) {\n                const response = await stackFrame.thread.session.gotoTargets(source.raw, position.lineNumber, position.column);\n                const targets = response?.body.targets;\n                if (targets && targets.length) {\n                    let id = targets[0].id;\n                    if (targets.length > 1) {\n                        const picks = ( targets.map(t => ({ label: t.label, _id: t.id })));\n                        const pick = await quickInputService.pick(picks, { placeHolder: ( nls.localize('chooseLocation', \"Choose the specific location\")) });\n                        if (!pick) {\n                            return;\n                        }\n                        id = pick._id;\n                    }\n                    return await stackFrame.thread.session.goto(stackFrame.thread.threadId, id).catch(e => notificationService.warn(e));\n                }\n            }\n        }\n        return notificationService.warn(( nls.localize(\n            'noExecutableCode',\n            \"No executable code is associated at the current cursor position.\"\n        )));\n    }\n});\nCommandsRegistry.registerCommand({\n    id: CALLSTACK_TOP_ID,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        goToTopOfCallStack(debugService);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: CALLSTACK_BOTTOM_ID,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        await goToBottomOfCallStack(debugService);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: CALLSTACK_UP_ID,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        navigateCallStack(debugService, false);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: CALLSTACK_DOWN_ID,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        navigateCallStack(debugService, true);\n    }\n});\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    command: {\n        id: JUMP_TO_CURSOR_ID,\n        title: ( nls.localize('jumpToCursor', \"Jump to Cursor\")),\n        category: DEBUG_COMMAND_CATEGORY\n    },\n    when: ( ContextKeyExpr.and(CONTEXT_JUMP_TO_CURSOR_SUPPORTED, EditorContextKeys.editorTextFocus)),\n    group: 'debug',\n    order: 3\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: NEXT_DEBUG_CONSOLE_ID,\n    weight: 200  + 1,\n    when: CONTEXT_IN_DEBUG_REPL,\n    primary: 2048  | 12 ,\n    mac: { primary: 1024  | 2048  | 94  },\n    handler: async (accessor, _, context) => {\n        changeDebugConsoleFocus(accessor, true);\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: PREV_DEBUG_CONSOLE_ID,\n    weight: 200  + 1,\n    when: CONTEXT_IN_DEBUG_REPL,\n    primary: 2048  | 11 ,\n    mac: { primary: 1024  | 2048  | 92  },\n    handler: async (accessor, _, context) => {\n        changeDebugConsoleFocus(accessor, false);\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: RESTART_SESSION_ID,\n    weight: 200 ,\n    primary: 1024  | 2048  | 63 ,\n    when: CONTEXT_IN_DEBUG_MODE,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        const configurationService = accessor.get(IConfigurationService);\n        let session;\n        if (isSessionContext(context)) {\n            session = debugService.getModel().getSession(context.sessionId);\n        }\n        else {\n            session = debugService.getViewModel().focusedSession;\n        }\n        if (!session) {\n            const { launch, name } = debugService.getConfigurationManager().selectedConfiguration;\n            await debugService.startDebugging(launch, name, { noDebug: false, startedByUser: true });\n        }\n        else {\n            const showSubSessions = configurationService.getValue('debug').showSubSessionsInToolBar;\n            while (!showSubSessions && session.lifecycleManagedByParent && session.parentSession) {\n                session = session.parentSession;\n            }\n            session.removeReplExpressions();\n            await debugService.restartSession(session);\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: STEP_OVER_ID,\n    weight: 200 ,\n    primary: 68 ,\n    secondary: isWeb ? [((512  | 68) )] : undefined,\n    when: ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')),\n    handler: async (accessor, _, context) => {\n        const contextKeyService = accessor.get(IContextKeyService);\n        if (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n            await getThreadAndRun(accessor, context, (thread) => thread.next('instruction'));\n        }\n        else {\n            await getThreadAndRun(accessor, context, (thread) => thread.next());\n        }\n    }\n});\nconst STEP_INTO_KEYBINDING = (isWeb && isWindows) ? ((512  | 69) ) : 69 ;\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: STEP_INTO_ID,\n    weight: 200  + 10,\n    primary: STEP_INTO_KEYBINDING,\n    when: ( CONTEXT_DEBUG_STATE.notEqualsTo('inactive')),\n    handler: async (accessor, _, context) => {\n        const contextKeyService = accessor.get(IContextKeyService);\n        if (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepIn('instruction'));\n        }\n        else {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepIn());\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: STEP_OUT_ID,\n    weight: 200 ,\n    primary: 1024  | 69 ,\n    when: ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')),\n    handler: async (accessor, _, context) => {\n        const contextKeyService = accessor.get(IContextKeyService);\n        if (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepOut('instruction'));\n        }\n        else {\n            await getThreadAndRun(accessor, context, (thread) => thread.stepOut());\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: PAUSE_ID,\n    weight: 200  + 2,\n    primary: 64 ,\n    when: ( CONTEXT_DEBUG_STATE.isEqualTo('running')),\n    handler: async (accessor, _, context) => {\n        await getThreadAndRun(accessor, context, thread => thread.pause());\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: STEP_INTO_TARGET_ID,\n    primary: STEP_INTO_KEYBINDING | 2048 ,\n    when: ( ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')))),\n    weight: 200 ,\n    handler: async (accessor, _, context) => {\n        const quickInputService = accessor.get(IQuickInputService);\n        const debugService = accessor.get(IDebugService);\n        const session = debugService.getViewModel().focusedSession;\n        const frame = debugService.getViewModel().focusedStackFrame;\n        if (!frame || !session) {\n            return;\n        }\n        const editor = await accessor.get(IEditorService).openEditor({\n            resource: frame.source.uri,\n            options: { revealIfOpened: true }\n        });\n        let codeEditor;\n        if (editor) {\n            const ctrl = editor?.getControl();\n            if (isCodeEditor(ctrl)) {\n                codeEditor = ctrl;\n            }\n        }\n        const qp = quickInputService.createQuickPick();\n        qp.busy = true;\n        qp.show();\n        qp.onDidChangeActive(([item]) => {\n            if (codeEditor && item && item.target.line !== undefined) {\n                codeEditor.revealLineInCenterIfOutsideViewport(item.target.line);\n                codeEditor.setSelection({\n                    startLineNumber: item.target.line,\n                    startColumn: item.target.column || 1,\n                    endLineNumber: item.target.endLine || item.target.line,\n                    endColumn: item.target.endColumn || item.target.column || 1,\n                });\n            }\n        });\n        qp.onDidAccept(() => {\n            if (qp.activeItems.length) {\n                session.stepIn(frame.thread.threadId, qp.activeItems[0].target.id);\n            }\n        });\n        qp.onDidHide(() => qp.dispose());\n        session.stepInTargets(frame.frameId).then(targets => {\n            qp.busy = false;\n            if (targets?.length) {\n                qp.items = targets?.map(target => ({ target, label: target.label }));\n            }\n            else {\n                qp.placeholder = ( nls.localize('editor.debug.action.stepIntoTargets.none', \"No step targets available\"));\n            }\n        });\n    }\n});\nasync function stopHandler(accessor, _, context, disconnect, suspend) {\n    const debugService = accessor.get(IDebugService);\n    let session;\n    if (isSessionContext(context)) {\n        session = debugService.getModel().getSession(context.sessionId);\n    }\n    else {\n        session = debugService.getViewModel().focusedSession;\n    }\n    const configurationService = accessor.get(IConfigurationService);\n    const showSubSessions = configurationService.getValue('debug').showSubSessionsInToolBar;\n    while (!showSubSessions && session && session.lifecycleManagedByParent && session.parentSession) {\n        session = session.parentSession;\n    }\n    await debugService.stopSession(session, disconnect, suspend);\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: DISCONNECT_ID,\n    weight: 200 ,\n    primary: 1024  | 63 ,\n    when: ( ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_IN_DEBUG_MODE)),\n    handler: (accessor, _, context) => stopHandler(accessor, _, context, true)\n});\nCommandsRegistry.registerCommand({\n    id: DISCONNECT_AND_SUSPEND_ID,\n    handler: (accessor, _, context) => stopHandler(accessor, _, context, true, true)\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: STOP_ID,\n    weight: 200 ,\n    primary: 1024  | 63 ,\n    when: ( ContextKeyExpr.and(( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), CONTEXT_IN_DEBUG_MODE)),\n    handler: (accessor, _, context) => stopHandler(accessor, _, context, false)\n});\nCommandsRegistry.registerCommand({\n    id: RESTART_FRAME_ID,\n    handler: async (accessor, _, context) => {\n        const debugService = accessor.get(IDebugService);\n        const notificationService = accessor.get(INotificationService);\n        const frame = getFrame(debugService, context);\n        if (frame) {\n            try {\n                await frame.restart();\n            }\n            catch (e) {\n                notificationService.error(e);\n            }\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: CONTINUE_ID,\n    weight: 200  + 10,\n    primary: 63 ,\n    when: ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')),\n    handler: async (accessor, _, context) => {\n        await getThreadAndRun(accessor, context, thread => thread.continue());\n    }\n});\nCommandsRegistry.registerCommand({\n    id: SHOW_LOADED_SCRIPTS_ID,\n    handler: async (accessor) => {\n        await showLoadedScriptMenu(accessor);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: FOCUS_REPL_ID,\n    handler: async (accessor) => {\n        const viewsService = accessor.get(IViewsService);\n        await viewsService.openView(REPL_VIEW_ID, true);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: 'debug.startFromConfig',\n    handler: async (accessor, config) => {\n        const debugService = accessor.get(IDebugService);\n        await debugService.startDebugging(undefined, config);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: FOCUS_SESSION_ID,\n    handler: async (accessor, session) => {\n        const debugService = accessor.get(IDebugService);\n        const editorService = accessor.get(IEditorService);\n        const stoppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === 2 );\n        if (stoppedChildSession && session.state !== 2 ) {\n            session = stoppedChildSession;\n        }\n        await debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n        const stackFrame = debugService.getViewModel().focusedStackFrame;\n        if (stackFrame) {\n            await stackFrame.openInEditor(editorService, true);\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: SELECT_AND_START_ID,\n    handler: async (accessor) => {\n        const quickInputService = accessor.get(IQuickInputService);\n        quickInputService.quickAccess.show(DEBUG_QUICK_ACCESS_PREFIX);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: SELECT_DEBUG_CONSOLE_ID,\n    handler: async (accessor) => {\n        const quickInputService = accessor.get(IQuickInputService);\n        quickInputService.quickAccess.show(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX);\n    }\n});\nCommandsRegistry.registerCommand({\n    id: SELECT_DEBUG_SESSION_ID,\n    handler: async (accessor) => {\n        showDebugSessionMenu(accessor, SELECT_AND_START_ID);\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'debug.toggleBreakpoint',\n    weight: 200  + 5,\n    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, ( InputFocusedContext.toNegated()))),\n    primary: 10 ,\n    handler: (accessor) => {\n        const listService = accessor.get(IListService);\n        const debugService = accessor.get(IDebugService);\n        const list = listService.lastFocusedList;\n        if (list instanceof List) {\n            const focused = list.getFocusedElements();\n            if (focused && focused.length) {\n                debugService.enableOrDisableBreakpoints(!focused[0].enabled, focused[0]);\n            }\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'debug.enableOrDisableBreakpoint',\n    weight: 200 ,\n    primary: undefined,\n    when: EditorContextKeys.editorTextFocus,\n    handler: (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        const editorService = accessor.get(IEditorService);\n        const control = editorService.activeTextEditorControl;\n        if (isCodeEditor(control)) {\n            const model = control.getModel();\n            if (model) {\n                const position = control.getPosition();\n                if (position) {\n                    const bps = debugService.getModel().getBreakpoints({ uri: model.uri, lineNumber: position.lineNumber });\n                    if (bps.length) {\n                        debugService.enableOrDisableBreakpoints(!bps[0].enabled, bps[0]);\n                    }\n                }\n            }\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: EDIT_EXPRESSION_COMMAND_ID,\n    weight: 200  + 5,\n    when: CONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n    primary: 60 ,\n    mac: { primary: 3  },\n    handler: (accessor, expression) => {\n        const debugService = accessor.get(IDebugService);\n        if (!(expression instanceof Expression)) {\n            const listService = accessor.get(IListService);\n            const focused = listService.lastFocusedList;\n            if (focused) {\n                const elements = focused.getFocus();\n                if (Array.isArray(elements) && elements[0] instanceof Expression) {\n                    expression = elements[0];\n                }\n            }\n        }\n        if (expression instanceof Expression) {\n            debugService.getViewModel().setSelectedExpression(expression, false);\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: SET_EXPRESSION_COMMAND_ID,\n    handler: async (accessor, expression) => {\n        const debugService = accessor.get(IDebugService);\n        if (expression instanceof Expression || expression instanceof Variable) {\n            debugService.getViewModel().setSelectedExpression(expression, true);\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'debug.setVariable',\n    weight: 200  + 5,\n    when: CONTEXT_VARIABLES_FOCUSED,\n    primary: 60 ,\n    mac: { primary: 3  },\n    handler: (accessor) => {\n        const listService = accessor.get(IListService);\n        const debugService = accessor.get(IDebugService);\n        const focused = listService.lastFocusedList;\n        if (focused) {\n            const elements = focused.getFocus();\n            if (Array.isArray(elements) && elements[0] instanceof Variable) {\n                debugService.getViewModel().setSelectedExpression(elements[0], false);\n            }\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: REMOVE_EXPRESSION_COMMAND_ID,\n    weight: 200 ,\n    when: ( ContextKeyExpr.and(CONTEXT_WATCH_EXPRESSIONS_FOCUSED, ( CONTEXT_EXPRESSION_SELECTED.toNegated()))),\n    primary: 20 ,\n    mac: { primary: 2048  | 1  },\n    handler: (accessor, expression) => {\n        const debugService = accessor.get(IDebugService);\n        if (expression instanceof Expression) {\n            debugService.removeWatchExpressions(expression.getId());\n            return;\n        }\n        const listService = accessor.get(IListService);\n        const focused = listService.lastFocusedList;\n        if (focused) {\n            let elements = focused.getFocus();\n            if (Array.isArray(elements) && elements[0] instanceof Expression) {\n                const selection = focused.getSelection();\n                if (selection && selection.indexOf(elements[0]) >= 0) {\n                    elements = selection;\n                }\n                elements.forEach((e) => debugService.removeWatchExpressions(e.getId()));\n            }\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'debug.removeBreakpoint',\n    weight: 200 ,\n    when: ( ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, ( CONTEXT_BREAKPOINT_INPUT_FOCUSED.toNegated()))),\n    primary: 20 ,\n    mac: { primary: 2048  | 1  },\n    handler: (accessor) => {\n        const listService = accessor.get(IListService);\n        const debugService = accessor.get(IDebugService);\n        const list = listService.lastFocusedList;\n        if (list instanceof List) {\n            const focused = list.getFocusedElements();\n            const element = focused.length ? focused[0] : undefined;\n            if (element instanceof Breakpoint) {\n                debugService.removeBreakpoints(element.getId());\n            }\n            else if (element instanceof FunctionBreakpoint) {\n                debugService.removeFunctionBreakpoints(element.getId());\n            }\n            else if (element instanceof DataBreakpoint) {\n                debugService.removeDataBreakpoints(element.getId());\n            }\n        }\n    }\n});\nconst inlineBreakpointHandler = (accessor) => {\n    const debugService = accessor.get(IDebugService);\n    const editorService = accessor.get(IEditorService);\n    const control = editorService.activeTextEditorControl;\n    if (isCodeEditor(control)) {\n        const position = control.getPosition();\n        if (position && control.hasModel() && debugService.canSetBreakpointsIn(control.getModel())) {\n            const modelUri = control.getModel().uri;\n            const breakpointAlreadySet = ( debugService.getModel().getBreakpoints({ lineNumber: position.lineNumber, uri: modelUri })\n                .some(\n                bp => (bp.sessionAgnosticData.column === position.column || (!bp.column && position.column <= 1))\n            ));\n            if (!breakpointAlreadySet) {\n                debugService.addBreakpoints(modelUri, [{ lineNumber: position.lineNumber, column: position.column > 1 ? position.column : undefined }]);\n            }\n        }\n    }\n};\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    weight: 200 ,\n    primary: 1024  | 67 ,\n    when: EditorContextKeys.editorTextFocus,\n    id: TOGGLE_INLINE_BREAKPOINT_ID,\n    handler: inlineBreakpointHandler\n});\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    command: {\n        id: TOGGLE_INLINE_BREAKPOINT_ID,\n        title: ( nls.localize('addInlineBreakpoint', \"Add Inline Breakpoint\")),\n        category: DEBUG_COMMAND_CATEGORY\n    },\n    when: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, ( PanelFocusContext.toNegated()), EditorContextKeys.editorTextFocus)),\n    group: 'debug',\n    order: 1\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'debug.openBreakpointToSide',\n    weight: 200 ,\n    when: CONTEXT_BREAKPOINTS_FOCUSED,\n    primary: 2048  | 3 ,\n    secondary: [512  | 3 ],\n    handler: (accessor) => {\n        const listService = accessor.get(IListService);\n        const list = listService.lastFocusedList;\n        if (list instanceof List) {\n            const focus = list.getFocusedElements();\n            if (focus.length && focus[0] instanceof Breakpoint) {\n                return openBreakpointSource(focus[0], true, false, true, accessor.get(IDebugService), accessor.get(IEditorService));\n            }\n        }\n        return undefined;\n    }\n});\nexport { ADD_CONFIGURATION_ID, CALLSTACK_BOTTOM_ID, CALLSTACK_BOTTOM_LABEL, CALLSTACK_DOWN_ID, CALLSTACK_DOWN_LABEL, CALLSTACK_TOP_ID, CALLSTACK_TOP_LABEL, CALLSTACK_UP_ID, CALLSTACK_UP_LABEL, CONTINUE_ID, CONTINUE_LABEL, COPY_STACK_TRACE_ID, DEBUG_COMMAND_CATEGORY, DEBUG_CONFIGURE_COMMAND_ID, DEBUG_CONFIGURE_LABEL, DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, DEBUG_QUICK_ACCESS_PREFIX, DEBUG_START_COMMAND_ID, DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, DISCONNECT_ID, DISCONNECT_LABEL, EDIT_EXPRESSION_COMMAND_ID, FOCUS_REPL_ID, FOCUS_SESSION_ID, FOCUS_SESSION_LABEL, JUMP_TO_CURSOR_ID, NEXT_DEBUG_CONSOLE_ID, NEXT_DEBUG_CONSOLE_LABEL, OPEN_LOADED_SCRIPTS_LABEL, PAUSE_ID, PAUSE_LABEL, PREV_DEBUG_CONSOLE_ID, PREV_DEBUG_CONSOLE_LABEL, REMOVE_EXPRESSION_COMMAND_ID, RESTART_FRAME_ID, RESTART_LABEL, RESTART_SESSION_ID, REVERSE_CONTINUE_ID, SELECT_AND_START_ID, SELECT_AND_START_LABEL, SELECT_DEBUG_CONSOLE_ID, SELECT_DEBUG_CONSOLE_LABEL, SELECT_DEBUG_SESSION_ID, SELECT_DEBUG_SESSION_LABEL, SET_EXPRESSION_COMMAND_ID, SHOW_LOADED_SCRIPTS_ID, STEP_BACK_ID, STEP_INTO_ID, STEP_INTO_LABEL, STEP_INTO_TARGET_ID, STEP_INTO_TARGET_LABEL, STEP_OUT_ID, STEP_OUT_LABEL, STEP_OVER_ID, STEP_OVER_LABEL, STOP_ID, STOP_LABEL, TERMINATE_THREAD_ID, TOGGLE_INLINE_BREAKPOINT_ID };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst debugConsoleViewIcon = registerIcon('debug-console-view-icon', Codicon.debugConsole, ( localize('debugConsoleViewIcon', 'View icon of the debug console view.')));\nconst runViewIcon = registerIcon('run-view-icon', Codicon.debugAlt, ( localize('runViewIcon', 'View icon of the run view.')));\nconst variablesViewIcon = registerIcon('variables-view-icon', Codicon.debugAlt, ( localize('variablesViewIcon', 'View icon of the variables view.')));\nconst watchViewIcon = registerIcon('watch-view-icon', Codicon.debugAlt, ( localize('watchViewIcon', 'View icon of the watch view.')));\nconst callStackViewIcon = registerIcon('callstack-view-icon', Codicon.debugAlt, ( localize('callStackViewIcon', 'View icon of the call stack view.')));\nconst breakpointsViewIcon = registerIcon('breakpoints-view-icon', Codicon.debugAlt, ( localize('breakpointsViewIcon', 'View icon of the breakpoints view.')));\nconst loadedScriptsViewIcon = registerIcon('loaded-scripts-view-icon', Codicon.debugAlt, ( localize('loadedScriptsViewIcon', 'View icon of the loaded scripts view.')));\nconst breakpoint = {\n    regular: registerIcon('debug-breakpoint', Codicon.debugBreakpoint, ( localize('debugBreakpoint', 'Icon for breakpoints.'))),\n    disabled: registerIcon('debug-breakpoint-disabled', Codicon.debugBreakpointDisabled, ( localize('debugBreakpointDisabled', 'Icon for disabled breakpoints.'))),\n    unverified: registerIcon('debug-breakpoint-unverified', Codicon.debugBreakpointUnverified, ( localize('debugBreakpointUnverified', 'Icon for unverified breakpoints.')))\n};\nconst functionBreakpoint = {\n    regular: registerIcon('debug-breakpoint-function', Codicon.debugBreakpointFunction, ( localize('debugBreakpointFunction', 'Icon for function breakpoints.'))),\n    disabled: registerIcon('debug-breakpoint-function-disabled', Codicon.debugBreakpointFunctionDisabled, ( localize(\n        'debugBreakpointFunctionDisabled',\n        'Icon for disabled function breakpoints.'\n    ))),\n    unverified: registerIcon('debug-breakpoint-function-unverified', Codicon.debugBreakpointFunctionUnverified, ( localize(\n        'debugBreakpointFunctionUnverified',\n        'Icon for unverified function breakpoints.'\n    )))\n};\nconst conditionalBreakpoint = {\n    regular: registerIcon('debug-breakpoint-conditional', Codicon.debugBreakpointConditional, ( localize('debugBreakpointConditional', 'Icon for conditional breakpoints.'))),\n    disabled: registerIcon('debug-breakpoint-conditional-disabled', Codicon.debugBreakpointConditionalDisabled, ( localize(\n        'debugBreakpointConditionalDisabled',\n        'Icon for disabled conditional breakpoints.'\n    ))),\n    unverified: registerIcon('debug-breakpoint-conditional-unverified', Codicon.debugBreakpointConditionalUnverified, ( localize(\n        'debugBreakpointConditionalUnverified',\n        'Icon for unverified conditional breakpoints.'\n    )))\n};\nconst dataBreakpoint = {\n    regular: registerIcon('debug-breakpoint-data', Codicon.debugBreakpointData, ( localize('debugBreakpointData', 'Icon for data breakpoints.'))),\n    disabled: registerIcon('debug-breakpoint-data-disabled', Codicon.debugBreakpointDataDisabled, ( localize('debugBreakpointDataDisabled', 'Icon for disabled data breakpoints.'))),\n    unverified: registerIcon('debug-breakpoint-data-unverified', Codicon.debugBreakpointDataUnverified, ( localize('debugBreakpointDataUnverified', 'Icon for unverified data breakpoints.'))),\n};\nconst logBreakpoint = {\n    regular: registerIcon('debug-breakpoint-log', Codicon.debugBreakpointLog, ( localize('debugBreakpointLog', 'Icon for log breakpoints.'))),\n    disabled: registerIcon('debug-breakpoint-log-disabled', Codicon.debugBreakpointLogDisabled, ( localize('debugBreakpointLogDisabled', 'Icon for disabled log breakpoint.'))),\n    unverified: registerIcon('debug-breakpoint-log-unverified', Codicon.debugBreakpointLogUnverified, ( localize('debugBreakpointLogUnverified', 'Icon for unverified log breakpoints.'))),\n};\nconst debugBreakpointHint = registerIcon('debug-hint', Codicon.debugHint, ( localize(\n    'debugBreakpointHint',\n    'Icon for breakpoint hints shown on hover in editor glyph margin.'\n)));\nconst debugBreakpointUnsupported = registerIcon('debug-breakpoint-unsupported', Codicon.debugBreakpointUnsupported, ( localize('debugBreakpointUnsupported', 'Icon for unsupported breakpoints.')));\nconst allBreakpoints = [breakpoint, functionBreakpoint, conditionalBreakpoint, dataBreakpoint, logBreakpoint];\nconst debugStackframe = registerIcon('debug-stackframe', Codicon.debugStackframe, ( localize(\n    'debugStackframe',\n    'Icon for a stackframe shown in the editor glyph margin.'\n)));\nconst debugStackframeFocused = registerIcon('debug-stackframe-focused', Codicon.debugStackframeFocused, ( localize(\n    'debugStackframeFocused',\n    'Icon for a focused stackframe  shown in the editor glyph margin.'\n)));\nconst debugGripper = registerIcon('debug-gripper', Codicon.gripper, ( localize('debugGripper', 'Icon for the debug bar gripper.')));\nconst debugRestartFrame = registerIcon('debug-restart-frame', Codicon.debugRestartFrame, ( localize('debugRestartFrame', 'Icon for the debug restart frame action.')));\nconst debugStop = registerIcon('debug-stop', Codicon.debugStop, ( localize('debugStop', 'Icon for the debug stop action.')));\nconst debugDisconnect = registerIcon('debug-disconnect', Codicon.debugDisconnect, ( localize('debugDisconnect', 'Icon for the debug disconnect action.')));\nconst debugRestart = registerIcon('debug-restart', Codicon.debugRestart, ( localize('debugRestart', 'Icon for the debug restart action.')));\nconst debugStepOver = registerIcon('debug-step-over', Codicon.debugStepOver, ( localize('debugStepOver', 'Icon for the debug step over action.')));\nconst debugStepInto = registerIcon('debug-step-into', Codicon.debugStepInto, ( localize('debugStepInto', 'Icon for the debug step into action.')));\nconst debugStepOut = registerIcon('debug-step-out', Codicon.debugStepOut, ( localize('debugStepOut', 'Icon for the debug step out action.')));\nconst debugStepBack = registerIcon('debug-step-back', Codicon.debugStepBack, ( localize('debugStepBack', 'Icon for the debug step back action.')));\nconst debugPause = registerIcon('debug-pause', Codicon.debugPause, ( localize('debugPause', 'Icon for the debug pause action.')));\nconst debugContinue = registerIcon('debug-continue', Codicon.debugContinue, ( localize('debugContinue', 'Icon for the debug continue action.')));\nconst debugReverseContinue = registerIcon('debug-reverse-continue', Codicon.debugReverseContinue, ( localize('debugReverseContinue', 'Icon for the debug reverse continue action.')));\nconst debugRun = registerIcon('debug-run', Codicon.run, ( localize('debugRun', 'Icon for the run or debug action.')));\nconst debugStart = registerIcon('debug-start', Codicon.debugStart, ( localize('debugStart', 'Icon for the debug start action.')));\nconst debugConfigure = registerIcon('debug-configure', Codicon.gear, ( localize('debugConfigure', 'Icon for the debug configure action.')));\nregisterIcon('debug-console', Codicon.gear, ( localize('debugConsole', 'Icon for the debug console open action.')));\nconst debugRemoveConfig = registerIcon('debug-remove-config', Codicon.trash, ( localize('debugRemoveConfig', 'Icon for removing debug configurations.')));\nregisterIcon('debug-collapse-all', Codicon.collapseAll, ( localize('debugCollapseAll', 'Icon for the collapse all action in the debug views.')));\nconst callstackViewSession = registerIcon('callstack-view-session', Codicon.bug, ( localize(\n    'callstackViewSession',\n    'Icon for the session icon in the call stack view.'\n)));\nconst debugConsoleClearAll = registerIcon('debug-console-clear-all', Codicon.clearAll, ( localize(\n    'debugConsoleClearAll',\n    'Icon for the clear all action in the debug console.'\n)));\nconst watchExpressionsRemoveAll = registerIcon('watch-expressions-remove-all', Codicon.closeAll, ( localize(\n    'watchExpressionsRemoveAll',\n    'Icon for the Remove All action in the watch view.'\n)));\nconst watchExpressionRemove = registerIcon('watch-expression-remove', Codicon.removeClose, ( localize('watchExpressionRemove', 'Icon for the Remove action in the watch view.')));\nconst watchExpressionsAdd = registerIcon('watch-expressions-add', Codicon.add, ( localize('watchExpressionsAdd', 'Icon for the add action in the watch view.')));\nconst watchExpressionsAddFuncBreakpoint = registerIcon('watch-expressions-add-function-breakpoint', Codicon.add, ( localize(\n    'watchExpressionsAddFuncBreakpoint',\n    'Icon for the add function breakpoint action in the watch view.'\n)));\nconst breakpointsRemoveAll = registerIcon('breakpoints-remove-all', Codicon.closeAll, ( localize(\n    'breakpointsRemoveAll',\n    'Icon for the Remove All action in the breakpoints view.'\n)));\nconst breakpointsActivate = registerIcon('breakpoints-activate', Codicon.activateBreakpoints, ( localize(\n    'breakpointsActivate',\n    'Icon for the activate action in the breakpoints view.'\n)));\nconst debugConsoleEvaluationInput = registerIcon('debug-console-evaluation-input', Codicon.arrowSmallRight, ( localize(\n    'debugConsoleEvaluationInput',\n    'Icon for the debug evaluation input marker.'\n)));\nconst debugConsoleEvaluationPrompt = registerIcon('debug-console-evaluation-prompt', Codicon.chevronRight, ( localize('debugConsoleEvaluationPrompt', 'Icon for the debug evaluation prompt.')));\nconst debugInspectMemory = registerIcon('debug-inspect-memory', Codicon.fileBinary, ( localize('debugInspectMemory', 'Icon for the inspect memory action.')));\nexport { allBreakpoints, breakpoint, breakpointsActivate, breakpointsRemoveAll, breakpointsViewIcon, callStackViewIcon, callstackViewSession, conditionalBreakpoint, dataBreakpoint, debugBreakpointHint, debugBreakpointUnsupported, debugConfigure, debugConsoleClearAll, debugConsoleEvaluationInput, debugConsoleEvaluationPrompt, debugConsoleViewIcon, debugContinue, debugDisconnect, debugGripper, debugInspectMemory, debugPause, debugRemoveConfig, debugRestart, debugRestartFrame, debugReverseContinue, debugRun, debugStackframe, debugStackframeFocused, debugStart, debugStepBack, debugStepInto, debugStepOut, debugStepOver, debugStop, functionBreakpoint, loadedScriptsViewIcon, logBreakpoint, runViewIcon, variablesViewIcon, watchExpressionRemove, watchExpressionsAdd, watchExpressionsAddFuncBreakpoint, watchExpressionsRemoveAll, watchViewIcon };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { distinct, lastIndex } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler, DeferredPromise } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { decodeBase64, VSBuffer, encodeBase64 } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { stringHash } from 'monaco-editor/esm/vs/base/common/hash.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { mixin } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isString, isUndefinedOrNull } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { DEBUG_MEMORY_SCHEME } from './debug.js';\nimport { getUriFromSource, UNKNOWN_SOURCE_LABEL } from './debugSource.js';\nimport { DisassemblyViewInput } from './disassemblyViewInput.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nclass ExpressionContainer {\n    static { this.allValues = ( (new Map())); }\n    static { this.BASE_CHUNK_SIZE = 100; }\n    constructor(session, threadId, _reference, id, namedVariables = 0, indexedVariables = 0, memoryReference = undefined, startOfVariables = 0, presentationHint = undefined) {\n        this.session = session;\n        this.threadId = threadId;\n        this._reference = _reference;\n        this.id = id;\n        this.namedVariables = namedVariables;\n        this.indexedVariables = indexedVariables;\n        this.memoryReference = memoryReference;\n        this.startOfVariables = startOfVariables;\n        this.presentationHint = presentationHint;\n        this.valueChanged = false;\n        this._value = '';\n    }\n    get reference() {\n        return this._reference;\n    }\n    set reference(value) {\n        this._reference = value;\n        this.children = undefined;\n    }\n    async evaluateLazy() {\n        if (typeof this.reference === 'undefined') {\n            return;\n        }\n        const response = await this.session.variables(this.reference, this.threadId, undefined, undefined, undefined);\n        if (!response || !response.body || !response.body.variables || response.body.variables.length !== 1) {\n            return;\n        }\n        const dummyVar = response.body.variables[0];\n        this.reference = dummyVar.variablesReference;\n        this._value = dummyVar.value;\n        this.namedVariables = dummyVar.namedVariables;\n        this.indexedVariables = dummyVar.indexedVariables;\n        this.memoryReference = dummyVar.memoryReference;\n        this.presentationHint = dummyVar.presentationHint;\n        this.adoptLazyResponse(dummyVar);\n    }\n    adoptLazyResponse(response) {\n    }\n    getChildren() {\n        if (!this.children) {\n            this.children = this.doGetChildren();\n        }\n        return this.children;\n    }\n    async doGetChildren() {\n        if (!this.hasChildren) {\n            return [];\n        }\n        if (!this.getChildrenInChunks) {\n            return this.fetchVariables(undefined, undefined, undefined);\n        }\n        const children = this.namedVariables ? await this.fetchVariables(undefined, undefined, 'named') : [];\n        let chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n        while (!!this.indexedVariables && this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n            chunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n        }\n        if (!!this.indexedVariables && this.indexedVariables > chunkSize) {\n            const numberOfChunks = Math.ceil(this.indexedVariables / chunkSize);\n            for (let i = 0; i < numberOfChunks; i++) {\n                const start = (this.startOfVariables || 0) + i * chunkSize;\n                const count = Math.min(chunkSize, this.indexedVariables - i * chunkSize);\n                children.push(( (new Variable(\n                    this.session,\n                    this.threadId,\n                    this,\n                    this.reference,\n                    `[${start}..${start + count - 1}]`,\n                    '',\n                    '',\n                    undefined,\n                    count,\n                    undefined,\n                    { kind: 'virtual' },\n                    undefined,\n                    undefined,\n                    true,\n                    start\n                ))));\n            }\n            return children;\n        }\n        const variables = await this.fetchVariables(this.startOfVariables, this.indexedVariables, 'indexed');\n        return children.concat(variables);\n    }\n    getId() {\n        return this.id;\n    }\n    getSession() {\n        return this.session;\n    }\n    get value() {\n        return this._value;\n    }\n    get hasChildren() {\n        return !!this.reference && this.reference > 0 && !this.presentationHint?.lazy;\n    }\n    async fetchVariables(start, count, filter) {\n        try {\n            const response = await this.session.variables(this.reference || 0, this.threadId, filter, start, count);\n            if (!response || !response.body || !response.body.variables) {\n                return [];\n            }\n            const nameCount = ( (new Map()));\n            const vars = ( (response.body.variables.filter(v => !!v).map((v) => {\n                if (isString(v.value) && isString(v.name) && typeof v.variablesReference === 'number') {\n                    const count = nameCount.get(v.name) || 0;\n                    const idDuplicationIndex = count > 0 ? ( (count.toString())) : '';\n                    nameCount.set(v.name, count + 1);\n                    return (\n                         (new Variable(\n                            this.session,\n                            this.threadId,\n                            this,\n                            v.variablesReference,\n                            v.name,\n                            v.evaluateName,\n                            v.value,\n                            v.namedVariables,\n                            v.indexedVariables,\n                            v.memoryReference,\n                            v.presentationHint,\n                            v.type,\n                            v.__vscodeVariableMenuContext,\n                            true,\n                            0,\n                            idDuplicationIndex\n                        ))\n                    );\n                }\n                return (\n                     (new Variable(\n                        this.session,\n                        this.threadId,\n                        this,\n                        0,\n                        '',\n                        undefined,\n                         (nls.localize('invalidVariableAttributes', \"Invalid variable attributes\")),\n                        0,\n                        0,\n                        undefined,\n                        { kind: 'virtual' },\n                        undefined,\n                        undefined,\n                        false\n                    ))\n                );\n            })));\n            if (this.session.autoExpandLazyVariables) {\n                await Promise.all(( (vars.map(v => v.presentationHint?.lazy && v.evaluateLazy()))));\n            }\n            return vars;\n        }\n        catch (e) {\n            return [( (new Variable(\n                this.session,\n                this.threadId,\n                this,\n                0,\n                '',\n                undefined,\n                e.message,\n                0,\n                0,\n                undefined,\n                { kind: 'virtual' },\n                undefined,\n                undefined,\n                false\n            )))];\n        }\n    }\n    get getChildrenInChunks() {\n        return !!this.indexedVariables;\n    }\n    set value(value) {\n        this._value = value;\n        this.valueChanged = !!ExpressionContainer.allValues.get(this.getId()) &&\n            ExpressionContainer.allValues.get(this.getId()) !== Expression.DEFAULT_VALUE && ExpressionContainer.allValues.get(this.getId()) !== value;\n        ExpressionContainer.allValues.set(this.getId(), value);\n    }\n    toString() {\n        return this.value;\n    }\n    async evaluateExpression(expression, session, stackFrame, context, keepLazyVars = false) {\n        if (!session || (!stackFrame && context !== 'repl')) {\n            this.value = context === 'repl' ? ( (nls.localize('startDebugFirst', \"Please start a debug session to evaluate expressions\"))) : Expression.DEFAULT_VALUE;\n            this.reference = 0;\n            return false;\n        }\n        this.session = session;\n        try {\n            const response = await session.evaluate(expression, stackFrame ? stackFrame.frameId : undefined, context);\n            if (response && response.body) {\n                this.value = response.body.result || '';\n                this.reference = response.body.variablesReference;\n                this.namedVariables = response.body.namedVariables;\n                this.indexedVariables = response.body.indexedVariables;\n                this.memoryReference = response.body.memoryReference;\n                this.type = response.body.type || this.type;\n                this.presentationHint = response.body.presentationHint;\n                if (!keepLazyVars && response.body.presentationHint?.lazy) {\n                    await this.evaluateLazy();\n                }\n                return true;\n            }\n            return false;\n        }\n        catch (e) {\n            this.value = e.message || '';\n            this.reference = 0;\n            return false;\n        }\n    }\n}\nfunction handleSetResponse(expression, response) {\n    if (response && response.body) {\n        expression.value = response.body.value || '';\n        expression.type = response.body.type || expression.type;\n        expression.reference = response.body.variablesReference;\n        expression.namedVariables = response.body.namedVariables;\n        expression.indexedVariables = response.body.indexedVariables;\n    }\n}\nclass Expression extends ExpressionContainer {\n    static { this.DEFAULT_VALUE = ( (nls.localize('notAvailable', \"not available\"))); }\n    constructor(name, id = generateUuid()) {\n        super(undefined, undefined, 0, id);\n        this.name = name;\n        this.available = false;\n        if (name) {\n            this.value = Expression.DEFAULT_VALUE;\n        }\n    }\n    async evaluate(session, stackFrame, context, keepLazyVars) {\n        this.available = await this.evaluateExpression(this.name, session, stackFrame, context, keepLazyVars);\n    }\n    toString() {\n        return `${this.name}\\n${this.value}`;\n    }\n    async setExpression(value, stackFrame) {\n        if (!this.session) {\n            return;\n        }\n        const response = await this.session.setExpression(stackFrame.frameId, this.name, value);\n        handleSetResponse(this, response);\n    }\n}\nclass Variable extends ExpressionContainer {\n    constructor(session, threadId, parent, reference, name, evaluateName, value, namedVariables, indexedVariables, memoryReference, presentationHint, type = undefined, variableMenuContext = undefined, available = true, startOfVariables = 0, idDuplicationIndex = '') {\n        super(session, threadId, reference, `variable:${parent.getId()}:${name}:${idDuplicationIndex}`, namedVariables, indexedVariables, memoryReference, startOfVariables, presentationHint);\n        this.parent = parent;\n        this.name = name;\n        this.evaluateName = evaluateName;\n        this.variableMenuContext = variableMenuContext;\n        this.available = available;\n        this.value = value || '';\n        this.type = type;\n    }\n    async setVariable(value, stackFrame) {\n        if (!this.session) {\n            return;\n        }\n        try {\n            if (this.session.capabilities.supportsSetExpression && !this.session.capabilities.supportsSetVariable && this.evaluateName) {\n                return this.setExpression(value, stackFrame);\n            }\n            const response = await this.session.setVariable(this.parent.reference, this.name, value);\n            handleSetResponse(this, response);\n        }\n        catch (err) {\n            this.errorMessage = err.message;\n        }\n    }\n    async setExpression(value, stackFrame) {\n        if (!this.session || !this.evaluateName) {\n            return;\n        }\n        const response = await this.session.setExpression(stackFrame.frameId, this.evaluateName, value);\n        handleSetResponse(this, response);\n    }\n    toString() {\n        return this.name ? `${this.name}: ${this.value}` : this.value;\n    }\n    adoptLazyResponse(response) {\n        this.evaluateName = response.evaluateName;\n    }\n    toDebugProtocolObject() {\n        return {\n            name: this.name,\n            variablesReference: this.reference || 0,\n            memoryReference: this.memoryReference,\n            value: this.value,\n            evaluateName: this.evaluateName\n        };\n    }\n}\nclass Scope extends ExpressionContainer {\n    constructor(stackFrame, id, name, reference, expensive, namedVariables, indexedVariables, range) {\n        super(stackFrame.thread.session, stackFrame.thread.threadId, reference, `scope:${name}:${id}`, namedVariables, indexedVariables);\n        this.name = name;\n        this.expensive = expensive;\n        this.range = range;\n    }\n    toString() {\n        return this.name;\n    }\n    toDebugProtocolObject() {\n        return {\n            name: this.name,\n            variablesReference: this.reference || 0,\n            expensive: this.expensive\n        };\n    }\n}\nclass ErrorScope extends Scope {\n    constructor(stackFrame, index, message) {\n        super(stackFrame, index, message, 0, false);\n    }\n    toString() {\n        return this.name;\n    }\n}\nclass StackFrame {\n    constructor(thread, frameId, source, name, presentationHint, range, index, canRestart, instructionPointerReference) {\n        this.thread = thread;\n        this.frameId = frameId;\n        this.source = source;\n        this.name = name;\n        this.presentationHint = presentationHint;\n        this.range = range;\n        this.index = index;\n        this.canRestart = canRestart;\n        this.instructionPointerReference = instructionPointerReference;\n    }\n    getId() {\n        return `stackframe:${this.thread.getId()}:${this.index}:${this.source.name}`;\n    }\n    getScopes() {\n        if (!this.scopes) {\n            this.scopes = this.thread.session.scopes(this.frameId, this.thread.threadId).then(response => {\n                if (!response || !response.body || !response.body.scopes) {\n                    return [];\n                }\n                const usedIds = ( (new Set()));\n                return (\n                     (response.body.scopes.map(rs => {\n                        let id = 0;\n                        do {\n                            id = stringHash(`${rs.name}:${rs.line}:${rs.column}`, id);\n                        } while (( (usedIds.has(id))));\n                        usedIds.add(id);\n                        return (\n                             (new Scope(\n                                this,\n                                id,\n                                rs.name,\n                                rs.variablesReference,\n                                rs.expensive,\n                                rs.namedVariables,\n                                rs.indexedVariables,\n                                rs.line && rs.column && rs.endLine && rs.endColumn ? ( (new Range(rs.line, rs.column, rs.endLine, rs.endColumn))) : undefined\n                            ))\n                        );\n                    }))\n                );\n            }, err => [( (new ErrorScope(this, 0, err.message)))]);\n        }\n        return this.scopes;\n    }\n    async getMostSpecificScopes(range) {\n        const scopes = await this.getScopes();\n        const nonExpensiveScopes = scopes.filter(s => !s.expensive);\n        const haveRangeInfo = ( (nonExpensiveScopes.some(s => !!s.range)));\n        if (!haveRangeInfo) {\n            return nonExpensiveScopes;\n        }\n        const scopesContainingRange = nonExpensiveScopes.filter(scope => scope.range && Range.containsRange(scope.range, range))\n            .sort((first, second) => (first.range.endLineNumber - first.range.startLineNumber) - (second.range.endLineNumber - second.range.startLineNumber));\n        return scopesContainingRange.length ? scopesContainingRange : nonExpensiveScopes;\n    }\n    restart() {\n        return this.thread.session.restartFrame(this.frameId, this.thread.threadId);\n    }\n    forgetScopes() {\n        this.scopes = undefined;\n    }\n    toString() {\n        const lineNumberToString = typeof this.range.startLineNumber === 'number' ? `:${this.range.startLineNumber}` : '';\n        const sourceToString = `${this.source.inMemory ? this.source.name : this.source.uri.fsPath}${lineNumberToString}`;\n        return sourceToString === UNKNOWN_SOURCE_LABEL ? this.name : `${this.name} (${sourceToString})`;\n    }\n    async openInEditor(editorService, preserveFocus, sideBySide, pinned) {\n        const threadStopReason = this.thread.stoppedDetails?.reason;\n        if (this.instructionPointerReference &&\n            (threadStopReason === 'instruction breakpoint' ||\n                (threadStopReason === 'step' && this.thread.lastSteppingGranularity === 'instruction'))) {\n            return editorService.openEditor(DisassemblyViewInput.instance, { pinned: true });\n        }\n        if (this.source.available) {\n            return this.source.openInEditor(editorService, this.range, preserveFocus, sideBySide, pinned);\n        }\n        return undefined;\n    }\n    equals(other) {\n        return (this.name === other.name) && (other.thread === this.thread) && (this.frameId === other.frameId) && (other.source === this.source) && (Range.equalsRange(this.range, other.range));\n    }\n}\nclass Thread {\n    constructor(session, name, threadId) {\n        this.session = session;\n        this.name = name;\n        this.threadId = threadId;\n        this.callStackCancellationTokens = [];\n        this.reachedEndOfCallStack = false;\n        this.callStack = [];\n        this.staleCallStack = [];\n        this.stopped = false;\n    }\n    getId() {\n        return `thread:${this.session.getId()}:${this.threadId}`;\n    }\n    clearCallStack() {\n        if (this.callStack.length) {\n            this.staleCallStack = this.callStack;\n        }\n        this.callStack = [];\n        this.callStackCancellationTokens.forEach(c => c.dispose(true));\n        this.callStackCancellationTokens = [];\n    }\n    getCallStack() {\n        return this.callStack;\n    }\n    getStaleCallStack() {\n        return this.staleCallStack;\n    }\n    getTopStackFrame() {\n        const callStack = this.getCallStack();\n        const firstAvailableStackFrame = callStack.find(sf => !!(sf &&\n            ((this.stoppedDetails?.reason === 'instruction breakpoint' || (this.stoppedDetails?.reason === 'step' && this.lastSteppingGranularity === 'instruction')) && sf.instructionPointerReference) ||\n            (sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize')));\n        return firstAvailableStackFrame;\n    }\n    get stateLabel() {\n        if (this.stoppedDetails) {\n            return this.stoppedDetails.description ||\n                (this.stoppedDetails.reason ? ( (nls.localize(\n                { key: 'pausedOn', comment: ['indicates reason for program being paused'] },\n                \"Paused on {0}\",\n                this.stoppedDetails.reason\n            ))) : ( (nls.localize('paused', \"Paused\"))));\n        }\n        return (\n             (nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\"))\n        );\n    }\n    async fetchCallStack(levels = 20) {\n        if (this.stopped) {\n            const start = this.callStack.length;\n            const callStack = await this.getCallStackImpl(start, levels);\n            this.reachedEndOfCallStack = callStack.length < levels;\n            if (start < this.callStack.length) {\n                this.callStack.splice(start, this.callStack.length - start);\n            }\n            this.callStack = this.callStack.concat(callStack || []);\n            if (typeof this.stoppedDetails?.totalFrames === 'number' && this.stoppedDetails.totalFrames === this.callStack.length) {\n                this.reachedEndOfCallStack = true;\n            }\n        }\n    }\n    async getCallStackImpl(startFrame, levels) {\n        try {\n            const tokenSource = ( (new CancellationTokenSource()));\n            this.callStackCancellationTokens.push(tokenSource);\n            const response = await this.session.stackTrace(this.threadId, startFrame, levels, tokenSource.token);\n            if (!response || !response.body || tokenSource.token.isCancellationRequested) {\n                return [];\n            }\n            if (this.stoppedDetails) {\n                this.stoppedDetails.totalFrames = response.body.totalFrames;\n            }\n            return (\n                 (response.body.stackFrames.map((rsf, index) => {\n                    const source = this.session.getSource(rsf.source);\n                    return (\n                         (new StackFrame(\n                            this,\n                            rsf.id,\n                            source,\n                            rsf.name,\n                            rsf.presentationHint,\n                             (new Range(rsf.line, rsf.column, rsf.endLine || rsf.line, rsf.endColumn || rsf.column)),\n                            startFrame + index,\n                            typeof rsf.canRestart === 'boolean' ? rsf.canRestart : true,\n                            rsf.instructionPointerReference\n                        ))\n                    );\n                }))\n            );\n        }\n        catch (err) {\n            if (this.stoppedDetails) {\n                this.stoppedDetails.framesErrorMessage = err.message;\n            }\n            return [];\n        }\n    }\n    get exceptionInfo() {\n        if (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n            if (this.session.capabilities.supportsExceptionInfoRequest) {\n                return this.session.exceptionInfo(this.threadId);\n            }\n            return Promise.resolve({\n                description: this.stoppedDetails.text,\n                breakMode: null\n            });\n        }\n        return Promise.resolve(undefined);\n    }\n    next(granularity) {\n        return this.session.next(this.threadId, granularity);\n    }\n    stepIn(granularity) {\n        return this.session.stepIn(this.threadId, undefined, granularity);\n    }\n    stepOut(granularity) {\n        return this.session.stepOut(this.threadId, granularity);\n    }\n    stepBack(granularity) {\n        return this.session.stepBack(this.threadId, granularity);\n    }\n    continue() {\n        return this.session.continue(this.threadId);\n    }\n    pause() {\n        return this.session.pause(this.threadId);\n    }\n    terminate() {\n        return this.session.terminateThreads([this.threadId]);\n    }\n    reverseContinue() {\n        return this.session.reverseContinue(this.threadId);\n    }\n}\nconst getUriForDebugMemory = (sessionId, memoryReference, range, displayName = 'memory') => {\n    return (\n         (URI.from({\n            scheme: DEBUG_MEMORY_SCHEME,\n            authority: sessionId,\n            path: '/' + encodeURIComponent(memoryReference) + `/${encodeURIComponent(displayName)}.bin`,\n            query: range ? `?range=${range.fromOffset}:${range.toOffset}` : undefined,\n        }))\n    );\n};\nclass MemoryRegion extends Disposable {\n    constructor(memoryReference, session) {\n        super();\n        this.memoryReference = memoryReference;\n        this.session = session;\n        this.invalidateEmitter = this._register(( (new Emitter())));\n        this.onDidInvalidate = this.invalidateEmitter.event;\n        this.writable = !!this.session.capabilities.supportsWriteMemoryRequest;\n        this._register(session.onDidInvalidateMemory(e => {\n            if (e.body.memoryReference === memoryReference) {\n                this.invalidate(e.body.offset, e.body.count - e.body.offset);\n            }\n        }));\n    }\n    async read(fromOffset, toOffset) {\n        const length = toOffset - fromOffset;\n        const offset = fromOffset;\n        const result = await this.session.readMemory(this.memoryReference, offset, length);\n        if (result === undefined || !result.body?.data) {\n            return [{ type: 1 , offset, length }];\n        }\n        let data;\n        try {\n            data = decodeBase64(result.body.data);\n        }\n        catch {\n            return [{ type: 2 , offset, length, error: 'Invalid base64 data from debug adapter' }];\n        }\n        const unreadable = result.body.unreadableBytes || 0;\n        const dataLength = length - unreadable;\n        if (data.byteLength < dataLength) {\n            const pad = VSBuffer.alloc(dataLength - data.byteLength);\n            pad.buffer.fill(0);\n            data = VSBuffer.concat([data, pad], dataLength);\n        }\n        else if (data.byteLength > dataLength) {\n            data = data.slice(0, dataLength);\n        }\n        if (!unreadable) {\n            return [{ type: 0 , offset, length, data }];\n        }\n        return [\n            { type: 0 , offset, length: dataLength, data },\n            { type: 1 , offset: offset + dataLength, length: unreadable },\n        ];\n    }\n    async write(offset, data) {\n        const result = await this.session.writeMemory(this.memoryReference, offset, encodeBase64(data), true);\n        const written = result?.body?.bytesWritten ?? data.byteLength;\n        this.invalidate(offset, offset + written);\n        return written;\n    }\n    dispose() {\n        super.dispose();\n    }\n    invalidate(fromOffset, toOffset) {\n        this.invalidateEmitter.fire({ fromOffset, toOffset });\n    }\n}\nclass Enablement {\n    constructor(enabled, id) {\n        this.enabled = enabled;\n        this.id = id;\n    }\n    getId() {\n        return this.id;\n    }\n}\nfunction toBreakpointSessionData(data, capabilities) {\n    return mixin({\n        supportsConditionalBreakpoints: !!capabilities.supportsConditionalBreakpoints,\n        supportsHitConditionalBreakpoints: !!capabilities.supportsHitConditionalBreakpoints,\n        supportsLogPoints: !!capabilities.supportsLogPoints,\n        supportsFunctionBreakpoints: !!capabilities.supportsFunctionBreakpoints,\n        supportsDataBreakpoints: !!capabilities.supportsDataBreakpoints,\n        supportsInstructionBreakpoints: !!capabilities.supportsInstructionBreakpoints\n    }, data);\n}\nclass BaseBreakpoint extends Enablement {\n    constructor(enabled, hitCondition, condition, logMessage, id) {\n        super(enabled, id);\n        this.hitCondition = hitCondition;\n        this.condition = condition;\n        this.logMessage = logMessage;\n        this.sessionData = ( (new Map()));\n        if (enabled === undefined) {\n            this.enabled = true;\n        }\n    }\n    setSessionData(sessionId, data) {\n        if (!data) {\n            this.sessionData.delete(sessionId);\n        }\n        else {\n            data.sessionId = sessionId;\n            this.sessionData.set(sessionId, data);\n        }\n        const allData = Array.from(( (this.sessionData.values())));\n        const verifiedData = distinct(allData.filter(d => d.verified), d => `${d.line}:${d.column}`);\n        if (verifiedData.length) {\n            this.data = verifiedData.length === 1 ? verifiedData[0] : undefined;\n        }\n        else {\n            this.data = allData.length ? allData[0] : undefined;\n        }\n    }\n    get message() {\n        if (!this.data) {\n            return undefined;\n        }\n        return this.data.message;\n    }\n    get verified() {\n        return this.data ? this.data.verified : true;\n    }\n    get sessionsThatVerified() {\n        const sessionIds = [];\n        for (const [sessionId, data] of this.sessionData) {\n            if (data.verified) {\n                sessionIds.push(sessionId);\n            }\n        }\n        return sessionIds;\n    }\n    getIdFromAdapter(sessionId) {\n        const data = this.sessionData.get(sessionId);\n        return data ? data.id : undefined;\n    }\n    getDebugProtocolBreakpoint(sessionId) {\n        const data = this.sessionData.get(sessionId);\n        if (data) {\n            const bp = {\n                id: data.id,\n                verified: data.verified,\n                message: data.message,\n                source: data.source,\n                line: data.line,\n                column: data.column,\n                endLine: data.endLine,\n                endColumn: data.endColumn,\n                instructionReference: data.instructionReference,\n                offset: data.offset\n            };\n            return bp;\n        }\n        return undefined;\n    }\n    toJSON() {\n        const result = Object.create(null);\n        result.id = this.getId();\n        result.enabled = this.enabled;\n        result.condition = this.condition;\n        result.hitCondition = this.hitCondition;\n        result.logMessage = this.logMessage;\n        return result;\n    }\n}\nclass Breakpoint extends BaseBreakpoint {\n    constructor(_uri, _lineNumber, _column, enabled, condition, hitCondition, logMessage, _adapterData, textFileService, uriIdentityService, logService, id = generateUuid()) {\n        super(enabled, hitCondition, condition, logMessage, id);\n        this._uri = _uri;\n        this._lineNumber = _lineNumber;\n        this._column = _column;\n        this._adapterData = _adapterData;\n        this.textFileService = textFileService;\n        this.uriIdentityService = uriIdentityService;\n        this.logService = logService;\n    }\n    get originalUri() {\n        return this._uri;\n    }\n    get lineNumber() {\n        return this.verified && this.data && typeof this.data.line === 'number' ? this.data.line : this._lineNumber;\n    }\n    get verified() {\n        if (this.data) {\n            return this.data.verified && !this.textFileService.isDirty(this._uri);\n        }\n        return true;\n    }\n    get uri() {\n        return this.verified && this.data && this.data.source ? getUriFromSource(this.data.source, this.data.source.path, this.data.sessionId, this.uriIdentityService, this.logService) : this._uri;\n    }\n    get column() {\n        return this.verified && this.data && typeof this.data.column === 'number' ? this.data.column : this._column;\n    }\n    get message() {\n        if (this.textFileService.isDirty(this.uri)) {\n            return (\n                 (nls.localize(\n                    'breakpointDirtydHover',\n                    \"Unverified breakpoint. File is modified, please restart debug session.\"\n                ))\n            );\n        }\n        return super.message;\n    }\n    get adapterData() {\n        return this.data && this.data.source && this.data.source.adapterData ? this.data.source.adapterData : this._adapterData;\n    }\n    get endLineNumber() {\n        return this.verified && this.data ? this.data.endLine : undefined;\n    }\n    get endColumn() {\n        return this.verified && this.data ? this.data.endColumn : undefined;\n    }\n    get sessionAgnosticData() {\n        return {\n            lineNumber: this._lineNumber,\n            column: this._column\n        };\n    }\n    get supported() {\n        if (!this.data) {\n            return true;\n        }\n        if (this.logMessage && !this.data.supportsLogPoints) {\n            return false;\n        }\n        if (this.condition && !this.data.supportsConditionalBreakpoints) {\n            return false;\n        }\n        if (this.hitCondition && !this.data.supportsHitConditionalBreakpoints) {\n            return false;\n        }\n        return true;\n    }\n    setSessionData(sessionId, data) {\n        super.setSessionData(sessionId, data);\n        if (!this._adapterData) {\n            this._adapterData = this.adapterData;\n        }\n    }\n    toJSON() {\n        const result = super.toJSON();\n        result.uri = this._uri;\n        result.lineNumber = this._lineNumber;\n        result.column = this._column;\n        result.adapterData = this.adapterData;\n        return result;\n    }\n    toString() {\n        return `${resources.basenameOrAuthority(this.uri)} ${this.lineNumber}`;\n    }\n    update(data) {\n        if (!isUndefinedOrNull(data.lineNumber)) {\n            this._lineNumber = data.lineNumber;\n        }\n        if (!isUndefinedOrNull(data.column)) {\n            this._column = data.column;\n        }\n        if (!isUndefinedOrNull(data.condition)) {\n            this.condition = data.condition;\n        }\n        if (!isUndefinedOrNull(data.hitCondition)) {\n            this.hitCondition = data.hitCondition;\n        }\n        if (!isUndefinedOrNull(data.logMessage)) {\n            this.logMessage = data.logMessage;\n        }\n    }\n}\nclass FunctionBreakpoint extends BaseBreakpoint {\n    constructor(name, enabled, hitCondition, condition, logMessage, id = generateUuid()) {\n        super(enabled, hitCondition, condition, logMessage, id);\n        this.name = name;\n    }\n    toJSON() {\n        const result = super.toJSON();\n        result.name = this.name;\n        return result;\n    }\n    get supported() {\n        if (!this.data) {\n            return true;\n        }\n        return this.data.supportsFunctionBreakpoints;\n    }\n    toString() {\n        return this.name;\n    }\n}\nclass DataBreakpoint extends BaseBreakpoint {\n    constructor(description, dataId, canPersist, enabled, hitCondition, condition, logMessage, accessTypes, accessType, id = generateUuid()) {\n        super(enabled, hitCondition, condition, logMessage, id);\n        this.description = description;\n        this.dataId = dataId;\n        this.canPersist = canPersist;\n        this.accessTypes = accessTypes;\n        this.accessType = accessType;\n    }\n    toJSON() {\n        const result = super.toJSON();\n        result.description = this.description;\n        result.dataId = this.dataId;\n        result.accessTypes = this.accessTypes;\n        result.accessType = this.accessType;\n        return result;\n    }\n    get supported() {\n        if (!this.data) {\n            return true;\n        }\n        return this.data.supportsDataBreakpoints;\n    }\n    toString() {\n        return this.description;\n    }\n}\nclass ExceptionBreakpoint extends BaseBreakpoint {\n    constructor(filter, label, enabled, supportsCondition, condition, description, conditionDescription, fallback = false) {\n        super(enabled, undefined, condition, undefined, generateUuid());\n        this.filter = filter;\n        this.label = label;\n        this.supportsCondition = supportsCondition;\n        this.description = description;\n        this.conditionDescription = conditionDescription;\n        this.fallback = fallback;\n        this.supportedSessions = ( (new Set()));\n    }\n    toJSON() {\n        const result = Object.create(null);\n        result.filter = this.filter;\n        result.label = this.label;\n        result.enabled = this.enabled;\n        result.supportsCondition = this.supportsCondition;\n        result.conditionDescription = this.conditionDescription;\n        result.condition = this.condition;\n        result.fallback = this.fallback;\n        result.description = this.description;\n        return result;\n    }\n    setSupportedSession(sessionId, supported) {\n        if (supported) {\n            this.supportedSessions.add(sessionId);\n        }\n        else {\n            this.supportedSessions.delete(sessionId);\n        }\n    }\n    setFallback(isFallback) {\n        this.fallback = isFallback;\n    }\n    get supported() {\n        return true;\n    }\n    isSupportedSession(sessionId) {\n        return sessionId ? ( (this.supportedSessions.has(sessionId))) : this.fallback;\n    }\n    matches(filter) {\n        return this.filter === filter.filter && this.label === filter.label && this.supportsCondition === !!filter.supportsCondition && this.conditionDescription === filter.conditionDescription && this.description === filter.description;\n    }\n    toString() {\n        return this.label;\n    }\n}\nclass InstructionBreakpoint extends BaseBreakpoint {\n    constructor(instructionReference, offset, canPersist, enabled, hitCondition, condition, logMessage, id = generateUuid()) {\n        super(enabled, hitCondition, condition, logMessage, id);\n        this.instructionReference = instructionReference;\n        this.offset = offset;\n        this.canPersist = canPersist;\n    }\n    toJSON() {\n        const result = super.toJSON();\n        result.instructionReference = this.instructionReference;\n        result.offset = this.offset;\n        return result;\n    }\n    get supported() {\n        if (!this.data) {\n            return true;\n        }\n        return this.data.supportsInstructionBreakpoints;\n    }\n    toString() {\n        return this.instructionReference;\n    }\n}\nclass ThreadAndSessionIds {\n    constructor(sessionId, threadId) {\n        this.sessionId = sessionId;\n        this.threadId = threadId;\n    }\n    getId() {\n        return `${this.sessionId}:${this.threadId}`;\n    }\n}\nlet DebugModel = class DebugModel {\n    constructor(debugStorage, textFileService, uriIdentityService, logService) {\n        this.textFileService = textFileService;\n        this.uriIdentityService = uriIdentityService;\n        this.logService = logService;\n        this.schedulers = ( (new Map()));\n        this.breakpointsActivated = true;\n        this._onDidChangeBreakpoints = ( (new Emitter()));\n        this._onDidChangeCallStack = ( (new Emitter()));\n        this._onDidChangeWatchExpressions = ( (new Emitter()));\n        this.breakpoints = debugStorage.loadBreakpoints();\n        this.functionBreakpoints = debugStorage.loadFunctionBreakpoints();\n        this.exceptionBreakpoints = debugStorage.loadExceptionBreakpoints();\n        this.dataBreakpoints = debugStorage.loadDataBreakpoints();\n        this.watchExpressions = debugStorage.loadWatchExpressions();\n        this.instructionBreakpoints = [];\n        this.sessions = [];\n    }\n    getId() {\n        return 'root';\n    }\n    getSession(sessionId, includeInactive = false) {\n        if (sessionId) {\n            return this.getSessions(includeInactive).find(s => s.getId() === sessionId);\n        }\n        return undefined;\n    }\n    getSessions(includeInactive = false) {\n        return this.sessions.filter(s => includeInactive || s.state !== 0 );\n    }\n    addSession(session) {\n        this.sessions = this.sessions.filter(s => {\n            if (s.getId() === session.getId()) {\n                return false;\n            }\n            if (s.state === 0  && s.configuration.name === session.configuration.name) {\n                return false;\n            }\n            return true;\n        });\n        let i = 1;\n        while (( (this.sessions.some(s => s.getLabel() === session.getLabel())))) {\n            session.setName(`${session.configuration.name} ${++i}`);\n        }\n        let index = -1;\n        if (session.parentSession) {\n            index = lastIndex(this.sessions, s => s.parentSession === session.parentSession || s === session.parentSession);\n        }\n        if (index >= 0) {\n            this.sessions.splice(index + 1, 0, session);\n        }\n        else {\n            this.sessions.push(session);\n        }\n        this._onDidChangeCallStack.fire(undefined);\n    }\n    get onDidChangeBreakpoints() {\n        return this._onDidChangeBreakpoints.event;\n    }\n    get onDidChangeCallStack() {\n        return this._onDidChangeCallStack.event;\n    }\n    get onDidChangeWatchExpressions() {\n        return this._onDidChangeWatchExpressions.event;\n    }\n    rawUpdate(data) {\n        const session = this.sessions.find(p => p.getId() === data.sessionId);\n        if (session) {\n            session.rawUpdate(data);\n            this._onDidChangeCallStack.fire(undefined);\n        }\n    }\n    clearThreads(id, removeThreads, reference = undefined) {\n        const session = this.sessions.find(p => p.getId() === id);\n        this.schedulers.forEach(entry => {\n            entry.scheduler.dispose();\n            entry.completeDeferred.complete();\n        });\n        this.schedulers.clear();\n        if (session) {\n            session.clearThreads(removeThreads, reference);\n            this._onDidChangeCallStack.fire(undefined);\n        }\n    }\n    async fetchCallstack(thread, levels) {\n        if (thread.reachedEndOfCallStack) {\n            return;\n        }\n        const totalFrames = thread.stoppedDetails?.totalFrames;\n        const remainingFrames = (typeof totalFrames === 'number') ? (totalFrames - thread.getCallStack().length) : undefined;\n        if (!levels || (remainingFrames && levels > remainingFrames)) {\n            levels = remainingFrames;\n        }\n        if (levels && levels > 0) {\n            await thread.fetchCallStack(levels);\n            this._onDidChangeCallStack.fire();\n        }\n        return;\n    }\n    refreshTopOfCallstack(thread) {\n        if (thread.session.capabilities.supportsDelayedStackTraceLoading) {\n            let topCallStack = Promise.resolve();\n            const wholeCallStack = ( (new Promise((c, e) => {\n                topCallStack = thread.fetchCallStack(1).then(() => {\n                    if (!( (this.schedulers.has(thread.getId())))) {\n                        const deferred = ( (new DeferredPromise()));\n                        this.schedulers.set(thread.getId(), {\n                            completeDeferred: deferred,\n                            scheduler: ( (new RunOnceScheduler(() => {\n                                thread.fetchCallStack(19).then(() => {\n                                    const stale = thread.getStaleCallStack();\n                                    const current = thread.getCallStack();\n                                    let bottomOfCallStackChanged = stale.length !== current.length;\n                                    for (let i = 1; i < stale.length && !bottomOfCallStackChanged; i++) {\n                                        bottomOfCallStackChanged = !stale[i].equals(current[i]);\n                                    }\n                                    if (bottomOfCallStackChanged) {\n                                        this._onDidChangeCallStack.fire();\n                                    }\n                                }).finally(() => {\n                                    deferred.complete();\n                                    this.schedulers.delete(thread.getId());\n                                });\n                            }, 420)))\n                        });\n                    }\n                    const entry = this.schedulers.get(thread.getId());\n                    entry.scheduler.schedule();\n                    entry.completeDeferred.p.then(c, e);\n                    this._onDidChangeCallStack.fire();\n                });\n            })));\n            return { topCallStack, wholeCallStack };\n        }\n        const wholeCallStack = thread.fetchCallStack();\n        return { wholeCallStack, topCallStack: wholeCallStack };\n    }\n    getBreakpoints(filter) {\n        if (filter) {\n            const uriStr = filter.uri?.toString();\n            const originalUriStr = filter.originalUri?.toString();\n            return this.breakpoints.filter(bp => {\n                if (uriStr && ( (bp.uri.toString())) !== uriStr) {\n                    return false;\n                }\n                if (originalUriStr && ( (bp.originalUri.toString())) !== originalUriStr) {\n                    return false;\n                }\n                if (filter.lineNumber && bp.lineNumber !== filter.lineNumber) {\n                    return false;\n                }\n                if (filter.column && bp.column !== filter.column) {\n                    return false;\n                }\n                if (filter.enabledOnly && (!this.breakpointsActivated || !bp.enabled)) {\n                    return false;\n                }\n                return true;\n            });\n        }\n        return this.breakpoints;\n    }\n    getFunctionBreakpoints() {\n        return this.functionBreakpoints;\n    }\n    getDataBreakpoints() {\n        return this.dataBreakpoints;\n    }\n    getExceptionBreakpoints() {\n        return this.exceptionBreakpoints;\n    }\n    getExceptionBreakpointsForSession(sessionId) {\n        return this.exceptionBreakpoints.filter(ebp => ebp.isSupportedSession(sessionId));\n    }\n    getInstructionBreakpoints() {\n        return this.instructionBreakpoints;\n    }\n    setExceptionBreakpointsForSession(sessionId, data) {\n        if (data) {\n            let didChangeBreakpoints = false;\n            data.forEach(d => {\n                let ebp = this.exceptionBreakpoints.filter((exbp) => exbp.matches(d)).pop();\n                if (!ebp) {\n                    didChangeBreakpoints = true;\n                    ebp = ( (new ExceptionBreakpoint(\n                        d.filter,\n                        d.label,\n                        !!d.default,\n                        !!d.supportsCondition,\n                        undefined ,\n                        d.description,\n                        d.conditionDescription\n                    )));\n                    this.exceptionBreakpoints.push(ebp);\n                }\n                ebp.setSupportedSession(sessionId, true);\n            });\n            if (didChangeBreakpoints) {\n                this._onDidChangeBreakpoints.fire(undefined);\n            }\n        }\n    }\n    removeExceptionBreakpointsForSession(sessionId) {\n        this.exceptionBreakpoints.forEach(ebp => ebp.setSupportedSession(sessionId, false));\n    }\n    setExceptionBreakpointFallbackSession(sessionId) {\n        this.exceptionBreakpoints.forEach(ebp => ebp.setFallback(ebp.isSupportedSession(sessionId)));\n    }\n    setExceptionBreakpointCondition(exceptionBreakpoint, condition) {\n        exceptionBreakpoint.condition = condition;\n        this._onDidChangeBreakpoints.fire(undefined);\n    }\n    areBreakpointsActivated() {\n        return this.breakpointsActivated;\n    }\n    setBreakpointsActivated(activated) {\n        this.breakpointsActivated = activated;\n        this._onDidChangeBreakpoints.fire(undefined);\n    }\n    addBreakpoints(uri, rawData, fireEvent = true) {\n        const newBreakpoints = ( (rawData.map(rawBp => ( (new Breakpoint(\n            uri,\n            rawBp.lineNumber,\n            rawBp.column,\n            rawBp.enabled === false ? false : true,\n            rawBp.condition,\n            rawBp.hitCondition,\n            rawBp.logMessage,\n            undefined,\n            this.textFileService,\n            this.uriIdentityService,\n            this.logService,\n            rawBp.id\n        ))))));\n        this.breakpoints = this.breakpoints.concat(newBreakpoints);\n        this.breakpointsActivated = true;\n        this.sortAndDeDup();\n        if (fireEvent) {\n            this._onDidChangeBreakpoints.fire({ added: newBreakpoints, sessionOnly: false });\n        }\n        return newBreakpoints;\n    }\n    removeBreakpoints(toRemove) {\n        this.breakpoints = this.breakpoints.filter(bp => !( (toRemove.some(toRemove => toRemove.getId() === bp.getId()))));\n        this._onDidChangeBreakpoints.fire({ removed: toRemove, sessionOnly: false });\n    }\n    updateBreakpoints(data) {\n        const updated = [];\n        this.breakpoints.forEach(bp => {\n            const bpData = data.get(bp.getId());\n            if (bpData) {\n                bp.update(bpData);\n                updated.push(bp);\n            }\n        });\n        this.sortAndDeDup();\n        this._onDidChangeBreakpoints.fire({ changed: updated, sessionOnly: false });\n    }\n    setBreakpointSessionData(sessionId, capabilites, data) {\n        this.breakpoints.forEach(bp => {\n            if (!data) {\n                bp.setSessionData(sessionId, undefined);\n            }\n            else {\n                const bpData = data.get(bp.getId());\n                if (bpData) {\n                    bp.setSessionData(sessionId, toBreakpointSessionData(bpData, capabilites));\n                }\n            }\n        });\n        this.functionBreakpoints.forEach(fbp => {\n            if (!data) {\n                fbp.setSessionData(sessionId, undefined);\n            }\n            else {\n                const fbpData = data.get(fbp.getId());\n                if (fbpData) {\n                    fbp.setSessionData(sessionId, toBreakpointSessionData(fbpData, capabilites));\n                }\n            }\n        });\n        this.dataBreakpoints.forEach(dbp => {\n            if (!data) {\n                dbp.setSessionData(sessionId, undefined);\n            }\n            else {\n                const dbpData = data.get(dbp.getId());\n                if (dbpData) {\n                    dbp.setSessionData(sessionId, toBreakpointSessionData(dbpData, capabilites));\n                }\n            }\n        });\n        this.exceptionBreakpoints.forEach(ebp => {\n            if (!data) {\n                ebp.setSessionData(sessionId, undefined);\n            }\n            else {\n                const ebpData = data.get(ebp.getId());\n                if (ebpData) {\n                    ebp.setSessionData(sessionId, toBreakpointSessionData(ebpData, capabilites));\n                }\n            }\n        });\n        this.instructionBreakpoints.forEach(ibp => {\n            if (!data) {\n                ibp.setSessionData(sessionId, undefined);\n            }\n            else {\n                const ibpData = data.get(ibp.getId());\n                if (ibpData) {\n                    ibp.setSessionData(sessionId, toBreakpointSessionData(ibpData, capabilites));\n                }\n            }\n        });\n        this._onDidChangeBreakpoints.fire({\n            sessionOnly: true\n        });\n    }\n    getDebugProtocolBreakpoint(breakpointId, sessionId) {\n        const bp = this.breakpoints.find(bp => bp.getId() === breakpointId);\n        if (bp) {\n            return bp.getDebugProtocolBreakpoint(sessionId);\n        }\n        return undefined;\n    }\n    sortAndDeDup() {\n        this.breakpoints = this.breakpoints.sort((first, second) => {\n            if (( (first.uri.toString())) !== ( (second.uri.toString()))) {\n                return resources.basenameOrAuthority(first.uri).localeCompare(resources.basenameOrAuthority(second.uri));\n            }\n            if (first.lineNumber === second.lineNumber) {\n                if (first.column && second.column) {\n                    return first.column - second.column;\n                }\n                return 1;\n            }\n            return first.lineNumber - second.lineNumber;\n        });\n        this.breakpoints = distinct(this.breakpoints, bp => `${( ( bp.uri.toString()))}:${bp.lineNumber}:${bp.column}`);\n    }\n    setEnablement(element, enable) {\n        if (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof ExceptionBreakpoint || element instanceof DataBreakpoint || element instanceof InstructionBreakpoint) {\n            const changed = [];\n            if (element.enabled !== enable && (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof DataBreakpoint || element instanceof InstructionBreakpoint)) {\n                changed.push(element);\n            }\n            element.enabled = enable;\n            if (enable) {\n                this.breakpointsActivated = true;\n            }\n            this._onDidChangeBreakpoints.fire({ changed: changed, sessionOnly: false });\n        }\n    }\n    enableOrDisableAllBreakpoints(enable) {\n        const changed = [];\n        this.breakpoints.forEach(bp => {\n            if (bp.enabled !== enable) {\n                changed.push(bp);\n            }\n            bp.enabled = enable;\n        });\n        this.functionBreakpoints.forEach(fbp => {\n            if (fbp.enabled !== enable) {\n                changed.push(fbp);\n            }\n            fbp.enabled = enable;\n        });\n        this.dataBreakpoints.forEach(dbp => {\n            if (dbp.enabled !== enable) {\n                changed.push(dbp);\n            }\n            dbp.enabled = enable;\n        });\n        this.instructionBreakpoints.forEach(ibp => {\n            if (ibp.enabled !== enable) {\n                changed.push(ibp);\n            }\n            ibp.enabled = enable;\n        });\n        if (enable) {\n            this.breakpointsActivated = true;\n        }\n        this._onDidChangeBreakpoints.fire({ changed: changed, sessionOnly: false });\n    }\n    addFunctionBreakpoint(functionName, id) {\n        const newFunctionBreakpoint = ( (new FunctionBreakpoint(functionName, true, undefined, undefined, undefined, id)));\n        this.functionBreakpoints.push(newFunctionBreakpoint);\n        this._onDidChangeBreakpoints.fire({ added: [newFunctionBreakpoint], sessionOnly: false });\n        return newFunctionBreakpoint;\n    }\n    updateFunctionBreakpoint(id, update) {\n        const functionBreakpoint = this.functionBreakpoints.find(fbp => fbp.getId() === id);\n        if (functionBreakpoint) {\n            if (typeof update.name === 'string') {\n                functionBreakpoint.name = update.name;\n            }\n            if (typeof update.condition === 'string') {\n                functionBreakpoint.condition = update.condition;\n            }\n            if (typeof update.hitCondition === 'string') {\n                functionBreakpoint.hitCondition = update.hitCondition;\n            }\n            this._onDidChangeBreakpoints.fire({ changed: [functionBreakpoint], sessionOnly: false });\n        }\n    }\n    removeFunctionBreakpoints(id) {\n        let removed;\n        if (id) {\n            removed = this.functionBreakpoints.filter(fbp => fbp.getId() === id);\n            this.functionBreakpoints = this.functionBreakpoints.filter(fbp => fbp.getId() !== id);\n        }\n        else {\n            removed = this.functionBreakpoints;\n            this.functionBreakpoints = [];\n        }\n        this._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n    }\n    addDataBreakpoint(label, dataId, canPersist, accessTypes, accessType) {\n        const newDataBreakpoint = ( (new DataBreakpoint(\n            label,\n            dataId,\n            canPersist,\n            true,\n            undefined,\n            undefined,\n            undefined,\n            accessTypes,\n            accessType\n        )));\n        this.dataBreakpoints.push(newDataBreakpoint);\n        this._onDidChangeBreakpoints.fire({ added: [newDataBreakpoint], sessionOnly: false });\n    }\n    removeDataBreakpoints(id) {\n        let removed;\n        if (id) {\n            removed = this.dataBreakpoints.filter(fbp => fbp.getId() === id);\n            this.dataBreakpoints = this.dataBreakpoints.filter(fbp => fbp.getId() !== id);\n        }\n        else {\n            removed = this.dataBreakpoints;\n            this.dataBreakpoints = [];\n        }\n        this._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n    }\n    addInstructionBreakpoint(address, offset, condition, hitCondition) {\n        const newInstructionBreakpoint = ( (new InstructionBreakpoint(address, offset, false, true, hitCondition, condition, undefined)));\n        this.instructionBreakpoints.push(newInstructionBreakpoint);\n        this._onDidChangeBreakpoints.fire({ added: [newInstructionBreakpoint], sessionOnly: true });\n    }\n    removeInstructionBreakpoints(address) {\n        let removed;\n        if (address) {\n            removed = this.instructionBreakpoints.filter(fbp => fbp.instructionReference === address);\n            this.instructionBreakpoints = this.instructionBreakpoints.filter(fbp => fbp.instructionReference !== address);\n        }\n        else {\n            removed = this.instructionBreakpoints;\n            this.instructionBreakpoints = [];\n        }\n        this._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n    }\n    getWatchExpressions() {\n        return this.watchExpressions;\n    }\n    addWatchExpression(name) {\n        const we = ( (new Expression(name || '')));\n        this.watchExpressions.push(we);\n        this._onDidChangeWatchExpressions.fire(we);\n        return we;\n    }\n    renameWatchExpression(id, newName) {\n        const filtered = this.watchExpressions.filter(we => we.getId() === id);\n        if (filtered.length === 1) {\n            filtered[0].name = newName;\n            this._onDidChangeWatchExpressions.fire(filtered[0]);\n        }\n    }\n    removeWatchExpressions(id = null) {\n        this.watchExpressions = id ? this.watchExpressions.filter(we => we.getId() !== id) : [];\n        this._onDidChangeWatchExpressions.fire(undefined);\n    }\n    moveWatchExpression(id, position) {\n        const we = this.watchExpressions.find(we => we.getId() === id);\n        if (we) {\n            this.watchExpressions = this.watchExpressions.filter(we => we.getId() !== id);\n            this.watchExpressions = this.watchExpressions.slice(0, position).concat(we, this.watchExpressions.slice(position));\n            this._onDidChangeWatchExpressions.fire(undefined);\n        }\n    }\n    sourceIsNotAvailable(uri) {\n        this.sessions.forEach(s => {\n            const source = s.getSourceForUri(uri);\n            if (source) {\n                source.available = false;\n            }\n        });\n        this._onDidChangeCallStack.fire(undefined);\n    }\n};\nDebugModel = ( (__decorate([\n    ( (__param(1, ITextFileService))),\n    ( (__param(2, IUriIdentityService))),\n    ( (__param(3, ILogService)))\n], DebugModel)));\nexport { BaseBreakpoint, Breakpoint, DataBreakpoint, DebugModel, Enablement, ErrorScope, ExceptionBreakpoint, Expression, ExpressionContainer, FunctionBreakpoint, InstructionBreakpoint, MemoryRegion, Scope, StackFrame, Thread, ThreadAndSessionIds, Variable, getUriForDebugMemory };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { normalize, isAbsolute } from 'monaco-editor/esm/vs/base/common/path.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { DEBUG_SCHEME } from './debug.js';\nimport { SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isUri } from './debugUtils.js';\nconst UNKNOWN_SOURCE_LABEL = ( nls.localize('unknownSource', \"Unknown Source\"));\nclass Source {\n    constructor(raw_, sessionId, uriIdentityService, logService) {\n        let path;\n        if (raw_) {\n            this.raw = raw_;\n            path = this.raw.path || this.raw.name || '';\n            this.available = true;\n        }\n        else {\n            this.raw = { name: UNKNOWN_SOURCE_LABEL };\n            this.available = false;\n            path = `${DEBUG_SCHEME}:${UNKNOWN_SOURCE_LABEL}`;\n        }\n        this.uri = getUriFromSource(this.raw, path, sessionId, uriIdentityService, logService);\n    }\n    get name() {\n        return this.raw.name || resources.basenameOrAuthority(this.uri);\n    }\n    get origin() {\n        return this.raw.origin;\n    }\n    get presentationHint() {\n        return this.raw.presentationHint;\n    }\n    get reference() {\n        return this.raw.sourceReference;\n    }\n    get inMemory() {\n        return this.uri.scheme === DEBUG_SCHEME;\n    }\n    openInEditor(editorService, selection, preserveFocus, sideBySide, pinned) {\n        return !this.available ? Promise.resolve(undefined) : editorService.openEditor({\n            resource: this.uri,\n            description: this.origin,\n            options: {\n                preserveFocus,\n                selection,\n                revealIfOpened: true,\n                selectionRevealType: 1 ,\n                pinned\n            }\n        }, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n    }\n    static getEncodedDebugData(modelUri) {\n        let path;\n        let sourceReference;\n        let sessionId;\n        switch (modelUri.scheme) {\n            case Schemas.file:\n                path = normalize(modelUri.fsPath);\n                break;\n            case DEBUG_SCHEME:\n                path = modelUri.path;\n                if (modelUri.query) {\n                    const keyvalues = modelUri.query.split('&');\n                    for (const keyvalue of keyvalues) {\n                        const pair = keyvalue.split('=');\n                        if (pair.length === 2) {\n                            switch (pair[0]) {\n                                case 'session':\n                                    sessionId = pair[1];\n                                    break;\n                                case 'ref':\n                                    sourceReference = parseInt(pair[1]);\n                                    break;\n                            }\n                        }\n                    }\n                }\n                break;\n            default:\n                path = ( modelUri.toString());\n                break;\n        }\n        return {\n            name: resources.basenameOrAuthority(modelUri),\n            path,\n            sourceReference,\n            sessionId\n        };\n    }\n}\nfunction getUriFromSource(raw, path, sessionId, uriIdentityService, logService) {\n    const _getUriFromSource = (path) => {\n        if (typeof raw.sourceReference === 'number' && raw.sourceReference > 0) {\n            return ( URI.from({\n                scheme: DEBUG_SCHEME,\n                path,\n                query: `session=${sessionId}&ref=${raw.sourceReference}`\n            }));\n        }\n        if (path && isUri(path)) {\n            return uriIdentityService.asCanonicalUri(( URI.parse(path)));\n        }\n        if (path && isAbsolute(path)) {\n            return uriIdentityService.asCanonicalUri(URI.file(path));\n        }\n        return uriIdentityService.asCanonicalUri(( URI.from({\n            scheme: DEBUG_SCHEME,\n            path,\n            query: `session=${sessionId}`\n        })));\n    };\n    try {\n        return _getUriFromSource(path);\n    }\n    catch (err) {\n        logService.error('Invalid path from debug adapter: ' + path);\n        return _getUriFromSource('/invalidDebugSource');\n    }\n}\nexport { Source, UNKNOWN_SOURCE_LABEL, getUriFromSource };\n","import { EditorInput } from '../../../common/editor/editorInput.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nclass DisassemblyViewInput extends EditorInput {\n    constructor() {\n        super(...arguments);\n        this.resource = undefined;\n    }\n    static { this.ID = 'debug.disassemblyView.input'; }\n    get typeId() {\n        return DisassemblyViewInput.ID;\n    }\n    static get instance() {\n        if (!DisassemblyViewInput._instance || DisassemblyViewInput._instance.isDisposed()) {\n            DisassemblyViewInput._instance = ( new DisassemblyViewInput());\n        }\n        return DisassemblyViewInput._instance;\n    }\n    getName() {\n        return ( localize('disassemblyInputName', \"Disassembly\"));\n    }\n    matches(other) {\n        return other instanceof DisassemblyViewInput;\n    }\n}\nexport { DisassemblyViewInput };\n"],"names":["$","createCheckbox","disposables","checkbox","type","tabIndex","push","ignoreTarget","getExpandedBodySize","model","sessionId","countLimit","length","getBreakpoints","getExceptionBreakpointsForSession","getFunctionBreakpoints","getDataBreakpoints","getInstructionBreakpoints","Math","min","BreakpointsView","constructor","options","contextMenuService","debugService","keybindingService","instantiationService","themeService","editorService","contextViewService","configurationService","viewDescriptorService","contextKeyService","openerService","telemetryService","labelService","menuService","hoverService","languageService","super","this","needsRefresh","needsStateChange","ignoreLayout","autoFocusedIndex","menu","createMenu","DebugBreakpointsContext","_register","breakpointItemType","bindTo","breakpointSupportsCondition","breakpointInputFocused","getModel","onDidChangeBreakpoints","onBreakpointsChange","getViewModel","onDidFocusSession","onDidChangeState","onStateChange","hintDelayer","updateBreakpointsHint","renderBody","container","element","classList","add","delegate","BreakpointsDelegate","list","createInstance","BreakpointsRenderer","ExceptionBreakpointsRenderer","ExceptionBreakpointInputRenderer","FunctionBreakpointsRenderer","DataBreakpointsRenderer","FunctionBreakpointInputRenderer","InstructionBreakpointsRenderer","identityProvider","getId","multipleSelectionSupport","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","e","accessibilityProvider","BreakpointsAccessibilityProvider","overrideStyles","listBackground","getBackgroundColor","onContextMenu","onListContextMenu","onMouseMiddleClick","async","removeBreakpoints","removeFunctionBreakpoints","removeDataBreakpoints","removeInstructionBreakpoints","instructionReference","onDidOpen","browserEvent","MouseEvent","button","openBreakpointSource","sideBySide","editorOptions","preserveFocus","pinned","openEditor","instance","goToAddress","detail","inputBoxData","breakpoint","renderInputBox","splice","elements","onDidChangeBodyVisibility","visible","containerModel","getViewContainerModel","getViewContainerByViewId","id","onDidChangeAllViewDescriptors","updateSize","renderHeaderTitle","title","iconLabelContainer","hintContainer","supportIcons","hoverDelegate","showHover","focus","content","target","delay","getValue","domFocus","data","_inputBoxData","undefined","layoutBody","height","width","layout","set","session","focusedSession","conditionSupported","supportsCondition","capabilities","supportsConditionalBreakpoints","secondary","arg","shouldForwardArgs","primary","showContextMenu","getAnchor","anchor","getActions","getActionsContext","minimumBodySize","orientation","maximumBodySize","visibleViewDescriptors","Number","POSITIVE_INFINITY","delayed","currentType","configuration","dbg","getAdapterManager","getDebugger","message","strings","UnverifiedBreakpoints","debuggerHasUnverifiedBps","filter","bp","verified","enabled","langId","guessLanguageIdByFilepathOrFirstLine","uri","interestedInLanguage","areBreakpointsActivated","mdown","isTrusted","appendMarkdown","setLabel","markdown","markdownNotSupportedFallback","schedule","isBodyVisible","lastFocusIndex","getFocus","needsRefocus","includes","focusNth","thread","focusedThread","found","stoppedDetails","hitBreakpointIds","index","findIndex","getIdFromAdapter","indexOf","setFocus","setSelection","selection","getSelection","concat","view","getHeight","_element","getTemplateId","ID","inputBoxBreakpoint","name","breakpointIdToActionBarDomeNode","Map","templateId","renderTemplate","Object","create","toDispose","icon","enableOrDisableBreakpoints","context","filePath","actionBar","lineNumberContainer","lineNumber","renderElement","toggle","textContent","toString","column","getUriLabel","relative","checked","getBreakpointMessageAndIcon","state","className","asClassName","clear","label","domNode","disposeTemplate","templateData","condition","exceptionBreakpoint","description","functionBreakpoint","_index","hitCondition","supportsFunctionBreakpoints","accessType","dataBreakpoint","supportsDataBreakpoints","address","template","inputBoxContainer","inputBox","inputBoxStyles","wrapUp","success","updating","updateFunctionBreakpoint","value","inputElement","isEscape","equals","isEnter","preventDefault","stopPropagation","disabled","placeholder","ariaLabel","setAriaLabel","setPlaceHolder","setTimeout","select","newCondition","setExceptionBreakpointCondition","placeHolder","conditionDescription","getWidgetAriaLabel","getRole","isChecked","getAriaLabel","scheme","Promise","resolve","endLineNumber","startLineNumber","startColumn","endColumn","resource","revealIfOpened","selectionRevealType","breakpointsActivated","breakpoint$1","debugActive","breakpointIcon","logMessage","appendMessage","text","unverified","showAdapterUnverifiedMessage","supported","regular","messages","join","original","mnemonicTitle","key","comment","f1","ViewTitle","group","order","when","MenubarNewBreakpointMenu","run","accessor","get","addFunctionBreakpoint","setBreakpointsActivated","removeClose","notEqualsTo","and","MenubarDebugMenu","precondition","viewId","edit","runInView","editor","codeEditor","getControl","getContribution","showBreakpointWidget","actions","onHide","isEqualTo","_accessor","_getPicks","sessions","modelService","loadedScriptPicks","picks","all","map","items","getLoadedSources","forEach","pick","source","getUriBasenameLabel","desc","labelHighlights","descHighlights","highlights","iconClasses","getIconClasses","accept","available","openInEditor","_createPick","_getPicksFromSession","row","elem","_getPicksAndActiveItem","selectAndStartID","viewsService","commandService","debugConsolePicks","headerSessions","currSession","getSessions","activeItems","compact","parentSession","isHeader","pickInfo","parentName","nls","_getSessionInfo","focusStackFrame","explicit","isViewVisible","openView","createDebugSessionLabel","executeCommand","ADD_CONFIGURATION_ID","TOGGLE_INLINE_BREAKPOINT_ID","COPY_STACK_TRACE_ID","REVERSE_CONTINUE_ID","STEP_BACK_ID","RESTART_SESSION_ID","TERMINATE_THREAD_ID","STEP_OVER_ID","STEP_INTO_ID","STEP_INTO_TARGET_ID","STEP_OUT_ID","PAUSE_ID","DISCONNECT_ID","DISCONNECT_AND_SUSPEND_ID","STOP_ID","RESTART_FRAME_ID","CONTINUE_ID","FOCUS_REPL_ID","JUMP_TO_CURSOR_ID","FOCUS_SESSION_ID","SELECT_AND_START_ID","SELECT_DEBUG_CONSOLE_ID","SELECT_DEBUG_SESSION_ID","DEBUG_CONFIGURE_COMMAND_ID","DEBUG_START_COMMAND_ID","EDIT_EXPRESSION_COMMAND_ID","SET_EXPRESSION_COMMAND_ID","REMOVE_EXPRESSION_COMMAND_ID","NEXT_DEBUG_CONSOLE_ID","PREV_DEBUG_CONSOLE_ID","SHOW_LOADED_SCRIPTS_ID","CALLSTACK_TOP_ID","CALLSTACK_BOTTOM_ID","CALLSTACK_UP_ID","CALLSTACK_DOWN_ID","DEBUG_COMMAND_CATEGORY","RESTART_LABEL","STEP_OVER_LABEL","STEP_INTO_LABEL","STEP_INTO_TARGET_LABEL","STEP_OUT_LABEL","PAUSE_LABEL","DISCONNECT_LABEL","DISCONNECT_AND_SUSPEND_LABEL","STOP_LABEL","CONTINUE_LABEL","FOCUS_SESSION_LABEL","SELECT_AND_START_LABEL","DEBUG_CONFIGURE_LABEL","NEXT_DEBUG_CONSOLE_LABEL","PREV_DEBUG_CONSOLE_LABEL","OPEN_LOADED_SCRIPTS_LABEL","CALLSTACK_TOP_LABEL","CALLSTACK_BOTTOM_LABEL","CALLSTACK_UP_LABEL","CALLSTACK_DOWN_LABEL","SELECT_DEBUG_CONSOLE_LABEL","SELECT_DEBUG_SESSION_LABEL","DEBUG_QUICK_ACCESS_PREFIX","DEBUG_CONSOLE_QUICK_ACCESS_PREFIX","getThreadAndRun","sessionAndThreadId","obj","threadId","getSession","getAllThreads","find","t","isSessionContext","threads","getFrame","frameId","focusedStackFrame","getCallStack","sf","changeDebugConsoleFocus","next","s","hasSeparateRepl","nextIndex","currIndex","navigateCallStack","down","frame","nextVisibleFrame","callStack","reachedEndOfCallStack","goToTopOfCallStack","fetchCallstack","findNextVisibleFrame","goToBottomOfCallStack","getTopStackFrame","startIndex","currFrame","presentationHint","registerCommand","handler","_","textResourcePropertiesService","clipboardService","eol","getEOL","writeText","reverseContinue","stepBack","terminate","stackFrame","activeEditorControl","activeTextEditorControl","notificationService","quickInputService","hasModel","position","getPosition","getSourceForUri","response","gotoTargets","raw","targets","body","_id","goto","catch","warn","appendMenuItem","EditorContext","command","category","editorTextFocus","registerCommandAndKeybindingRule","weight","mac","showSubSessions","showSubSessionsInToolBar","lifecycleManagedByParent","removeReplExpressions","restartSession","launch","getConfigurationManager","selectedConfiguration","startDebugging","noDebug","startedByUser","STEP_INTO_KEYBINDING","stopHandler","disconnect","suspend","stopSession","stepIn","stepOut","pause","ctrl","qp","createQuickPick","busy","show","onDidChangeActive","item","line","revealLineInCenterIfOutsideViewport","endLine","onDidAccept","onDidHide","dispose","stepInTargets","then","toNegated","restart","error","continue","localDisposableStore","quickPick","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","onDidChangeValue","selectedItems","hide","showLoadedScriptMenu","config","stoppedChildSession","quickAccess","pickItems","showDebugSessionMenu","listService","lastFocusedList","focused","getFocusedElements","control","bps","expression","Array","isArray","setSelectedExpression","removeWatchExpressions","canSetBreakpointsIn","modelUri","some","sessionAgnosticData","addBreakpoints","debugConsoleViewIcon","debugConsole","runViewIcon","debugAlt","variablesViewIcon","watchViewIcon","callStackViewIcon","breakpointsViewIcon","loadedScriptsViewIcon","debugBreakpoint","debugBreakpointDisabled","debugBreakpointUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugBreakpointFunctionUnverified","conditionalBreakpoint","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointConditionalUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointDataUnverified","logBreakpoint","debugBreakpointLog","debugBreakpointLogDisabled","debugBreakpointLogUnverified","debugBreakpointHint","debugHint","debugBreakpointUnsupported","allBreakpoints","debugStackframe","debugStackframeFocused","debugGripper","gripper","debugRestartFrame","debugStop","debugDisconnect","debugRestart","debugStepOver","debugStepInto","debugStepOut","debugStepBack","debugPause","debugContinue","debugReverseContinue","debugRun","debugStart","debugConfigure","gear","debugRemoveConfig","trash","collapseAll","callstackViewSession","bug","debugConsoleClearAll","clearAll","watchExpressionsRemoveAll","closeAll","watchExpressionRemove","watchExpressionsAdd","watchExpressionsAddFuncBreakpoint","breakpointsRemoveAll","breakpointsActivate","activateBreakpoints","debugConsoleEvaluationInput","arrowSmallRight","debugConsoleEvaluationPrompt","chevronRight","debugInspectMemory","fileBinary","ExpressionContainer","allValues","BASE_CHUNK_SIZE","_reference","namedVariables","indexedVariables","memoryReference","startOfVariables","valueChanged","_value","reference","children","evaluateLazy","variables","dummyVar","variablesReference","adoptLazyResponse","getChildren","doGetChildren","hasChildren","getChildrenInChunks","fetchVariables","chunkSize","numberOfChunks","ceil","i","start","count","Variable","kind","lazy","nameCount","vars","v","idDuplicationIndex","evaluateName","__vscodeVariableMenuContext","autoExpandLazyVariables","Expression","DEFAULT_VALUE","evaluateExpression","keepLazyVars","evaluate","result","handleSetResponse","setExpression","parent","variableMenuContext","setVariable","supportsSetExpression","supportsSetVariable","err","errorMessage","toDebugProtocolObject","Scope","expensive","range","ErrorScope","StackFrame","canRestart","instructionPointerReference","getScopes","scopes","usedIds","Set","rs","has","getMostSpecificScopes","nonExpensiveScopes","scopesContainingRange","scope","containsRange","sort","first","second","restartFrame","forgetScopes","lineNumberToString","sourceToString","inMemory","fsPath","threadStopReason","reason","lastSteppingGranularity","other","equalsRange","Thread","callStackCancellationTokens","staleCallStack","stopped","clearCallStack","c","getStaleCallStack","stateLabel","fetchCallStack","levels","getCallStackImpl","totalFrames","startFrame","tokenSource","stackTrace","token","isCancellationRequested","stackFrames","rsf","getSource","framesErrorMessage","exceptionInfo","supportsExceptionInfoRequest","breakMode","granularity","terminateThreads","getUriForDebugMemory","displayName","from","authority","path","encodeURIComponent","query","fromOffset","toOffset","MemoryRegion","invalidateEmitter","onDidInvalidate","event","writable","supportsWriteMemoryRequest","onDidInvalidateMemory","invalidate","offset","read","readMemory","unreadable","unreadableBytes","dataLength","byteLength","pad","alloc","buffer","fill","slice","write","writeMemory","written","bytesWritten","fire","Enablement","toBreakpointSessionData","supportsHitConditionalBreakpoints","supportsLogPoints","supportsInstructionBreakpoints","BaseBreakpoint","sessionData","setSessionData","delete","allData","values","verifiedData","d","sessionsThatVerified","sessionIds","getDebugProtocolBreakpoint","toJSON","Breakpoint","_uri","_lineNumber","_column","_adapterData","textFileService","uriIdentityService","logService","originalUri","isDirty","adapterData","update","FunctionBreakpoint","DataBreakpoint","dataId","canPersist","accessTypes","ExceptionBreakpoint","fallback","supportedSessions","setSupportedSession","setFallback","isFallback","isSupportedSession","matches","InstructionBreakpoint","ThreadAndSessionIds","DebugModel","debugStorage","schedulers","_onDidChangeBreakpoints","_onDidChangeCallStack","_onDidChangeWatchExpressions","breakpoints","loadBreakpoints","functionBreakpoints","loadFunctionBreakpoints","exceptionBreakpoints","loadExceptionBreakpoints","dataBreakpoints","loadDataBreakpoints","watchExpressions","loadWatchExpressions","instructionBreakpoints","includeInactive","addSession","getLabel","setName","onDidChangeCallStack","onDidChangeWatchExpressions","rawUpdate","p","clearThreads","removeThreads","entry","scheduler","completeDeferred","complete","remainingFrames","refreshTopOfCallstack","supportsDelayedStackTraceLoading","topCallStack","wholeCallStack","deferred","stale","current","bottomOfCallStackChanged","finally","uriStr","originalUriStr","enabledOnly","getExceptionBreakpoints","ebp","setExceptionBreakpointsForSession","didChangeBreakpoints","exbp","pop","default","removeExceptionBreakpointsForSession","setExceptionBreakpointFallbackSession","activated","rawData","fireEvent","newBreakpoints","rawBp","sortAndDeDup","added","sessionOnly","toRemove","removed","updateBreakpoints","updated","bpData","changed","setBreakpointSessionData","capabilites","fbp","fbpData","dbp","dbpData","ebpData","ibp","ibpData","breakpointId","localeCompare","setEnablement","enable","enableOrDisableAllBreakpoints","functionName","newFunctionBreakpoint","addDataBreakpoint","newDataBreakpoint","addInstructionBreakpoint","newInstructionBreakpoint","getWatchExpressions","addWatchExpression","we","renameWatchExpression","newName","filtered","moveWatchExpression","sourceIsNotAvailable","UNKNOWN_SOURCE_LABEL","Source","raw_","getUriFromSource","origin","sourceReference","getEncodedDebugData","file","keyvalues","split","keyvalue","pair","parseInt","_getUriFromSource","asCanonicalUri","parse","DisassemblyViewInput","arguments","typeId","_instance","isDisposed","getName"],"sourceRoot":""}