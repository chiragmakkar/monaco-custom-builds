{"version":3,"file":"487.bundle.js","mappings":"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","sources":["webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/base/browser/ui/dialog/dialog.css","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/base/browser/ui/dialog/dialog.css?8ee5","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/base/browser/ui/dialog/dialog.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/dialogs/dialogHandler.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/dialogs/dialog.web.contribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/common/dialogs.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/dialogs/common/dialogService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/dialogs/browser/simpleFileDialog.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/dialogs/browser/abstractFileDialogService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/service-override/dialogs.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/platform/window/common/window.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/** Dialog: Modal Block */\n.monaco-dialog-modal-block {\n\tposition: fixed;\n\theight: 100%;\n\twidth: 100%;\n\tleft:0;\n\ttop:0;\n\tz-index: 2600;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.monaco-dialog-modal-block.dimmed {\n\tbackground: rgba(0, 0, 0, 0.3);\n}\n\n/** Dialog: Container */\n.monaco-dialog-box {\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\twidth: min-content;\n\tmin-width: 500px;\n\tmax-width: 90vw;\n\tmin-height: 75px;\n\tpadding: 10px;\n\ttransform: translate3d(0px, 0px, 0px);\n}\n\n/** Dialog: Title Actions Row */\n.monaco-dialog-box .dialog-toolbar-row {\n\theight: 22px;\n\tpadding-bottom: 4px;\n}\n\n.monaco-dialog-box .dialog-toolbar-row .actions-container {\n\tjustify-content: flex-end;\n}\n\n/** Dialog: Message Row */\n.monaco-dialog-box .dialog-message-row {\n\tdisplay: flex;\n\tflex-grow: 1;\n\talign-items: center;\n\tpadding: 0 10px;\n}\n\n.monaco-dialog-box .dialog-message-row > .dialog-icon.codicon {\n\tflex: 0 0 48px;\n\theight: 48px;\n\talign-self: baseline;\n\tfont-size: 48px;\n}\n\n/** Dialog: Message Container */\n.monaco-dialog-box .dialog-message-row .dialog-message-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tpadding-left: 24px;\n\tuser-select: text;\n\t-webkit-user-select: text;\n\tword-wrap: break-word; /* never overflow long words, but break to next line */\n\twhite-space: normal;\n}\n\n/** Dialog: Message */\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message {\n\tline-height: 22px;\n\tfont-size: 18px;\n\tflex: 1; /* let the message always grow */\n\twhite-space: normal;\n\tword-wrap: break-word; /* never overflow long words, but break to next line */\n\tmin-height: 48px; /* matches icon height */\n\tmargin-bottom: 8px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n/** Dialog: Details */\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-detail {\n\tline-height: 22px;\n\tflex: 1; /* let the message always grow */\n}\n\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message a:focus {\n\toutline-width: 1px;\n\toutline-style: solid;\n}\n\n/** Dialog: Checkbox */\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-checkbox-row {\n\tpadding: 15px 0px 0px;\n\tdisplay: flex;\n}\n\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-checkbox-row .dialog-checkbox-message {\n\tcursor: pointer;\n\tuser-select: none;\n\t-webkit-user-select: none;\n}\n\n/** Dialog: Input */\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-input {\n\tpadding: 15px 0px 0px;\n\tdisplay: flex;\n}\n\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-input .monaco-inputbox {\n\tflex: 1;\n}\n\n/** Dialog: File Path */\n.monaco-dialog-box code {\n\tfont-family: var(--monaco-monospace-font);\n}\n\n/** Dialog: Buttons Row */\n.monaco-dialog-box > .dialog-buttons-row {\n\tdisplay: flex;\n\talign-items: center;\n\tpadding-right: 1px;\n\toverflow: hidden; /* buttons row should never overflow */\n}\n\n.monaco-dialog-box > .dialog-buttons-row {\n\tdisplay: flex;\n\twhite-space: nowrap;\n\tpadding: 20px 10px 10px;\n}\n\n/** Dialog: Buttons */\n.monaco-dialog-box > .dialog-buttons-row > .dialog-buttons {\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: flex-end;\n\toverflow: hidden;\n\tmargin-left: 67px; /* for long buttons, force align with text */\n}\n\n.monaco-dialog-box > .dialog-buttons-row > .dialog-buttons > .monaco-button {\n\twidth: fit-content;\n\tpadding: 5px 10px;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tmargin: 4px 5px; /* allows button focus outline to be visible */\n\toutline-offset: 2px !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/monaco-editor/esm/vs/base/browser/ui/dialog/dialog.css\"],\"names\":[],\"mappings\":\"AAAA;;;+FAG+F;;AAE/F,yBAAyB;AACzB;CACC,eAAe;CACf,YAAY;CACZ,WAAW;CACX,MAAM;CACN,KAAK;CACL,aAAa;CACb,aAAa;CACb,uBAAuB;CACvB,mBAAmB;AACpB;;AAEA;CACC,8BAA8B;AAC/B;;AAEA,uBAAuB;AACvB;CACC,aAAa;CACb,8BAA8B;CAC9B,kBAAkB;CAClB,gBAAgB;CAChB,eAAe;CACf,gBAAgB;CAChB,aAAa;CACb,qCAAqC;AACtC;;AAEA,+BAA+B;AAC/B;CACC,YAAY;CACZ,mBAAmB;AACpB;;AAEA;CACC,yBAAyB;AAC1B;;AAEA,yBAAyB;AACzB;CACC,aAAa;CACb,YAAY;CACZ,mBAAmB;CACnB,eAAe;AAChB;;AAEA;CACC,cAAc;CACd,YAAY;CACZ,oBAAoB;CACpB,eAAe;AAChB;;AAEA,+BAA+B;AAC/B;CACC,aAAa;CACb,sBAAsB;CACtB,gBAAgB;CAChB,uBAAuB;CACvB,kBAAkB;CAClB,iBAAiB;CACjB,yBAAyB;CACzB,qBAAqB,EAAE,sDAAsD;CAC7E,mBAAmB;AACpB;;AAEA,qBAAqB;AACrB;CACC,iBAAiB;CACjB,eAAe;CACf,OAAO,EAAE,gCAAgC;CACzC,mBAAmB;CACnB,qBAAqB,EAAE,sDAAsD;CAC7E,gBAAgB,EAAE,wBAAwB;CAC1C,kBAAkB;CAClB,aAAa;CACb,mBAAmB;AACpB;;AAEA,qBAAqB;AACrB;CACC,iBAAiB;CACjB,OAAO,EAAE,gCAAgC;AAC1C;;AAEA;CACC,kBAAkB;CAClB,oBAAoB;AACrB;;AAEA,sBAAsB;AACtB;CACC,qBAAqB;CACrB,aAAa;AACd;;AAEA;CACC,eAAe;CACf,iBAAiB;CACjB,yBAAyB;AAC1B;;AAEA,mBAAmB;AACnB;CACC,qBAAqB;CACrB,aAAa;AACd;;AAEA;CACC,OAAO;AACR;;AAEA,uBAAuB;AACvB;CACC,yCAAyC;AAC1C;;AAEA,yBAAyB;AACzB;CACC,aAAa;CACb,mBAAmB;CACnB,kBAAkB;CAClB,gBAAgB,EAAE,sCAAsC;AACzD;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;AACxB;;AAEA,qBAAqB;AACrB;CACC,aAAa;CACb,WAAW;CACX,yBAAyB;CACzB,gBAAgB;CAChB,iBAAiB,EAAE,4CAA4C;AAChE;;AAEA;CACC,kBAAkB;CAClB,iBAAiB;CACjB,gBAAgB;CAChB,uBAAuB;CACvB,eAAe,EAAE,8CAA8C;CAC/D,8BAA8B;AAC/B\",\"sourcesContent\":[\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\n/** Dialog: Modal Block */\\n.monaco-dialog-modal-block {\\n\\tposition: fixed;\\n\\theight: 100%;\\n\\twidth: 100%;\\n\\tleft:0;\\n\\ttop:0;\\n\\tz-index: 2600;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n}\\n\\n.monaco-dialog-modal-block.dimmed {\\n\\tbackground: rgba(0, 0, 0, 0.3);\\n}\\n\\n/** Dialog: Container */\\n.monaco-dialog-box {\\n\\tdisplay: flex;\\n\\tflex-direction: column-reverse;\\n\\twidth: min-content;\\n\\tmin-width: 500px;\\n\\tmax-width: 90vw;\\n\\tmin-height: 75px;\\n\\tpadding: 10px;\\n\\ttransform: translate3d(0px, 0px, 0px);\\n}\\n\\n/** Dialog: Title Actions Row */\\n.monaco-dialog-box .dialog-toolbar-row {\\n\\theight: 22px;\\n\\tpadding-bottom: 4px;\\n}\\n\\n.monaco-dialog-box .dialog-toolbar-row .actions-container {\\n\\tjustify-content: flex-end;\\n}\\n\\n/** Dialog: Message Row */\\n.monaco-dialog-box .dialog-message-row {\\n\\tdisplay: flex;\\n\\tflex-grow: 1;\\n\\talign-items: center;\\n\\tpadding: 0 10px;\\n}\\n\\n.monaco-dialog-box .dialog-message-row > .dialog-icon.codicon {\\n\\tflex: 0 0 48px;\\n\\theight: 48px;\\n\\talign-self: baseline;\\n\\tfont-size: 48px;\\n}\\n\\n/** Dialog: Message Container */\\n.monaco-dialog-box .dialog-message-row .dialog-message-container {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\tpadding-left: 24px;\\n\\tuser-select: text;\\n\\t-webkit-user-select: text;\\n\\tword-wrap: break-word; /* never overflow long words, but break to next line */\\n\\twhite-space: normal;\\n}\\n\\n/** Dialog: Message */\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message {\\n\\tline-height: 22px;\\n\\tfont-size: 18px;\\n\\tflex: 1; /* let the message always grow */\\n\\twhite-space: normal;\\n\\tword-wrap: break-word; /* never overflow long words, but break to next line */\\n\\tmin-height: 48px; /* matches icon height */\\n\\tmargin-bottom: 8px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n\\n/** Dialog: Details */\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-detail {\\n\\tline-height: 22px;\\n\\tflex: 1; /* let the message always grow */\\n}\\n\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message a:focus {\\n\\toutline-width: 1px;\\n\\toutline-style: solid;\\n}\\n\\n/** Dialog: Checkbox */\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-checkbox-row {\\n\\tpadding: 15px 0px 0px;\\n\\tdisplay: flex;\\n}\\n\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-checkbox-row .dialog-checkbox-message {\\n\\tcursor: pointer;\\n\\tuser-select: none;\\n\\t-webkit-user-select: none;\\n}\\n\\n/** Dialog: Input */\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-input {\\n\\tpadding: 15px 0px 0px;\\n\\tdisplay: flex;\\n}\\n\\n.monaco-dialog-box .dialog-message-row .dialog-message-container .dialog-message-input .monaco-inputbox {\\n\\tflex: 1;\\n}\\n\\n/** Dialog: File Path */\\n.monaco-dialog-box code {\\n\\tfont-family: var(--monaco-monospace-font);\\n}\\n\\n/** Dialog: Buttons Row */\\n.monaco-dialog-box > .dialog-buttons-row {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tpadding-right: 1px;\\n\\toverflow: hidden; /* buttons row should never overflow */\\n}\\n\\n.monaco-dialog-box > .dialog-buttons-row {\\n\\tdisplay: flex;\\n\\twhite-space: nowrap;\\n\\tpadding: 20px 10px 10px;\\n}\\n\\n/** Dialog: Buttons */\\n.monaco-dialog-box > .dialog-buttons-row > .dialog-buttons {\\n\\tdisplay: flex;\\n\\twidth: 100%;\\n\\tjustify-content: flex-end;\\n\\toverflow: hidden;\\n\\tmargin-left: 67px; /* for long buttons, force align with text */\\n}\\n\\n.monaco-dialog-box > .dialog-buttons-row > .dialog-buttons > .monaco-button {\\n\\twidth: fit-content;\\n\\tpadding: 5px 10px;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\tmargin: 4px 5px; /* allows button focus outline to be visible */\\n\\toutline-offset: 2px !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../css-loader/dist/cjs.js!./dialog.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../css-loader/dist/cjs.js!./dialog.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, addDisposableListener, clearNode, EventHelper, EventType, hide, isAncestor, show } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { ButtonBar, ButtonWithDescription } from '../button/button.js';\nimport { Checkbox } from '../toggle/toggle.js';\nimport { InputBox } from '../inputbox/inputBox.js';\nimport { Action } from '../../../common/actions.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { mnemonicButtonLabel } from '../../../common/labels.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isLinux, isMacintosh, isWindows } from '../../../common/platform.js';\nimport './dialog.css';\nimport * as nls from '../../../../nls.js';\nexport class Dialog extends Disposable {\n    constructor(container, message, buttons, options) {\n        super();\n        this.container = container;\n        this.message = message;\n        this.options = options;\n        this.modalElement = this.container.appendChild($(`.monaco-dialog-modal-block.dimmed`));\n        this.shadowElement = this.modalElement.appendChild($('.dialog-shadow'));\n        this.element = this.shadowElement.appendChild($('.monaco-dialog-box'));\n        this.element.setAttribute('role', 'dialog');\n        this.element.tabIndex = -1;\n        hide(this.element);\n        this.buttonStyles = options.buttonStyles;\n        if (Array.isArray(buttons) && buttons.length > 0) {\n            this.buttons = buttons;\n        }\n        else if (!this.options.disableDefaultAction) {\n            this.buttons = [nls.localize('ok', \"OK\")];\n        }\n        else {\n            this.buttons = [];\n        }\n        const buttonsRowElement = this.element.appendChild($('.dialog-buttons-row'));\n        this.buttonsContainer = buttonsRowElement.appendChild($('.dialog-buttons'));\n        const messageRowElement = this.element.appendChild($('.dialog-message-row'));\n        this.iconElement = messageRowElement.appendChild($('#monaco-dialog-icon.dialog-icon'));\n        this.iconElement.setAttribute('aria-label', this.getIconAriaLabel());\n        this.messageContainer = messageRowElement.appendChild($('.dialog-message-container'));\n        if (this.options.detail || this.options.renderBody) {\n            const messageElement = this.messageContainer.appendChild($('.dialog-message'));\n            const messageTextElement = messageElement.appendChild($('#monaco-dialog-message-text.dialog-message-text'));\n            messageTextElement.innerText = this.message;\n        }\n        this.messageDetailElement = this.messageContainer.appendChild($('#monaco-dialog-message-detail.dialog-message-detail'));\n        if (this.options.detail || !this.options.renderBody) {\n            this.messageDetailElement.innerText = this.options.detail ? this.options.detail : message;\n        }\n        else {\n            this.messageDetailElement.style.display = 'none';\n        }\n        if (this.options.renderBody) {\n            const customBody = this.messageContainer.appendChild($('#monaco-dialog-message-body.dialog-message-body'));\n            this.options.renderBody(customBody);\n            for (const el of this.messageContainer.querySelectorAll('a')) {\n                el.tabIndex = 0;\n            }\n        }\n        if (this.options.inputs) {\n            this.inputs = this.options.inputs.map(input => {\n                var _a;\n                const inputRowElement = this.messageContainer.appendChild($('.dialog-message-input'));\n                const inputBox = this._register(new InputBox(inputRowElement, undefined, {\n                    placeholder: input.placeholder,\n                    type: (_a = input.type) !== null && _a !== void 0 ? _a : 'text',\n                    inputBoxStyles: options.inputBoxStyles\n                }));\n                if (input.value) {\n                    inputBox.value = input.value;\n                }\n                return inputBox;\n            });\n        }\n        else {\n            this.inputs = [];\n        }\n        if (this.options.checkboxLabel) {\n            const checkboxRowElement = this.messageContainer.appendChild($('.dialog-checkbox-row'));\n            const checkbox = this.checkbox = this._register(new Checkbox(this.options.checkboxLabel, !!this.options.checkboxChecked, options.checkboxStyles));\n            checkboxRowElement.appendChild(checkbox.domNode);\n            const checkboxMessageElement = checkboxRowElement.appendChild($('.dialog-checkbox-message'));\n            checkboxMessageElement.innerText = this.options.checkboxLabel;\n            this._register(addDisposableListener(checkboxMessageElement, EventType.CLICK, () => checkbox.checked = !checkbox.checked));\n        }\n        const toolbarRowElement = this.element.appendChild($('.dialog-toolbar-row'));\n        this.toolbarContainer = toolbarRowElement.appendChild($('.dialog-toolbar'));\n        this.applyStyles();\n    }\n    getIconAriaLabel() {\n        let typeLabel = nls.localize('dialogInfoMessage', 'Info');\n        switch (this.options.type) {\n            case 'error':\n                typeLabel = nls.localize('dialogErrorMessage', 'Error');\n                break;\n            case 'warning':\n                typeLabel = nls.localize('dialogWarningMessage', 'Warning');\n                break;\n            case 'pending':\n                typeLabel = nls.localize('dialogPendingMessage', 'In Progress');\n                break;\n            case 'none':\n            case 'info':\n            case 'question':\n            default:\n                break;\n        }\n        return typeLabel;\n    }\n    updateMessage(message) {\n        this.messageDetailElement.innerText = message;\n    }\n    show() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.focusToReturn = document.activeElement;\n            return new Promise((resolve) => {\n                clearNode(this.buttonsContainer);\n                const buttonBar = this.buttonBar = this._register(new ButtonBar(this.buttonsContainer));\n                const buttonMap = this.rearrangeButtons(this.buttons, this.options.cancelId);\n                // Handle button clicks\n                buttonMap.forEach((entry, index) => {\n                    const primary = buttonMap[index].index === 0;\n                    const button = this.options.buttonDetails ? this._register(buttonBar.addButtonWithDescription(Object.assign({ title: true, secondary: !primary }, this.buttonStyles))) : this._register(buttonBar.addButton(Object.assign({ title: true, secondary: !primary }, this.buttonStyles)));\n                    button.label = mnemonicButtonLabel(buttonMap[index].label, true);\n                    if (button instanceof ButtonWithDescription) {\n                        button.description = this.options.buttonDetails[buttonMap[index].index];\n                    }\n                    this._register(button.onDidClick(e => {\n                        if (e) {\n                            EventHelper.stop(e);\n                        }\n                        resolve({\n                            button: buttonMap[index].index,\n                            checkboxChecked: this.checkbox ? this.checkbox.checked : undefined,\n                            values: this.inputs.length > 0 ? this.inputs.map(input => input.value) : undefined\n                        });\n                    }));\n                });\n                // Handle keyboard events globally: Tab, Arrow-Left/Right\n                this._register(addDisposableListener(window, 'keydown', e => {\n                    var _a, _b;\n                    const evt = new StandardKeyboardEvent(e);\n                    if (evt.equals(512 /* KeyMod.Alt */)) {\n                        evt.preventDefault();\n                    }\n                    if (evt.equals(3 /* KeyCode.Enter */)) {\n                        // Enter in input field should OK the dialog\n                        if (this.inputs.some(input => input.hasFocus())) {\n                            EventHelper.stop(e);\n                            resolve({\n                                button: (_b = (_a = buttonMap.find(button => button.index !== this.options.cancelId)) === null || _a === void 0 ? void 0 : _a.index) !== null && _b !== void 0 ? _b : 0,\n                                checkboxChecked: this.checkbox ? this.checkbox.checked : undefined,\n                                values: this.inputs.length > 0 ? this.inputs.map(input => input.value) : undefined\n                            });\n                        }\n                        return; // leave default handling\n                    }\n                    if (evt.equals(10 /* KeyCode.Space */)) {\n                        return; // leave default handling\n                    }\n                    let eventHandled = false;\n                    // Focus: Next / Previous\n                    if (evt.equals(2 /* KeyCode.Tab */) || evt.equals(17 /* KeyCode.RightArrow */) || evt.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */) || evt.equals(15 /* KeyCode.LeftArrow */)) {\n                        // Build a list of focusable elements in their visual order\n                        const focusableElements = [];\n                        let focusedIndex = -1;\n                        if (this.messageContainer) {\n                            const links = this.messageContainer.querySelectorAll('a');\n                            for (const link of links) {\n                                focusableElements.push(link);\n                                if (link === document.activeElement) {\n                                    focusedIndex = focusableElements.length - 1;\n                                }\n                            }\n                        }\n                        for (const input of this.inputs) {\n                            focusableElements.push(input);\n                            if (input.hasFocus()) {\n                                focusedIndex = focusableElements.length - 1;\n                            }\n                        }\n                        if (this.checkbox) {\n                            focusableElements.push(this.checkbox);\n                            if (this.checkbox.hasFocus()) {\n                                focusedIndex = focusableElements.length - 1;\n                            }\n                        }\n                        if (this.buttonBar) {\n                            for (const button of this.buttonBar.buttons) {\n                                focusableElements.push(button);\n                                if (button.hasFocus()) {\n                                    focusedIndex = focusableElements.length - 1;\n                                }\n                            }\n                        }\n                        // Focus next element (with wrapping)\n                        if (evt.equals(2 /* KeyCode.Tab */) || evt.equals(17 /* KeyCode.RightArrow */)) {\n                            if (focusedIndex === -1) {\n                                focusedIndex = 0; // default to focus first element if none have focus\n                            }\n                            const newFocusedIndex = (focusedIndex + 1) % focusableElements.length;\n                            focusableElements[newFocusedIndex].focus();\n                        }\n                        // Focus previous element (with wrapping)\n                        else {\n                            if (focusedIndex === -1) {\n                                focusedIndex = focusableElements.length; // default to focus last element if none have focus\n                            }\n                            let newFocusedIndex = focusedIndex - 1;\n                            if (newFocusedIndex === -1) {\n                                newFocusedIndex = focusableElements.length - 1;\n                            }\n                            focusableElements[newFocusedIndex].focus();\n                        }\n                        eventHandled = true;\n                    }\n                    if (eventHandled) {\n                        EventHelper.stop(e, true);\n                    }\n                    else if (this.options.keyEventProcessor) {\n                        this.options.keyEventProcessor(evt);\n                    }\n                }, true));\n                this._register(addDisposableListener(window, 'keyup', e => {\n                    EventHelper.stop(e, true);\n                    const evt = new StandardKeyboardEvent(e);\n                    if (!this.options.disableCloseAction && evt.equals(9 /* KeyCode.Escape */)) {\n                        resolve({\n                            button: this.options.cancelId || 0,\n                            checkboxChecked: this.checkbox ? this.checkbox.checked : undefined\n                        });\n                    }\n                }, true));\n                // Detect focus out\n                this._register(addDisposableListener(this.element, 'focusout', e => {\n                    if (!!e.relatedTarget && !!this.element) {\n                        if (!isAncestor(e.relatedTarget, this.element)) {\n                            this.focusToReturn = e.relatedTarget;\n                            if (e.target) {\n                                e.target.focus();\n                                EventHelper.stop(e, true);\n                            }\n                        }\n                    }\n                }, false));\n                const spinModifierClassName = 'codicon-modifier-spin';\n                this.iconElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.dialogError), ...ThemeIcon.asClassNameArray(Codicon.dialogWarning), ...ThemeIcon.asClassNameArray(Codicon.dialogInfo), ...ThemeIcon.asClassNameArray(Codicon.loading), spinModifierClassName);\n                if (this.options.icon) {\n                    this.iconElement.classList.add(...ThemeIcon.asClassNameArray(this.options.icon));\n                }\n                else {\n                    switch (this.options.type) {\n                        case 'error':\n                            this.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogError));\n                            break;\n                        case 'warning':\n                            this.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogWarning));\n                            break;\n                        case 'pending':\n                            this.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), spinModifierClassName);\n                            break;\n                        case 'none':\n                            this.iconElement.classList.add('no-codicon');\n                            break;\n                        case 'info':\n                        case 'question':\n                        default:\n                            this.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogInfo));\n                            break;\n                    }\n                }\n                if (!this.options.disableCloseAction) {\n                    const actionBar = this._register(new ActionBar(this.toolbarContainer, {}));\n                    const action = this._register(new Action('dialog.close', nls.localize('dialogClose', \"Close Dialog\"), ThemeIcon.asClassName(Codicon.dialogClose), true, () => __awaiter(this, void 0, void 0, function* () {\n                        resolve({\n                            button: this.options.cancelId || 0,\n                            checkboxChecked: this.checkbox ? this.checkbox.checked : undefined\n                        });\n                    })));\n                    actionBar.push(action, { icon: true, label: false });\n                }\n                this.applyStyles();\n                this.element.setAttribute('aria-modal', 'true');\n                this.element.setAttribute('aria-labelledby', 'monaco-dialog-icon monaco-dialog-message-text');\n                this.element.setAttribute('aria-describedby', 'monaco-dialog-icon monaco-dialog-message-text monaco-dialog-message-detail monaco-dialog-message-body');\n                show(this.element);\n                // Focus first element (input or button)\n                if (this.inputs.length > 0) {\n                    this.inputs[0].focus();\n                    this.inputs[0].select();\n                }\n                else {\n                    buttonMap.forEach((value, index) => {\n                        if (value.index === 0) {\n                            buttonBar.buttons[index].focus();\n                        }\n                    });\n                }\n            });\n        });\n    }\n    applyStyles() {\n        const style = this.options.dialogStyles;\n        const fgColor = style.dialogForeground;\n        const bgColor = style.dialogBackground;\n        const shadowColor = style.dialogShadow ? `0 0px 8px ${style.dialogShadow}` : '';\n        const border = style.dialogBorder ? `1px solid ${style.dialogBorder}` : '';\n        const linkFgColor = style.textLinkForeground;\n        this.shadowElement.style.boxShadow = shadowColor;\n        this.element.style.color = fgColor !== null && fgColor !== void 0 ? fgColor : '';\n        this.element.style.backgroundColor = bgColor !== null && bgColor !== void 0 ? bgColor : '';\n        this.element.style.border = border;\n        // TODO fix\n        // if (fgColor && bgColor) {\n        // \tconst messageDetailColor = fgColor.transparent(.9);\n        // \tthis.messageDetailElement.style.mixBlendMode = messageDetailColor.makeOpaque(bgColor).toString();\n        // }\n        if (linkFgColor) {\n            for (const el of this.messageContainer.getElementsByTagName('a')) {\n                el.style.color = linkFgColor;\n            }\n        }\n        let color;\n        switch (this.options.type) {\n            case 'error':\n                color = style.errorIconForeground;\n                break;\n            case 'warning':\n                color = style.warningIconForeground;\n                break;\n            default:\n                color = style.infoIconForeground;\n                break;\n        }\n        if (color) {\n            this.iconElement.style.color = color;\n        }\n    }\n    dispose() {\n        super.dispose();\n        if (this.modalElement) {\n            this.modalElement.remove();\n            this.modalElement = undefined;\n        }\n        if (this.focusToReturn && isAncestor(this.focusToReturn, document.body)) {\n            this.focusToReturn.focus();\n            this.focusToReturn = undefined;\n        }\n    }\n    rearrangeButtons(buttons, cancelId) {\n        // Maps each button to its current label and old index\n        // so that when we move them around it's not a problem\n        const buttonMap = buttons.map((label, index) => ({ label, index }));\n        if (buttons.length < 2) {\n            return buttonMap; // only need to rearrange if there are 2+ buttons\n        }\n        if (isMacintosh || isLinux) {\n            // Linux: the GNOME HIG (https://developer.gnome.org/hig/patterns/feedback/dialogs.html?highlight=dialog)\n            // recommend the following:\n            // \"Always ensure that the cancel button appears first, before the affirmative button. In left-to-right\n            //  locales, this is on the left. This button order ensures that users become aware of, and are reminded\n            //  of, the ability to cancel prior to encountering the affirmative button.\"\n            // macOS: the HIG (https://developer.apple.com/design/human-interface-guidelines/components/presentation/alerts)\n            // recommend the following:\n            // \"Place buttons where people expect. In general, place the button people are most likely to choose on the trailing side in a\n            //  row of buttons or at the top in a stack of buttons. Always place the default button on the trailing side of a row or at the\n            //  top of a stack. Cancel buttons are typically on the leading side of a row or at the bottom of a stack.\"\n            if (typeof cancelId === 'number' && buttonMap[cancelId]) {\n                const cancelButton = buttonMap.splice(cancelId, 1)[0];\n                buttonMap.splice(1, 0, cancelButton);\n            }\n            buttonMap.reverse();\n        }\n        else if (isWindows) {\n            // Windows: the HIG (https://learn.microsoft.com/en-us/windows/win32/uxguide/win-dialog-box)\n            // recommend the following:\n            // \"One of the following sets of concise commands: Yes/No, Yes/No/Cancel, [Do it]/Cancel,\n            //  [Do it]/[Don't do it], [Do it]/[Don't do it]/Cancel.\"\n            if (typeof cancelId === 'number' && buttonMap[cancelId]) {\n                const cancelButton = buttonMap.splice(cancelId, 1)[0];\n                buttonMap.push(cancelButton);\n            }\n        }\n        return buttonMap;\n    }\n}\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { Dialog } from 'monaco-editor/esm/vs/base/browser/ui/dialog/dialog.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { EventHelper } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { MarkdownRenderer } from 'monaco-editor/esm/vs/editor/contrib/markdownRenderer/browser/markdownRenderer.js';\nimport { defaultButtonStyles, defaultCheckboxStyles, defaultInputBoxStyles, defaultDialogStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { AbstractDialogHandler } from '../../../../platform/dialogs/common/dialogs.js';\nlet BrowserDialogHandler = class BrowserDialogHandler extends AbstractDialogHandler {\n    static { this.ALLOWABLE_COMMANDS = [\n        'copy',\n        'cut',\n        'editor.action.selectAll',\n        'editor.action.clipboardCopyAction',\n        'editor.action.clipboardCutAction',\n        'editor.action.clipboardPasteAction'\n    ]; }\n    constructor(logService, layoutService, keybindingService, instantiationService, productService, clipboardService) {\n        super();\n        this.logService = logService;\n        this.layoutService = layoutService;\n        this.keybindingService = keybindingService;\n        this.instantiationService = instantiationService;\n        this.productService = productService;\n        this.clipboardService = clipboardService;\n        this.markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n    }\n    async prompt(prompt) {\n        this.logService.trace('DialogService#prompt', prompt.message);\n        const buttons = this.getPromptButtons(prompt);\n        const { button, checkboxChecked } = await this.doShow(prompt.type, prompt.message, buttons, prompt.detail, prompt.cancelButton ? buttons.length - 1 : -1 , prompt.checkbox, undefined, typeof prompt?.custom === 'object' ? prompt.custom : undefined);\n        return this.getPromptResult(prompt, button, checkboxChecked);\n    }\n    async confirm(confirmation) {\n        this.logService.trace('DialogService#confirm', confirmation.message);\n        const buttons = this.getConfirmationButtons(confirmation);\n        const { button, checkboxChecked } = await this.doShow(confirmation.type ?? 'question', confirmation.message, buttons, confirmation.detail, buttons.length - 1, confirmation.checkbox, undefined, typeof confirmation?.custom === 'object' ? confirmation.custom : undefined);\n        return { confirmed: button === 0, checkboxChecked };\n    }\n    async input(input) {\n        this.logService.trace('DialogService#input', input.message);\n        const buttons = this.getInputButtons(input);\n        const { button, checkboxChecked, values } = await this.doShow(input.type ?? 'question', input.message, buttons, input.detail, buttons.length - 1, input?.checkbox, input.inputs, typeof input.custom === 'object' ? input.custom : undefined);\n        return { confirmed: button === 0, checkboxChecked, values };\n    }\n    async about() {\n        const detailString = (useAgo) => {\n            return ( localize(\n                'aboutDetail',\n                \"Version: {0}\\nCommit: {1}\\nDate: {2}\\nBrowser: {3}\",\n                this.productService.version || 'Unknown',\n                this.productService.commit || 'Unknown',\n                this.productService.date ? `${this.productService.date}${useAgo ? ' (' + fromNow(( new Date(this.productService.date)), true) + ')' : ''}` : 'Unknown',\n                navigator.userAgent\n            ));\n        };\n        const detail = detailString(true);\n        const detailToCopy = detailString(false);\n        const { button } = await this.doShow(Severity.Info, this.productService.nameLong, [\n            ( localize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\")),\n            ( localize('ok', \"OK\"))\n        ], detail, 1);\n        if (button === 0) {\n            this.clipboardService.writeText(detailToCopy);\n        }\n    }\n    async doShow(type, message, buttons, detail, cancelId, checkbox, inputs, customOptions) {\n        const dialogDisposables = ( new DisposableStore());\n        const renderBody = customOptions ? (parent) => {\n            parent.classList.add(...(customOptions.classes || []));\n            customOptions.markdownDetails?.forEach(markdownDetail => {\n                const result = this.markdownRenderer.render(markdownDetail.markdown);\n                parent.appendChild(result.element);\n                result.element.classList.add(...(markdownDetail.classes || []));\n                dialogDisposables.add(result);\n            });\n        } : undefined;\n        const dialog = ( new Dialog(this.layoutService.container, message, buttons, {\n            detail,\n            cancelId,\n            type: this.getDialogType(type),\n            keyEventProcessor: (event) => {\n                const resolved = this.keybindingService.softDispatch(event, this.layoutService.container);\n                if (resolved.kind === 2  && resolved.commandId) {\n                    if (BrowserDialogHandler.ALLOWABLE_COMMANDS.indexOf(resolved.commandId) === -1) {\n                        EventHelper.stop(event, true);\n                    }\n                }\n            },\n            renderBody,\n            icon: customOptions?.icon,\n            disableCloseAction: customOptions?.disableCloseAction,\n            buttonDetails: customOptions?.buttonDetails,\n            checkboxLabel: checkbox?.label,\n            checkboxChecked: checkbox?.checked,\n            inputs,\n            buttonStyles: defaultButtonStyles,\n            checkboxStyles: defaultCheckboxStyles,\n            inputBoxStyles: defaultInputBoxStyles,\n            dialogStyles: defaultDialogStyles\n        }));\n        dialogDisposables.add(dialog);\n        const result = await dialog.show();\n        dialogDisposables.dispose();\n        return result;\n    }\n};\nBrowserDialogHandler = ( __decorate([\n    ( __param(0, ILogService)),\n    ( __param(1, ILayoutService)),\n    ( __param(2, IKeybindingService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IProductService)),\n    ( __param(5, IClipboardService))\n], BrowserDialogHandler));\nexport { BrowserDialogHandler };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { BrowserDialogHandler } from './dialogHandler.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet DialogHandlerContribution = class DialogHandlerContribution extends Disposable {\n    constructor(dialogService, logService, layoutService, keybindingService, instantiationService, productService, clipboardService) {\n        super();\n        this.dialogService = dialogService;\n        this.impl = ( new BrowserDialogHandler(\n            logService,\n            layoutService,\n            keybindingService,\n            instantiationService,\n            productService,\n            clipboardService\n        ));\n        this.model = this.dialogService.model;\n        this._register(this.model.onWillShowDialog(() => {\n            if (!this.currentDialog) {\n                this.processDialogs();\n            }\n        }));\n        this.processDialogs();\n    }\n    async processDialogs() {\n        while (this.model.dialogs.length) {\n            this.currentDialog = this.model.dialogs[0];\n            let result = undefined;\n            if (this.currentDialog.args.confirmArgs) {\n                const args = this.currentDialog.args.confirmArgs;\n                result = await this.impl.confirm(args.confirmation);\n            }\n            else if (this.currentDialog.args.inputArgs) {\n                const args = this.currentDialog.args.inputArgs;\n                result = await this.impl.input(args.input);\n            }\n            else if (this.currentDialog.args.promptArgs) {\n                const args = this.currentDialog.args.promptArgs;\n                result = await this.impl.prompt(args.prompt);\n            }\n            else {\n                await this.impl.about();\n            }\n            this.currentDialog.close(result);\n            this.currentDialog = undefined;\n        }\n    }\n};\nDialogHandlerContribution = ( __decorate([\n    ( __param(0, IDialogService)),\n    ( __param(1, ILogService)),\n    ( __param(2, ILayoutService)),\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IProductService)),\n    ( __param(6, IClipboardService))\n], DialogHandlerContribution));\nconst workbenchRegistry = ( Registry.as(Extensions.Workbench));\nworkbenchRegistry.registerWorkbenchContribution(DialogHandlerContribution, 1 );\nexport { DialogHandlerContribution };\n","import { DeferredPromise } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nclass DialogsModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.dialogs = [];\n        this._onWillShowDialog = this._register(( new Emitter()));\n        this.onWillShowDialog = this._onWillShowDialog.event;\n        this._onDidShowDialog = this._register(( new Emitter()));\n        this.onDidShowDialog = this._onDidShowDialog.event;\n    }\n    show(dialog) {\n        const promise = ( new DeferredPromise());\n        const item = {\n            args: dialog,\n            close: result => {\n                this.dialogs.splice(0, 1);\n                promise.complete(result);\n                this._onDidShowDialog.fire();\n            }\n        };\n        this.dialogs.push(item);\n        this._onWillShowDialog.fire();\n        return {\n            item,\n            result: promise.p\n        };\n    }\n}\nexport { DialogsModel };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { DialogsModel } from '../../../common/dialogs.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nlet DialogService = class DialogService extends Disposable {\n    constructor(environmentService, logService) {\n        super();\n        this.environmentService = environmentService;\n        this.logService = logService;\n        this.model = this._register(( new DialogsModel()));\n        this.onWillShowDialog = this.model.onWillShowDialog;\n        this.onDidShowDialog = this.model.onDidShowDialog;\n    }\n    skipDialogs() {\n        if (this.environmentService.isExtensionDevelopment && this.environmentService.extensionTestsLocationURI) {\n            return true;\n        }\n        return !!this.environmentService.enableSmokeTestDriver;\n    }\n    async confirm(confirmation) {\n        if (this.skipDialogs()) {\n            this.logService.trace('DialogService: refused to show confirmation dialog in tests.');\n            return { confirmed: true };\n        }\n        const handle = this.model.show({ confirmArgs: { confirmation } });\n        return await handle.result;\n    }\n    async prompt(prompt) {\n        if (this.skipDialogs()) {\n            throw new Error(`DialogService: refused to show dialog in tests. Contents: ${prompt.message}`);\n        }\n        const handle = this.model.show({ promptArgs: { prompt } });\n        return await handle.result;\n    }\n    async input(input) {\n        if (this.skipDialogs()) {\n            throw new Error('DialogService: refused to show input dialog in tests.');\n        }\n        const handle = this.model.show({ inputArgs: { input } });\n        return await handle.result;\n    }\n    async info(message, detail) {\n        await this.prompt({ type: Severity.Info, message, detail });\n    }\n    async warn(message, detail) {\n        await this.prompt({ type: Severity.Warning, message, detail });\n    }\n    async error(message, detail) {\n        await this.prompt({ type: Severity.Error, message, detail });\n    }\n    async about() {\n        if (this.skipDialogs()) {\n            throw new Error('DialogService: refused to show about dialog in tests.');\n        }\n        const handle = this.model.show({});\n        await handle.result;\n    }\n};\nDialogService = ( __decorate([\n    ( __param(0, IWorkbenchEnvironmentService)),\n    ( __param(1, ILogService))\n], DialogService));\nexport { DialogService };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { FileKind, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { getIconClasses } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';\nimport { IContextKeyService, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { format, equalsIgnoreCase, startsWithIgnoreCase } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { isValidBasename } from 'monaco-editor/esm/vs/base/common/extpath.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createCancelablePromise } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { normalizeDriveLetter } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nvar OpenLocalFileCommand;\n( (function(OpenLocalFileCommand) {\n    OpenLocalFileCommand.ID = 'workbench.action.files.openLocalFile';\n    OpenLocalFileCommand.LABEL = ( nls.localize('openLocalFile', \"Open Local File...\"));\n    function handler() {\n        return accessor => {\n            const dialogService = accessor.get(IFileDialogService);\n            return dialogService.pickFileAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n        };\n    }\n    OpenLocalFileCommand.handler = handler;\n})(OpenLocalFileCommand || (OpenLocalFileCommand = {})));\nvar SaveLocalFileCommand;\n( (function(SaveLocalFileCommand) {\n    SaveLocalFileCommand.ID = 'workbench.action.files.saveLocalFile';\n    SaveLocalFileCommand.LABEL = ( nls.localize('saveLocalFile', \"Save Local File...\"));\n    function handler() {\n        return accessor => {\n            const editorService = accessor.get(IEditorService);\n            const activeEditorPane = editorService.activeEditorPane;\n            if (activeEditorPane) {\n                return editorService.save({ groupId: activeEditorPane.group.id, editor: activeEditorPane.input }, { saveAs: true, availableFileSystems: [Schemas.file], reason: 1  });\n            }\n            return Promise.resolve(undefined);\n        };\n    }\n    SaveLocalFileCommand.handler = handler;\n})(SaveLocalFileCommand || (SaveLocalFileCommand = {})));\nvar OpenLocalFolderCommand;\n( (function(OpenLocalFolderCommand) {\n    OpenLocalFolderCommand.ID = 'workbench.action.files.openLocalFolder';\n    OpenLocalFolderCommand.LABEL = ( nls.localize('openLocalFolder', \"Open Local Folder...\"));\n    function handler() {\n        return accessor => {\n            const dialogService = accessor.get(IFileDialogService);\n            return dialogService.pickFolderAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n        };\n    }\n    OpenLocalFolderCommand.handler = handler;\n})(OpenLocalFolderCommand || (OpenLocalFolderCommand = {})));\nvar OpenLocalFileFolderCommand;\n( (function(OpenLocalFileFolderCommand) {\n    OpenLocalFileFolderCommand.ID = 'workbench.action.files.openLocalFileFolder';\n    OpenLocalFileFolderCommand.LABEL = ( nls.localize('openLocalFileFolder', \"Open Local...\"));\n    function handler() {\n        return accessor => {\n            const dialogService = accessor.get(IFileDialogService);\n            return dialogService.pickFileFolderAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n        };\n    }\n    OpenLocalFileFolderCommand.handler = handler;\n})(OpenLocalFileFolderCommand || (OpenLocalFileFolderCommand = {})));\nvar UpdateResult;\n( (function(UpdateResult) {\n    UpdateResult[UpdateResult[\"Updated\"] = 0] = \"Updated\";\n    UpdateResult[UpdateResult[\"UpdatedWithTrailing\"] = 1] = \"UpdatedWithTrailing\";\n    UpdateResult[UpdateResult[\"Updating\"] = 2] = \"Updating\";\n    UpdateResult[UpdateResult[\"NotUpdated\"] = 3] = \"NotUpdated\";\n    UpdateResult[UpdateResult[\"InvalidPath\"] = 4] = \"InvalidPath\";\n})(UpdateResult || (UpdateResult = {})));\nconst RemoteFileDialogContext = ( new RawContextKey('remoteFileDialogVisible', false));\nlet SimpleFileDialog = class SimpleFileDialog {\n    constructor(fileService, quickInputService, labelService, workspaceContextService, notificationService, fileDialogService, modelService, languageService, environmentService, remoteAgentService, pathService, keybindingService, contextKeyService, accessibilityService) {\n        this.fileService = fileService;\n        this.quickInputService = quickInputService;\n        this.labelService = labelService;\n        this.workspaceContextService = workspaceContextService;\n        this.notificationService = notificationService;\n        this.fileDialogService = fileDialogService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.environmentService = environmentService;\n        this.remoteAgentService = remoteAgentService;\n        this.pathService = pathService;\n        this.keybindingService = keybindingService;\n        this.accessibilityService = accessibilityService;\n        this.hidden = false;\n        this.allowFileSelection = true;\n        this.allowFolderSelection = false;\n        this.requiresTrailing = false;\n        this.userEnteredPathSegment = '';\n        this.autoCompletePathSegment = '';\n        this.isWindows = false;\n        this.separator = '/';\n        this.onBusyChangeEmitter = ( new Emitter());\n        this.disposables = [\n            this.onBusyChangeEmitter\n        ];\n        this.remoteAuthority = this.environmentService.remoteAuthority;\n        this.contextKey = RemoteFileDialogContext.bindTo(contextKeyService);\n        this.scheme = this.pathService.defaultUriScheme;\n    }\n    set busy(busy) {\n        if (this.filePickBox.busy !== busy) {\n            this.filePickBox.busy = busy;\n            this.onBusyChangeEmitter.fire(busy);\n        }\n    }\n    get busy() {\n        return this.filePickBox.busy;\n    }\n    async showOpenDialog(options = {}) {\n        this.scheme = this.getScheme(options.availableFileSystems, options.defaultUri);\n        this.userHome = await this.getUserHome();\n        this.trueHome = await this.getUserHome(true);\n        const newOptions = this.getOptions(options);\n        if (!newOptions) {\n            return Promise.resolve(undefined);\n        }\n        this.options = newOptions;\n        return this.pickResource();\n    }\n    async showSaveDialog(options) {\n        this.scheme = this.getScheme(options.availableFileSystems, options.defaultUri);\n        this.userHome = await this.getUserHome();\n        this.trueHome = await this.getUserHome(true);\n        this.requiresTrailing = true;\n        const newOptions = this.getOptions(options, true);\n        if (!newOptions) {\n            return Promise.resolve(undefined);\n        }\n        this.options = newOptions;\n        this.options.canSelectFolders = true;\n        this.options.canSelectFiles = true;\n        return ( new Promise((resolve) => {\n            this.pickResource(true).then(folderUri => {\n                resolve(folderUri);\n            });\n        }));\n    }\n    getOptions(options, isSave = false) {\n        let defaultUri = undefined;\n        let filename = undefined;\n        if (options.defaultUri) {\n            defaultUri = (this.scheme === options.defaultUri.scheme) ? options.defaultUri : undefined;\n            filename = isSave ? resources.basename(options.defaultUri) : undefined;\n        }\n        if (!defaultUri) {\n            defaultUri = this.userHome;\n            if (filename) {\n                defaultUri = resources.joinPath(defaultUri, filename);\n            }\n        }\n        if ((this.scheme !== Schemas.file) && !this.fileService.hasProvider(defaultUri)) {\n            this.notificationService.info(( nls.localize(\n                'remoteFileDialog.notConnectedToRemote',\n                'File system provider for {0} is not available.',\n                ( defaultUri.toString())\n            )));\n            return undefined;\n        }\n        const newOptions = objects.deepClone(options);\n        newOptions.defaultUri = defaultUri;\n        return newOptions;\n    }\n    remoteUriFrom(path, hintUri) {\n        if (!path.startsWith('\\\\\\\\')) {\n            path = path.replace(/\\\\/g, '/');\n        }\n        const uri = this.scheme === Schemas.file ? URI.file(path) : ( URI.from(\n            { scheme: this.scheme, path, query: hintUri?.query, fragment: hintUri?.fragment }\n        ));\n        const authority = (uri.scheme === Schemas.file) ? undefined : (this.remoteAuthority ?? hintUri?.authority);\n        return resources.toLocalResource(uri, authority,\n        authority ? this.pathService.defaultUriScheme : uri.scheme);\n    }\n    getScheme(available, defaultUri) {\n        if (available && available.length > 0) {\n            if (defaultUri && (available.indexOf(defaultUri.scheme) >= 0)) {\n                return defaultUri.scheme;\n            }\n            return available[0];\n        }\n        else if (defaultUri) {\n            return defaultUri.scheme;\n        }\n        return Schemas.file;\n    }\n    async getRemoteAgentEnvironment() {\n        if (this.remoteAgentEnvironment === undefined) {\n            this.remoteAgentEnvironment = await this.remoteAgentService.getEnvironment();\n        }\n        return this.remoteAgentEnvironment;\n    }\n    getUserHome(trueHome = false) {\n        return trueHome\n            ? this.pathService.userHome({ preferLocal: this.scheme === Schemas.file })\n            : this.fileDialogService.preferredHome(this.scheme);\n    }\n    async pickResource(isSave = false) {\n        this.allowFolderSelection = !!this.options.canSelectFolders;\n        this.allowFileSelection = !!this.options.canSelectFiles;\n        this.separator = this.labelService.getSeparator(this.scheme, this.remoteAuthority);\n        this.hidden = false;\n        this.isWindows = await this.checkIsWindowsOS();\n        let homedir = this.options.defaultUri ? this.options.defaultUri : this.workspaceContextService.getWorkspace().folders[0].uri;\n        let stat;\n        const ext = resources.extname(homedir);\n        if (this.options.defaultUri) {\n            try {\n                stat = await this.fileService.stat(this.options.defaultUri);\n            }\n            catch (e) {\n            }\n            if (!stat || !stat.isDirectory) {\n                homedir = resources.dirname(this.options.defaultUri);\n                this.trailing = resources.basename(this.options.defaultUri);\n            }\n        }\n        return ( new Promise((resolve) => {\n            this.filePickBox = this.quickInputService.createQuickPick();\n            this.busy = true;\n            this.filePickBox.matchOnLabel = false;\n            this.filePickBox.sortByLabel = false;\n            this.filePickBox.autoFocusOnList = false;\n            this.filePickBox.ignoreFocusOut = true;\n            this.filePickBox.ok = true;\n            if ((this.scheme !== Schemas.file) && this.options && this.options.availableFileSystems && (this.options.availableFileSystems.length > 1) && (this.options.availableFileSystems.indexOf(Schemas.file) > -1)) {\n                this.filePickBox.customButton = true;\n                this.filePickBox.customLabel = ( nls.localize('remoteFileDialog.local', 'Show Local'));\n                let action;\n                if (isSave) {\n                    action = SaveLocalFileCommand;\n                }\n                else {\n                    action = this.allowFileSelection ? (this.allowFolderSelection ? OpenLocalFileFolderCommand : OpenLocalFileCommand) : OpenLocalFolderCommand;\n                }\n                const keybinding = this.keybindingService.lookupKeybinding(action.ID);\n                if (keybinding) {\n                    const label = keybinding.getLabel();\n                    if (label) {\n                        this.filePickBox.customHover = format('{0} ({1})', action.LABEL, label);\n                    }\n                }\n            }\n            let isResolving = 0;\n            let isAcceptHandled = false;\n            this.currentFolder = resources.dirname(homedir);\n            this.userEnteredPathSegment = '';\n            this.autoCompletePathSegment = '';\n            this.filePickBox.title = this.options.title;\n            this.filePickBox.value = this.pathFromUri(this.currentFolder, true);\n            this.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n            this.filePickBox.items = [];\n            function doResolve(dialog, uri) {\n                if (uri) {\n                    uri = resources.addTrailingPathSeparator(uri, dialog.separator);\n                    uri = resources.removeTrailingPathSeparator(uri);\n                }\n                resolve(uri);\n                dialog.contextKey.set(false);\n                dialog.filePickBox.dispose();\n                dispose(dialog.disposables);\n            }\n            this.filePickBox.onDidCustom(() => {\n                if (isAcceptHandled || this.busy) {\n                    return;\n                }\n                isAcceptHandled = true;\n                isResolving++;\n                if (this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n                    this.options.availableFileSystems = this.options.availableFileSystems.slice(1);\n                }\n                this.filePickBox.hide();\n                if (isSave) {\n                    return this.fileDialogService.showSaveDialog(this.options).then(result => {\n                        doResolve(this, result);\n                    });\n                }\n                else {\n                    return this.fileDialogService.showOpenDialog(this.options).then(result => {\n                        doResolve(this, result ? result[0] : undefined);\n                    });\n                }\n            });\n            function handleAccept(dialog) {\n                if (dialog.busy) {\n                    dialog.onBusyChangeEmitter.event((busy) => {\n                        if (!busy) {\n                            handleAccept(dialog);\n                        }\n                    });\n                    return;\n                }\n                else if (isAcceptHandled) {\n                    return;\n                }\n                isAcceptHandled = true;\n                isResolving++;\n                dialog.onDidAccept().then(resolveValue => {\n                    if (resolveValue) {\n                        dialog.filePickBox.hide();\n                        doResolve(dialog, resolveValue);\n                    }\n                    else if (dialog.hidden) {\n                        doResolve(dialog, undefined);\n                    }\n                    else {\n                        isResolving--;\n                        isAcceptHandled = false;\n                    }\n                });\n            }\n            this.filePickBox.onDidAccept(_ => {\n                handleAccept(this);\n            });\n            this.filePickBox.onDidChangeActive(i => {\n                isAcceptHandled = false;\n                if ((i.length === 1) && this.isSelectionChangeFromUser()) {\n                    this.filePickBox.validationMessage = undefined;\n                    const userPath = this.constructFullUserPath();\n                    if (!equalsIgnoreCase(this.filePickBox.value.substring(0, userPath.length), userPath)) {\n                        this.filePickBox.valueSelection = [0, this.filePickBox.value.length];\n                        this.insertText(userPath, userPath);\n                    }\n                    this.setAutoComplete(userPath, this.userEnteredPathSegment, i[0], true);\n                }\n            });\n            this.filePickBox.onDidChangeValue(async (value) => {\n                return this.handleValueChange(value);\n            });\n            this.filePickBox.onDidHide(() => {\n                this.hidden = true;\n                if (isResolving === 0) {\n                    doResolve(this, undefined);\n                }\n            });\n            this.filePickBox.show();\n            this.contextKey.set(true);\n            this.updateItems(homedir, true, this.trailing).then(() => {\n                if (this.trailing) {\n                    this.filePickBox.valueSelection = [this.filePickBox.value.length - this.trailing.length, this.filePickBox.value.length - ext.length];\n                }\n                else {\n                    this.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n                }\n                this.busy = false;\n            });\n        }));\n    }\n    async handleValueChange(value) {\n        try {\n            if (this.isValueChangeFromUser()) {\n                if (!equalsIgnoreCase(value, this.constructFullUserPath()) && !this.isBadSubpath(value)) {\n                    this.filePickBox.validationMessage = undefined;\n                    const filePickBoxUri = this.filePickBoxValue();\n                    let updated = UpdateResult.NotUpdated;\n                    if (!resources.extUriIgnorePathCase.isEqual(this.currentFolder, filePickBoxUri)) {\n                        updated = await this.tryUpdateItems(value, filePickBoxUri);\n                    }\n                    if ((updated === UpdateResult.NotUpdated) || (updated === UpdateResult.UpdatedWithTrailing)) {\n                        this.setActiveItems(value);\n                    }\n                }\n                else {\n                    this.filePickBox.activeItems = [];\n                    this.userEnteredPathSegment = '';\n                }\n            }\n        }\n        catch {\n        }\n    }\n    isBadSubpath(value) {\n        return this.badPath && (value.length > this.badPath.length) && equalsIgnoreCase(value.substring(0, this.badPath.length), this.badPath);\n    }\n    isValueChangeFromUser() {\n        if (equalsIgnoreCase(this.filePickBox.value, this.pathAppend(this.currentFolder, this.userEnteredPathSegment + this.autoCompletePathSegment))) {\n            return false;\n        }\n        return true;\n    }\n    isSelectionChangeFromUser() {\n        if (this.activeItem === (this.filePickBox.activeItems ? this.filePickBox.activeItems[0] : undefined)) {\n            return false;\n        }\n        return true;\n    }\n    constructFullUserPath() {\n        const currentFolderPath = this.pathFromUri(this.currentFolder);\n        if (equalsIgnoreCase(this.filePickBox.value.substr(0, this.userEnteredPathSegment.length), this.userEnteredPathSegment)) {\n            if (equalsIgnoreCase(this.filePickBox.value.substr(0, currentFolderPath.length), currentFolderPath)) {\n                return currentFolderPath;\n            }\n            else {\n                return this.userEnteredPathSegment;\n            }\n        }\n        else {\n            return this.pathAppend(this.currentFolder, this.userEnteredPathSegment);\n        }\n    }\n    filePickBoxValue() {\n        const directUri = this.remoteUriFrom(this.filePickBox.value.trimRight(), this.currentFolder);\n        const currentPath = this.pathFromUri(this.currentFolder);\n        if (equalsIgnoreCase(this.filePickBox.value, currentPath)) {\n            return this.currentFolder;\n        }\n        const currentDisplayUri = this.remoteUriFrom(currentPath, this.currentFolder);\n        const relativePath = resources.relativePath(currentDisplayUri, directUri);\n        const isSameRoot = (this.filePickBox.value.length > 1 && currentPath.length > 1) ? equalsIgnoreCase(this.filePickBox.value.substr(0, 2), currentPath.substr(0, 2)) : false;\n        if (relativePath && isSameRoot) {\n            let path = resources.joinPath(this.currentFolder, relativePath);\n            const directBasename = resources.basename(directUri);\n            if ((directBasename === '.') || (directBasename === '..')) {\n                path = this.remoteUriFrom(this.pathAppend(path, directBasename), this.currentFolder);\n            }\n            return resources.hasTrailingPathSeparator(directUri) ? resources.addTrailingPathSeparator(path) : path;\n        }\n        else {\n            return directUri;\n        }\n    }\n    async onDidAccept() {\n        this.busy = true;\n        if (this.filePickBox.activeItems.length === 1) {\n            const item = this.filePickBox.selectedItems[0];\n            if (item.isFolder) {\n                if (this.trailing) {\n                    await this.updateItems(item.uri, true, this.trailing);\n                }\n                else {\n                    const newPath = this.pathFromUri(item.uri);\n                    if (startsWithIgnoreCase(newPath, this.filePickBox.value) && (equalsIgnoreCase(item.label, resources.basename(item.uri)))) {\n                        this.filePickBox.valueSelection = [this.pathFromUri(this.currentFolder).length, this.filePickBox.value.length];\n                        this.insertText(newPath, this.basenameWithTrailingSlash(item.uri));\n                    }\n                    else if ((item.label === '..') && startsWithIgnoreCase(this.filePickBox.value, newPath)) {\n                        this.filePickBox.valueSelection = [newPath.length, this.filePickBox.value.length];\n                        this.insertText(newPath, '');\n                    }\n                    else {\n                        await this.updateItems(item.uri, true);\n                    }\n                }\n                this.filePickBox.busy = false;\n                return;\n            }\n        }\n        else {\n            if ((await this.tryUpdateItems(this.filePickBox.value, this.filePickBoxValue())) !== UpdateResult.NotUpdated) {\n                this.filePickBox.busy = false;\n                return;\n            }\n        }\n        let resolveValue;\n        if (this.filePickBox.activeItems.length === 0) {\n            resolveValue = this.filePickBoxValue();\n        }\n        else if (this.filePickBox.activeItems.length === 1) {\n            resolveValue = this.filePickBox.selectedItems[0].uri;\n        }\n        if (resolveValue) {\n            resolveValue = this.addPostfix(resolveValue);\n        }\n        if (await this.validate(resolveValue)) {\n            this.busy = false;\n            return resolveValue;\n        }\n        this.busy = false;\n        return undefined;\n    }\n    root(value) {\n        let lastDir = value;\n        let dir = resources.dirname(value);\n        while (!resources.isEqual(lastDir, dir)) {\n            lastDir = dir;\n            dir = resources.dirname(dir);\n        }\n        return dir;\n    }\n    tildaReplace(value) {\n        const home = this.trueHome;\n        if ((value.length > 0) && (value[0] === '~')) {\n            return resources.joinPath(home, value.substring(1));\n        }\n        return this.remoteUriFrom(value);\n    }\n    tryAddTrailingSeparatorToDirectory(uri, stat) {\n        if (stat.isDirectory) {\n            if (!this.endsWithSlash(uri.path)) {\n                return resources.addTrailingPathSeparator(uri);\n            }\n        }\n        return uri;\n    }\n    async tryUpdateItems(value, valueUri) {\n        if ((value.length > 0) && (value[0] === '~')) {\n            const newDir = this.tildaReplace(value);\n            return (await this.updateItems(newDir, true)) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n        }\n        else if (value === '\\\\') {\n            valueUri = this.root(this.currentFolder);\n            value = this.pathFromUri(valueUri);\n            return (await this.updateItems(valueUri, true)) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n        }\n        else if (!resources.extUriIgnorePathCase.isEqual(this.currentFolder, valueUri) && (this.endsWithSlash(value) || (!resources.extUriIgnorePathCase.isEqual(this.currentFolder, resources.dirname(valueUri)) && resources.extUriIgnorePathCase.isEqualOrParent(this.currentFolder, resources.dirname(valueUri))))) {\n            let stat;\n            try {\n                stat = await this.fileService.stat(valueUri);\n            }\n            catch (e) {\n            }\n            if (stat && stat.isDirectory && (resources.basename(valueUri) !== '.') && this.endsWithSlash(value)) {\n                valueUri = this.tryAddTrailingSeparatorToDirectory(valueUri, stat);\n                return (await this.updateItems(valueUri)) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n            }\n            else if (this.endsWithSlash(value)) {\n                this.filePickBox.validationMessage = ( nls.localize('remoteFileDialog.badPath', 'The path does not exist.'));\n                this.badPath = value;\n                return UpdateResult.InvalidPath;\n            }\n            else {\n                let inputUriDirname = resources.dirname(valueUri);\n                const currentFolderWithoutSep = resources.removeTrailingPathSeparator(resources.addTrailingPathSeparator(this.currentFolder));\n                const inputUriDirnameWithoutSep = resources.removeTrailingPathSeparator(resources.addTrailingPathSeparator(inputUriDirname));\n                if (!resources.extUriIgnorePathCase.isEqual(currentFolderWithoutSep, inputUriDirnameWithoutSep)\n                    && (!/^[a-zA-Z]:$/.test(this.filePickBox.value)\n                        || !equalsIgnoreCase(this.pathFromUri(this.currentFolder).substring(0, this.filePickBox.value.length), this.filePickBox.value))) {\n                    let statWithoutTrailing;\n                    try {\n                        statWithoutTrailing = await this.fileService.stat(inputUriDirname);\n                    }\n                    catch (e) {\n                    }\n                    if (statWithoutTrailing && statWithoutTrailing.isDirectory) {\n                        this.badPath = undefined;\n                        inputUriDirname = this.tryAddTrailingSeparatorToDirectory(inputUriDirname, statWithoutTrailing);\n                        return (await this.updateItems(inputUriDirname, false, resources.basename(valueUri))) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n                    }\n                }\n            }\n        }\n        this.badPath = undefined;\n        return UpdateResult.NotUpdated;\n    }\n    tryUpdateTrailing(value) {\n        const ext = resources.extname(value);\n        if (this.trailing && ext) {\n            this.trailing = resources.basename(value);\n        }\n    }\n    setActiveItems(value) {\n        value = this.pathFromUri(this.tildaReplace(value));\n        const asUri = this.remoteUriFrom(value);\n        const inputBasename = resources.basename(asUri);\n        const userPath = this.constructFullUserPath();\n        const pathsEqual = equalsIgnoreCase(userPath, value.substring(0, userPath.length)) ||\n            equalsIgnoreCase(value, userPath.substring(0, value.length));\n        if (pathsEqual) {\n            let hasMatch = false;\n            for (let i = 0; i < this.filePickBox.items.length; i++) {\n                const item = this.filePickBox.items[i];\n                if (this.setAutoComplete(value, inputBasename, item)) {\n                    hasMatch = true;\n                    break;\n                }\n            }\n            if (!hasMatch) {\n                const userBasename = inputBasename.length >= 2 ? userPath.substring(userPath.length - inputBasename.length + 2) : '';\n                this.userEnteredPathSegment = (userBasename === inputBasename) ? inputBasename : '';\n                this.autoCompletePathSegment = '';\n                this.filePickBox.activeItems = [];\n                this.tryUpdateTrailing(asUri);\n            }\n        }\n        else {\n            this.userEnteredPathSegment = inputBasename;\n            this.autoCompletePathSegment = '';\n            this.filePickBox.activeItems = [];\n            this.tryUpdateTrailing(asUri);\n        }\n    }\n    setAutoComplete(startingValue, startingBasename, quickPickItem, force = false) {\n        if (this.busy) {\n            this.userEnteredPathSegment = startingBasename;\n            this.autoCompletePathSegment = '';\n            return false;\n        }\n        const itemBasename = quickPickItem.label;\n        if (itemBasename === '..') {\n            this.userEnteredPathSegment = '';\n            this.autoCompletePathSegment = '';\n            this.activeItem = quickPickItem;\n            if (force) {\n                document.execCommand('insertText', false, '');\n            }\n            return false;\n        }\n        else if (!force && (itemBasename.length >= startingBasename.length) && equalsIgnoreCase(itemBasename.substr(0, startingBasename.length), startingBasename)) {\n            this.userEnteredPathSegment = startingBasename;\n            this.activeItem = quickPickItem;\n            this.autoCompletePathSegment = '';\n            if (quickPickItem.isFolder || !this.trailing) {\n                this.filePickBox.activeItems = [quickPickItem];\n            }\n            else {\n                this.filePickBox.activeItems = [];\n            }\n            return true;\n        }\n        else if (force && (!equalsIgnoreCase(this.basenameWithTrailingSlash(quickPickItem.uri), (this.userEnteredPathSegment + this.autoCompletePathSegment)))) {\n            this.userEnteredPathSegment = '';\n            if (!this.accessibilityService.isScreenReaderOptimized()) {\n                this.autoCompletePathSegment = this.trimTrailingSlash(itemBasename);\n            }\n            this.activeItem = quickPickItem;\n            if (!this.accessibilityService.isScreenReaderOptimized()) {\n                this.filePickBox.valueSelection = [this.pathFromUri(this.currentFolder, true).length, this.filePickBox.value.length];\n                this.insertText(this.pathAppend(this.currentFolder, this.autoCompletePathSegment), this.autoCompletePathSegment);\n                this.filePickBox.valueSelection = [this.filePickBox.value.length - this.autoCompletePathSegment.length, this.filePickBox.value.length];\n            }\n            return true;\n        }\n        else {\n            this.userEnteredPathSegment = startingBasename;\n            this.autoCompletePathSegment = '';\n            return false;\n        }\n    }\n    insertText(wholeValue, insertText) {\n        if (this.filePickBox.inputHasFocus()) {\n            document.execCommand('insertText', false, insertText);\n            if (this.filePickBox.value !== wholeValue) {\n                this.filePickBox.value = wholeValue;\n                this.handleValueChange(wholeValue);\n            }\n        }\n        else {\n            this.filePickBox.value = wholeValue;\n            this.handleValueChange(wholeValue);\n        }\n    }\n    addPostfix(uri) {\n        let result = uri;\n        if (this.requiresTrailing && this.options.filters && this.options.filters.length > 0 && !resources.hasTrailingPathSeparator(uri)) {\n            let hasExt = false;\n            const currentExt = resources.extname(uri).substr(1);\n            for (let i = 0; i < this.options.filters.length; i++) {\n                for (let j = 0; j < this.options.filters[i].extensions.length; j++) {\n                    if ((this.options.filters[i].extensions[j] === '*') || (this.options.filters[i].extensions[j] === currentExt)) {\n                        hasExt = true;\n                        break;\n                    }\n                }\n                if (hasExt) {\n                    break;\n                }\n            }\n            if (!hasExt) {\n                result = resources.joinPath(resources.dirname(uri), resources.basename(uri) + '.' + this.options.filters[0].extensions[0]);\n            }\n        }\n        return result;\n    }\n    trimTrailingSlash(path) {\n        return ((path.length > 1) && this.endsWithSlash(path)) ? path.substr(0, path.length - 1) : path;\n    }\n    yesNoPrompt(uri, message) {\n        const prompt = this.quickInputService.createQuickPick();\n        prompt.title = message;\n        prompt.ignoreFocusOut = true;\n        prompt.ok = true;\n        prompt.customButton = true;\n        prompt.customLabel = ( nls.localize('remoteFileDialog.cancel', 'Cancel'));\n        prompt.value = this.pathFromUri(uri);\n        let isResolving = false;\n        return ( new Promise(resolve => {\n            prompt.onDidAccept(() => {\n                isResolving = true;\n                prompt.hide();\n                resolve(true);\n            });\n            prompt.onDidHide(() => {\n                if (!isResolving) {\n                    resolve(false);\n                }\n                this.filePickBox.show();\n                this.hidden = false;\n                this.filePickBox.items = this.filePickBox.items;\n                prompt.dispose();\n            });\n            prompt.onDidChangeValue(() => {\n                prompt.hide();\n            });\n            prompt.onDidCustom(() => {\n                prompt.hide();\n            });\n            prompt.show();\n        }));\n    }\n    async validate(uri) {\n        if (uri === undefined) {\n            this.filePickBox.validationMessage = ( nls.localize('remoteFileDialog.invalidPath', 'Please enter a valid path.'));\n            return Promise.resolve(false);\n        }\n        let stat;\n        let statDirname;\n        try {\n            statDirname = await this.fileService.stat(resources.dirname(uri));\n            stat = await this.fileService.stat(uri);\n        }\n        catch (e) {\n        }\n        if (this.requiresTrailing) {\n            if (stat && stat.isDirectory) {\n                this.filePickBox.validationMessage = ( nls.localize(\n                    'remoteFileDialog.validateFolder',\n                    'The folder already exists. Please use a new file name.'\n                ));\n                return Promise.resolve(false);\n            }\n            else if (stat) {\n                const message = ( nls.localize(\n                    'remoteFileDialog.validateExisting',\n                    '{0} already exists. Are you sure you want to overwrite it?',\n                    resources.basename(uri)\n                ));\n                return this.yesNoPrompt(uri, message);\n            }\n            else if (!(isValidBasename(resources.basename(uri), this.isWindows))) {\n                this.filePickBox.validationMessage = ( nls.localize('remoteFileDialog.validateBadFilename', 'Please enter a valid file name.'));\n                return Promise.resolve(false);\n            }\n            else if (!statDirname) {\n                const message = ( nls.localize(\n                    'remoteFileDialog.validateCreateDirectory',\n                    'The folder {0} does not exist. Would you like to create it?',\n                    resources.basename(resources.dirname(uri))\n                ));\n                return this.yesNoPrompt(uri, message);\n            }\n            else if (!statDirname.isDirectory) {\n                this.filePickBox.validationMessage = ( nls.localize(\n                    'remoteFileDialog.validateNonexistentDir',\n                    'Please enter a path that exists.'\n                ));\n                return Promise.resolve(false);\n            }\n        }\n        else {\n            if (!stat) {\n                this.filePickBox.validationMessage = ( nls.localize(\n                    'remoteFileDialog.validateNonexistentDir',\n                    'Please enter a path that exists.'\n                ));\n                return Promise.resolve(false);\n            }\n            else if (uri.path === '/' && this.isWindows) {\n                this.filePickBox.validationMessage = ( nls.localize(\n                    'remoteFileDialog.windowsDriveLetter',\n                    'Please start the path with a drive letter.'\n                ));\n                return Promise.resolve(false);\n            }\n            else if (stat.isDirectory && !this.allowFolderSelection) {\n                this.filePickBox.validationMessage = ( nls.localize('remoteFileDialog.validateFileOnly', 'Please select a file.'));\n                return Promise.resolve(false);\n            }\n            else if (!stat.isDirectory && !this.allowFileSelection) {\n                this.filePickBox.validationMessage = ( nls.localize('remoteFileDialog.validateFolderOnly', 'Please select a folder.'));\n                return Promise.resolve(false);\n            }\n        }\n        return Promise.resolve(true);\n    }\n    async updateItems(newFolder, force = false, trailing) {\n        this.busy = true;\n        this.autoCompletePathSegment = '';\n        const isSave = !!trailing;\n        let result = false;\n        const updatingPromise = createCancelablePromise(async (token) => {\n            let folderStat;\n            try {\n                folderStat = await this.fileService.resolve(newFolder);\n                if (!folderStat.isDirectory) {\n                    trailing = resources.basename(newFolder);\n                    newFolder = resources.dirname(newFolder);\n                    folderStat = undefined;\n                    result = true;\n                }\n            }\n            catch (e) {\n            }\n            const newValue = trailing ? this.pathAppend(newFolder, trailing) : this.pathFromUri(newFolder, true);\n            this.currentFolder = this.endsWithSlash(newFolder.path) ? newFolder : resources.addTrailingPathSeparator(newFolder, this.separator);\n            this.userEnteredPathSegment = trailing ? trailing : '';\n            return this.createItems(folderStat, this.currentFolder, token).then(items => {\n                if (token.isCancellationRequested) {\n                    this.busy = false;\n                    return false;\n                }\n                this.filePickBox.items = items;\n                this.filePickBox.activeItems = [this.filePickBox.items[0]];\n                this.filePickBox.activeItems = [];\n                if (!equalsIgnoreCase(this.filePickBox.value, newValue) && force) {\n                    this.filePickBox.valueSelection = [0, this.filePickBox.value.length];\n                    this.insertText(newValue, newValue);\n                }\n                if (force && trailing && isSave) {\n                    this.filePickBox.valueSelection = [this.filePickBox.value.length - trailing.length, this.filePickBox.value.length - trailing.length];\n                }\n                else if (!trailing) {\n                    this.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n                }\n                this.busy = false;\n                this.updatingPromise = undefined;\n                return result;\n            });\n        });\n        if (this.updatingPromise !== undefined) {\n            this.updatingPromise.cancel();\n        }\n        this.updatingPromise = updatingPromise;\n        return updatingPromise;\n    }\n    pathFromUri(uri, endWithSeparator = false) {\n        let result = normalizeDriveLetter(uri.fsPath, this.isWindows).replace(/\\n/g, '');\n        if (this.separator === '/') {\n            result = result.replace(/\\\\/g, this.separator);\n        }\n        else {\n            result = result.replace(/\\//g, this.separator);\n        }\n        if (endWithSeparator && !this.endsWithSlash(result)) {\n            result = result + this.separator;\n        }\n        return result;\n    }\n    pathAppend(uri, additional) {\n        if ((additional === '..') || (additional === '.')) {\n            const basePath = this.pathFromUri(uri, true);\n            return basePath + additional;\n        }\n        else {\n            return this.pathFromUri(resources.joinPath(uri, additional));\n        }\n    }\n    async checkIsWindowsOS() {\n        let isWindowsOS = isWindows;\n        const env = await this.getRemoteAgentEnvironment();\n        if (env) {\n            isWindowsOS = env.os === 1 ;\n        }\n        return isWindowsOS;\n    }\n    endsWithSlash(s) {\n        return /[\\/\\\\]$/.test(s);\n    }\n    basenameWithTrailingSlash(fullPath) {\n        const child = this.pathFromUri(fullPath, true);\n        const parent = this.pathFromUri(resources.dirname(fullPath), true);\n        return child.substring(parent.length);\n    }\n    async createBackItem(currFolder) {\n        const fileRepresentationCurr = this.currentFolder.with({ scheme: Schemas.file, authority: '' });\n        const fileRepresentationParent = resources.dirname(fileRepresentationCurr);\n        if (!resources.isEqual(fileRepresentationCurr, fileRepresentationParent)) {\n            const parentFolder = resources.dirname(currFolder);\n            if (await this.fileService.exists(parentFolder)) {\n                return { label: '..', uri: resources.addTrailingPathSeparator(parentFolder, this.separator), isFolder: true };\n            }\n        }\n        return undefined;\n    }\n    async createItems(folder, currentFolder, token) {\n        const result = [];\n        const backDir = await this.createBackItem(currentFolder);\n        try {\n            if (!folder) {\n                folder = await this.fileService.resolve(currentFolder);\n            }\n            const items = folder.children ? await Promise.all(( folder.children.map(child => this.createItem(child, currentFolder, token)))) : [];\n            for (const item of items) {\n                if (item) {\n                    result.push(item);\n                }\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const sorted = result.sort((i1, i2) => {\n            if (i1.isFolder !== i2.isFolder) {\n                return i1.isFolder ? -1 : 1;\n            }\n            const trimmed1 = this.endsWithSlash(i1.label) ? i1.label.substr(0, i1.label.length - 1) : i1.label;\n            const trimmed2 = this.endsWithSlash(i2.label) ? i2.label.substr(0, i2.label.length - 1) : i2.label;\n            return trimmed1.localeCompare(trimmed2);\n        });\n        if (backDir) {\n            sorted.unshift(backDir);\n        }\n        return sorted;\n    }\n    extname(file) {\n        const ext = resources.extname(file);\n        if (ext.length === 0) {\n            const basename = resources.basename(file);\n            if (basename.startsWith('.')) {\n                return basename;\n            }\n        }\n        else {\n            return ext;\n        }\n        return '';\n    }\n    filterFile(file) {\n        if (this.options.filters) {\n            const ext = this.extname(file);\n            for (let i = 0; i < this.options.filters.length; i++) {\n                for (let j = 0; j < this.options.filters[i].extensions.length; j++) {\n                    const testExt = this.options.filters[i].extensions[j];\n                    if ((testExt === '*') || (ext === ('.' + testExt))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n    async createItem(stat, parent, token) {\n        if (token.isCancellationRequested) {\n            return undefined;\n        }\n        let fullPath = resources.joinPath(parent, stat.name);\n        if (stat.isDirectory) {\n            const filename = resources.basename(fullPath);\n            fullPath = resources.addTrailingPathSeparator(fullPath, this.separator);\n            return { label: filename, uri: fullPath, isFolder: true, iconClasses: getIconClasses(this.modelService, this.languageService, fullPath || undefined, FileKind.FOLDER) };\n        }\n        else if (!stat.isDirectory && this.allowFileSelection && this.filterFile(fullPath)) {\n            return { label: stat.name, uri: fullPath, isFolder: false, iconClasses: getIconClasses(this.modelService, this.languageService, fullPath || undefined) };\n        }\n        return undefined;\n    }\n};\nSimpleFileDialog = ( __decorate([\n    ( __param(0, IFileService)),\n    ( __param(1, IQuickInputService)),\n    ( __param(2, ILabelService)),\n    ( __param(3, IWorkspaceContextService)),\n    ( __param(4, INotificationService)),\n    ( __param(5, IFileDialogService)),\n    ( __param(6, IModelService)),\n    ( __param(7, ILanguageService)),\n    ( __param(8, IWorkbenchEnvironmentService)),\n    ( __param(9, IRemoteAgentService)),\n    ( __param(10, IPathService)),\n    ( __param(11, IKeybindingService)),\n    ( __param(12, IContextKeyService)),\n    ( __param(13, IAccessibilityService))\n], SimpleFileDialog));\nexport { OpenLocalFileCommand, OpenLocalFileFolderCommand, OpenLocalFolderCommand, RemoteFileDialogContext, SaveLocalFileCommand, SimpleFileDialog };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { isWorkspaceToOpen, isFileToOpen } from '../../../../platform/window/common/window.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { isSavedWorkspace, isTemporaryWorkspace, IWorkspaceContextService, WORKSPACE_EXTENSION } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IHistoryService } from '../../history/common/history.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { isAbsolute, normalize } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { SimpleFileDialog } from './simpleFileDialog.js';\nimport { IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IHostService } from '../../host/browser/host.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { coalesce, distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { trim } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { PLAINTEXT_EXTENSION } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { EditorOpenSource } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { getFileNamesMessage, IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet AbstractFileDialogService = class AbstractFileDialogService {\n    constructor(hostService, contextService, historyService, environmentService, instantiationService, configurationService, fileService, openerService, dialogService, languageService, workspacesService, labelService, pathService, commandService, editorService, codeEditorService, logService) {\n        this.hostService = hostService;\n        this.contextService = contextService;\n        this.historyService = historyService;\n        this.environmentService = environmentService;\n        this.instantiationService = instantiationService;\n        this.configurationService = configurationService;\n        this.fileService = fileService;\n        this.openerService = openerService;\n        this.dialogService = dialogService;\n        this.languageService = languageService;\n        this.workspacesService = workspacesService;\n        this.labelService = labelService;\n        this.pathService = pathService;\n        this.commandService = commandService;\n        this.editorService = editorService;\n        this.codeEditorService = codeEditorService;\n        this.logService = logService;\n    }\n    async defaultFilePath(schemeFilter = this.getSchemeFilterForWindow()) {\n        let candidate = this.historyService.getLastActiveFile(schemeFilter);\n        if (!candidate) {\n            candidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n        }\n        else {\n            candidate = resources.dirname(candidate);\n        }\n        if (!candidate) {\n            candidate = await this.preferredHome(schemeFilter);\n        }\n        return candidate;\n    }\n    async defaultFolderPath(schemeFilter = this.getSchemeFilterForWindow()) {\n        let candidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n        if (!candidate) {\n            candidate = this.historyService.getLastActiveFile(schemeFilter);\n        }\n        if (!candidate) {\n            return this.preferredHome(schemeFilter);\n        }\n        return resources.dirname(candidate);\n    }\n    async preferredHome(schemeFilter = this.getSchemeFilterForWindow()) {\n        const preferLocal = schemeFilter === Schemas.file;\n        const preferredHomeConfig = this.configurationService.inspect('files.dialog.defaultPath');\n        const preferredHomeCandidate = preferLocal ? preferredHomeConfig.userLocalValue : preferredHomeConfig.userRemoteValue;\n        if (preferredHomeCandidate) {\n            const isPreferredHomeCandidateAbsolute = preferLocal ? isAbsolute(preferredHomeCandidate) : (await this.pathService.path).isAbsolute(preferredHomeCandidate);\n            if (isPreferredHomeCandidateAbsolute) {\n                const preferredHomeNormalized = preferLocal ? normalize(preferredHomeCandidate) : (await this.pathService.path).normalize(preferredHomeCandidate);\n                const preferredHome = resources.toLocalResource(await this.pathService.fileURI(preferredHomeNormalized), this.environmentService.remoteAuthority, this.pathService.defaultUriScheme);\n                if (await this.fileService.exists(preferredHome)) {\n                    return preferredHome;\n                }\n            }\n        }\n        return this.pathService.userHome({ preferLocal });\n    }\n    async defaultWorkspacePath(schemeFilter = this.getSchemeFilterForWindow()) {\n        let defaultWorkspacePath;\n        if (this.contextService.getWorkbenchState() === 3 ) {\n            const configuration = this.contextService.getWorkspace().configuration;\n            if (configuration?.scheme === schemeFilter && isSavedWorkspace(configuration, this.environmentService) && !isTemporaryWorkspace(configuration)) {\n                defaultWorkspacePath = resources.dirname(configuration);\n            }\n        }\n        if (!defaultWorkspacePath) {\n            defaultWorkspacePath = await this.defaultFilePath(schemeFilter);\n        }\n        return defaultWorkspacePath;\n    }\n    async showSaveConfirm(fileNamesOrResources) {\n        if (this.skipDialogs()) {\n            this.logService.trace('FileDialogService: refused to show save confirmation dialog in tests.');\n            return 1 ;\n        }\n        return this.doShowSaveConfirm(fileNamesOrResources);\n    }\n    skipDialogs() {\n        if (this.environmentService.isExtensionDevelopment && this.environmentService.extensionTestsLocationURI) {\n            return true;\n        }\n        return !!this.environmentService.enableSmokeTestDriver;\n    }\n    async doShowSaveConfirm(fileNamesOrResources) {\n        if (fileNamesOrResources.length === 0) {\n            return 1 ;\n        }\n        let message;\n        let detail = ( nls.localize('saveChangesDetail', \"Your changes will be lost if you don't save them.\"));\n        if (fileNamesOrResources.length === 1) {\n            message = ( nls.localize(\n                'saveChangesMessage',\n                \"Do you want to save the changes you made to {0}?\",\n                typeof fileNamesOrResources[0] === 'string' ? fileNamesOrResources[0] : resources.basename(fileNamesOrResources[0])\n            ));\n        }\n        else {\n            message = ( nls.localize(\n                'saveChangesMessages',\n                \"Do you want to save the changes to the following {0} files?\",\n                fileNamesOrResources.length\n            ));\n            detail = getFileNamesMessage(fileNamesOrResources) + '\\n' + detail;\n        }\n        const { result } = await this.dialogService.prompt({\n            type: Severity.Warning,\n            message,\n            detail,\n            buttons: [\n                {\n                    label: fileNamesOrResources.length > 1 ?\n                        ( nls.localize({ key: 'saveAll', comment: ['&& denotes a mnemonic'] }, \"&&Save All\")) :\n                        ( nls.localize({ key: 'save', comment: ['&& denotes a mnemonic'] }, \"&&Save\")),\n                    run: () => 0\n                },\n                {\n                    label: ( nls.localize({ key: 'dontSave', comment: ['&& denotes a mnemonic'] }, \"Do&&n't Save\")),\n                    run: () => 1\n                }\n            ],\n            cancelButton: {\n                run: () => 2\n            }\n        });\n        return result;\n    }\n    addFileSchemaIfNeeded(schema, _isFolder) {\n        return schema === Schemas.untitled ? [Schemas.file] : (schema !== Schemas.file ? [schema, Schemas.file] : [schema]);\n    }\n    async pickFileFolderAndOpenSimplified(schema, options, preferNewWindow) {\n        const title = ( nls.localize('openFileOrFolder.title', 'Open File or Folder'));\n        const availableFileSystems = this.addFileSchemaIfNeeded(schema);\n        const uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n        if (uri) {\n            const stat = await this.fileService.stat(uri);\n            const toOpen = stat.isDirectory ? { folderUri: uri } : { fileUri: uri };\n            if (!isWorkspaceToOpen(toOpen) && isFileToOpen(toOpen)) {\n                this.addFileToRecentlyOpened(toOpen.fileUri);\n            }\n            if (stat.isDirectory || options.forceNewWindow || preferNewWindow) {\n                await this.hostService.openWindow([toOpen], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n            }\n            else {\n                await this.editorService.openEditors([{ resource: uri, options: { source: EditorOpenSource.USER, pinned: true } }], undefined, { validateTrust: true });\n            }\n        }\n    }\n    async pickFileAndOpenSimplified(schema, options, preferNewWindow) {\n        const title = ( nls.localize('openFile.title', 'Open File'));\n        const availableFileSystems = this.addFileSchemaIfNeeded(schema);\n        const uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n        if (uri) {\n            this.addFileToRecentlyOpened(uri);\n            if (options.forceNewWindow || preferNewWindow) {\n                await this.hostService.openWindow([{ fileUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n            }\n            else {\n                await this.editorService.openEditors([{ resource: uri, options: { source: EditorOpenSource.USER, pinned: true } }], undefined, { validateTrust: true });\n            }\n        }\n    }\n    addFileToRecentlyOpened(uri) {\n        this.workspacesService.addRecentlyOpened([{ fileUri: uri, label: this.labelService.getUriLabel(uri) }]);\n    }\n    async pickFolderAndOpenSimplified(schema, options) {\n        const title = ( nls.localize('openFolder.title', 'Open Folder'));\n        const availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n        const uri = await this.pickResource({ canSelectFiles: false, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n        if (uri) {\n            return this.hostService.openWindow([{ folderUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n        }\n    }\n    async pickWorkspaceAndOpenSimplified(schema, options) {\n        const title = ( nls.localize('openWorkspace.title', 'Open Workspace from File'));\n        const filters = [{ name: ( nls.localize('filterName.workspace', 'Workspace')), extensions: [WORKSPACE_EXTENSION] }];\n        const availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n        const uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, filters, availableFileSystems });\n        if (uri) {\n            return this.hostService.openWindow([{ workspaceUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n        }\n    }\n    async pickFileToSaveSimplified(schema, options) {\n        if (!options.availableFileSystems) {\n            options.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n        }\n        options.title = ( nls.localize('saveFileAs.title', 'Save As'));\n        const uri = await this.saveRemoteResource(options);\n        if (uri) {\n            this.addFileToRecentlyOpened(uri);\n        }\n        return uri;\n    }\n    async showSaveDialogSimplified(schema, options) {\n        if (!options.availableFileSystems) {\n            options.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n        }\n        return this.saveRemoteResource(options);\n    }\n    async showOpenDialogSimplified(schema, options) {\n        if (!options.availableFileSystems) {\n            options.availableFileSystems = this.addFileSchemaIfNeeded(schema, options.canSelectFolders);\n        }\n        const uri = await this.pickResource(options);\n        return uri ? [uri] : undefined;\n    }\n    getSimpleFileDialog() {\n        return this.instantiationService.createInstance(SimpleFileDialog);\n    }\n    pickResource(options) {\n        return this.getSimpleFileDialog().showOpenDialog(options);\n    }\n    saveRemoteResource(options) {\n        return this.getSimpleFileDialog().showSaveDialog(options);\n    }\n    getSchemeFilterForWindow(defaultUriScheme) {\n        return defaultUriScheme ?? this.pathService.defaultUriScheme;\n    }\n    getFileSystemSchema(options) {\n        return options.availableFileSystems && options.availableFileSystems[0] || this.getSchemeFilterForWindow(options.defaultUri?.scheme);\n    }\n    getWorkspaceAvailableFileSystems(options) {\n        if (options.availableFileSystems && (options.availableFileSystems.length > 0)) {\n            return options.availableFileSystems;\n        }\n        const availableFileSystems = [Schemas.file];\n        if (this.environmentService.remoteAuthority) {\n            availableFileSystems.unshift(Schemas.vscodeRemote);\n        }\n        return availableFileSystems;\n    }\n    getPickFileToSaveDialogOptions(defaultUri, availableFileSystems) {\n        const options = {\n            defaultUri,\n            title: ( nls.localize('saveAsTitle', \"Save As\")),\n            availableFileSystems\n        };\n        const ext = defaultUri ? resources.extname(defaultUri) : undefined;\n        let matchingFilter;\n        const registeredLanguageNames = this.languageService.getSortedRegisteredLanguageNames();\n        const registeredLanguageFilters = coalesce(( registeredLanguageNames.map(({ languageName, languageId }) => {\n            const extensions = this.languageService.getExtensions(languageId);\n            if (!extensions.length) {\n                return null;\n            }\n            const filter = { name: languageName, extensions: ( distinct(extensions).slice(0, 10).map(e => trim(e, '.'))) };\n            const extOrPlaintext = ext || PLAINTEXT_EXTENSION;\n            if (!matchingFilter && extensions.includes(extOrPlaintext)) {\n                matchingFilter = filter;\n                const trimmedExt = trim(extOrPlaintext, '.');\n                if (!filter.extensions.includes(trimmedExt)) {\n                    filter.extensions.unshift(trimmedExt);\n                }\n                return null;\n            }\n            return filter;\n        })));\n        if (!matchingFilter && ext) {\n            matchingFilter = { name: trim(ext, '.').toUpperCase(), extensions: [trim(ext, '.')] };\n        }\n        options.filters = coalesce([\n            { name: ( nls.localize('allFiles', \"All Files\")), extensions: ['*'] },\n            matchingFilter,\n            ...registeredLanguageFilters,\n            { name: ( nls.localize('noExt', \"No Extension\")), extensions: [''] }\n        ]);\n        return options;\n    }\n};\nAbstractFileDialogService = ( __decorate([\n    ( __param(0, IHostService)),\n    ( __param(1, IWorkspaceContextService)),\n    ( __param(2, IHistoryService)),\n    ( __param(3, IWorkbenchEnvironmentService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IFileService)),\n    ( __param(7, IOpenerService)),\n    ( __param(8, IDialogService)),\n    ( __param(9, ILanguageService)),\n    ( __param(10, IWorkspacesService)),\n    ( __param(11, ILabelService)),\n    ( __param(12, IPathService)),\n    ( __param(13, ICommandService)),\n    ( __param(14, IEditorService)),\n    ( __param(15, ICodeEditorService)),\n    ( __param(16, ILogService))\n], AbstractFileDialogService));\nexport { AbstractFileDialogService };\n","import '../missing-services.js';\nimport '../vscode/vs/workbench/browser/parts/dialogs/dialog.web.contribution.js';\nimport { DialogService } from '../vscode/vs/workbench/services/dialogs/common/dialogService.js';\nimport '../override/vs/platform/dialogs/common/dialogs.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { AbstractFileDialogService } from '../vscode/vs/workbench/services/dialogs/browser/abstractFileDialogService.js';\nimport getServiceOverride$1 from './layout.js';\nimport { unsupported } from '../tools.js';\nimport { IDialogService, IFileDialogService } from '../vscode/vs/platform/dialogs/common/dialogs.js';\nclass FileDialogService extends AbstractFileDialogService {\n    constructor() {\n        super(...arguments);\n        this.pickWorkspaceAndOpen = unsupported;\n    }\n    async pickFileFolderAndOpen(options) {\n        const schema = this.getFileSystemSchema(options);\n        if (options.defaultUri == null) {\n            options.defaultUri = await this.defaultFilePath(schema);\n        }\n        return super.pickFileFolderAndOpenSimplified(schema, options, false);\n    }\n    async pickFolderAndOpen(options) {\n        const schema = this.getFileSystemSchema(options);\n        if (options.defaultUri == null) {\n            options.defaultUri = await this.defaultFolderPath(schema);\n        }\n        return super.pickFolderAndOpenSimplified(schema, options);\n    }\n    async pickFileAndOpen(options) {\n        const schema = this.getFileSystemSchema(options);\n        if (options.defaultUri == null) {\n            options.defaultUri = await this.defaultFilePath(schema);\n        }\n        return super.pickFileAndOpenSimplified(schema, options, false);\n    }\n    async showSaveDialog(options) {\n        const schema = this.getFileSystemSchema(options);\n        return super.showSaveDialogSimplified(schema, options);\n    }\n    async showOpenDialog(options) {\n        const schema = this.getFileSystemSchema(options);\n        return super.showOpenDialogSimplified(schema, options);\n    }\n    async pickFileToSave(defaultUri, availableFileSystems) {\n        const schema = this.getFileSystemSchema({ defaultUri, availableFileSystems });\n        const options = this.getPickFileToSaveDialogOptions(defaultUri, availableFileSystems);\n        return super.pickFileToSaveSimplified(schema, options);\n    }\n}\nfunction getServiceOverride(container) {\n    return {\n        [( IDialogService.toString())]: new SyncDescriptor(DialogService, undefined, true),\n        [( IFileDialogService.toString())]: new SyncDescriptor(FileDialogService, undefined, true),\n        ...getServiceOverride$1(container)\n    };\n}\nexport { getServiceOverride as default };\n","import { isMacintosh, isNative, isWeb, isLinux } from 'monaco-editor/esm/vs/base/common/platform.js';\nfunction isWorkspaceToOpen(uriToOpen) {\n    return !!uriToOpen.workspaceUri;\n}\nfunction isFileToOpen(uriToOpen) {\n    return !!uriToOpen.fileUri;\n}\nfunction getMenuBarVisibility(configurationService) {\n    const titleBarStyle = getTitleBarStyle(configurationService);\n    const menuBarVisibility = configurationService.getValue('window.menuBarVisibility');\n    if (menuBarVisibility === 'default' || (titleBarStyle === 'native' && menuBarVisibility === 'compact') || (isMacintosh && isNative)) {\n        return 'classic';\n    }\n    else {\n        return menuBarVisibility;\n    }\n}\nfunction getTitleBarStyle(configurationService) {\n    if (isWeb) {\n        return 'custom';\n    }\n    const configuration = configurationService.getValue('window');\n    if (configuration) {\n        const useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n        if (useNativeTabs) {\n            return 'native';\n        }\n        const useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n        if (useSimpleFullScreen) {\n            return 'native';\n        }\n        const style = configuration.titleBarStyle;\n        if (style === 'native' || style === 'custom') {\n            return style;\n        }\n    }\n    return isLinux ? 'native' : 'custom';\n}\nexport { getMenuBarVisibility, getTitleBarStyle, isFileToOpen, isWorkspaceToOpen };\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Dialog","constructor","container","message","buttons","super","this","modalElement","appendChild","$","shadowElement","element","setAttribute","tabIndex","buttonStyles","Array","isArray","length","disableDefaultAction","nls","buttonsRowElement","buttonsContainer","messageRowElement","iconElement","getIconAriaLabel","messageContainer","detail","renderBody","innerText","messageDetailElement","style","display","customBody","el","querySelectorAll","inputs","map","input","_a","inputRowElement","inputBox","_register","undefined","placeholder","type","inputBoxStyles","checkboxLabel","checkboxRowElement","checkbox","checkboxChecked","checkboxStyles","domNode","checkboxMessageElement","CLICK","checked","toolbarRowElement","toolbarContainer","applyStyles","typeLabel","updateMessage","show","focusToReturn","document","activeElement","buttonBar","buttonMap","rearrangeButtons","cancelId","forEach","entry","index","primary","button","buttonDetails","addButtonWithDescription","Object","assign","title","secondary","addButton","label","description","onDidClick","stop","values","window","_b","evt","equals","preventDefault","some","hasFocus","find","eventHandled","focusableElements","focusedIndex","links","link","focus","newFocusedIndex","keyEventProcessor","disableCloseAction","relatedTarget","target","spinModifierClassName","classList","remove","asClassNameArray","dialogError","dialogWarning","dialogInfo","loading","icon","add","actionBar","action","asClassName","dialogClose","select","dialogStyles","fgColor","dialogForeground","bgColor","dialogBackground","shadowColor","dialogShadow","border","dialogBorder","linkFgColor","textLinkForeground","boxShadow","color","backgroundColor","getElementsByTagName","errorIconForeground","warningIconForeground","infoIconForeground","dispose","body","cancelButton","splice","reverse","BrowserDialogHandler","ALLOWABLE_COMMANDS","logService","layoutService","keybindingService","instantiationService","productService","clipboardService","markdownRenderer","createInstance","prompt","trace","getPromptButtons","doShow","custom","getPromptResult","confirm","confirmation","getConfirmationButtons","confirmed","getInputButtons","about","detailString","useAgo","version","commit","date","Date","navigator","userAgent","detailToCopy","Info","nameLong","key","comment","writeText","customOptions","dialogDisposables","parent","classes","markdownDetails","markdownDetail","render","markdown","dialog","getDialogType","event","resolved","softDispatch","kind","commandId","indexOf","DialogHandlerContribution","dialogService","impl","model","onWillShowDialog","currentDialog","processDialogs","dialogs","args","confirmArgs","inputArgs","promptArgs","close","as","Workbench","registerWorkbenchContribution","DialogsModel","arguments","_onWillShowDialog","_onDidShowDialog","onDidShowDialog","promise","item","complete","fire","p","DialogService","environmentService","skipDialogs","isExtensionDevelopment","extensionTestsLocationURI","enableSmokeTestDriver","handle","Error","info","warn","Warning","error","OpenLocalFileCommand","SaveLocalFileCommand","OpenLocalFolderCommand","OpenLocalFileFolderCommand","UpdateResult","ID","LABEL","handler","accessor","get","pickFileAndOpen","forceNewWindow","availableFileSystems","file","editorService","activeEditorPane","save","groupId","group","editor","saveAs","reason","pickFolderAndOpen","pickFileFolderAndOpen","RemoteFileDialogContext","SimpleFileDialog","fileService","quickInputService","labelService","workspaceContextService","notificationService","fileDialogService","modelService","languageService","remoteAgentService","pathService","contextKeyService","accessibilityService","hidden","allowFileSelection","allowFolderSelection","requiresTrailing","userEnteredPathSegment","autoCompletePathSegment","isWindows","separator","onBusyChangeEmitter","disposables","remoteAuthority","contextKey","bindTo","scheme","defaultUriScheme","busy","filePickBox","showOpenDialog","getScheme","defaultUri","userHome","getUserHome","trueHome","newOptions","getOptions","pickResource","showSaveDialog","canSelectFolders","canSelectFiles","folderUri","isSave","filename","resources","hasProvider","toString","objects","remoteUriFrom","path","hintUri","startsWith","replace","uri","from","query","fragment","authority","available","getRemoteAgentEnvironment","remoteAgentEnvironment","getEnvironment","preferLocal","preferredHome","getSeparator","checkIsWindowsOS","stat","homedir","getWorkspace","folders","ext","isDirectory","trailing","createQuickPick","matchOnLabel","sortByLabel","autoFocusOnList","ignoreFocusOut","ok","customButton","customLabel","keybinding","lookupKeybinding","getLabel","customHover","isResolving","isAcceptHandled","doResolve","set","handleAccept","onDidAccept","resolveValue","hide","currentFolder","pathFromUri","valueSelection","items","onDidCustom","slice","_","onDidChangeActive","i","isSelectionChangeFromUser","validationMessage","userPath","constructFullUserPath","substring","insertText","setAutoComplete","onDidChangeValue","async","handleValueChange","onDidHide","updateItems","isValueChangeFromUser","isBadSubpath","activeItems","filePickBoxUri","filePickBoxValue","updated","NotUpdated","isEqual","tryUpdateItems","UpdatedWithTrailing","setActiveItems","badPath","pathAppend","activeItem","currentFolderPath","substr","directUri","trimRight","currentPath","currentDisplayUri","relativePath","isSameRoot","directBasename","selectedItems","isFolder","newPath","basenameWithTrailingSlash","addPostfix","validate","root","lastDir","dir","tildaReplace","home","tryAddTrailingSeparatorToDirectory","endsWithSlash","valueUri","newDir","Updated","isEqualOrParent","InvalidPath","inputUriDirname","currentFolderWithoutSep","inputUriDirnameWithoutSep","test","statWithoutTrailing","tryUpdateTrailing","asUri","inputBasename","hasMatch","userBasename","startingValue","startingBasename","quickPickItem","force","itemBasename","execCommand","isScreenReaderOptimized","trimTrailingSlash","wholeValue","inputHasFocus","filters","hasExt","currentExt","j","extensions","yesNoPrompt","statDirname","newFolder","updatingPromise","token","folderStat","newValue","createItems","isCancellationRequested","cancel","endWithSeparator","fsPath","additional","isWindowsOS","env","os","s","fullPath","child","createBackItem","currFolder","fileRepresentationCurr","with","fileRepresentationParent","parentFolder","exists","folder","backDir","children","all","createItem","console","log","sorted","sort","i1","i2","trimmed1","trimmed2","localeCompare","unshift","extname","basename","filterFile","testExt","name","iconClasses","getIconClasses","FOLDER","AbstractFileDialogService","hostService","contextService","historyService","configurationService","openerService","workspacesService","commandService","codeEditorService","defaultFilePath","schemeFilter","getSchemeFilterForWindow","candidate","getLastActiveFile","getLastActiveWorkspaceRoot","defaultFolderPath","preferredHomeConfig","inspect","preferredHomeCandidate","userLocalValue","userRemoteValue","isAbsolute","preferredHomeNormalized","normalize","fileURI","defaultWorkspacePath","getWorkbenchState","configuration","showSaveConfirm","fileNamesOrResources","doShowSaveConfirm","run","addFileSchemaIfNeeded","schema","_isFolder","untitled","pickFileFolderAndOpenSimplified","preferNewWindow","canSelectMany","toOpen","fileUri","addFileToRecentlyOpened","openWindow","openEditors","resource","source","USER","pinned","validateTrust","pickFileAndOpenSimplified","addRecentlyOpened","getUriLabel","pickFolderAndOpenSimplified","pickWorkspaceAndOpenSimplified","workspaceUri","pickFileToSaveSimplified","saveRemoteResource","showSaveDialogSimplified","showOpenDialogSimplified","getSimpleFileDialog","getFileSystemSchema","getWorkspaceAvailableFileSystems","vscodeRemote","getPickFileToSaveDialogOptions","matchingFilter","registeredLanguageNames","getSortedRegisteredLanguageNames","registeredLanguageFilters","languageName","languageId","getExtensions","filter","extOrPlaintext","includes","trimmedExt","toUpperCase","FileDialogService","pickWorkspaceAndOpen","pickFileToSave","getServiceOverride","isWorkspaceToOpen","uriToOpen","isFileToOpen","getMenuBarVisibility","titleBarStyle","getTitleBarStyle","menuBarVisibility","getValue","nativeTabs","nativeFullScreen"],"sourceRoot":""}