{"version":3,"file":"999.bundle.js","mappings":"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","sources":["webpack://monaco-custom-bundle/./node_modules/vscode/dist/service-override/tools/editor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/base/browser/ui/iconLabel/simpleIconLabel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/actions/layoutActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/codeeditor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/auxiliarybar/auxiliaryBarActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/compositeBarActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/binaryEditor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/binaryDiffEditor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/media/editorstatus.css.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/tabFocus.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/editorStatus.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/editorAutoSave.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/untitled/common/untitledTextEditorHandler.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/editorConfiguration.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/accessibilityStatus.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/editor/browser/widget/diffEditorWidget2/diffEditorWidget2.contribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/editor.contribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/media/editorplaceholder.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/editor/editorPlaceholder.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/panel/media/panelpart.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/browser/parts/panel/panelActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/common/editor/binaryEditorModel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/editor/browser/codeEditorService.js"],"sourcesContent":["import { StandaloneServices } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { isPreferredGroup, SIDE_GROUP } from '../../vscode/vs/workbench/services/editor/common/editorService.js';\nimport { isResourceEditorInput, isEditorInput } from '../../vscode/vs/workbench/common/editor.js';\nimport { applyTextEditorOptions } from '../../vscode/vs/workbench/common/editor/editorOptions.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS, DEFAULT_EDITOR_MAX_DIMENSIONS } from '../../vscode/vs/workbench/browser/parts/editor/editor.js';\nimport { StandaloneEditor } from 'monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditor.js';\nimport { unsupported } from '../../tools.js';\nclass SimpleEditorPane {\n    constructor(editor) {\n        this.editor = editor;\n        this.onDidChangeControl = Event.None;\n        this.onDidChangeSizeConstraints = Event.None;\n        this.onDidFocus = Event.None;\n        this.onDidBlur = Event.None;\n        this.input = undefined;\n        this.options = undefined;\n        this.group = undefined;\n        this.scopedContextKeyService = undefined;\n        this.getViewState = unsupported;\n        this.isVisible = unsupported;\n        this.hasFocus = unsupported;\n        this.getId = unsupported;\n        this.getTitle = unsupported;\n        this.focus = unsupported;\n    }\n    get minimumWidth() { return DEFAULT_EDITOR_MIN_DIMENSIONS.width; }\n    get maximumWidth() { return DEFAULT_EDITOR_MAX_DIMENSIONS.width; }\n    get minimumHeight() { return DEFAULT_EDITOR_MIN_DIMENSIONS.height; }\n    get maximumHeight() { return DEFAULT_EDITOR_MAX_DIMENSIONS.height; }\n    getControl() {\n        return this.editor;\n    }\n}\nfunction wrapOpenEditor(textModelService, defaultBehavior, fallbackBahavior) {\n    async function openEditor(editor, optionsOrPreferredGroup, preferredGroup) {\n        const options = isEditorInput(editor) ? optionsOrPreferredGroup : editor.options;\n        if (isPreferredGroup(optionsOrPreferredGroup)) {\n            preferredGroup = optionsOrPreferredGroup;\n        }\n        const resource = isResourceEditorInput(editor) || isEditorInput(editor) ? editor.resource : undefined;\n        if (resource == null || !textModelService.canHandleResource(resource)) {\n            return defaultBehavior(editor, optionsOrPreferredGroup, preferredGroup);\n        }\n        let modelEditor;\n        const codeEditors = StandaloneServices.get(ICodeEditorService).listCodeEditors();\n        modelEditor = codeEditors.find(editor => editor instanceof StandaloneEditor && editor.getModel() != null && ( editor.getModel().uri.toString()) === ( resource.toString()));\n        if (modelEditor == null) {\n            const defaultBehaviorResult = await defaultBehavior(editor, optionsOrPreferredGroup, preferredGroup);\n            if (defaultBehaviorResult != null) {\n                return defaultBehaviorResult;\n            }\n            const modelRef = await textModelService.createModelReference(resource);\n            modelEditor = await fallbackBahavior?.(modelRef, options, preferredGroup === SIDE_GROUP);\n            if (modelEditor == null) {\n                modelRef.dispose();\n                return undefined;\n            }\n        }\n        if (options != null) {\n            applyTextEditorOptions(options, modelEditor, 1 );\n        }\n        if (!(options?.preserveFocus ?? false)) {\n            modelEditor.focus();\n            modelEditor.getContainerDomNode().scrollIntoView();\n        }\n        return new SimpleEditorPane(modelEditor);\n    }\n    return openEditor;\n}\nexport { wrapOpenEditor };\n","import { reset } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { renderLabelWithIcons } from 'monaco-editor/esm/vs/base/browser/ui/iconLabel/iconLabels.js';\nclass SimpleIconLabel {\n    constructor(_container) {\n        this._container = _container;\n    }\n    set text(text) {\n        reset(this._container, ...renderLabelWithIcons(text ?? ''));\n    }\n    set title(title) {\n        this._container.title = title;\n    }\n}\nexport { SimpleIconLabel };\n","import { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IWorkbenchLayoutService, positionToString } from '../../services/layout/browser/layoutService.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { isMacintosh, isNative } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { IsMacNativeContext } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport '../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { ToggleAuxiliaryBarAction } from '../parts/auxiliarybar/auxiliaryBarActions.js';\nimport { TogglePanelAction } from '../parts/panel/panelActions.js';\nimport { SideBarVisibleContext, InEditorZenModeContext, AuxiliaryBarVisibleContext, PanelVisibleContext, PanelAlignmentContext, IsFullscreenContext, IsCenteredLayoutContext } from '../../common/contextkeys.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst menubarIcon = registerIcon('menuBar', Codicon.layoutMenubar, ( localize('menuBarIcon', \"Represents the menu bar\")));\nconst activityBarLeftIcon = registerIcon('activity-bar-left', Codicon.layoutActivitybarLeft, ( localize('activityBarLeft', \"Represents the activity bar in the left position\")));\nconst activityBarRightIcon = registerIcon('activity-bar-right', Codicon.layoutActivitybarRight, ( localize('activityBarRight', \"Represents the activity bar in the right position\")));\nconst panelLeftIcon = registerIcon('panel-left', Codicon.layoutSidebarLeft, ( localize('panelLeft', \"Represents a side bar in the left position\")));\nregisterIcon('panel-left-off', Codicon.layoutSidebarLeftOff, ( localize('panelLeftOff', \"Represents a side bar in the left position toggled off\")));\nconst panelRightIcon = registerIcon('panel-right', Codicon.layoutSidebarRight, ( localize('panelRight', \"Represents side bar in the right position\")));\nregisterIcon('panel-right-off', Codicon.layoutSidebarRightOff, ( localize('panelRightOff', \"Represents side bar in the right position toggled off\")));\nconst panelIcon = registerIcon('panel-bottom', Codicon.layoutPanel, ( localize('panelBottom', \"Represents the bottom panel\")));\nconst statusBarIcon = registerIcon('statusBar', Codicon.layoutStatusbar, ( localize('statusBarIcon', \"Represents the status bar\")));\nconst panelAlignmentLeftIcon = registerIcon('panel-align-left', Codicon.layoutPanelLeft, ( localize('panelBottomLeft', \"Represents the bottom panel alignment set to the left\")));\nconst panelAlignmentRightIcon = registerIcon('panel-align-right', Codicon.layoutPanelRight, ( localize(\n    'panelBottomRight',\n    \"Represents the bottom panel alignment set to the right\"\n)));\nconst panelAlignmentCenterIcon = registerIcon('panel-align-center', Codicon.layoutPanelCenter, ( localize(\n    'panelBottomCenter',\n    \"Represents the bottom panel alignment set to the center\"\n)));\nconst panelAlignmentJustifyIcon = registerIcon('panel-align-justify', Codicon.layoutPanelJustify, ( localize(\n    'panelBottomJustify',\n    \"Represents the bottom panel alignment set to justified\"\n)));\nconst fullscreenIcon = registerIcon('fullscreen', Codicon.screenFull, ( localize('fullScreenIcon', \"Represents full screen\")));\nconst centerLayoutIcon = registerIcon('centerLayoutIcon', Codicon.layoutCentered, ( localize('centerLayoutIcon', \"Represents centered layout mode\")));\nconst zenModeIcon = registerIcon('zenMode', Codicon.target, ( localize('zenModeIcon', \"Represents zen mode\")));\nclass ToggleActivityBarVisibilityAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleActivityBarVisibility'; }\n    static { this.activityBarVisibleKey = 'workbench.activityBar.visible'; }\n    constructor() {\n        super({\n            id: ToggleActivityBarVisibilityAction.ID,\n            title: {\n                value: ( localize('toggleActivityBar', \"Toggle Activity Bar Visibility\")),\n                mnemonicTitle: ( localize(\n                    { key: 'miActivityBar', comment: ['&& denotes a mnemonic'] },\n                    \"&&Activity Bar\"\n                )),\n                original: 'Toggle Activity Bar Visibility'\n            },\n            category: Categories.View,\n            f1: true,\n            toggled: ( ContextKeyExpr.equals('config.workbench.activityBar.visible', true)),\n            menu: [{\n                    id: MenuId.MenubarAppearanceMenu,\n                    group: '2_workbench_layout',\n                    order: 4\n                }]\n        });\n    }\n    run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const configurationService = accessor.get(IConfigurationService);\n        const visibility = layoutService.isVisible(\"workbench.parts.activitybar\" );\n        const newVisibilityValue = !visibility;\n        configurationService.updateValue(ToggleActivityBarVisibilityAction.activityBarVisibleKey, newVisibilityValue);\n    }\n}\nconst sidebarPositionConfigurationKey = 'workbench.sideBar.location';\nclass MoveSidebarPositionAction extends Action2 {\n    constructor(id, title, position) {\n        super({\n            id,\n            title,\n            f1: false\n        });\n        this.position = position;\n    }\n    async run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const configurationService = accessor.get(IConfigurationService);\n        const position = layoutService.getSideBarPosition();\n        if (position !== this.position) {\n            return configurationService.updateValue(sidebarPositionConfigurationKey, positionToString(this.position));\n        }\n    }\n}\nclass MoveSidebarRightAction extends MoveSidebarPositionAction {\n    static { this.ID = 'workbench.action.moveSideBarRight'; }\n    constructor() {\n        super(MoveSidebarRightAction.ID, {\n            value: ( localize('moveSidebarRight', \"Move Primary Side Bar Right\")),\n            original: 'Move Primary Side Bar Right'\n        }, 1 );\n    }\n}\nclass MoveSidebarLeftAction extends MoveSidebarPositionAction {\n    static { this.ID = 'workbench.action.moveSideBarLeft'; }\n    constructor() {\n        super(MoveSidebarLeftAction.ID, {\n            value: ( localize('moveSidebarLeft', \"Move Primary Side Bar Left\")),\n            original: 'Move Primary Side Bar Left'\n        }, 0 );\n    }\n}\nclass ToggleSidebarPositionAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleSidebarPosition'; }\n    static { this.LABEL = ( localize('toggleSidebarPosition', \"Toggle Primary Side Bar Position\")); }\n    static getLabel(layoutService) {\n        return layoutService.getSideBarPosition() === 0  ? ( localize('moveSidebarRight', \"Move Primary Side Bar Right\")) : ( localize('moveSidebarLeft', \"Move Primary Side Bar Left\"));\n    }\n    constructor() {\n        super({\n            id: ToggleSidebarPositionAction.ID,\n            title: { value: ( localize('toggleSidebarPosition', \"Toggle Primary Side Bar Position\")), original: 'Toggle Primary Side Bar Position' },\n            category: Categories.View,\n            f1: true\n        });\n    }\n    run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const configurationService = accessor.get(IConfigurationService);\n        const position = layoutService.getSideBarPosition();\n        const newPositionValue = ((position === 0) ) ? 'right' : 'left';\n        return configurationService.updateValue(sidebarPositionConfigurationKey, newPositionValue);\n    }\n}\nregisterIcon('configure-layout-icon', Codicon.layout, ( localize('cofigureLayoutIcon', 'Icon represents workbench layout configuration.')));\nclass ToggleSidebarVisibilityAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleSidebarVisibility'; }\n    constructor() {\n        super({\n            id: ToggleSidebarVisibilityAction.ID,\n            title: { value: ( localize('toggleSidebar', \"Toggle Primary Side Bar Visibility\")), original: 'Toggle Primary Side Bar Visibility' },\n            toggled: {\n                condition: SideBarVisibleContext,\n                title: ( localize('primary sidebar', \"Primary Side Bar\")),\n                mnemonicTitle: ( localize(\n                    { key: 'primary sidebar mnemonic', comment: ['&& denotes a mnemonic'] },\n                    \"&&Primary Side Bar\"\n                )),\n            },\n            category: Categories.View,\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 32\n            },\n            menu: [\n                {\n                    id: MenuId.LayoutControlMenuSubmenu,\n                    group: '0_workbench_layout',\n                    order: 0\n                },\n                {\n                    id: MenuId.MenubarAppearanceMenu,\n                    group: '2_workbench_layout',\n                    order: 1\n                }\n            ]\n        });\n    }\n    run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        layoutService.setPartHidden(layoutService.isVisible(\"workbench.parts.sidebar\" ), \"workbench.parts.sidebar\" );\n    }\n}\nclass ToggleStatusbarVisibilityAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleStatusbarVisibility'; }\n    static { this.statusbarVisibleKey = 'workbench.statusBar.visible'; }\n    constructor() {\n        super({\n            id: ToggleStatusbarVisibilityAction.ID,\n            title: {\n                value: ( localize('toggleStatusbar', \"Toggle Status Bar Visibility\")),\n                mnemonicTitle: ( localize({ key: 'miStatusbar', comment: ['&& denotes a mnemonic'] }, \"S&&tatus Bar\")),\n                original: 'Toggle Status Bar Visibility'\n            },\n            category: Categories.View,\n            f1: true,\n            toggled: ( ContextKeyExpr.equals('config.workbench.statusBar.visible', true)),\n            menu: [{\n                    id: MenuId.MenubarAppearanceMenu,\n                    group: '2_workbench_layout',\n                    order: 3\n                }]\n        });\n    }\n    run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const configurationService = accessor.get(IConfigurationService);\n        const visibility = layoutService.isVisible(\"workbench.parts.statusbar\" );\n        const newVisibilityValue = !visibility;\n        return configurationService.updateValue(ToggleStatusbarVisibilityAction.statusbarVisibleKey, newVisibilityValue);\n    }\n}\nclass ToggleTabsVisibilityAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleTabsVisibility'; }\n    constructor() {\n        super({\n            id: ToggleTabsVisibilityAction.ID,\n            title: {\n                value: ( localize('toggleTabs', \"Toggle Tab Visibility\")),\n                original: 'Toggle Tab Visibility'\n            },\n            category: Categories.View,\n            f1: true\n        });\n    }\n    run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const visibility = configurationService.getValue('workbench.editor.showTabs');\n        const newVisibilityValue = !visibility;\n        return configurationService.updateValue('workbench.editor.showTabs', newVisibilityValue);\n    }\n}\nregisterAction2(ToggleTabsVisibilityAction);\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.exitZenMode',\n    weight: 100  - 1000,\n    handler(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        if (InEditorZenModeContext.getValue(contextKeyService)) {\n            layoutService.toggleZenMode();\n        }\n    },\n    when: InEditorZenModeContext,\n    primary: KeyChord(9 , 9 )\n});\nclass BaseResizeViewAction extends Action2 {\n    static { this.RESIZE_INCREMENT = 60; }\n    resizePart(widthChange, heightChange, layoutService, partToResize) {\n        let part;\n        if (partToResize === undefined) {\n            const isEditorFocus = layoutService.hasFocus(\"workbench.parts.editor\" );\n            const isSidebarFocus = layoutService.hasFocus(\"workbench.parts.sidebar\" );\n            const isPanelFocus = layoutService.hasFocus(\"workbench.parts.panel\" );\n            const isAuxiliaryBarFocus = layoutService.hasFocus(\"workbench.parts.auxiliarybar\" );\n            if (isSidebarFocus) {\n                part = \"workbench.parts.sidebar\" ;\n            }\n            else if (isPanelFocus) {\n                part = \"workbench.parts.panel\" ;\n            }\n            else if (isEditorFocus) {\n                part = \"workbench.parts.editor\" ;\n            }\n            else if (isAuxiliaryBarFocus) {\n                part = \"workbench.parts.auxiliarybar\" ;\n            }\n        }\n        else {\n            part = partToResize;\n        }\n        if (part) {\n            layoutService.resizePart(part, widthChange, heightChange);\n        }\n    }\n}\nconst CreateToggleLayoutItem = (id, active, label, visualIcon) => {\n    return {\n        id,\n        active,\n        label,\n        visualIcon,\n        activeIcon: Codicon.eye,\n        inactiveIcon: Codicon.eyeClosed,\n        activeAriaLabel: ( localize('selectToHide', \"Select to Hide\")),\n        inactiveAriaLabel: ( localize('selectToShow', \"Select to Show\")),\n        useButtons: true,\n    };\n};\nconst CreateOptionLayoutItem = (id, active, label, visualIcon) => {\n    return {\n        id,\n        active,\n        label,\n        visualIcon,\n        activeIcon: Codicon.check,\n        activeAriaLabel: ( localize('active', \"Active\")),\n        useButtons: false\n    };\n};\nconst MenuBarToggledContext = ( ContextKeyExpr.and(( IsMacNativeContext.toNegated()), ( ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'hidden')), ( ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'toggle')), ( ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'compact'))));\nconst ToggleVisibilityActions = [];\nif (!isMacintosh || !isNative) {\n    ToggleVisibilityActions.push(CreateToggleLayoutItem('workbench.action.toggleMenuBar', MenuBarToggledContext, ( localize('menuBar', \"Menu Bar\")), menubarIcon));\n}\nToggleVisibilityActions.push(...[\n    CreateToggleLayoutItem(ToggleActivityBarVisibilityAction.ID, ( ContextKeyExpr.equals('config.workbench.activityBar.visible', true)), ( localize('activityBar', \"Activity Bar\")), { whenA: ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')), iconA: activityBarLeftIcon, iconB: activityBarRightIcon }),\n    CreateToggleLayoutItem(ToggleSidebarVisibilityAction.ID, SideBarVisibleContext, ( localize('sideBar', \"Primary Side Bar\")), { whenA: ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')), iconA: panelLeftIcon, iconB: panelRightIcon }),\n    CreateToggleLayoutItem(ToggleAuxiliaryBarAction.ID, AuxiliaryBarVisibleContext, ( localize('secondarySideBar', \"Secondary Side Bar\")), { whenA: ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')), iconA: panelRightIcon, iconB: panelLeftIcon }),\n    CreateToggleLayoutItem(TogglePanelAction.ID, PanelVisibleContext, ( localize('panel', \"Panel\")), panelIcon),\n    CreateToggleLayoutItem(ToggleStatusbarVisibilityAction.ID, ( ContextKeyExpr.equals('config.workbench.statusBar.visible', true)), ( localize('statusBar', \"Status Bar\")), statusBarIcon),\n]);\nconst MoveSideBarActions = [\n    CreateOptionLayoutItem(MoveSidebarLeftAction.ID, ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')), ( localize('leftSideBar', \"Left\")), panelLeftIcon),\n    CreateOptionLayoutItem(MoveSidebarRightAction.ID, ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'right')), ( localize('rightSideBar', \"Right\")), panelRightIcon),\n];\nconst AlignPanelActions = [\n    CreateOptionLayoutItem('workbench.action.alignPanelLeft', ( PanelAlignmentContext.isEqualTo('left')), ( localize('leftPanel', \"Left\")), panelAlignmentLeftIcon),\n    CreateOptionLayoutItem('workbench.action.alignPanelRight', ( PanelAlignmentContext.isEqualTo('right')), ( localize('rightPanel', \"Right\")), panelAlignmentRightIcon),\n    CreateOptionLayoutItem('workbench.action.alignPanelCenter', ( PanelAlignmentContext.isEqualTo('center')), ( localize('centerPanel', \"Center\")), panelAlignmentCenterIcon),\n    CreateOptionLayoutItem('workbench.action.alignPanelJustify', ( PanelAlignmentContext.isEqualTo('justify')), ( localize('justifyPanel', \"Justify\")), panelAlignmentJustifyIcon),\n];\nconst MiscLayoutOptions = [\n    CreateOptionLayoutItem('workbench.action.toggleFullScreen', IsFullscreenContext, ( localize('fullscreen', \"Full Screen\")), fullscreenIcon),\n    CreateOptionLayoutItem('workbench.action.toggleZenMode', InEditorZenModeContext, ( localize('zenMode', \"Zen Mode\")), zenModeIcon),\n    CreateOptionLayoutItem('workbench.action.toggleCenteredLayout', IsCenteredLayoutContext, ( localize('centeredLayout', \"Centered Layout\")), centerLayoutIcon),\n];\nconst LayoutContextKeySet = ( new Set());\nfor (const { active } of [...ToggleVisibilityActions, ...MoveSideBarActions, ...AlignPanelActions, ...MiscLayoutOptions]) {\n    for (const key of ( active.keys())) {\n        LayoutContextKeySet.add(key);\n    }\n}\nexport { ToggleActivityBarVisibilityAction, ToggleSidebarPositionAction, ToggleStatusbarVisibilityAction, ToggleTabsVisibilityAction };\n","import { __decorate, __param } from '../../../../node_modules/tslib/tslib.es6.js';\nimport { Widget } from 'monaco-editor/esm/vs/base/browser/ui/widget.js';\nimport { isCodeEditor, isCompositeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { $, clearNode, append } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { asCssVariableWithDefault, buttonBackground, asCssVariable, editorBackground, buttonForeground, editorForeground, contrastBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nimport { ModelDecorationOptions } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { EmbeddedCodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js';\nlet RangeHighlightDecorations = class RangeHighlightDecorations extends Disposable {\n    constructor(editorService) {\n        super();\n        this.editorService = editorService;\n        this._onHighlightRemoved = this._register(( new Emitter()));\n        this.onHighlightRemoved = this._onHighlightRemoved.event;\n        this.rangeHighlightDecorationId = null;\n        this.editor = null;\n        this.editorDisposables = this._register(( new DisposableStore()));\n    }\n    removeHighlightRange() {\n        if (this.editor && this.rangeHighlightDecorationId) {\n            const decorationId = this.rangeHighlightDecorationId;\n            this.editor.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n            });\n            this._onHighlightRemoved.fire();\n        }\n        this.rangeHighlightDecorationId = null;\n    }\n    highlightRange(range, editor) {\n        editor = editor ?? this.getEditor(range);\n        if (isCodeEditor(editor)) {\n            this.doHighlightRange(editor, range);\n        }\n        else if (isCompositeEditor(editor) && isCodeEditor(editor.activeCodeEditor)) {\n            this.doHighlightRange(editor.activeCodeEditor, range);\n        }\n    }\n    doHighlightRange(editor, selectionRange) {\n        this.removeHighlightRange();\n        editor.changeDecorations((changeAccessor) => {\n            this.rangeHighlightDecorationId = changeAccessor.addDecoration(selectionRange.range, this.createRangeHighlightDecoration(selectionRange.isWholeLine));\n        });\n        this.setEditor(editor);\n    }\n    getEditor(resourceRange) {\n        const resource = this.editorService.activeEditor?.resource;\n        if (resource && isEqual(resource, resourceRange.resource) && isCodeEditor(this.editorService.activeTextEditorControl)) {\n            return this.editorService.activeTextEditorControl;\n        }\n        return undefined;\n    }\n    setEditor(editor) {\n        if (this.editor !== editor) {\n            this.editorDisposables.clear();\n            this.editor = editor;\n            this.editorDisposables.add(this.editor.onDidChangeCursorPosition((e) => {\n                if (e.reason === 0\n                    || e.reason === 3\n                    || e.reason === 5\n                    || e.reason === 6 ) {\n                    this.removeHighlightRange();\n                }\n            }));\n            this.editorDisposables.add(this.editor.onDidChangeModel(() => { this.removeHighlightRange(); }));\n            this.editorDisposables.add(this.editor.onDidDispose(() => {\n                this.removeHighlightRange();\n                this.editor = null;\n            }));\n        }\n    }\n    static { this._WHOLE_LINE_RANGE_HIGHLIGHT = ModelDecorationOptions.register({\n        description: 'codeeditor-range-highlight-whole',\n        stickiness: 1 ,\n        className: 'rangeHighlight',\n        isWholeLine: true\n    }); }\n    static { this._RANGE_HIGHLIGHT = ModelDecorationOptions.register({\n        description: 'codeeditor-range-highlight',\n        stickiness: 1 ,\n        className: 'rangeHighlight'\n    }); }\n    createRangeHighlightDecoration(isWholeLine = true) {\n        return (isWholeLine ? RangeHighlightDecorations._WHOLE_LINE_RANGE_HIGHLIGHT : RangeHighlightDecorations._RANGE_HIGHLIGHT);\n    }\n    dispose() {\n        super.dispose();\n        if (this.editor?.getModel()) {\n            this.removeHighlightRange();\n            this.editor = null;\n        }\n    }\n};\nRangeHighlightDecorations = ( __decorate([\n    ( __param(0, IEditorService))\n], RangeHighlightDecorations));\nlet FloatingClickWidget = class FloatingClickWidget extends Widget {\n    constructor(editor, label, keyBindingAction, keybindingService) {\n        super();\n        this.editor = editor;\n        this.label = label;\n        this._onClick = this._register(( new Emitter()));\n        this.onClick = this._onClick.event;\n        this._domNode = $('.floating-click-widget');\n        this._domNode.style.padding = '6px 11px';\n        this._domNode.style.borderRadius = '2px';\n        this._domNode.style.cursor = 'pointer';\n        this._domNode.style.zIndex = '1';\n        if (keyBindingAction) {\n            const keybinding = keybindingService.lookupKeybinding(keyBindingAction);\n            if (keybinding) {\n                this.label += ` (${keybinding.getLabel()})`;\n            }\n        }\n    }\n    getId() {\n        return 'editor.overlayWidget.floatingClickWidget';\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 1\n        };\n    }\n    render() {\n        clearNode(this._domNode);\n        this._domNode.style.backgroundColor = asCssVariableWithDefault(buttonBackground, asCssVariable(editorBackground));\n        this._domNode.style.color = asCssVariableWithDefault(buttonForeground, asCssVariable(editorForeground));\n        this._domNode.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n        append(this._domNode, $('')).textContent = this.label;\n        this.onclick(this._domNode, e => this._onClick.fire());\n        this.editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this.editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n};\nFloatingClickWidget = ( __decorate([\n    ( __param(3, IKeybindingService))\n], FloatingClickWidget));\nlet FloatingClickMenu = class FloatingClickMenu extends Disposable {\n    static { this.ID = 'editor.contrib.floatingClickMenu'; }\n    constructor(editor, instantiationService, menuService, contextKeyService) {\n        super();\n        if (!(editor instanceof EmbeddedCodeEditorWidget)) {\n            const menu = menuService.createMenu(MenuId.EditorContent, contextKeyService);\n            const menuDisposables = ( new DisposableStore());\n            const renderMenuAsFloatingClickBtn = () => {\n                menuDisposables.clear();\n                if (!editor.hasModel() || editor.getOption(60 )) {\n                    return;\n                }\n                const actions = [];\n                createAndFillInActionBarActions(menu, { renderShortTitle: true, shouldForwardArgs: true }, actions);\n                if (actions.length === 0) {\n                    return;\n                }\n                const [first] = actions;\n                const widget = instantiationService.createInstance(FloatingClickWidget, editor, first.label, first.id);\n                menuDisposables.add(widget);\n                menuDisposables.add(widget.onClick(() => first.run(editor.getModel().uri)));\n                widget.render();\n            };\n            this._store.add(menu);\n            this._store.add(menuDisposables);\n            this._store.add(menu.onDidChange(renderMenuAsFloatingClickBtn));\n            renderMenuAsFloatingClickBtn();\n        }\n    }\n};\nFloatingClickMenu = ( __decorate([\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IMenuService)),\n    ( __param(3, IContextKeyService))\n], FloatingClickMenu));\nexport { FloatingClickMenu, FloatingClickWidget, RangeHighlightDecorations };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2, MenuRegistry } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { AuxiliaryBarVisibleContext } from '../../../common/contextkeys.js';\nimport { ViewContainerLocationToString } from '../../../common/views.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nconst auxiliaryBarRightIcon = registerIcon('auxiliarybar-right-layout-icon', Codicon.layoutSidebarRight, ( localize(\n    'toggleAuxiliaryIconRight',\n    'Icon to toggle the auxiliary bar off in its right position.'\n)));\nconst auxiliaryBarRightOffIcon = registerIcon('auxiliarybar-right-off-layout-icon', Codicon.layoutSidebarRightOff, ( localize(\n    'toggleAuxiliaryIconRightOn',\n    'Icon to toggle the auxiliary bar on in its right position.'\n)));\nconst auxiliaryBarLeftIcon = registerIcon('auxiliarybar-left-layout-icon', Codicon.layoutSidebarLeft, ( localize(\n    'toggleAuxiliaryIconLeft',\n    'Icon to toggle the auxiliary bar in its left position.'\n)));\nconst auxiliaryBarLeftOffIcon = registerIcon('auxiliarybar-left-off-layout-icon', Codicon.layoutSidebarLeftOff, ( localize(\n    'toggleAuxiliaryIconLeftOn',\n    'Icon to toggle the auxiliary bar on in its left position.'\n)));\nclass ToggleAuxiliaryBarAction extends Action2 {\n    static { this.ID = 'workbench.action.toggleAuxiliaryBar'; }\n    static { this.LABEL = ( localize('toggleAuxiliaryBar', \"Toggle Secondary Side Bar Visibility\")); }\n    constructor() {\n        super({\n            id: ToggleAuxiliaryBarAction.ID,\n            title: { value: ToggleAuxiliaryBarAction.LABEL, original: 'Toggle Secondary Side Bar Visibility' },\n            toggled: {\n                condition: AuxiliaryBarVisibleContext,\n                title: ( localize('secondary sidebar', \"Secondary Side Bar\")),\n                mnemonicTitle: ( localize(\n                    { key: 'secondary sidebar mnemonic', comment: ['&& denotes a mnemonic'] },\n                    \"Secondary Si&&de Bar\"\n                )),\n            },\n            category: Categories.View,\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 512  | 32\n            },\n            menu: [\n                {\n                    id: MenuId.LayoutControlMenuSubmenu,\n                    group: '0_workbench_layout',\n                    order: 1\n                },\n                {\n                    id: MenuId.MenubarAppearanceMenu,\n                    group: '2_workbench_layout',\n                    order: 2\n                }\n            ]\n        });\n    }\n    async run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        layoutService.setPartHidden(layoutService.isVisible(\"workbench.parts.auxiliarybar\" ), \"workbench.parts.auxiliarybar\" );\n    }\n}\nregisterAction2(ToggleAuxiliaryBarAction);\nregisterAction2(class FocusAuxiliaryBarAction extends Action2 {\n    static { this.ID = 'workbench.action.focusAuxiliaryBar'; }\n    static { this.LABEL = ( localize('focusAuxiliaryBar', \"Focus into Secondary Side Bar\")); }\n    constructor() {\n        super({\n            id: FocusAuxiliaryBarAction.ID,\n            title: { value: FocusAuxiliaryBarAction.LABEL, original: 'Focus into Secondary Side Bar' },\n            category: Categories.View,\n            f1: true,\n        });\n    }\n    async run(accessor) {\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        if (!layoutService.isVisible(\"workbench.parts.auxiliarybar\" )) {\n            layoutService.setPartHidden(false, \"workbench.parts.auxiliarybar\" );\n        }\n        const composite = paneCompositeService.getActivePaneComposite(2 );\n        composite?.focus();\n    }\n});\nMenuRegistry.appendMenuItems([\n    {\n        id: MenuId.LayoutControlMenu,\n        item: {\n            group: '0_workbench_toggles',\n            command: {\n                id: ToggleAuxiliaryBarAction.ID,\n                title: ( localize('toggleSecondarySideBar', \"Toggle Secondary Side Bar\")),\n                toggled: { condition: AuxiliaryBarVisibleContext, icon: auxiliaryBarLeftIcon },\n                icon: auxiliaryBarLeftOffIcon,\n            },\n            when: ( ContextKeyExpr.and(( ContextKeyExpr.or(( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles')), ( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')))), ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'right')))),\n            order: 0\n        }\n    }, {\n        id: MenuId.LayoutControlMenu,\n        item: {\n            group: '0_workbench_toggles',\n            command: {\n                id: ToggleAuxiliaryBarAction.ID,\n                title: ( localize('toggleSecondarySideBar', \"Toggle Secondary Side Bar\")),\n                toggled: { condition: AuxiliaryBarVisibleContext, icon: auxiliaryBarRightIcon },\n                icon: auxiliaryBarRightOffIcon,\n            },\n            when: ( ContextKeyExpr.and(( ContextKeyExpr.or(( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles')), ( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')))), ( ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')))),\n            order: 2\n        }\n    }, {\n        id: MenuId.ViewTitleContext,\n        item: {\n            group: '3_workbench_layout_move',\n            command: {\n                id: ToggleAuxiliaryBarAction.ID,\n                title: { value: ( localize('hideAuxiliaryBar', \"Hide Secondary Side Bar\")), original: 'Hide Secondary Side Bar' },\n            },\n            when: ( ContextKeyExpr.and(AuxiliaryBarVisibleContext, ( ContextKeyExpr.equals(\n                'viewLocation',\n                ViewContainerLocationToString(2 )\n            )))),\n            order: 2\n        }\n    }\n]);\nexport { ToggleAuxiliaryBarAction };\n","import { __decorate, __param } from '../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action, Separator } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { addDisposableListener, EventType, append, $, hide, clearNode, show, EventHelper, getDomNodePagePosition } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { MutableDisposable, DisposableStore, toDisposable, disposeIfDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { NumberBadge, TextBadge, IconBadge, ProgressBadge } from '../../services/activity/common/activity.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { contrastBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { DelayedDragHandler } from 'monaco-editor/esm/vs/base/browser/dnd.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { Event, Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { CompositeDragAndDropObserver, toggleDropEffect } from '../dnd.js';\nimport { BaseActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IHoverService } from '../../services/hover/browser/hover.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nclass ActivityAction extends Action {\n    constructor(_activity) {\n        super(_activity.id, _activity.name, _activity.classNames?.join(' '), true);\n        this._activity = _activity;\n        this._onDidChangeActivity = this._register(( new Emitter()));\n        this.onDidChangeActivity = this._onDidChangeActivity.event;\n        this._onDidChangeBadge = this._register(( new Emitter()));\n        this.onDidChangeBadge = this._onDidChangeBadge.event;\n    }\n    get activity() {\n        return this._activity;\n    }\n    set activity(activity) {\n        this._label = activity.name;\n        this._activity = activity;\n        this._onDidChangeActivity.fire(this);\n    }\n    activate() {\n        if (!this.checked) {\n            this._setChecked(true);\n        }\n    }\n    deactivate() {\n        if (this.checked) {\n            this._setChecked(false);\n        }\n    }\n    getBadge() {\n        return this.badge;\n    }\n    getClass() {\n        return this.clazz;\n    }\n    setBadge(badge, clazz) {\n        this.badge = badge;\n        this.clazz = clazz;\n        this._onDidChangeBadge.fire(this);\n    }\n    dispose() {\n        this._onDidChangeActivity.dispose();\n        this._onDidChangeBadge.dispose();\n        super.dispose();\n    }\n}\nlet ActivityActionViewItem = class ActivityActionViewItem extends BaseActionViewItem {\n    static { this.hoverLeaveTime = 0; }\n    constructor(action, options, badgesEnabled, themeService, hoverService, configurationService, keybindingService) {\n        super(null, action, options);\n        this.badgesEnabled = badgesEnabled;\n        this.themeService = themeService;\n        this.hoverService = hoverService;\n        this.configurationService = configurationService;\n        this.keybindingService = keybindingService;\n        this.badgeDisposable = this._register(( new MutableDisposable()));\n        this.hoverDisposables = this._register(( new DisposableStore()));\n        this.showHoverScheduler = ( new RunOnceScheduler(() => this.showHover(), 0));\n        this.options = options;\n        this._register(this.themeService.onDidColorThemeChange(this.onThemeChange, this));\n        this._register(action.onDidChangeActivity(this.updateActivity, this));\n        this._register(Event.filter(keybindingService.onDidUpdateKeybindings, () => this.keybindingLabel !== this.computeKeybindingLabel())(() => this.updateTitle()));\n        this._register(action.onDidChangeBadge(this.updateBadge, this));\n        this._register(toDisposable(() => this.showHoverScheduler.cancel()));\n    }\n    get activity() {\n        return this._action.activity;\n    }\n    updateStyles() {\n        const theme = this.themeService.getColorTheme();\n        const colors = this.options.colors(theme);\n        if (this.label) {\n            if (this.options.icon) {\n                const foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n                if (this.activity.iconUrl) {\n                    this.label.style.backgroundColor = foreground ? ( foreground.toString()) : '';\n                    this.label.style.color = '';\n                }\n                else {\n                    this.label.style.color = foreground ? ( foreground.toString()) : '';\n                    this.label.style.backgroundColor = '';\n                }\n            }\n            else {\n                const foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n                const borderBottomColor = this._action.checked ? colors.activeBorderBottomColor : null;\n                this.label.style.color = foreground ? ( foreground.toString()) : '';\n                this.label.style.borderBottomColor = borderBottomColor ? ( borderBottomColor.toString()) : '';\n            }\n            this.container.style.setProperty('--insert-border-color', colors.dragAndDropBorder ? ( colors.dragAndDropBorder.toString()) : '');\n        }\n        if (this.badgeContent) {\n            const badgeForeground = colors.badgeForeground;\n            const badgeBackground = colors.badgeBackground;\n            const contrastBorderColor = theme.getColor(contrastBorder);\n            this.badgeContent.style.color = badgeForeground ? ( badgeForeground.toString()) : '';\n            this.badgeContent.style.backgroundColor = badgeBackground ? ( badgeBackground.toString()) : '';\n            this.badgeContent.style.borderStyle = contrastBorderColor ? 'solid' : '';\n            this.badgeContent.style.borderWidth = contrastBorderColor ? '1px' : '';\n            this.badgeContent.style.borderColor = contrastBorderColor ? ( contrastBorderColor.toString()) : '';\n        }\n    }\n    render(container) {\n        super.render(container);\n        this.container = container;\n        if (this.options.icon) {\n            this.container.classList.add('icon');\n        }\n        if (this.options.hasPopup) {\n            this.container.setAttribute('role', 'button');\n            this.container.setAttribute('aria-haspopup', 'true');\n        }\n        else {\n            this.container.setAttribute('role', 'tab');\n        }\n        this._register(addDisposableListener(this.container, EventType.MOUSE_DOWN, () => {\n            this.container.classList.add('clicked');\n        }));\n        this._register(addDisposableListener(this.container, EventType.MOUSE_UP, () => {\n            if (this.mouseUpTimeout) {\n                clearTimeout(this.mouseUpTimeout);\n            }\n            this.mouseUpTimeout = setTimeout(() => {\n                this.container.classList.remove('clicked');\n            }, 800);\n        }));\n        this.label = append(container, $('a'));\n        this.badge = append(container, $('.badge'));\n        this.badgeContent = append(this.badge, $('.badge-content'));\n        append(container, $('.active-item-indicator'));\n        hide(this.badge);\n        this.updateActivity();\n        this.updateStyles();\n        this.updateHover();\n    }\n    onThemeChange(theme) {\n        this.updateStyles();\n    }\n    updateActivity() {\n        this.updateLabel();\n        this.updateTitle();\n        this.updateBadge();\n        this.updateStyles();\n    }\n    updateBadge() {\n        const action = this.action;\n        if (!this.badge || !this.badgeContent || !(action instanceof ActivityAction)) {\n            return;\n        }\n        const badge = action.getBadge();\n        const clazz = action.getClass();\n        this.badgeDisposable.clear();\n        clearNode(this.badgeContent);\n        hide(this.badge);\n        const shouldRenderBadges = this.badgesEnabled(this.activity.id);\n        if (badge && shouldRenderBadges) {\n            if (badge instanceof NumberBadge) {\n                if (badge.number) {\n                    let number = ( badge.number.toString());\n                    if (badge.number > 999) {\n                        const noOfThousands = badge.number / 1000;\n                        const floor = Math.floor(noOfThousands);\n                        if (noOfThousands > floor) {\n                            number = `${floor}K+`;\n                        }\n                        else {\n                            number = `${noOfThousands}K`;\n                        }\n                    }\n                    this.badgeContent.textContent = number;\n                    show(this.badge);\n                }\n            }\n            else if (badge instanceof TextBadge) {\n                this.badgeContent.textContent = badge.text;\n                show(this.badge);\n            }\n            else if (badge instanceof IconBadge) {\n                const clazzList = ThemeIcon.asClassNameArray(badge.icon);\n                this.badgeContent.classList.add(...clazzList);\n                show(this.badge);\n            }\n            else if (badge instanceof ProgressBadge) {\n                show(this.badge);\n            }\n            if (clazz) {\n                const classNames = clazz.split(' ');\n                this.badge.classList.add(...classNames);\n                this.badgeDisposable.value = toDisposable(() => this.badge.classList.remove(...classNames));\n            }\n        }\n        this.updateTitle();\n    }\n    updateLabel() {\n        this.label.className = 'action-label';\n        if (this.activity.classNames) {\n            this.label.classList.add(...this.activity.classNames);\n        }\n        if (!this.options.icon) {\n            this.label.textContent = this.action.label;\n        }\n    }\n    updateTitle() {\n        const title = this.computeTitle();\n        [this.label, this.badge, this.container].forEach(element => {\n            if (element) {\n                element.setAttribute('aria-label', title);\n                element.setAttribute('title', '');\n                element.removeAttribute('title');\n            }\n        });\n    }\n    computeTitle() {\n        this.keybindingLabel = this.computeKeybindingLabel();\n        let title = this.keybindingLabel ? ( localize('titleKeybinding', \"{0} ({1})\", this.activity.name, this.keybindingLabel)) : this.activity.name;\n        const badge = this.action.getBadge();\n        if (badge?.getDescription()) {\n            title = ( localize('badgeTitle', \"{0} - {1}\", title, badge.getDescription()));\n        }\n        return title;\n    }\n    computeKeybindingLabel() {\n        const keybinding = this.activity.keybindingId ? this.keybindingService.lookupKeybinding(this.activity.keybindingId) : null;\n        return keybinding?.getLabel();\n    }\n    updateHover() {\n        this.hoverDisposables.clear();\n        this.updateTitle();\n        this.hoverDisposables.add(addDisposableListener(this.container, EventType.MOUSE_OVER, () => {\n            if (!this.showHoverScheduler.isScheduled()) {\n                if (Date.now() - ActivityActionViewItem.hoverLeaveTime < 200) {\n                    this.showHover(true);\n                }\n                else {\n                    this.showHoverScheduler.schedule(this.configurationService.getValue('workbench.hover.delay'));\n                }\n            }\n        }, true));\n        this.hoverDisposables.add(addDisposableListener(this.container, EventType.MOUSE_LEAVE, e => {\n            if (e.target === this.container) {\n                ActivityActionViewItem.hoverLeaveTime = Date.now();\n                this.hoverService.hideHover();\n                this.showHoverScheduler.cancel();\n            }\n        }, true));\n        this.hoverDisposables.add(toDisposable(() => {\n            this.hoverService.hideHover();\n            this.showHoverScheduler.cancel();\n        }));\n    }\n    showHover(skipFadeInAnimation = false) {\n        if (this.lastHover && !this.lastHover.isDisposed) {\n            return;\n        }\n        const hoverPosition = this.options.hoverOptions.position();\n        this.lastHover = this.hoverService.showHover({\n            target: this.container,\n            hoverPosition,\n            content: this.computeTitle(),\n            showPointer: true,\n            compact: true,\n            hideOnKeyDown: true,\n            skipFadeInAnimation,\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this.mouseUpTimeout) {\n            clearTimeout(this.mouseUpTimeout);\n        }\n        this.badge.remove();\n    }\n};\nActivityActionViewItem = ( __decorate([\n    ( __param(3, IThemeService)),\n    ( __param(4, IHoverService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IKeybindingService))\n], ActivityActionViewItem));\nclass CompositeOverflowActivityAction extends ActivityAction {\n    constructor(showMenu) {\n        super({\n            id: 'additionalComposites.action',\n            name: ( localize('additionalViews', \"Additional Views\")),\n            classNames: ThemeIcon.asClassNameArray(Codicon.more)\n        });\n        this.showMenu = showMenu;\n    }\n    async run() {\n        this.showMenu();\n    }\n}\nlet CompositeOverflowActivityActionViewItem = class CompositeOverflowActivityActionViewItem extends ActivityActionViewItem {\n    constructor(action, getOverflowingComposites, getActiveCompositeId, getBadge, getCompositeOpenAction, colors, hoverOptions, contextMenuService, themeService, hoverService, configurationService, keybindingService) {\n        super(action, { icon: true, colors, hasPopup: true, hoverOptions }, () => true, themeService, hoverService, configurationService, keybindingService);\n        this.getOverflowingComposites = getOverflowingComposites;\n        this.getActiveCompositeId = getActiveCompositeId;\n        this.getBadge = getBadge;\n        this.getCompositeOpenAction = getCompositeOpenAction;\n        this.contextMenuService = contextMenuService;\n        this.actions = [];\n    }\n    showMenu() {\n        if (this.actions) {\n            disposeIfDisposable(this.actions);\n        }\n        this.actions = this.getActions();\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => this.container,\n            getActions: () => this.actions,\n            getCheckedActionsRepresentation: () => 'radio',\n            onHide: () => disposeIfDisposable(this.actions)\n        });\n    }\n    getActions() {\n        return ( this.getOverflowingComposites().map(composite => {\n            const action = this.getCompositeOpenAction(composite.id);\n            action.checked = this.getActiveCompositeId() === action.id;\n            const badge = this.getBadge(composite.id);\n            let suffix;\n            if (badge instanceof NumberBadge) {\n                suffix = badge.number;\n            }\n            else if (badge instanceof TextBadge) {\n                suffix = badge.text;\n            }\n            if (suffix) {\n                action.label = ( localize('numberBadge', \"{0} ({1})\", composite.name, suffix));\n            }\n            else {\n                action.label = composite.name || '';\n            }\n            return action;\n        }));\n    }\n    dispose() {\n        super.dispose();\n        if (this.actions) {\n            this.actions = disposeIfDisposable(this.actions);\n        }\n    }\n};\nCompositeOverflowActivityActionViewItem = ( __decorate([\n    ( __param(7, IContextMenuService)),\n    ( __param(8, IThemeService)),\n    ( __param(9, IHoverService)),\n    ( __param(10, IConfigurationService)),\n    ( __param(11, IKeybindingService))\n], CompositeOverflowActivityActionViewItem));\nlet ManageExtensionAction = class ManageExtensionAction extends Action {\n    constructor(commandService) {\n        super('activitybar.manage.extension', ( localize('manageExtension', \"Manage Extension\")));\n        this.commandService = commandService;\n    }\n    run(id) {\n        return this.commandService.executeCommand('_extensions.manage', id);\n    }\n};\nManageExtensionAction = ( __decorate([\n    ( __param(0, ICommandService))\n], ManageExtensionAction));\nlet CompositeActionViewItem = class CompositeActionViewItem extends ActivityActionViewItem {\n    constructor(options, compositeActivityAction, toggleCompositePinnedAction, toggleCompositeBadgeAction, compositeContextMenuActionsProvider, contextMenuActionsProvider, dndHandler, compositeBar, contextMenuService, keybindingService, instantiationService, themeService, hoverService, configurationService) {\n        super(compositeActivityAction, options, compositeBar.areBadgesEnabled.bind(compositeBar), themeService, hoverService, configurationService, keybindingService);\n        this.compositeActivityAction = compositeActivityAction;\n        this.toggleCompositePinnedAction = toggleCompositePinnedAction;\n        this.toggleCompositeBadgeAction = toggleCompositeBadgeAction;\n        this.compositeContextMenuActionsProvider = compositeContextMenuActionsProvider;\n        this.contextMenuActionsProvider = contextMenuActionsProvider;\n        this.dndHandler = dndHandler;\n        this.compositeBar = compositeBar;\n        this.contextMenuService = contextMenuService;\n        if (!CompositeActionViewItem.manageExtensionAction) {\n            CompositeActionViewItem.manageExtensionAction = instantiationService.createInstance(ManageExtensionAction);\n        }\n    }\n    render(container) {\n        super.render(container);\n        this.updateChecked();\n        this.updateEnabled();\n        this._register(addDisposableListener(this.container, EventType.CONTEXT_MENU, e => {\n            EventHelper.stop(e, true);\n            this.showContextMenu(container);\n        }));\n        let insertDropBefore = undefined;\n        this._register(CompositeDragAndDropObserver.INSTANCE.registerDraggable(this.container, () => { return { type: 'composite', id: this.activity.id }; }, {\n            onDragOver: e => {\n                const isValidMove = e.dragAndDropData.getData().id !== this.activity.id && this.dndHandler.onDragOver(e.dragAndDropData, this.activity.id, e.eventData);\n                toggleDropEffect(e.eventData.dataTransfer, 'move', isValidMove);\n                insertDropBefore = this.updateFromDragging(container, isValidMove, e.eventData);\n            },\n            onDragLeave: e => {\n                insertDropBefore = this.updateFromDragging(container, false, e.eventData);\n            },\n            onDragEnd: e => {\n                insertDropBefore = this.updateFromDragging(container, false, e.eventData);\n            },\n            onDrop: e => {\n                EventHelper.stop(e.eventData, true);\n                this.dndHandler.drop(e.dragAndDropData, this.activity.id, e.eventData, insertDropBefore);\n                insertDropBefore = this.updateFromDragging(container, false, e.eventData);\n            },\n            onDragStart: e => {\n                if (e.dragAndDropData.getData().id !== this.activity.id) {\n                    return;\n                }\n                if (e.eventData.dataTransfer) {\n                    e.eventData.dataTransfer.effectAllowed = 'move';\n                }\n                this.blur();\n            }\n        }));\n        [this.badge, this.label].forEach(element => this._register(( new DelayedDragHandler(element, () => {\n            if (!this.action.checked) {\n                this.action.run();\n            }\n        }))));\n        this.updateStyles();\n    }\n    updateFromDragging(element, showFeedback, event) {\n        const rect = element.getBoundingClientRect();\n        const posX = event.clientX;\n        const posY = event.clientY;\n        const height = rect.bottom - rect.top;\n        const width = rect.right - rect.left;\n        const forceTop = posY <= rect.top + height * 0.4;\n        const forceBottom = posY > rect.bottom - height * 0.4;\n        const preferTop = posY <= rect.top + height * 0.5;\n        const forceLeft = posX <= rect.left + width * 0.4;\n        const forceRight = posX > rect.right - width * 0.4;\n        const preferLeft = posX <= rect.left + width * 0.5;\n        const classes = element.classList;\n        const lastClasses = {\n            vertical: classes.contains('top') ? 'top' : (classes.contains('bottom') ? 'bottom' : undefined),\n            horizontal: classes.contains('left') ? 'left' : (classes.contains('right') ? 'right' : undefined)\n        };\n        const top = forceTop || (preferTop && !lastClasses.vertical) || (!forceBottom && lastClasses.vertical === 'top');\n        const bottom = forceBottom || (!preferTop && !lastClasses.vertical) || (!forceTop && lastClasses.vertical === 'bottom');\n        const left = forceLeft || (preferLeft && !lastClasses.horizontal) || (!forceRight && lastClasses.horizontal === 'left');\n        const right = forceRight || (!preferLeft && !lastClasses.horizontal) || (!forceLeft && lastClasses.horizontal === 'right');\n        element.classList.toggle('top', showFeedback && top);\n        element.classList.toggle('bottom', showFeedback && bottom);\n        element.classList.toggle('left', showFeedback && left);\n        element.classList.toggle('right', showFeedback && right);\n        if (!showFeedback) {\n            return undefined;\n        }\n        return { verticallyBefore: top, horizontallyBefore: left };\n    }\n    showContextMenu(container) {\n        const actions = [this.toggleCompositePinnedAction, this.toggleCompositeBadgeAction];\n        const compositeContextMenuActions = this.compositeContextMenuActionsProvider(this.activity.id);\n        if (compositeContextMenuActions.length) {\n            actions.push(...compositeContextMenuActions);\n        }\n        if (this.compositeActivityAction.activity.extensionId) {\n            actions.push(( new Separator()));\n            actions.push(CompositeActionViewItem.manageExtensionAction);\n        }\n        const isPinned = this.compositeBar.isPinned(this.activity.id);\n        if (isPinned) {\n            this.toggleCompositePinnedAction.label = ( localize('hide', \"Hide '{0}'\", this.activity.name));\n            this.toggleCompositePinnedAction.checked = false;\n        }\n        else {\n            this.toggleCompositePinnedAction.label = ( localize('keep', \"Keep '{0}'\", this.activity.name));\n        }\n        const isBadgeEnabled = this.compositeBar.areBadgesEnabled(this.activity.id);\n        if (isBadgeEnabled) {\n            this.toggleCompositeBadgeAction.label = ( localize('hideBadge', \"Hide Badge\"));\n        }\n        else {\n            this.toggleCompositeBadgeAction.label = ( localize('showBadge', \"Show Badge\"));\n        }\n        const otherActions = this.contextMenuActionsProvider();\n        if (otherActions.length) {\n            actions.push(( new Separator()));\n            actions.push(...otherActions);\n        }\n        const elementPosition = getDomNodePagePosition(container);\n        const anchor = {\n            x: Math.floor(elementPosition.left + (elementPosition.width / 2)),\n            y: elementPosition.top + elementPosition.height\n        };\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => anchor,\n            getActions: () => actions,\n            getActionsContext: () => this.activity.id\n        });\n    }\n    updateChecked() {\n        if (this.action.checked) {\n            this.container.classList.add('checked');\n            this.container.setAttribute('aria-label', this.container.title);\n            this.container.setAttribute('aria-expanded', 'true');\n            this.container.setAttribute('aria-selected', 'true');\n        }\n        else {\n            this.container.classList.remove('checked');\n            this.container.setAttribute('aria-label', this.container.title);\n            this.container.setAttribute('aria-expanded', 'false');\n            this.container.setAttribute('aria-selected', 'false');\n        }\n        this.updateStyles();\n    }\n    updateEnabled() {\n        if (!this.element) {\n            return;\n        }\n        if (this.action.enabled) {\n            this.element.classList.remove('disabled');\n        }\n        else {\n            this.element.classList.add('disabled');\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.label.remove();\n    }\n};\nCompositeActionViewItem = ( __decorate([\n    ( __param(8, IContextMenuService)),\n    ( __param(9, IKeybindingService)),\n    ( __param(10, IInstantiationService)),\n    ( __param(11, IThemeService)),\n    ( __param(12, IHoverService)),\n    ( __param(13, IConfigurationService))\n], CompositeActionViewItem));\nclass ToggleCompositePinnedAction extends Action {\n    constructor(activity, compositeBar) {\n        super('show.toggleCompositePinned', activity ? activity.name : ( localize('toggle', \"Toggle View Pinned\")));\n        this.activity = activity;\n        this.compositeBar = compositeBar;\n        this.checked = !!this.activity && this.compositeBar.isPinned(this.activity.id);\n    }\n    async run(context) {\n        const id = this.activity ? this.activity.id : context;\n        if (this.compositeBar.isPinned(id)) {\n            this.compositeBar.unpin(id);\n        }\n        else {\n            this.compositeBar.pin(id);\n        }\n    }\n}\nclass ToggleCompositeBadgeAction extends Action {\n    constructor(activity, compositeBar) {\n        super('show.toggleCompositeBadge', activity ? activity.name : ( localize('toggleBadge', \"Toggle View Badge\")));\n        this.activity = activity;\n        this.compositeBar = compositeBar;\n        this.checked = false;\n    }\n    async run(context) {\n        const id = this.activity ? this.activity.id : context;\n        this.compositeBar.toggleBadgeEnablement(id);\n    }\n}\nexport { ActivityAction, ActivityActionViewItem, CompositeActionViewItem, CompositeOverflowActivityAction, CompositeOverflowActivityActionViewItem, ToggleCompositeBadgeAction, ToggleCompositePinnedAction };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { BinaryEditorModel } from '../../../common/editor/binaryEditorModel.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ByteSize } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { EditorPlaceholder } from './editorPlaceholder.js';\nlet BaseBinaryResourceEditor = class BaseBinaryResourceEditor extends EditorPlaceholder {\n    constructor(id, callbacks, telemetryService, themeService, storageService) {\n        super(id, telemetryService, themeService, storageService);\n        this.callbacks = callbacks;\n        this._onDidChangeMetadata = this._register(( new Emitter()));\n        this.onDidChangeMetadata = this._onDidChangeMetadata.event;\n        this._onDidOpenInPlace = this._register(( new Emitter()));\n        this.onDidOpenInPlace = this._onDidOpenInPlace.event;\n    }\n    getTitle() {\n        return this.input ? this.input.getName() : ( localize('binaryEditor', \"Binary Viewer\"));\n    }\n    async getContents(input, options) {\n        const model = await input.resolve(options);\n        if (!(model instanceof BinaryEditorModel)) {\n            throw new Error('Unable to open file as binary');\n        }\n        const size = model.getSize();\n        this.handleMetadataChanged(typeof size === 'number' ? ByteSize.formatSize(size) : '');\n        return {\n            icon: '$(warning)',\n            label: ( localize(\n                'binaryError',\n                \"The file is not displayed in the text editor because it is either binary or uses an unsupported text encoding.\"\n            )),\n            actions: [\n                {\n                    label: ( localize('openAnyway', \"Open Anyway\")),\n                    run: async () => {\n                        await this.callbacks.openInternal(input, options);\n                        this._onDidOpenInPlace.fire();\n                    }\n                }\n            ]\n        };\n    }\n    handleMetadataChanged(meta) {\n        this.metadata = meta;\n        this._onDidChangeMetadata.fire();\n    }\n    getMetadata() {\n        return this.metadata;\n    }\n};\nBaseBinaryResourceEditor = ( __decorate([\n    ( __param(4, IStorageService))\n], BaseBinaryResourceEditor));\nexport { BaseBinaryResourceEditor };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { BINARY_DIFF_EDITOR_ID } from '../../../common/editor.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { SideBySideEditor } from './sideBySideEditor.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { BaseBinaryResourceEditor } from './binaryEditor.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nlet BinaryResourceDiffEditor = class BinaryResourceDiffEditor extends SideBySideEditor {\n    static { this.ID = BINARY_DIFF_EDITOR_ID; }\n    constructor(telemetryService, instantiationService, themeService, storageService, configurationService, textResourceConfigurationService, editorService, editorGroupService) {\n        super(telemetryService, instantiationService, themeService, storageService, configurationService, textResourceConfigurationService, editorService, editorGroupService);\n    }\n    getMetadata() {\n        const primary = this.getPrimaryEditorPane();\n        const secondary = this.getSecondaryEditorPane();\n        if (primary instanceof BaseBinaryResourceEditor && secondary instanceof BaseBinaryResourceEditor) {\n            return ( localize(\n                'metadataDiff',\n                \"{0} ↔ {1}\",\n                secondary.getMetadata(),\n                primary.getMetadata()\n            ));\n        }\n        return undefined;\n    }\n};\nBinaryResourceDiffEditor = ( __decorate([\n    ( __param(0, ITelemetryService)),\n    ( __param(1, IInstantiationService)),\n    ( __param(2, IThemeService)),\n    ( __param(3, IStorageService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, ITextResourceConfigurationService)),\n    ( __param(6, IEditorService)),\n    ( __param(7, IEditorGroupsService))\n], BinaryResourceDiffEditor));\nexport { BinaryResourceDiffEditor };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-workbench .screen-reader-detected-explanation{cursor:default;padding:1em;right:6px;top:30px;width:420px}.monaco-workbench .screen-reader-detected-explanation .cancel{border:none;cursor:pointer;height:22px;padding:.5em;position:absolute;right:0;top:0;width:22px}.monaco-workbench .screen-reader-detected-explanation h2{font-size:1.8em;font-weight:400;margin:0;padding:0}.monaco-workbench .screen-reader-detected-explanation p{font-size:1.2em}.monaco-workbench .screen-reader-detected-explanation hr{border:0;height:2px}.monaco-workbench .screen-reader-detected-explanation .buttons{display:flex}.monaco-workbench .screen-reader-detected-explanation .buttons a{font-size:13px;margin-right:5px;max-width:fit-content;padding-left:12px;padding-right:12px}\";\nn(css,{});\nexport { css, css as default };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { EditOperation } from '../core/editOperation.js';\nimport { Range } from '../core/range.js';\nexport class TrimTrailingWhitespaceCommand {\n    constructor(selection, cursors) {\n        this._selection = selection;\n        this._cursors = cursors;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const ops = trimTrailingWhitespace(model, this._cursors);\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            builder.addEditOperation(op.range, op.text);\n        }\n        this._selectionId = builder.trackSelection(this._selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n/**\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\n */\nexport function trimTrailingWhitespace(model, cursors) {\n    // Sort cursors ascending\n    cursors.sort((a, b) => {\n        if (a.lineNumber === b.lineNumber) {\n            return a.column - b.column;\n        }\n        return a.lineNumber - b.lineNumber;\n    });\n    // Reduce multiple cursors on the same line and only keep the last one on the line\n    for (let i = cursors.length - 2; i >= 0; i--) {\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\n            // Remove cursor at `i`\n            cursors.splice(i, 1);\n        }\n    }\n    const r = [];\n    let rLen = 0;\n    let cursorIndex = 0;\n    const cursorLen = cursors.length;\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const maxLineColumn = lineContent.length + 1;\n        let minEditColumn = 0;\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\n            minEditColumn = cursors[cursorIndex].column;\n            cursorIndex++;\n            if (minEditColumn === maxLineColumn) {\n                // The cursor is at the end of the line => no edits for sure on this line\n                continue;\n            }\n        }\n        if (lineContent.length === 0) {\n            continue;\n        }\n        const lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        let fromColumn = 0;\n        if (lastNonWhitespaceIndex === -1) {\n            // Entire line is whitespace\n            fromColumn = 1;\n        }\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\n            // There is trailing whitespace\n            fromColumn = lastNonWhitespaceIndex + 2;\n        }\n        else {\n            // There is no trailing whitespace\n            continue;\n        }\n        fromColumn = Math.max(minEditColumn, fromColumn);\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(11 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(128 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport class KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(11 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(54 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(11 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { TabFocus } from 'monaco-editor/esm/vs/editor/browser/config/tabFocus.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { terminalTabFocusModeContextKey } from '../../../../platform/terminal/common/terminal.js';\nconst editorTabFocusContextKey = ( new RawContextKey('editorTabFocusMode', false, true));\nlet TabFocusMode = class TabFocusMode extends Disposable {\n    constructor(contextKeyService, configurationService) {\n        super();\n        this._onDidChange = this._register(( new Emitter()));\n        this.onDidChange = this._onDidChange.event;\n        this._editorContext = editorTabFocusContextKey.bindTo(contextKeyService);\n        this._terminalContext = terminalTabFocusModeContextKey.bindTo(contextKeyService);\n        const editorConfig = configurationService.getValue('editor.tabFocusMode');\n        const terminalConfig = configurationService.getValue(\"terminal.integrated.tabFocusMode\" ) ?? editorConfig;\n        this._editorContext.set(editorConfig);\n        this._terminalContext.set(terminalConfig);\n        TabFocus.setTabFocusMode(editorConfig, \"editorFocus\" );\n        TabFocus.setTabFocusMode(terminalConfig, \"terminalFocus\" );\n        const viewKey = ( new Set());\n        viewKey.add('focusedView');\n        this._register(contextKeyService.onDidChangeContext((c) => {\n            if (c.affectsSome(viewKey)) {\n                const terminalFocus = contextKeyService.getContextKeyValue('focusedView') === 'terminal';\n                const context = terminalFocus ? \"terminalFocus\"  : \"editorFocus\" ;\n                if (this._previousViewContext === context) {\n                    return;\n                }\n                if (terminalFocus) {\n                    this._editorContext.reset();\n                }\n                else {\n                    this._terminalContext.reset();\n                }\n                this._previousViewContext = context;\n                this._onDidChange.fire();\n            }\n        }));\n        this._register(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.tabFocusMode')) {\n                const editorConfig = configurationService.getValue('editor.tabFocusMode');\n                TabFocus.setTabFocusMode(editorConfig, \"editorFocus\" );\n                this._editorContext.set(editorConfig);\n                const terminalConfig = configurationService.getValue(\"terminal.integrated.tabFocusMode\" );\n                if (terminalConfig === null) {\n                    configurationService.updateValue(\"terminal.integrated.tabFocusMode\" , editorConfig);\n                    TabFocus.setTabFocusMode(editorConfig, \"terminalFocus\" );\n                    this._terminalContext.set(editorConfig);\n                }\n                this._onDidChange.fire();\n            }\n            else if (e.affectsConfiguration(\"terminal.integrated.tabFocusMode\" )) {\n                const terminalConfig = configurationService.getValue(\"terminal.integrated.tabFocusMode\" ) ?? configurationService.getValue('editor.tabFocusMode');\n                configurationService.updateValue(\"terminal.integrated.tabFocusMode\" , terminalConfig);\n                TabFocus.setTabFocusMode(terminalConfig, \"terminalFocus\" );\n                this._terminalContext.set(terminalConfig);\n                this._onDidChange.fire();\n            }\n        }));\n        TabFocus.onDidChangeTabFocus(() => {\n            const focusedView = contextKeyService.getContextKeyValue('focusedView') === 'terminal' ? \"terminalFocus\"  : \"editorFocus\" ;\n            if (focusedView === \"terminalFocus\" ) {\n                this._terminalContext.set(TabFocus.getTabFocusMode(focusedView));\n            }\n            else {\n                this._editorContext.set(TabFocus.getTabFocusMode(focusedView));\n            }\n        });\n    }\n};\nTabFocusMode = ( __decorate([\n    ( __param(0, IContextKeyService)),\n    ( __param(1, IConfigurationService))\n], TabFocusMode));\nexport { TabFocusMode, editorTabFocusContextKey };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/editorstatus.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { runAtThisOrScheduleAtNextAnimationFrame } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { format, splitLines, compare } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { extname, basename, isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { withNullAsUndefined, withUndefinedAsNull, areFunctions, assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { Language } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { UntitledTextEditorInput } from '../../../services/untitled/common/untitledTextEditorInput.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { Disposable, MutableDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { TrimTrailingWhitespaceAction } from 'monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js';\nimport { IndentUsingSpaces, IndentUsingTabs, ChangeTabDisplaySize, DetectIndentation, IndentationToSpacesAction, IndentationToTabsAction } from 'monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js';\nimport { BaseBinaryResourceEditor } from './binaryEditor.js';\nimport { BinaryResourceDiffEditor } from './binaryDiffEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { FILES_ASSOCIATIONS_CONFIG, IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { Selection } from 'monaco-editor/esm/vs/editor/common/core/selection.js';\nimport { TabFocus } from 'monaco-editor/esm/vs/editor/browser/config/tabFocus.js';\nimport { CommandsRegistry, ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IExtensionGalleryService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { SUPPORTED_ENCODINGS } from '../../../services/textfile/common/encoding.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { deepClone } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { getCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { getIconClassesForLanguageId } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { timeout, Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IStatusbarService } from '../../../services/statusbar/browser/statusbar.js';\nimport { IMarkerData, MarkerSeverity, IMarkerService } from 'monaco-editor/esm/vs/platform/markers/common/markers.js';\nimport { STATUS_BAR_PROMINENT_ITEM_BACKGROUND, STATUS_BAR_PROMINENT_ITEM_FOREGROUND } from '../../../common/theme.js';\nimport { themeColorFromId } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { ILanguageDetectionService, AutomaticLanguageDetectionLikelyWrongId } from '../../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { TabFocusMode } from './tabFocus.js';\nclass SideBySideEditorEncodingSupport {\n    constructor(primary, secondary) {\n        this.primary = primary;\n        this.secondary = secondary;\n    }\n    getEncoding() {\n        return this.primary.getEncoding();\n    }\n    async setEncoding(encoding, mode) {\n        await Promises.settled(( [this.primary, this.secondary].map(editor => editor.setEncoding(encoding, mode))));\n    }\n}\nclass SideBySideEditorLanguageSupport {\n    constructor(primary, secondary) {\n        this.primary = primary;\n        this.secondary = secondary;\n    }\n    setLanguageId(languageId, source) {\n        [this.primary, this.secondary].forEach(editor => editor.setLanguageId(languageId, source));\n    }\n}\nfunction toEditorWithEncodingSupport(input) {\n    if (input instanceof UntitledTextEditorInput) {\n        return input;\n    }\n    if (input instanceof SideBySideEditorInput) {\n        const primaryEncodingSupport = toEditorWithEncodingSupport(input.primary);\n        const secondaryEncodingSupport = toEditorWithEncodingSupport(input.secondary);\n        if (primaryEncodingSupport && secondaryEncodingSupport) {\n            return ( new SideBySideEditorEncodingSupport(primaryEncodingSupport, secondaryEncodingSupport));\n        }\n        return primaryEncodingSupport;\n    }\n    const encodingSupport = input;\n    if (areFunctions(encodingSupport.setEncoding, encodingSupport.getEncoding)) {\n        return encodingSupport;\n    }\n    return null;\n}\nfunction toEditorWithLanguageSupport(input) {\n    if (input instanceof UntitledTextEditorInput) {\n        return input;\n    }\n    if (input instanceof SideBySideEditorInput) {\n        const primaryLanguageSupport = toEditorWithLanguageSupport(input.primary);\n        const secondaryLanguageSupport = toEditorWithLanguageSupport(input.secondary);\n        if (primaryLanguageSupport && secondaryLanguageSupport) {\n            return ( new SideBySideEditorLanguageSupport(primaryLanguageSupport, secondaryLanguageSupport));\n        }\n        return primaryLanguageSupport;\n    }\n    const languageSupport = input;\n    if (typeof languageSupport.setLanguageId === 'function') {\n        return languageSupport;\n    }\n    return null;\n}\nclass StateChange {\n    constructor() {\n        this.indentation = false;\n        this.selectionStatus = false;\n        this.languageId = false;\n        this.languageStatus = false;\n        this.encoding = false;\n        this.EOL = false;\n        this.tabFocusMode = false;\n        this.columnSelectionMode = false;\n        this.metadata = false;\n    }\n    combine(other) {\n        this.indentation = this.indentation || other.indentation;\n        this.selectionStatus = this.selectionStatus || other.selectionStatus;\n        this.languageId = this.languageId || other.languageId;\n        this.languageStatus = this.languageStatus || other.languageStatus;\n        this.encoding = this.encoding || other.encoding;\n        this.EOL = this.EOL || other.EOL;\n        this.tabFocusMode = this.tabFocusMode || other.tabFocusMode;\n        this.columnSelectionMode = this.columnSelectionMode || other.columnSelectionMode;\n        this.metadata = this.metadata || other.metadata;\n    }\n    hasChanges() {\n        return this.indentation\n            || this.selectionStatus\n            || this.languageId\n            || this.languageStatus\n            || this.encoding\n            || this.EOL\n            || this.tabFocusMode\n            || this.columnSelectionMode\n            || this.metadata;\n    }\n}\nclass State {\n    get selectionStatus() { return this._selectionStatus; }\n    get languageId() { return this._languageId; }\n    get encoding() { return this._encoding; }\n    get EOL() { return this._EOL; }\n    get indentation() { return this._indentation; }\n    get tabFocusMode() { return this._tabFocusMode; }\n    get columnSelectionMode() { return this._columnSelectionMode; }\n    get metadata() { return this._metadata; }\n    update(update) {\n        const change = ( new StateChange());\n        switch (update.type) {\n            case 'selectionStatus':\n                if (this._selectionStatus !== update.selectionStatus) {\n                    this._selectionStatus = update.selectionStatus;\n                    change.selectionStatus = true;\n                }\n                break;\n            case 'indentation':\n                if (this._indentation !== update.indentation) {\n                    this._indentation = update.indentation;\n                    change.indentation = true;\n                }\n                break;\n            case 'languageId':\n                if (this._languageId !== update.languageId) {\n                    this._languageId = update.languageId;\n                    change.languageId = true;\n                }\n                break;\n            case 'encoding':\n                if (this._encoding !== update.encoding) {\n                    this._encoding = update.encoding;\n                    change.encoding = true;\n                }\n                break;\n            case 'EOL':\n                if (this._EOL !== update.EOL) {\n                    this._EOL = update.EOL;\n                    change.EOL = true;\n                }\n                break;\n            case 'tabFocusMode':\n                if (this._tabFocusMode !== update.tabFocusMode) {\n                    this._tabFocusMode = update.tabFocusMode;\n                    change.tabFocusMode = true;\n                }\n                break;\n            case 'columnSelectionMode':\n                if (this._columnSelectionMode !== update.columnSelectionMode) {\n                    this._columnSelectionMode = update.columnSelectionMode;\n                    change.columnSelectionMode = true;\n                }\n                break;\n            case 'metadata':\n                if (this._metadata !== update.metadata) {\n                    this._metadata = update.metadata;\n                    change.metadata = true;\n                }\n                break;\n        }\n        return change;\n    }\n}\nconst nlsSingleSelectionRange = ( localize('singleSelectionRange', \"Ln {0}, Col {1} ({2} selected)\"));\nconst nlsSingleSelection = ( localize('singleSelection', \"Ln {0}, Col {1}\"));\nconst nlsMultiSelectionRange = ( localize('multiSelectionRange', \"{0} selections ({1} characters selected)\"));\nconst nlsMultiSelection = ( localize('multiSelection', \"{0} selections\"));\nconst nlsEOLLF = ( localize('endOfLineLineFeed', \"LF\"));\nconst nlsEOLCRLF = ( localize('endOfLineCarriageReturnLineFeed', \"CRLF\"));\nlet EditorStatus = class EditorStatus extends Disposable {\n    constructor(editorService, quickInputService, languageService, textFileService, statusbarService, instantiationService, contextKeyService) {\n        super();\n        this.editorService = editorService;\n        this.quickInputService = quickInputService;\n        this.languageService = languageService;\n        this.textFileService = textFileService;\n        this.statusbarService = statusbarService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.tabFocusModeElement = this._register(( new MutableDisposable()));\n        this.columnSelectionModeElement = this._register(( new MutableDisposable()));\n        this.indentationElement = this._register(( new MutableDisposable()));\n        this.selectionElement = this._register(( new MutableDisposable()));\n        this.encodingElement = this._register(( new MutableDisposable()));\n        this.eolElement = this._register(( new MutableDisposable()));\n        this.languageElement = this._register(( new MutableDisposable()));\n        this.metadataElement = this._register(( new MutableDisposable()));\n        this.currentProblemStatus = this._register(this.instantiationService.createInstance(ShowCurrentMarkerInStatusbarContribution));\n        this.state = ( new State());\n        this.activeEditorListeners = this._register(( new DisposableStore()));\n        this.delayedRender = this._register(( new MutableDisposable()));\n        this.toRender = null;\n        this.tabFocusMode = instantiationService.createInstance(TabFocusMode);\n        this.registerCommands();\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.editorService.onDidActiveEditorChange(() => this.updateStatusBar()));\n        this._register(this.textFileService.untitled.onDidChangeEncoding(model => this.onResourceEncodingChange(model.resource)));\n        this._register(this.textFileService.files.onDidChangeEncoding(model => this.onResourceEncodingChange((model.resource))));\n        this._register(Event.runAndSubscribe(TabFocus.onDidChangeTabFocus, () => this.onTabFocusModeChange()));\n        this._register(this.tabFocusMode.onDidChange(() => this.onTabFocusModeChange()));\n    }\n    registerCommands() {\n        CommandsRegistry.registerCommand({ id: 'changeEditorIndentation', handler: () => this.showIndentationPicker() });\n    }\n    async showIndentationPicker() {\n        const activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n        if (!activeTextEditorControl) {\n            return this.quickInputService.pick([{ label: ( localize('noEditor', \"No text editor active at this time\")) }]);\n        }\n        if (this.editorService.activeEditor?.isReadonly()) {\n            return this.quickInputService.pick([{ label: ( localize('noWritableCodeEditor', \"The active code editor is read-only.\")) }]);\n        }\n        const picks = ( [\n            assertIsDefined(activeTextEditorControl.getAction(IndentUsingSpaces.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(IndentUsingTabs.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(ChangeTabDisplaySize.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(DetectIndentation.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(IndentationToSpacesAction.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(IndentationToTabsAction.ID)),\n            assertIsDefined(activeTextEditorControl.getAction(TrimTrailingWhitespaceAction.ID))\n        ].map((a) => {\n            return {\n                id: a.id,\n                label: a.label,\n                detail: (Language.isDefaultVariant() || a.label === a.alias) ? undefined : a.alias,\n                run: () => {\n                    activeTextEditorControl.focus();\n                    a.run();\n                }\n            };\n        }));\n        picks.splice(3, 0, { type: 'separator', label: ( localize('indentConvert', \"convert file\")) });\n        picks.unshift({ type: 'separator', label: ( localize('indentView', \"change view\")) });\n        const action = await this.quickInputService.pick(picks, { placeHolder: ( localize('pickAction', \"Select Action\")), matchOnDetail: true });\n        return action?.run();\n    }\n    updateTabFocusModeElement(visible) {\n        if (visible) {\n            if (!this.tabFocusModeElement.value) {\n                const text = ( localize('tabFocusModeEnabled', \"Tab Moves Focus\"));\n                this.tabFocusModeElement.value = this.statusbarService.addEntry({\n                    name: ( localize('status.editor.tabFocusMode', \"Accessibility Mode\")),\n                    text,\n                    ariaLabel: text,\n                    tooltip: ( localize('disableTabMode', \"Disable Accessibility Mode\")),\n                    command: 'editor.action.toggleTabFocusMode',\n                    backgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n                    color: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n                }, 'status.editor.tabFocusMode', 1 , 100.7);\n            }\n        }\n        else {\n            this.tabFocusModeElement.clear();\n        }\n    }\n    updateColumnSelectionModeElement(visible) {\n        if (visible) {\n            if (!this.columnSelectionModeElement.value) {\n                const text = ( localize('columnSelectionModeEnabled', \"Column Selection\"));\n                this.columnSelectionModeElement.value = this.statusbarService.addEntry({\n                    name: ( localize('status.editor.columnSelectionMode', \"Column Selection Mode\")),\n                    text,\n                    ariaLabel: text,\n                    tooltip: ( localize('disableColumnSelectionMode', \"Disable Column Selection Mode\")),\n                    command: 'editor.action.toggleColumnSelection',\n                    backgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n                    color: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n                }, 'status.editor.columnSelectionMode', 1 , 100.8);\n            }\n        }\n        else {\n            this.columnSelectionModeElement.clear();\n        }\n    }\n    updateSelectionElement(text) {\n        if (!text) {\n            this.selectionElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.selection', \"Editor Selection\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('gotoLine', \"Go to Line/Column\")),\n            command: 'workbench.action.gotoLine'\n        };\n        this.updateElement(this.selectionElement, props, 'status.editor.selection', 1 , 100.5);\n    }\n    updateIndentationElement(text) {\n        if (!text) {\n            this.indentationElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.indentation', \"Editor Indentation\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('selectIndentation', \"Select Indentation\")),\n            command: 'changeEditorIndentation'\n        };\n        this.updateElement(this.indentationElement, props, 'status.editor.indentation', 1 , 100.4);\n    }\n    updateEncodingElement(text) {\n        if (!text) {\n            this.encodingElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.encoding', \"Editor Encoding\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('selectEncoding', \"Select Encoding\")),\n            command: 'workbench.action.editor.changeEncoding'\n        };\n        this.updateElement(this.encodingElement, props, 'status.editor.encoding', 1 , 100.3);\n    }\n    updateEOLElement(text) {\n        if (!text) {\n            this.eolElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.eol', \"Editor End of Line\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('selectEOL', \"Select End of Line Sequence\")),\n            command: 'workbench.action.editor.changeEOL'\n        };\n        this.updateElement(this.eolElement, props, 'status.editor.eol', 1 , 100.2);\n    }\n    updateLanguageIdElement(text) {\n        if (!text) {\n            this.languageElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.mode', \"Editor Language\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('selectLanguageMode', \"Select Language Mode\")),\n            command: 'workbench.action.editor.changeLanguageMode'\n        };\n        this.updateElement(this.languageElement, props, 'status.editor.mode', 1 , 100.1);\n    }\n    updateMetadataElement(text) {\n        if (!text) {\n            this.metadataElement.clear();\n            return;\n        }\n        const props = {\n            name: ( localize('status.editor.info', \"File Information\")),\n            text,\n            ariaLabel: text,\n            tooltip: ( localize('fileInfo', \"File Information\"))\n        };\n        this.updateElement(this.metadataElement, props, 'status.editor.info', 1 , 100);\n    }\n    updateElement(element, props, id, alignment, priority) {\n        if (!element.value) {\n            element.value = this.statusbarService.addEntry(props, id, alignment, priority);\n        }\n        else {\n            element.value.update(props);\n        }\n    }\n    updateState(update) {\n        const changed = this.state.update(update);\n        if (!changed.hasChanges()) {\n            return;\n        }\n        if (!this.toRender) {\n            this.toRender = changed;\n            this.delayedRender.value = runAtThisOrScheduleAtNextAnimationFrame(() => {\n                this.delayedRender.clear();\n                const toRender = this.toRender;\n                this.toRender = null;\n                if (toRender) {\n                    this.doRenderNow(toRender);\n                }\n            });\n        }\n        else {\n            this.toRender.combine(changed);\n        }\n    }\n    doRenderNow(changed) {\n        this.updateTabFocusModeElement(!!this.state.tabFocusMode);\n        this.updateColumnSelectionModeElement(!!this.state.columnSelectionMode);\n        this.updateIndentationElement(this.state.indentation);\n        this.updateSelectionElement(this.state.selectionStatus);\n        this.updateEncodingElement(this.state.encoding);\n        this.updateEOLElement(this.state.EOL ? this.state.EOL === '\\r\\n' ? nlsEOLCRLF : nlsEOLLF : undefined);\n        this.updateLanguageIdElement(this.state.languageId);\n        this.updateMetadataElement(this.state.metadata);\n    }\n    getSelectionLabel(info) {\n        if (!info || !info.selections) {\n            return undefined;\n        }\n        if (info.selections.length === 1) {\n            if (info.charactersSelected) {\n                return format(nlsSingleSelectionRange, info.selections[0].positionLineNumber, info.selections[0].positionColumn, info.charactersSelected);\n            }\n            return format(nlsSingleSelection, info.selections[0].positionLineNumber, info.selections[0].positionColumn);\n        }\n        if (info.charactersSelected) {\n            return format(nlsMultiSelectionRange, info.selections.length, info.charactersSelected);\n        }\n        if (info.selections.length > 0) {\n            return format(nlsMultiSelection, info.selections.length);\n        }\n        return undefined;\n    }\n    updateStatusBar() {\n        const activeInput = this.editorService.activeEditor;\n        const activeEditorPane = this.editorService.activeEditorPane;\n        const activeCodeEditor = activeEditorPane ? withNullAsUndefined(getCodeEditor(activeEditorPane.getControl())) : undefined;\n        this.onColumnSelectionModeChange(activeCodeEditor);\n        this.onSelectionChange(activeCodeEditor);\n        this.onLanguageChange(activeCodeEditor, activeInput);\n        this.onEOLChange(activeCodeEditor);\n        this.onEncodingChange(activeEditorPane, activeCodeEditor);\n        this.onIndentationChange(activeCodeEditor);\n        this.onMetadataChange(activeEditorPane);\n        this.currentProblemStatus.update(activeCodeEditor);\n        this.activeEditorListeners.clear();\n        if (activeEditorPane) {\n            this.activeEditorListeners.add(activeEditorPane.onDidChangeControl(() => {\n                this.updateStatusBar();\n            }));\n        }\n        if (activeCodeEditor) {\n            this.activeEditorListeners.add(activeCodeEditor.onDidChangeConfiguration((event) => {\n                if (event.hasChanged(21 )) {\n                    this.onColumnSelectionModeChange(activeCodeEditor);\n                }\n            }));\n            this.activeEditorListeners.add(Event.defer(activeCodeEditor.onDidChangeCursorPosition)(() => {\n                this.onSelectionChange(activeCodeEditor);\n                this.currentProblemStatus.update(activeCodeEditor);\n            }));\n            this.activeEditorListeners.add(activeCodeEditor.onDidChangeModelLanguage(() => {\n                this.onLanguageChange(activeCodeEditor, activeInput);\n            }));\n            this.activeEditorListeners.add(Event.accumulate(activeCodeEditor.onDidChangeModelContent)(e => {\n                this.onEOLChange(activeCodeEditor);\n                this.currentProblemStatus.update(activeCodeEditor);\n                const selections = activeCodeEditor.getSelections();\n                if (selections) {\n                    for (const inner of e) {\n                        for (const change of inner.changes) {\n                            if (( selections.some(selection => Range.areIntersecting(selection, change.range)))) {\n                                this.onSelectionChange(activeCodeEditor);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }));\n            this.activeEditorListeners.add(activeCodeEditor.onDidChangeModelOptions(() => {\n                this.onIndentationChange(activeCodeEditor);\n            }));\n        }\n        else if (activeEditorPane instanceof BaseBinaryResourceEditor || activeEditorPane instanceof BinaryResourceDiffEditor) {\n            const binaryEditors = [];\n            if (activeEditorPane instanceof BinaryResourceDiffEditor) {\n                const primary = activeEditorPane.getPrimaryEditorPane();\n                if (primary instanceof BaseBinaryResourceEditor) {\n                    binaryEditors.push(primary);\n                }\n                const secondary = activeEditorPane.getSecondaryEditorPane();\n                if (secondary instanceof BaseBinaryResourceEditor) {\n                    binaryEditors.push(secondary);\n                }\n            }\n            else {\n                binaryEditors.push(activeEditorPane);\n            }\n            for (const editor of binaryEditors) {\n                this.activeEditorListeners.add(editor.onDidChangeMetadata(() => {\n                    this.onMetadataChange(activeEditorPane);\n                }));\n                this.activeEditorListeners.add(editor.onDidOpenInPlace(() => {\n                    this.updateStatusBar();\n                }));\n            }\n        }\n    }\n    onLanguageChange(editorWidget, editorInput) {\n        const info = { type: 'languageId', languageId: undefined };\n        if (editorWidget && editorInput && toEditorWithLanguageSupport(editorInput)) {\n            const textModel = editorWidget.getModel();\n            if (textModel) {\n                const languageId = textModel.getLanguageId();\n                info.languageId = withNullAsUndefined(this.languageService.getLanguageName(languageId));\n            }\n        }\n        this.updateState(info);\n    }\n    onIndentationChange(editorWidget) {\n        const update = { type: 'indentation', indentation: undefined };\n        if (editorWidget) {\n            const model = editorWidget.getModel();\n            if (model) {\n                const modelOpts = model.getOptions();\n                update.indentation = (modelOpts.insertSpaces\n                    ? modelOpts.tabSize === modelOpts.indentSize\n                        ? ( localize('spacesSize', \"Spaces: {0}\", modelOpts.indentSize))\n                        : ( localize(\n                    'spacesAndTabsSize',\n                    \"Spaces: {0} (Tab Size: {1})\",\n                    modelOpts.indentSize,\n                    modelOpts.tabSize\n                ))\n                    : ( localize(\n                    { key: 'tabSize', comment: ['Tab corresponds to the tab key'] },\n                    \"Tab Size: {0}\",\n                    modelOpts.tabSize\n                )));\n            }\n        }\n        this.updateState(update);\n    }\n    onMetadataChange(editor) {\n        const update = { type: 'metadata', metadata: undefined };\n        if (editor instanceof BaseBinaryResourceEditor || editor instanceof BinaryResourceDiffEditor) {\n            update.metadata = editor.getMetadata();\n        }\n        this.updateState(update);\n    }\n    onColumnSelectionModeChange(editorWidget) {\n        const info = { type: 'columnSelectionMode', columnSelectionMode: false };\n        if (editorWidget?.getOption(21 )) {\n            info.columnSelectionMode = true;\n        }\n        this.updateState(info);\n    }\n    onSelectionChange(editorWidget) {\n        const info = Object.create(null);\n        if (editorWidget) {\n            info.selections = editorWidget.getSelections() || [];\n            info.charactersSelected = 0;\n            const textModel = editorWidget.getModel();\n            if (textModel) {\n                for (const selection of info.selections) {\n                    if (typeof info.charactersSelected !== 'number') {\n                        info.charactersSelected = 0;\n                    }\n                    info.charactersSelected += textModel.getCharacterCountInRange(selection);\n                }\n            }\n            if (info.selections.length === 1) {\n                const editorPosition = editorWidget.getPosition();\n                const selectionClone = ( new Selection(\n                    info.selections[0].selectionStartLineNumber,\n                    info.selections[0].selectionStartColumn,\n                    info.selections[0].positionLineNumber,\n                    editorPosition ? editorWidget.getStatusbarColumn(editorPosition) : info.selections[0].positionColumn\n                ));\n                info.selections[0] = selectionClone;\n            }\n        }\n        this.updateState({ type: 'selectionStatus', selectionStatus: this.getSelectionLabel(info) });\n    }\n    onEOLChange(editorWidget) {\n        const info = { type: 'EOL', EOL: undefined };\n        if (editorWidget && !editorWidget.getOption(89 )) {\n            const codeEditorModel = editorWidget.getModel();\n            if (codeEditorModel) {\n                info.EOL = codeEditorModel.getEOL();\n            }\n        }\n        this.updateState(info);\n    }\n    onEncodingChange(editor, editorWidget) {\n        if (editor && !this.isActiveEditor(editor)) {\n            return;\n        }\n        const info = { type: 'encoding', encoding: undefined };\n        if (editor && editorWidget?.hasModel()) {\n            const encodingSupport = editor.input ? toEditorWithEncodingSupport(editor.input) : null;\n            if (encodingSupport) {\n                const rawEncoding = encodingSupport.getEncoding();\n                const encodingInfo = typeof rawEncoding === 'string' ? SUPPORTED_ENCODINGS[rawEncoding] : undefined;\n                if (encodingInfo) {\n                    info.encoding = encodingInfo.labelShort;\n                }\n                else {\n                    info.encoding = rawEncoding;\n                }\n            }\n        }\n        this.updateState(info);\n    }\n    onResourceEncodingChange(resource) {\n        const activeEditorPane = this.editorService.activeEditorPane;\n        if (activeEditorPane) {\n            const activeResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n            if (activeResource && isEqual(activeResource, resource)) {\n                const activeCodeEditor = withNullAsUndefined(getCodeEditor(activeEditorPane.getControl()));\n                return this.onEncodingChange(activeEditorPane, activeCodeEditor);\n            }\n        }\n    }\n    onTabFocusModeChange() {\n        const info = { type: 'tabFocusMode', tabFocusMode: TabFocus.getTabFocusMode(this.contextKeyService.getContextKeyValue('focusedView') === 'terminal' ? \"terminalFocus\"  : \"editorFocus\" ) };\n        this.updateState(info);\n    }\n    isActiveEditor(control) {\n        const activeEditorPane = this.editorService.activeEditorPane;\n        return !!activeEditorPane && activeEditorPane === control;\n    }\n};\nEditorStatus = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, IQuickInputService)),\n    ( __param(2, ILanguageService)),\n    ( __param(3, ITextFileService)),\n    ( __param(4, IStatusbarService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, IContextKeyService))\n], EditorStatus));\nlet ShowCurrentMarkerInStatusbarContribution = class ShowCurrentMarkerInStatusbarContribution extends Disposable {\n    constructor(statusbarService, markerService, configurationService) {\n        super();\n        this.statusbarService = statusbarService;\n        this.markerService = markerService;\n        this.configurationService = configurationService;\n        this.editor = undefined;\n        this.markers = [];\n        this.currentMarker = null;\n        this.statusBarEntryAccessor = this._register(( new MutableDisposable()));\n        this._register(markerService.onMarkerChanged(changedResources => this.onMarkerChanged(changedResources)));\n        this._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('problems.showCurrentInStatus'))(() => this.updateStatus()));\n    }\n    update(editor) {\n        this.editor = editor;\n        this.updateMarkers();\n        this.updateStatus();\n    }\n    updateStatus() {\n        const previousMarker = this.currentMarker;\n        this.currentMarker = this.getMarker();\n        if (this.hasToUpdateStatus(previousMarker, this.currentMarker)) {\n            if (this.currentMarker) {\n                const line = splitLines(this.currentMarker.message)[0];\n                const text = `${this.getType(this.currentMarker)} ${line}`;\n                if (!this.statusBarEntryAccessor.value) {\n                    this.statusBarEntryAccessor.value = this.statusbarService.addEntry({ name: ( localize('currentProblem', \"Current Problem\")), text: '', ariaLabel: '' }, 'statusbar.currentProblem', 0 );\n                }\n                this.statusBarEntryAccessor.value.update({ name: ( localize('currentProblem', \"Current Problem\")), text, ariaLabel: text });\n            }\n            else {\n                this.statusBarEntryAccessor.clear();\n            }\n        }\n    }\n    hasToUpdateStatus(previousMarker, currentMarker) {\n        if (!currentMarker) {\n            return true;\n        }\n        if (!previousMarker) {\n            return true;\n        }\n        return IMarkerData.makeKey(previousMarker) !== IMarkerData.makeKey(currentMarker);\n    }\n    getType(marker) {\n        switch (marker.severity) {\n            case MarkerSeverity.Error: return '$(error)';\n            case MarkerSeverity.Warning: return '$(warning)';\n            case MarkerSeverity.Info: return '$(info)';\n        }\n        return '';\n    }\n    getMarker() {\n        if (!this.configurationService.getValue('problems.showCurrentInStatus')) {\n            return null;\n        }\n        if (!this.editor) {\n            return null;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return null;\n        }\n        const position = this.editor.getPosition();\n        if (!position) {\n            return null;\n        }\n        return this.markers.find(marker => Range.containsPosition(marker, position)) || null;\n    }\n    onMarkerChanged(changedResources) {\n        if (!this.editor) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (model && !( changedResources.some(r => isEqual(model.uri, r)))) {\n            return;\n        }\n        this.updateMarkers();\n    }\n    updateMarkers() {\n        if (!this.editor) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (model) {\n            this.markers = this.markerService.read({\n                resource: model.uri,\n                severities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\n            });\n            this.markers.sort(compareMarker);\n        }\n        else {\n            this.markers = [];\n        }\n        this.updateStatus();\n    }\n};\nShowCurrentMarkerInStatusbarContribution = ( __decorate([\n    ( __param(0, IStatusbarService)),\n    ( __param(1, IMarkerService)),\n    ( __param(2, IConfigurationService))\n], ShowCurrentMarkerInStatusbarContribution));\nfunction compareMarker(a, b) {\n    let res = compare(( a.resource.toString()), ( b.resource.toString()));\n    if (res === 0) {\n        res = MarkerSeverity.compare(a.severity, b.severity);\n    }\n    if (res === 0) {\n        res = Range.compareRangesUsingStarts(a, b);\n    }\n    return res;\n}\nlet ShowLanguageExtensionsAction = class ShowLanguageExtensionsAction extends Action {\n    static { this.ID = 'workbench.action.showLanguageExtensions'; }\n    constructor(fileExtension, commandService, galleryService) {\n        super(ShowLanguageExtensionsAction.ID, ( localize(\n            'showLanguageExtensions',\n            \"Search Marketplace Extensions for '{0}'...\",\n            fileExtension\n        )));\n        this.fileExtension = fileExtension;\n        this.commandService = commandService;\n        this.enabled = galleryService.isEnabled();\n    }\n    async run() {\n        await this.commandService.executeCommand('workbench.extensions.action.showExtensionsForLanguage', this.fileExtension);\n    }\n};\nShowLanguageExtensionsAction = ( __decorate([\n    ( __param(1, ICommandService)),\n    ( __param(2, IExtensionGalleryService))\n], ShowLanguageExtensionsAction));\nclass ChangeLanguageAction extends Action2 {\n    static { this.ID = 'workbench.action.editor.changeLanguageMode'; }\n    constructor() {\n        super({\n            id: ChangeLanguageAction.ID,\n            title: { value: ( localize('changeMode', \"Change Language Mode\")), original: 'Change Language Mode' },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: KeyChord(2048  | 41 , 43 )\n            },\n            precondition: ContextKeyExpr.not('notebookEditorFocused')\n        });\n    }\n    async run(accessor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const editorService = accessor.get(IEditorService);\n        const languageService = accessor.get(ILanguageService);\n        const languageDetectionService = accessor.get(ILanguageDetectionService);\n        const textFileService = accessor.get(ITextFileService);\n        const preferencesService = accessor.get(IPreferencesService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const configurationService = accessor.get(IConfigurationService);\n        const telemetryService = accessor.get(ITelemetryService);\n        const activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n        if (!activeTextEditorControl) {\n            await quickInputService.pick([{ label: ( localize('noEditor', \"No text editor active at this time\")) }]);\n            return;\n        }\n        const textModel = activeTextEditorControl.getModel();\n        const resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n        let currentLanguageName;\n        let currentLanguageId;\n        if (textModel) {\n            currentLanguageId = textModel.getLanguageId();\n            currentLanguageName = withNullAsUndefined(languageService.getLanguageName(currentLanguageId));\n        }\n        let hasLanguageSupport = !!resource;\n        if (resource?.scheme === Schemas.untitled && !textFileService.untitled.get(resource)?.hasAssociatedFilePath) {\n            hasLanguageSupport = false;\n        }\n        const languages = languageService.getSortedRegisteredLanguageNames();\n        const picks = ( languages\n            .map(({ languageName, languageId }) => {\n            const extensions = languageService.getExtensions(languageId).join(' ');\n            let description;\n            if (currentLanguageName === languageName) {\n                description = ( localize('languageDescription', \"({0}) - Configured Language\", languageId));\n            }\n            else {\n                description = ( localize('languageDescriptionConfigured', \"({0})\", languageId));\n            }\n            return {\n                label: languageName,\n                meta: extensions,\n                iconClasses: getIconClassesForLanguageId(languageId),\n                description\n            };\n        }));\n        picks.unshift({ type: 'separator', label: ( localize('languagesPicks', \"languages (identifier)\")) });\n        let configureLanguageAssociations;\n        let configureLanguageSettings;\n        let galleryAction;\n        if (hasLanguageSupport && resource) {\n            const ext = extname(resource) || basename(resource);\n            galleryAction = instantiationService.createInstance(ShowLanguageExtensionsAction, ext);\n            if (galleryAction.enabled) {\n                picks.unshift(galleryAction);\n            }\n            configureLanguageSettings = { label: ( localize(\n                'configureModeSettings',\n                \"Configure '{0}' language based settings...\",\n                currentLanguageName\n            )) };\n            picks.unshift(configureLanguageSettings);\n            configureLanguageAssociations = { label: ( localize('configureAssociationsExt', \"Configure File Association for '{0}'...\", ext)) };\n            picks.unshift(configureLanguageAssociations);\n        }\n        const autoDetectLanguage = {\n            label: ( localize('autoDetect', \"Auto Detect\"))\n        };\n        picks.unshift(autoDetectLanguage);\n        const pick = await quickInputService.pick(picks, { placeHolder: ( localize('pickLanguage', \"Select Language Mode\")), matchOnDescription: true });\n        if (!pick) {\n            return;\n        }\n        if (pick === galleryAction) {\n            galleryAction.run();\n            return;\n        }\n        if (pick === configureLanguageAssociations) {\n            if (resource) {\n                this.configureFileAssociation(resource, languageService, quickInputService, configurationService);\n            }\n            return;\n        }\n        if (pick === configureLanguageSettings) {\n            preferencesService.openUserSettings({ jsonEditor: true, revealSetting: { key: `[${withUndefinedAsNull(currentLanguageId)}]`, edit: true } });\n            return;\n        }\n        const activeEditor = editorService.activeEditor;\n        if (activeEditor) {\n            const languageSupport = toEditorWithLanguageSupport(activeEditor);\n            if (languageSupport) {\n                let languageSelection;\n                let detectedLanguage;\n                if (pick === autoDetectLanguage) {\n                    if (textModel) {\n                        const resource = EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n                        if (resource) {\n                            let languageId = withNullAsUndefined(languageService.guessLanguageIdByFilepathOrFirstLine(resource, textModel.getLineContent(1)));\n                            if (!languageId || languageId === 'unknown') {\n                                detectedLanguage = await languageDetectionService.detectLanguage(resource);\n                                languageId = detectedLanguage;\n                            }\n                            if (languageId) {\n                                languageSelection = languageService.createById(languageId);\n                            }\n                        }\n                    }\n                }\n                else {\n                    const languageId = languageService.getLanguageIdByLanguageName(pick.label);\n                    languageSelection = languageService.createById(languageId);\n                    if (resource) {\n                        languageDetectionService.detectLanguage(resource).then(detectedLanguageId => {\n                            const chosenLanguageId = languageService.getLanguageIdByLanguageName(pick.label) || 'unknown';\n                            if (detectedLanguageId === currentLanguageId && currentLanguageId !== chosenLanguageId) {\n                                const modelPreference = configurationService.getValue('workbench.editor.preferHistoryBasedLanguageDetection') ? 'history' : 'classic';\n                                telemetryService.publicLog2(AutomaticLanguageDetectionLikelyWrongId, {\n                                    currentLanguageId: currentLanguageName ?? 'unknown',\n                                    nextLanguageId: pick.label,\n                                    lineCount: textModel?.getLineCount() ?? -1,\n                                    modelPreference,\n                                });\n                            }\n                        });\n                    }\n                }\n                if (typeof languageSelection !== 'undefined') {\n                    languageSupport.setLanguageId(languageSelection.languageId, ChangeLanguageAction.ID);\n                    if (resource?.scheme === Schemas.untitled) {\n                        const modelPreference = configurationService.getValue('workbench.editor.preferHistoryBasedLanguageDetection') ? 'history' : 'classic';\n                        telemetryService.publicLog2('setUntitledDocumentLanguage', {\n                            to: languageSelection.languageId,\n                            from: currentLanguageId ?? 'none',\n                            modelPreference,\n                        });\n                    }\n                }\n            }\n            activeTextEditorControl.focus();\n        }\n    }\n    configureFileAssociation(resource, languageService, quickInputService, configurationService) {\n        const extension = extname(resource);\n        const base = basename(resource);\n        const currentAssociation = languageService.guessLanguageIdByFilepathOrFirstLine(URI.file(base));\n        const languages = languageService.getSortedRegisteredLanguageNames();\n        const picks = ( languages.map(({ languageName, languageId }) => {\n            return {\n                id: languageId,\n                label: languageName,\n                iconClasses: getIconClassesForLanguageId(languageId),\n                description: (languageId === currentAssociation) ? ( localize('currentAssociation', \"Current Association\")) : undefined\n            };\n        }));\n        setTimeout(async () => {\n            const language = await quickInputService.pick(picks, { placeHolder: ( localize(\n                'pickLanguageToConfigure',\n                \"Select Language Mode to Associate with '{0}'\",\n                extension || base\n            )) });\n            if (language) {\n                const fileAssociationsConfig = configurationService.inspect(FILES_ASSOCIATIONS_CONFIG);\n                let associationKey;\n                if (extension && base[0] !== '.') {\n                    associationKey = `*${extension}`;\n                }\n                else {\n                    associationKey = base;\n                }\n                let target = 2 ;\n                if (fileAssociationsConfig.workspaceValue && !!fileAssociationsConfig.workspaceValue[associationKey]) {\n                    target = 5 ;\n                }\n                const currentAssociations = deepClone(((target === 5) ) ? fileAssociationsConfig.workspaceValue : fileAssociationsConfig.userValue) || Object.create(null);\n                currentAssociations[associationKey] = language.id;\n                configurationService.updateValue(FILES_ASSOCIATIONS_CONFIG, currentAssociations, target);\n            }\n        }, 50 );\n    }\n}\nclass ChangeEOLAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.editor.changeEOL',\n            title: { value: ( localize('changeEndOfLine', \"Change End of Line Sequence\")), original: 'Change End of Line Sequence' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n        if (!activeTextEditorControl) {\n            await quickInputService.pick([{ label: ( localize('noEditor', \"No text editor active at this time\")) }]);\n            return;\n        }\n        if (editorService.activeEditor?.isReadonly()) {\n            await quickInputService.pick([{ label: ( localize('noWritableCodeEditor', \"The active code editor is read-only.\")) }]);\n            return;\n        }\n        let textModel = activeTextEditorControl.getModel();\n        const EOLOptions = [\n            { label: nlsEOLLF, eol: 0  },\n            { label: nlsEOLCRLF, eol: 1  },\n        ];\n        const selectedIndex = (textModel?.getEOL() === '\\n') ? 0 : 1;\n        const eol = await quickInputService.pick(EOLOptions, { placeHolder: ( localize('pickEndOfLine', \"Select End of Line Sequence\")), activeItem: EOLOptions[selectedIndex] });\n        if (eol) {\n            const activeCodeEditor = getCodeEditor(editorService.activeTextEditorControl);\n            if (activeCodeEditor?.hasModel() && !editorService.activeEditor?.isReadonly()) {\n                textModel = activeCodeEditor.getModel();\n                textModel.pushStackElement();\n                textModel.pushEOL(eol.eol);\n                textModel.pushStackElement();\n            }\n        }\n        activeTextEditorControl.focus();\n    }\n}\nclass ChangeEncodingAction extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.editor.changeEncoding',\n            title: { value: ( localize('changeEncoding', \"Change File Encoding\")), original: 'Change File Encoding' },\n            f1: true\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const quickInputService = accessor.get(IQuickInputService);\n        const fileService = accessor.get(IFileService);\n        const textFileService = accessor.get(ITextFileService);\n        const textResourceConfigurationService = accessor.get(ITextResourceConfigurationService);\n        const activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n        if (!activeTextEditorControl) {\n            await quickInputService.pick([{ label: ( localize('noEditor', \"No text editor active at this time\")) }]);\n            return;\n        }\n        const activeEditorPane = editorService.activeEditorPane;\n        if (!activeEditorPane) {\n            await quickInputService.pick([{ label: ( localize('noEditor', \"No text editor active at this time\")) }]);\n            return;\n        }\n        const encodingSupport = toEditorWithEncodingSupport(activeEditorPane.input);\n        if (!encodingSupport) {\n            await quickInputService.pick([{ label: ( localize('noFileEditor', \"No file active at this time\")) }]);\n            return;\n        }\n        const saveWithEncodingPick = { label: ( localize('saveWithEncoding', \"Save with Encoding\")) };\n        const reopenWithEncodingPick = { label: ( localize('reopenWithEncoding', \"Reopen with Encoding\")) };\n        if (!Language.isDefaultVariant()) {\n            const saveWithEncodingAlias = 'Save with Encoding';\n            if (saveWithEncodingAlias !== saveWithEncodingPick.label) {\n                saveWithEncodingPick.detail = saveWithEncodingAlias;\n            }\n            const reopenWithEncodingAlias = 'Reopen with Encoding';\n            if (reopenWithEncodingAlias !== reopenWithEncodingPick.label) {\n                reopenWithEncodingPick.detail = reopenWithEncodingAlias;\n            }\n        }\n        let action;\n        if (encodingSupport instanceof UntitledTextEditorInput) {\n            action = saveWithEncodingPick;\n        }\n        else if (activeEditorPane.input.isReadonly()) {\n            action = reopenWithEncodingPick;\n        }\n        else {\n            action = await quickInputService.pick([reopenWithEncodingPick, saveWithEncodingPick], { placeHolder: ( localize('pickAction', \"Select Action\")), matchOnDetail: true });\n        }\n        if (!action) {\n            return;\n        }\n        await timeout(50);\n        const resource = EditorResourceAccessor.getOriginalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n        if (!resource || (!fileService.hasProvider(resource) && resource.scheme !== Schemas.untitled)) {\n            return;\n        }\n        let guessedEncoding = undefined;\n        if (fileService.hasProvider(resource)) {\n            const content = await textFileService.readStream(resource, { autoGuessEncoding: true });\n            guessedEncoding = content.encoding;\n        }\n        const isReopenWithEncoding = (action === reopenWithEncodingPick);\n        const configuredEncoding = textResourceConfigurationService.getValue(withNullAsUndefined(resource), 'files.encoding');\n        let directMatchIndex;\n        let aliasMatchIndex;\n        const picks = ( ( Object.keys(SUPPORTED_ENCODINGS))\n            .sort((k1, k2) => {\n            if (k1 === configuredEncoding) {\n                return -1;\n            }\n            else if (k2 === configuredEncoding) {\n                return 1;\n            }\n            return SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n        })\n            .filter(k => {\n            if (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n                return false;\n            }\n            return !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly;\n        })\n            .map((key, index) => {\n            if (key === encodingSupport.getEncoding()) {\n                directMatchIndex = index;\n            }\n            else if (SUPPORTED_ENCODINGS[key].alias === encodingSupport.getEncoding()) {\n                aliasMatchIndex = index;\n            }\n            return { id: key, label: SUPPORTED_ENCODINGS[key].labelLong, description: key };\n        }));\n        const items = picks.slice();\n        if (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n            picks.unshift({ type: 'separator' });\n            picks.unshift({ id: guessedEncoding, label: SUPPORTED_ENCODINGS[guessedEncoding].labelLong, description: ( localize('guessedEncoding', \"Guessed from content\")) });\n        }\n        const encoding = await quickInputService.pick(picks, {\n            placeHolder: isReopenWithEncoding ? ( localize('pickEncodingForReopen', \"Select File Encoding to Reopen File\")) : ( localize('pickEncodingForSave', \"Select File Encoding to Save with\")),\n            activeItem: items[typeof directMatchIndex === 'number' ? directMatchIndex : typeof aliasMatchIndex === 'number' ? aliasMatchIndex : -1]\n        });\n        if (!encoding) {\n            return;\n        }\n        if (!editorService.activeEditorPane) {\n            return;\n        }\n        const activeEncodingSupport = toEditorWithEncodingSupport(editorService.activeEditorPane.input);\n        if (typeof encoding.id !== 'undefined' && activeEncodingSupport) {\n            await activeEncodingSupport.setEncoding(encoding.id, isReopenWithEncoding ? 1  : 0 );\n        }\n        activeTextEditorControl.focus();\n    }\n}\nexport { ChangeEOLAction, ChangeEncodingAction, ChangeLanguageAction, EditorStatus, ShowLanguageExtensionsAction };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Disposable, DisposableStore, toDisposable, dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nlet EditorAutoSave = class EditorAutoSave extends Disposable {\n    constructor(filesConfigurationService, hostService, editorService, editorGroupService, workingCopyService, logService) {\n        super();\n        this.filesConfigurationService = filesConfigurationService;\n        this.hostService = hostService;\n        this.editorService = editorService;\n        this.editorGroupService = editorGroupService;\n        this.workingCopyService = workingCopyService;\n        this.logService = logService;\n        this.pendingAutoSavesAfterDelay = ( new Map());\n        this.lastActiveEditor = undefined;\n        this.lastActiveGroupId = undefined;\n        this.lastActiveEditorControlDisposable = this._register(( new DisposableStore()));\n        this.onAutoSaveConfigurationChange(filesConfigurationService.getAutoSaveConfiguration(), false);\n        for (const dirtyWorkingCopy of this.workingCopyService.dirtyWorkingCopies) {\n            this.onDidRegister(dirtyWorkingCopy);\n        }\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.hostService.onDidChangeFocus(focused => this.onWindowFocusChange(focused)));\n        this._register(this.editorService.onDidActiveEditorChange(() => this.onDidActiveEditorChange()));\n        this._register(this.filesConfigurationService.onAutoSaveConfigurationChange(config => this.onAutoSaveConfigurationChange(config, true)));\n        this._register(this.workingCopyService.onDidRegister(workingCopy => this.onDidRegister(workingCopy)));\n        this._register(this.workingCopyService.onDidUnregister(workingCopy => this.onDidUnregister(workingCopy)));\n        this._register(this.workingCopyService.onDidChangeDirty(workingCopy => this.onDidChangeDirty(workingCopy)));\n        this._register(this.workingCopyService.onDidChangeContent(workingCopy => this.onDidChangeContent(workingCopy)));\n    }\n    onWindowFocusChange(focused) {\n        if (!focused) {\n            this.maybeTriggerAutoSave(4 );\n        }\n    }\n    onDidActiveEditorChange() {\n        if (this.lastActiveEditor && typeof this.lastActiveGroupId === 'number') {\n            this.maybeTriggerAutoSave(3 , { groupId: this.lastActiveGroupId, editor: this.lastActiveEditor });\n        }\n        const activeGroup = this.editorGroupService.activeGroup;\n        const activeEditor = this.lastActiveEditor = withNullAsUndefined(activeGroup.activeEditor);\n        this.lastActiveGroupId = activeGroup.id;\n        this.lastActiveEditorControlDisposable.clear();\n        const activeEditorPane = this.editorService.activeEditorPane;\n        if (activeEditor && activeEditorPane) {\n            this.lastActiveEditorControlDisposable.add(activeEditorPane.onDidBlur(() => {\n                this.maybeTriggerAutoSave(3 , { groupId: activeGroup.id, editor: activeEditor });\n            }));\n        }\n    }\n    maybeTriggerAutoSave(reason, editorIdentifier) {\n        if (editorIdentifier?.editor.isReadonly() || editorIdentifier?.editor.hasCapability(4 )) {\n            return;\n        }\n        const mode = this.filesConfigurationService.getAutoSaveMode();\n        if ((reason === 4  && ((mode === 3  || mode === 4) )) ||\n            ((reason === 3  && mode === 3) )) {\n            this.logService.trace(`[editor auto save] triggering auto save with reason ${reason}`);\n            if (editorIdentifier) {\n                this.editorService.save(editorIdentifier, { reason });\n            }\n            else {\n                this.saveAllDirty({ reason });\n            }\n        }\n    }\n    onAutoSaveConfigurationChange(config, fromEvent) {\n        this.autoSaveAfterDelay = (typeof config.autoSaveDelay === 'number') && config.autoSaveDelay >= 0 ? config.autoSaveDelay : undefined;\n        if (fromEvent) {\n            let reason = undefined;\n            switch (this.filesConfigurationService.getAutoSaveMode()) {\n                case 3 :\n                    reason = 3 ;\n                    break;\n                case 4 :\n                    reason = 4 ;\n                    break;\n                case 1 :\n                case 2 :\n                    reason = 2 ;\n                    break;\n            }\n            if (reason) {\n                this.saveAllDirty({ reason });\n            }\n        }\n    }\n    saveAllDirty(options) {\n        for (const workingCopy of this.workingCopyService.dirtyWorkingCopies) {\n            if (!((workingCopy.capabilities & 2) )) {\n                workingCopy.save(options);\n            }\n        }\n    }\n    onDidRegister(workingCopy) {\n        if (workingCopy.isDirty()) {\n            this.scheduleAutoSave(workingCopy);\n        }\n    }\n    onDidUnregister(workingCopy) {\n        this.discardAutoSave(workingCopy);\n    }\n    onDidChangeDirty(workingCopy) {\n        if (workingCopy.isDirty()) {\n            this.scheduleAutoSave(workingCopy);\n        }\n        else {\n            this.discardAutoSave(workingCopy);\n        }\n    }\n    onDidChangeContent(workingCopy) {\n        if (workingCopy.isDirty()) {\n            this.scheduleAutoSave(workingCopy);\n        }\n    }\n    scheduleAutoSave(workingCopy) {\n        if (typeof this.autoSaveAfterDelay !== 'number') {\n            return;\n        }\n        if (workingCopy.capabilities & 2 ) {\n            return;\n        }\n        this.discardAutoSave(workingCopy);\n        this.logService.trace(`[editor auto save] scheduling auto save after ${this.autoSaveAfterDelay}ms`, ( workingCopy.resource.toString()), workingCopy.typeId);\n        const handle = setTimeout(() => {\n            this.pendingAutoSavesAfterDelay.delete(workingCopy);\n            if (workingCopy.isDirty()) {\n                this.logService.trace(`[editor auto save] running auto save`, ( workingCopy.resource.toString()), workingCopy.typeId);\n                workingCopy.save({ reason: 2  });\n            }\n        }, this.autoSaveAfterDelay);\n        this.pendingAutoSavesAfterDelay.set(workingCopy, toDisposable(() => {\n            this.logService.trace(`[editor auto save] clearing pending auto save`, ( workingCopy.resource.toString()), workingCopy.typeId);\n            clearTimeout(handle);\n        }));\n    }\n    discardAutoSave(workingCopy) {\n        dispose(this.pendingAutoSavesAfterDelay.get(workingCopy));\n        this.pendingAutoSavesAfterDelay.delete(workingCopy);\n    }\n};\nEditorAutoSave = ( __decorate([\n    ( __param(0, IFilesConfigurationService)),\n    ( __param(1, IHostService)),\n    ( __param(2, IEditorService)),\n    ( __param(3, IEditorGroupsService)),\n    ( __param(4, IWorkingCopyService)),\n    ( __param(5, ILogService))\n], EditorAutoSave));\nexport { EditorAutoSave };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ITextEditorService } from '../../textfile/common/textEditorService.js';\nimport { isEqual, toLocalResource } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { UntitledTextEditorInput } from './untitledTextEditorInput.js';\nimport { NO_TYPE_ID } from '../../workingCopy/common/workingCopy.js';\nimport { IWorkingCopyEditorService } from '../../workingCopy/common/workingCopyEditorService.js';\nimport { IUntitledTextEditorService } from './untitledTextEditorService.js';\nlet UntitledTextEditorWorkingCopyEditorHandler = class UntitledTextEditorWorkingCopyEditorHandler extends Disposable {\n    constructor(workingCopyEditorService, environmentService, pathService, textEditorService, untitledTextEditorService) {\n        super();\n        this.environmentService = environmentService;\n        this.pathService = pathService;\n        this.textEditorService = textEditorService;\n        this.untitledTextEditorService = untitledTextEditorService;\n        this._register(workingCopyEditorService.registerHandler(this));\n    }\n    handles(workingCopy) {\n        return workingCopy.resource.scheme === Schemas.untitled && workingCopy.typeId === NO_TYPE_ID;\n    }\n    isOpen(workingCopy, editor) {\n        if (!this.handles(workingCopy)) {\n            return false;\n        }\n        return editor instanceof UntitledTextEditorInput && isEqual(workingCopy.resource, editor.resource);\n    }\n    createEditor(workingCopy) {\n        let editorInputResource;\n        if (this.untitledTextEditorService.isUntitledWithAssociatedResource(workingCopy.resource)) {\n            editorInputResource = toLocalResource(workingCopy.resource, this.environmentService.remoteAuthority, this.pathService.defaultUriScheme);\n        }\n        else {\n            editorInputResource = workingCopy.resource;\n        }\n        return this.textEditorService.createTextEditor({ resource: editorInputResource, forceUntitled: true });\n    }\n};\nUntitledTextEditorWorkingCopyEditorHandler = ( __decorate([\n    ( __param(0, IWorkingCopyEditorService)),\n    ( __param(1, IWorkbenchEnvironmentService)),\n    ( __param(2, IPathService)),\n    ( __param(3, ITextEditorService)),\n    ( __param(4, IUntitledTextEditorService))\n], UntitledTextEditorWorkingCopyEditorHandler));\nexport { UntitledTextEditorWorkingCopyEditorHandler };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport { RegisteredEditorPriority, IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { getLargeFileConfirmationLimit, ByteSize } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nlet DynamicEditorConfigurations = class DynamicEditorConfigurations extends Disposable {\n    static { this.AUTO_LOCK_DEFAULT_ENABLED = ( new Set(['terminalEditor'])); }\n    static { this.AUTO_LOCK_EXTRA_EDITORS = [\n        {\n            id: 'workbench.input.interactive',\n            label: ( localize('interactiveWindow', 'Interactive Window')),\n            priority: RegisteredEditorPriority.builtin\n        },\n        {\n            id: 'mainThreadWebview-markdown.preview',\n            label: ( localize('markdownPreview', \"Markdown Preview\")),\n            priority: RegisteredEditorPriority.builtin\n        }\n    ]; }\n    static { this.AUTO_LOCK_REMOVE_EDITORS = ( new Set([\n        'vscode-interactive-input',\n        'interactive',\n        'vscode.markdown.preview.editor'\n    ])); }\n    constructor(editorResolverService, extensionService, environmentService) {\n        super();\n        this.editorResolverService = editorResolverService;\n        this.environmentService = environmentService;\n        this.configurationRegistry = ( Registry.as(Extensions.Configuration));\n        (async () => {\n            await extensionService.whenInstalledExtensionsRegistered();\n            this.updateDynamicEditorConfigurations();\n            this.registerListeners();\n        })();\n    }\n    registerListeners() {\n        Event.debounce(this.editorResolverService.onDidChangeEditorRegistrations, (_, e) => e)(() => this.updateDynamicEditorConfigurations());\n    }\n    updateDynamicEditorConfigurations() {\n        const lockableEditors = [...this.editorResolverService.getEditors(), ...DynamicEditorConfigurations.AUTO_LOCK_EXTRA_EDITORS].filter(e => !( DynamicEditorConfigurations.AUTO_LOCK_REMOVE_EDITORS.has(e.id)));\n        const binaryEditorCandidates = ( this.editorResolverService.getEditors().filter(e => e.priority !== RegisteredEditorPriority.exclusive).map(e => e.id));\n        const autoLockGroupConfiguration = Object.create(null);\n        for (const editor of lockableEditors) {\n            autoLockGroupConfiguration[editor.id] = {\n                type: 'boolean',\n                default: ( DynamicEditorConfigurations.AUTO_LOCK_DEFAULT_ENABLED.has(editor.id)),\n                description: editor.label\n            };\n        }\n        const defaultAutoLockGroupConfiguration = Object.create(null);\n        for (const editor of lockableEditors) {\n            defaultAutoLockGroupConfiguration[editor.id] = ( DynamicEditorConfigurations.AUTO_LOCK_DEFAULT_ENABLED.has(editor.id));\n        }\n        const oldAutoLockConfigurationNode = this.autoLockConfigurationNode;\n        this.autoLockConfigurationNode = {\n            ...workbenchConfigurationNodeBase,\n            properties: {\n                'workbench.editor.autoLockGroups': {\n                    type: 'object',\n                    description: ( localize(\n                        'workbench.editor.autoLockGroups',\n                        \"If an editor matching one of the listed types is opened as the first in an editor group and more than one group is open, the group is automatically locked. Locked groups will only be used for opening editors when explicitly chosen by a user gesture (for example drag and drop), but not by default. Consequently, the active editor in a locked group is less likely to be replaced accidentally with a different editor.\"\n                    )),\n                    properties: autoLockGroupConfiguration,\n                    default: defaultAutoLockGroupConfiguration,\n                    additionalProperties: false\n                }\n            }\n        };\n        const oldDefaultBinaryEditorConfigurationNode = this.defaultBinaryEditorConfigurationNode;\n        this.defaultBinaryEditorConfigurationNode = {\n            ...workbenchConfigurationNodeBase,\n            properties: {\n                'workbench.editor.defaultBinaryEditor': {\n                    type: 'string',\n                    default: '',\n                    enum: [...binaryEditorCandidates, ''],\n                    description: ( localize(\n                        'workbench.editor.defaultBinaryEditor',\n                        \"The default editor for files detected as binary. If undefined, the user will be presented with a picker.\"\n                    )),\n                }\n            }\n        };\n        const oldEditorAssociationsConfigurationNode = this.editorAssociationsConfigurationNode;\n        this.editorAssociationsConfigurationNode = {\n            ...workbenchConfigurationNodeBase,\n            properties: {\n                'workbench.editorAssociations': {\n                    type: 'object',\n                    markdownDescription: ( localize(\n                        'editor.editorAssociations',\n                        \"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\\\"*.hex\\\": \\\"hexEditor.hexedit\\\"`). These have precedence over the default behavior.\"\n                    )),\n                    patternProperties: {\n                        '.*': {\n                            type: 'string',\n                            enum: binaryEditorCandidates,\n                        }\n                    }\n                }\n            }\n        };\n        const oldEditorLargeFileConfirmationConfigurationNode = this.editorLargeFileConfirmationConfigurationNode;\n        this.editorLargeFileConfirmationConfigurationNode = {\n            ...workbenchConfigurationNodeBase,\n            properties: {\n                'workbench.editorLargeFileConfirmation': {\n                    type: 'number',\n                    default: getLargeFileConfirmationLimit(this.environmentService.remoteAuthority) / ByteSize.MB,\n                    minimum: 1,\n                    scope: 4 ,\n                    markdownDescription: ( localize(\n                        'editorLargeFileSizeConfirmation',\n                        \"Controls the minimum size of a file in MB before asking for confirmation when opening in the editor. Note that this setting may not apply to all editor types and environments.\"\n                    )),\n                }\n            }\n        };\n        this.configurationRegistry.updateConfigurations({\n            add: [\n                this.autoLockConfigurationNode,\n                this.defaultBinaryEditorConfigurationNode,\n                this.editorAssociationsConfigurationNode,\n                this.editorLargeFileConfirmationConfigurationNode\n            ],\n            remove: coalesce([\n                oldAutoLockConfigurationNode,\n                oldDefaultBinaryEditorConfigurationNode,\n                oldEditorAssociationsConfigurationNode,\n                oldEditorLargeFileConfirmationConfigurationNode\n            ])\n        });\n    }\n};\nDynamicEditorConfigurations = ( __decorate([\n    ( __param(0, IEditorResolverService)),\n    ( __param(1, IExtensionService)),\n    ( __param(2, IWorkbenchEnvironmentService))\n], DynamicEditorConfigurations));\nexport { DynamicEditorConfigurations };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Disposable, MutableDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { NotificationPriority, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IStatusbarService } from '../../../services/statusbar/browser/statusbar.js';\nimport { themeColorFromId } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { STATUS_BAR_PROMINENT_ITEM_BACKGROUND, STATUS_BAR_PROMINENT_ITEM_FOREGROUND } from '../../../common/theme.js';\nlet AccessibilityStatus = class AccessibilityStatus extends Disposable {\n    constructor(configurationService, notificationService, _accessibilityService, statusbarService) {\n        super();\n        this.configurationService = configurationService;\n        this.notificationService = notificationService;\n        this._accessibilityService = _accessibilityService;\n        this.statusbarService = statusbarService;\n        this.screenReaderNotification = null;\n        this.promptedScreenReader = false;\n        this.screenReaderModeElement = this._register(( new MutableDisposable()));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this.onScreenReaderModeChange()));\n        this._register(configurationService.onDidChangeConfiguration(c => {\n            if (c.affectsConfiguration('editor.accessibilitySupport')) {\n                this.onScreenReaderModeChange();\n            }\n        }));\n        CommandsRegistry.registerCommand({ id: 'showEditorScreenReaderNotification', handler: () => this.showScreenReaderNotification() });\n        this.updateScreenReaderModeElement(this._accessibilityService.isScreenReaderOptimized());\n    }\n    showScreenReaderNotification() {\n        if (!this.screenReaderNotification) {\n            this.screenReaderNotification = this.notificationService.prompt(Severity.Info, ( localize(\n                'screenReaderDetectedExplanation.question',\n                \"Are you using a screen reader to operate VS Code?\"\n            )), [{\n                    label: ( localize('screenReaderDetectedExplanation.answerYes', \"Yes\")),\n                    run: () => {\n                        this.configurationService.updateValue('editor.accessibilitySupport', 'on', 2 );\n                    }\n                }, {\n                    label: ( localize('screenReaderDetectedExplanation.answerNo', \"No\")),\n                    run: () => {\n                        this.configurationService.updateValue('editor.accessibilitySupport', 'off', 2 );\n                    }\n                }], {\n                sticky: true,\n                priority: NotificationPriority.URGENT\n            });\n            Event.once(this.screenReaderNotification.onDidClose)(() => this.screenReaderNotification = null);\n        }\n    }\n    updateScreenReaderModeElement(visible) {\n        if (visible) {\n            if (!this.screenReaderModeElement.value) {\n                const text = ( localize('screenReaderDetected', \"Screen Reader Optimized\"));\n                this.screenReaderModeElement.value = this.statusbarService.addEntry({\n                    name: ( localize('status.editor.screenReaderMode', \"Screen Reader Mode\")),\n                    text,\n                    ariaLabel: text,\n                    command: 'showEditorScreenReaderNotification',\n                    backgroundColor: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_BACKGROUND),\n                    color: themeColorFromId(STATUS_BAR_PROMINENT_ITEM_FOREGROUND)\n                }, 'status.editor.screenReaderMode', 1 , 100.6);\n            }\n        }\n        else {\n            this.screenReaderModeElement.clear();\n        }\n    }\n    onScreenReaderModeChange() {\n        const screenReaderDetected = this._accessibilityService.isScreenReaderOptimized();\n        if (screenReaderDetected) {\n            const screenReaderConfiguration = this.configurationService.getValue('editor.accessibilitySupport');\n            if (screenReaderConfiguration === 'auto') {\n                if (!this.promptedScreenReader) {\n                    this.promptedScreenReader = true;\n                    setTimeout(() => this.showScreenReaderNotification(), 100);\n                }\n            }\n        }\n        if (this.screenReaderNotification) {\n            this.screenReaderNotification.close();\n        }\n        this.updateScreenReaderModeElement(this._accessibilityService.isScreenReaderOptimized());\n    }\n};\nAccessibilityStatus = ( __decorate([\n    ( __param(0, IConfigurationService)),\n    ( __param(1, INotificationService)),\n    ( __param(2, IAccessibilityService)),\n    ( __param(3, IStatusbarService))\n], AccessibilityStatus));\nexport { AccessibilityStatus };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { EditorAction2 } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { findFocusedDiffEditor } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditor.contribution.js';\nimport { DiffEditorWidget2 } from 'monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget2/diffEditorWidget2.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerAction2, MenuRegistry, MenuId, Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, ContextKeyEqualsExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nclass ToggleCollapseUnchangedRegions extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleCollapseUnchangedRegions',\n            title: { value: ( localize('toggleCollapseUnchangedRegions', \"Toggle Collapse Unchanged Regions\")), original: 'Toggle Collapse Unchanged Regions' },\n            icon: Codicon.map,\n            precondition: ContextKeyEqualsExpr.create('diffEditorVersion', 2),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.experimental.collapseUnchangedRegions');\n        configurationService.updateValue('diffEditor.experimental.collapseUnchangedRegions', newValue);\n    }\n}\nregisterAction2(ToggleCollapseUnchangedRegions);\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: ( new ToggleCollapseUnchangedRegions()).desc.id,\n        title: ( localize('collapseUnchangedRegions', \"Show Unchanged Regions\")),\n        icon: Codicon.map\n    },\n    order: 22,\n    group: 'navigation',\n    when: ( ContextKeyExpr.and(( ContextKeyExpr.has('config.diffEditor.experimental.collapseUnchangedRegions')), ContextKeyEqualsExpr.create('diffEditorVersion', 2)))\n});\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n    command: {\n        id: ( new ToggleCollapseUnchangedRegions()).desc.id,\n        title: ( localize('showUnchangedRegions', \"Collapse Unchanged Regions\")),\n        icon: ThemeIcon.modify(Codicon.map, 'disabled'),\n    },\n    order: 22,\n    group: 'navigation',\n    when: ( ContextKeyExpr.and(( ( ContextKeyExpr.has('config.diffEditor.experimental.collapseUnchangedRegions')).negate()), ContextKeyEqualsExpr.create('diffEditorVersion', 2)))\n});\nclass ToggleShowMovedCodeBlocks extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleShowMovedCodeBlocks',\n            title: { value: ( localize('toggleShowMovedCodeBlocks', \"Toggle Show Moved Code Blocks\")), original: 'Toggle Show Moved Code Blocks' },\n            precondition: ContextKeyEqualsExpr.create('diffEditorVersion', 2),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.experimental.showMoves');\n        configurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n    }\n}\nregisterAction2(ToggleShowMovedCodeBlocks);\nconst diffEditorCategory = {\n    value: ( localize('diffEditor', 'Diff Editor')),\n    original: 'Diff Editor',\n};\nclass SwitchSide extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.switchSide',\n            title: { value: ( localize('switchSide', \"Switch Side\")), original: 'Switch Side' },\n            icon: Codicon.arrowSwap,\n            precondition: ( ContextKeyExpr.and(ContextKeyEqualsExpr.create('diffEditorVersion', 2), ( ContextKeyExpr.has('isInDiffEditor')))),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget2) {\n            diffEditor.switchSide();\n        }\n    }\n}\nregisterAction2(SwitchSide);\nexport { SwitchSide, ToggleCollapseUnchangedRegions, ToggleShowMovedCodeBlocks };\n","import { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { EditorPaneDescriptor } from '../../editor.js';\nimport { EditorExtensions } from '../../../common/editor.js';\nimport { ActiveEditorGroupLockedContext, MultipleEditorGroupsContext, EditorGroupEditorsCountContext, ActiveEditorLastInGroupContext, EditorTabsVisibleContext, ActiveEditorAvailableEditorIdsContext, ActiveEditorPinnedContext, ActiveEditorStickyContext, ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext, TextCompareEditorActiveContext, ActiveEditorDirtyContext } from '../../../common/contextkeys.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { TextResourceEditor } from './textResourceEditor.js';\nimport { SideBySideEditor } from './sideBySideEditor.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { UntitledTextEditorInput } from '../../../services/untitled/common/untitledTextEditorInput.js';\nimport { TextResourceEditorInput } from '../../../common/editor/textResourceEditorInput.js';\nimport { TextDiffEditor } from './textDiffEditor.js';\nimport { BinaryResourceDiffEditor } from './binaryDiffEditor.js';\nimport { EditorStatus, ChangeLanguageAction, ChangeEOLAction, ChangeEncodingAction } from './editorStatus.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { registerAction2, MenuRegistry, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { ShowEditorsInActiveGroupByMostRecentlyUsedAction, ShowAllEditorsByAppearanceAction, ShowAllEditorsByMostRecentlyUsedAction, NavigateForwardAction, NavigateBackwardsAction, OpenNextEditor, OpenPreviousEditor, OpenNextEditorInGroup, OpenPreviousEditorInGroup, OpenFirstEditorInGroup, OpenLastEditorInGroup, OpenNextRecentlyUsedEditorAction, OpenPreviousRecentlyUsedEditorAction, OpenNextRecentlyUsedEditorInGroupAction, OpenPreviousRecentlyUsedEditorInGroupAction, ReopenClosedEditorAction, ClearRecentFilesAction, CloseAllEditorsAction, CloseAllEditorGroupsAction, CloseLeftEditorsInGroupAction, CloseEditorsInOtherGroupsAction, CloseEditorInAllGroupsAction, RevertAndCloseEditorAction, SplitEditorAction, SplitEditorOrthogonalAction, SplitEditorLeftAction, SplitEditorRightAction, SplitEditorUpAction, SplitEditorDownAction, JoinTwoGroupsAction, JoinAllGroupsAction, NavigateBetweenGroupsAction, ResetGroupSizesAction, ToggleGroupSizesAction, MaximizeGroupAction, MinimizeOtherGroupsAction, MoveEditorLeftInGroupAction, MoveEditorRightInGroupAction, MoveGroupLeftAction, MoveGroupRightAction, MoveGroupUpAction, MoveGroupDownAction, DuplicateGroupLeftAction, DuplicateGroupRightAction, DuplicateGroupUpAction, DuplicateGroupDownAction, MoveEditorToPreviousGroupAction, MoveEditorToNextGroupAction, MoveEditorToFirstGroupAction, MoveEditorToLastGroupAction, MoveEditorToLeftGroupAction, MoveEditorToRightGroupAction, MoveEditorToAboveGroupAction, MoveEditorToBelowGroupAction, SplitEditorToPreviousGroupAction, SplitEditorToNextGroupAction, SplitEditorToFirstGroupAction, SplitEditorToLastGroupAction, SplitEditorToLeftGroupAction, SplitEditorToRightGroupAction, SplitEditorToAboveGroupAction, SplitEditorToBelowGroupAction, FocusActiveGroupAction, FocusFirstGroupAction, FocusLastGroupAction, FocusPreviousGroup, FocusNextGroup, FocusLeftGroup, FocusRightGroup, FocusAboveGroup, FocusBelowGroup, NewEditorGroupLeftAction, NewEditorGroupRightAction, NewEditorGroupAboveAction, NewEditorGroupBelowAction, NavigatePreviousAction, NavigateForwardInEditsAction, NavigateBackwardsInEditsAction, NavigatePreviousInEditsAction, NavigateToLastEditLocationAction, NavigateForwardInNavigationsAction, NavigateBackwardsInNavigationsAction, NavigatePreviousInNavigationsAction, NavigateToLastNavigationLocationAction, ClearEditorHistoryAction, EditorLayoutSingleAction, EditorLayoutTwoColumnsAction, EditorLayoutThreeColumnsAction, EditorLayoutTwoRowsAction, EditorLayoutThreeRowsAction, EditorLayoutTwoByTwoGridAction, EditorLayoutTwoRowsRightAction, EditorLayoutTwoColumnsBottomAction, ToggleEditorTypeAction, ReOpenInTextEditorAction, QuickAccessPreviousRecentlyUsedEditorAction, QuickAccessLeastRecentlyUsedEditorAction, QuickAccessPreviousRecentlyUsedEditorInGroupAction, QuickAccessLeastRecentlyUsedEditorInGroupAction, QuickAccessPreviousEditorFromHistoryAction } from './editorActions.js';\nimport { setup, UNLOCK_GROUP_COMMAND_ID, CLOSE_EDITOR_GROUP_COMMAND_ID, SPLIT_EDITOR_UP, SPLIT_EDITOR_DOWN, SPLIT_EDITOR_LEFT, SPLIT_EDITOR_RIGHT, TOGGLE_LOCK_GROUP_COMMAND_ID, CLOSE_EDITOR_COMMAND_ID, CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID, CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID, CLOSE_SAVED_EDITORS_COMMAND_ID, CLOSE_EDITORS_IN_GROUP_COMMAND_ID, REOPEN_WITH_COMMAND_ID, KEEP_EDITOR_COMMAND_ID, PIN_EDITOR_COMMAND_ID, UNPIN_EDITOR_COMMAND_ID, SPLIT_EDITOR_IN_GROUP, JOIN_EDITOR_IN_GROUP, TOGGLE_DIFF_SIDE_BY_SIDE, SHOW_EDITORS_IN_GROUP, TOGGLE_KEEP_EDITORS_COMMAND_ID, TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE, CLOSE_PINNED_EDITOR_COMMAND_ID, CLOSE_EDITORS_AND_GROUP_COMMAND_ID, FOCUS_FIRST_SIDE_EDITOR, FOCUS_SECOND_SIDE_EDITOR, TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT, GOTO_PREVIOUS_CHANGE, GOTO_NEXT_CHANGE } from './editorCommands.js';\nimport { getQuickNavigateHandler, inQuickPickContext } from '../../quickaccess.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { FloatingClickMenu } from '../../codeeditor.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { EditorAutoSave } from './editorAutoSave.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { Extensions as Extensions$1 } from 'monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess, AllEditorsByAppearanceQuickAccess, AllEditorsByMostRecentlyUsedQuickAccess } from './editorQuickAccess.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { UntitledTextEditorWorkingCopyEditorHandler } from '../../../services/untitled/common/untitledTextEditorHandler.js';\nimport { DynamicEditorConfigurations } from './editorConfiguration.js';\nimport { AccessibilityStatus } from './accessibilityStatus.js';\nimport { ToggleTabsVisibilityAction } from '../../actions/layoutActions.js';\nimport '../../../../editor/browser/widget/diffEditorWidget2/diffEditorWidget2.contribution.js';\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(TextResourceEditor, TextResourceEditor.ID, ( localize('textEditor', \"Text Editor\"))), [\n    ( new SyncDescriptor(UntitledTextEditorInput)),\n    ( new SyncDescriptor(TextResourceEditorInput))\n]);\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(TextDiffEditor, TextDiffEditor.ID, ( localize('textDiffEditor', \"Text Diff Editor\"))), [\n    ( new SyncDescriptor(DiffEditorInput))\n]);\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(BinaryResourceDiffEditor, BinaryResourceDiffEditor.ID, ( localize('binaryDiffEditor', \"Binary Diff Editor\"))), [\n    ( new SyncDescriptor(DiffEditorInput))\n]);\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(SideBySideEditor, SideBySideEditor.ID, ( localize('sideBySideEditor', \"Side by Side Editor\"))), [\n    ( new SyncDescriptor(SideBySideEditorInput))\n]);\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(EditorAutoSave, 2 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(EditorStatus, 2 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(AccessibilityStatus, 2 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(UntitledTextEditorWorkingCopyEditorHandler, 2 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DynamicEditorConfigurations, 2 );\nregisterEditorContribution(FloatingClickMenu.ID, FloatingClickMenu, 1 );\nconst quickAccessRegistry = ( Registry.as(Extensions$1.Quickaccess));\nconst editorPickerContextKey = 'inEditorsPicker';\nconst editorPickerContext = ( ContextKeyExpr.and(inQuickPickContext, ( ContextKeyExpr.has(editorPickerContextKey))));\nquickAccessRegistry.registerQuickAccessProvider({\n    ctor: ActiveGroupEditorsByMostRecentlyUsedQuickAccess,\n    prefix: ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n    contextKey: editorPickerContextKey,\n    placeholder: ( localize('editorQuickAccessPlaceholder', \"Type the name of an editor to open it.\")),\n    helpEntries: [{ description: ( localize(\n        'activeGroupEditorsByMostRecentlyUsedQuickAccess',\n        \"Show Editors in Active Group by Most Recently Used\"\n    )), commandId: ShowEditorsInActiveGroupByMostRecentlyUsedAction.ID }]\n});\nquickAccessRegistry.registerQuickAccessProvider({\n    ctor: AllEditorsByAppearanceQuickAccess,\n    prefix: AllEditorsByAppearanceQuickAccess.PREFIX,\n    contextKey: editorPickerContextKey,\n    placeholder: ( localize('editorQuickAccessPlaceholder', \"Type the name of an editor to open it.\")),\n    helpEntries: [{ description: ( localize(\n        'allEditorsByAppearanceQuickAccess',\n        \"Show All Opened Editors By Appearance\"\n    )), commandId: ShowAllEditorsByAppearanceAction.ID }]\n});\nquickAccessRegistry.registerQuickAccessProvider({\n    ctor: AllEditorsByMostRecentlyUsedQuickAccess,\n    prefix: AllEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n    contextKey: editorPickerContextKey,\n    placeholder: ( localize('editorQuickAccessPlaceholder', \"Type the name of an editor to open it.\")),\n    helpEntries: [{ description: ( localize(\n        'allEditorsByMostRecentlyUsedQuickAccess',\n        \"Show All Opened Editors By Most Recently Used\"\n    )), commandId: ShowAllEditorsByMostRecentlyUsedAction.ID }]\n});\nregisterAction2(ChangeLanguageAction);\nregisterAction2(ChangeEOLAction);\nregisterAction2(ChangeEncodingAction);\nregisterAction2(NavigateForwardAction);\nregisterAction2(NavigateBackwardsAction);\nregisterAction2(OpenNextEditor);\nregisterAction2(OpenPreviousEditor);\nregisterAction2(OpenNextEditorInGroup);\nregisterAction2(OpenPreviousEditorInGroup);\nregisterAction2(OpenFirstEditorInGroup);\nregisterAction2(OpenLastEditorInGroup);\nregisterAction2(OpenNextRecentlyUsedEditorAction);\nregisterAction2(OpenPreviousRecentlyUsedEditorAction);\nregisterAction2(OpenNextRecentlyUsedEditorInGroupAction);\nregisterAction2(OpenPreviousRecentlyUsedEditorInGroupAction);\nregisterAction2(ReopenClosedEditorAction);\nregisterAction2(ClearRecentFilesAction);\nregisterAction2(ShowAllEditorsByAppearanceAction);\nregisterAction2(ShowAllEditorsByMostRecentlyUsedAction);\nregisterAction2(ShowEditorsInActiveGroupByMostRecentlyUsedAction);\nregisterAction2(CloseAllEditorsAction);\nregisterAction2(CloseAllEditorGroupsAction);\nregisterAction2(CloseLeftEditorsInGroupAction);\nregisterAction2(CloseEditorsInOtherGroupsAction);\nregisterAction2(CloseEditorInAllGroupsAction);\nregisterAction2(RevertAndCloseEditorAction);\nregisterAction2(SplitEditorAction);\nregisterAction2(SplitEditorOrthogonalAction);\nregisterAction2(SplitEditorLeftAction);\nregisterAction2(SplitEditorRightAction);\nregisterAction2(SplitEditorUpAction);\nregisterAction2(SplitEditorDownAction);\nregisterAction2(JoinTwoGroupsAction);\nregisterAction2(JoinAllGroupsAction);\nregisterAction2(NavigateBetweenGroupsAction);\nregisterAction2(ResetGroupSizesAction);\nregisterAction2(ToggleGroupSizesAction);\nregisterAction2(MaximizeGroupAction);\nregisterAction2(MinimizeOtherGroupsAction);\nregisterAction2(MoveEditorLeftInGroupAction);\nregisterAction2(MoveEditorRightInGroupAction);\nregisterAction2(MoveGroupLeftAction);\nregisterAction2(MoveGroupRightAction);\nregisterAction2(MoveGroupUpAction);\nregisterAction2(MoveGroupDownAction);\nregisterAction2(DuplicateGroupLeftAction);\nregisterAction2(DuplicateGroupRightAction);\nregisterAction2(DuplicateGroupUpAction);\nregisterAction2(DuplicateGroupDownAction);\nregisterAction2(MoveEditorToPreviousGroupAction);\nregisterAction2(MoveEditorToNextGroupAction);\nregisterAction2(MoveEditorToFirstGroupAction);\nregisterAction2(MoveEditorToLastGroupAction);\nregisterAction2(MoveEditorToLeftGroupAction);\nregisterAction2(MoveEditorToRightGroupAction);\nregisterAction2(MoveEditorToAboveGroupAction);\nregisterAction2(MoveEditorToBelowGroupAction);\nregisterAction2(SplitEditorToPreviousGroupAction);\nregisterAction2(SplitEditorToNextGroupAction);\nregisterAction2(SplitEditorToFirstGroupAction);\nregisterAction2(SplitEditorToLastGroupAction);\nregisterAction2(SplitEditorToLeftGroupAction);\nregisterAction2(SplitEditorToRightGroupAction);\nregisterAction2(SplitEditorToAboveGroupAction);\nregisterAction2(SplitEditorToBelowGroupAction);\nregisterAction2(FocusActiveGroupAction);\nregisterAction2(FocusFirstGroupAction);\nregisterAction2(FocusLastGroupAction);\nregisterAction2(FocusPreviousGroup);\nregisterAction2(FocusNextGroup);\nregisterAction2(FocusLeftGroup);\nregisterAction2(FocusRightGroup);\nregisterAction2(FocusAboveGroup);\nregisterAction2(FocusBelowGroup);\nregisterAction2(NewEditorGroupLeftAction);\nregisterAction2(NewEditorGroupRightAction);\nregisterAction2(NewEditorGroupAboveAction);\nregisterAction2(NewEditorGroupBelowAction);\nregisterAction2(NavigatePreviousAction);\nregisterAction2(NavigateForwardInEditsAction);\nregisterAction2(NavigateBackwardsInEditsAction);\nregisterAction2(NavigatePreviousInEditsAction);\nregisterAction2(NavigateToLastEditLocationAction);\nregisterAction2(NavigateForwardInNavigationsAction);\nregisterAction2(NavigateBackwardsInNavigationsAction);\nregisterAction2(NavigatePreviousInNavigationsAction);\nregisterAction2(NavigateToLastNavigationLocationAction);\nregisterAction2(ClearEditorHistoryAction);\nregisterAction2(EditorLayoutSingleAction);\nregisterAction2(EditorLayoutTwoColumnsAction);\nregisterAction2(EditorLayoutThreeColumnsAction);\nregisterAction2(EditorLayoutTwoRowsAction);\nregisterAction2(EditorLayoutThreeRowsAction);\nregisterAction2(EditorLayoutTwoByTwoGridAction);\nregisterAction2(EditorLayoutTwoRowsRightAction);\nregisterAction2(EditorLayoutTwoColumnsBottomAction);\nregisterAction2(ToggleEditorTypeAction);\nregisterAction2(ReOpenInTextEditorAction);\nregisterAction2(QuickAccessPreviousRecentlyUsedEditorAction);\nregisterAction2(QuickAccessLeastRecentlyUsedEditorAction);\nregisterAction2(QuickAccessPreviousRecentlyUsedEditorInGroupAction);\nregisterAction2(QuickAccessLeastRecentlyUsedEditorInGroupAction);\nregisterAction2(QuickAccessPreviousEditorFromHistoryAction);\nconst quickAccessNavigateNextInEditorPickerId = 'workbench.action.quickOpenNavigateNextInEditorPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickAccessNavigateNextInEditorPickerId,\n    weight: 200  + 50,\n    handler: getQuickNavigateHandler(quickAccessNavigateNextInEditorPickerId, true),\n    when: editorPickerContext,\n    primary: 2048  | 2 ,\n    mac: { primary: 256  | 2  }\n});\nconst quickAccessNavigatePreviousInEditorPickerId = 'workbench.action.quickOpenNavigatePreviousInEditorPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickAccessNavigatePreviousInEditorPickerId,\n    weight: 200  + 50,\n    handler: getQuickNavigateHandler(quickAccessNavigatePreviousInEditorPickerId, false),\n    when: editorPickerContext,\n    primary: 2048  | 1024  | 2 ,\n    mac: { primary: 256  | 1024  | 2  }\n});\nsetup();\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroup, { command: { id: UNLOCK_GROUP_COMMAND_ID, title: ( localize('unlockGroupAction', \"Unlock Group\")), icon: Codicon.lock }, group: 'navigation', order: 10, when: ActiveEditorGroupLockedContext });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroup, { command: { id: CLOSE_EDITOR_GROUP_COMMAND_ID, title: ( localize('closeGroupAction', \"Close Group\")), icon: Codicon.close }, group: 'navigation', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: SPLIT_EDITOR_UP, title: ( localize('splitUp', \"Split Up\")) }, group: '2_split', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: SPLIT_EDITOR_DOWN, title: ( localize('splitDown', \"Split Down\")) }, group: '2_split', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: SPLIT_EDITOR_LEFT, title: ( localize('splitLeft', \"Split Left\")) }, group: '2_split', order: 30 });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: SPLIT_EDITOR_RIGHT, title: ( localize('splitRight', \"Split Right\")) }, group: '2_split', order: 40 });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: TOGGLE_LOCK_GROUP_COMMAND_ID, title: ( localize('toggleLockGroup', \"Lock Group\")), toggled: ActiveEditorGroupLockedContext }, group: '3_lock', order: 10, when: MultipleEditorGroupsContext });\nMenuRegistry.appendMenuItem(MenuId.EmptyEditorGroupContext, { command: { id: CLOSE_EDITOR_GROUP_COMMAND_ID, title: ( localize('close', \"Close\")) }, group: '4_close', order: 10, when: MultipleEditorGroupsContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTabsBarContext, { command: { id: SPLIT_EDITOR_UP, title: ( localize('splitUp', \"Split Up\")) }, group: '2_split', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTabsBarContext, { command: { id: SPLIT_EDITOR_DOWN, title: ( localize('splitDown', \"Split Down\")) }, group: '2_split', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EditorTabsBarContext, { command: { id: SPLIT_EDITOR_LEFT, title: ( localize('splitLeft', \"Split Left\")) }, group: '2_split', order: 30 });\nMenuRegistry.appendMenuItem(MenuId.EditorTabsBarContext, { command: { id: SPLIT_EDITOR_RIGHT, title: ( localize('splitRight', \"Split Right\")) }, group: '2_split', order: 40 });\nMenuRegistry.appendMenuItem(MenuId.EditorTabsBarContext, { command: { id: ToggleTabsVisibilityAction.ID, title: ( localize('toggleTabs', \"Enable Tabs\")), toggled: ( ContextKeyExpr.has('config.workbench.editor.showTabs')) }, group: '3_config', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: CLOSE_EDITOR_COMMAND_ID, title: ( localize('close', \"Close\")) }, group: '1_close', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID, title: ( localize('closeOthers', \"Close Others\")), precondition: ( EditorGroupEditorsCountContext.notEqualsTo('1')) }, group: '1_close', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID, title: ( localize('closeRight', \"Close to the Right\")), precondition: ( ActiveEditorLastInGroupContext.toNegated()) }, group: '1_close', order: 30, when: EditorTabsVisibleContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: CLOSE_SAVED_EDITORS_COMMAND_ID, title: ( localize('closeAllSaved', \"Close Saved\")) }, group: '1_close', order: 40 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID, title: ( localize('closeAll', \"Close All\")) }, group: '1_close', order: 50 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: REOPEN_WITH_COMMAND_ID, title: ( localize('reopenWith', \"Reopen Editor With...\")) }, group: '1_open', order: 10, when: ActiveEditorAvailableEditorIdsContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: KEEP_EDITOR_COMMAND_ID, title: ( localize('keepOpen', \"Keep Open\")), precondition: ( ActiveEditorPinnedContext.toNegated()) }, group: '3_preview', order: 10, when: ( ContextKeyExpr.has('config.workbench.editor.enablePreview')) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: PIN_EDITOR_COMMAND_ID, title: ( localize('pin', \"Pin\")) }, group: '3_preview', order: 20, when: ( ActiveEditorStickyContext.toNegated()) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: UNPIN_EDITOR_COMMAND_ID, title: ( localize('unpin', \"Unpin\")) }, group: '3_preview', order: 20, when: ActiveEditorStickyContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: SPLIT_EDITOR_UP, title: ( localize('splitUp', \"Split Up\")) }, group: '5_split', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: SPLIT_EDITOR_DOWN, title: ( localize('splitDown', \"Split Down\")) }, group: '5_split', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: SPLIT_EDITOR_LEFT, title: ( localize('splitLeft', \"Split Left\")) }, group: '5_split', order: 30 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: SPLIT_EDITOR_RIGHT, title: ( localize('splitRight', \"Split Right\")) }, group: '5_split', order: 40 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: SPLIT_EDITOR_IN_GROUP, title: ( localize('splitInGroup', \"Split in Group\")) }, group: '6_split_in_group', order: 10, when: ActiveEditorCanSplitInGroupContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { command: { id: JOIN_EDITOR_IN_GROUP, title: ( localize('joinInGroup', \"Join in Group\")) }, group: '6_split_in_group', order: 10, when: SideBySideEditorActiveContext });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: TOGGLE_DIFF_SIDE_BY_SIDE, title: ( localize('inlineView', \"Inline View\")), toggled: ( ContextKeyExpr.equals('config.diffEditor.renderSideBySide', false)) }, group: '1_diff', order: 10, when: ( ContextKeyExpr.has('isInDiffEditor')) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: SHOW_EDITORS_IN_GROUP, title: ( localize('showOpenedEditors', \"Show Opened Editors\")) }, group: '3_open', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID, title: ( localize('closeAll', \"Close All\")) }, group: '5_close', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: CLOSE_SAVED_EDITORS_COMMAND_ID, title: ( localize('closeAllSaved', \"Close Saved\")) }, group: '5_close', order: 20 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: ToggleTabsVisibilityAction.ID, title: ( localize('toggleTabs', \"Enable Tabs\")), toggled: ( ContextKeyExpr.has('config.workbench.editor.showTabs')) }, group: '7_settings', order: 5, when: ( ( ContextKeyExpr.has('config.workbench.editor.showTabs')).negate())  });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: TOGGLE_KEEP_EDITORS_COMMAND_ID, title: ( localize('togglePreviewMode', \"Enable Preview Editors\")), toggled: ( ContextKeyExpr.has('config.workbench.editor.enablePreview')) }, group: '7_settings', order: 10 });\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { command: { id: TOGGLE_LOCK_GROUP_COMMAND_ID, title: ( localize('lockGroup', \"Lock Group\")), toggled: ActiveEditorGroupLockedContext }, group: '8_lock', order: 10, when: MultipleEditorGroupsContext });\nfunction appendEditorToolItem(primary, when, order, alternative, precondition) {\n    const item = {\n        command: {\n            id: primary.id,\n            title: primary.title,\n            icon: primary.icon,\n            precondition\n        },\n        group: 'navigation',\n        when,\n        order\n    };\n    if (alternative) {\n        item.alt = {\n            id: alternative.id,\n            title: alternative.title,\n            icon: alternative.icon\n        };\n    }\n    MenuRegistry.appendMenuItem(MenuId.EditorTitle, item);\n}\nconst SPLIT_ORDER = 100000;\nconst CLOSE_ORDER = 1000000;\nappendEditorToolItem({\n    id: SplitEditorAction.ID,\n    title: ( localize('splitEditorRight', \"Split Editor Right\")),\n    icon: Codicon.splitHorizontal\n}, ContextKeyExpr.not('splitEditorsVertically'), SPLIT_ORDER, {\n    id: SPLIT_EDITOR_DOWN,\n    title: ( localize('splitEditorDown', \"Split Editor Down\")),\n    icon: Codicon.splitVertical\n});\nappendEditorToolItem({\n    id: SplitEditorAction.ID,\n    title: ( localize('splitEditorDown', \"Split Editor Down\")),\n    icon: Codicon.splitVertical\n}, ( ContextKeyExpr.has('splitEditorsVertically')), SPLIT_ORDER, {\n    id: SPLIT_EDITOR_RIGHT,\n    title: ( localize('splitEditorRight', \"Split Editor Right\")),\n    icon: Codicon.splitHorizontal\n});\nappendEditorToolItem({\n    id: TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT,\n    title: ( localize('toggleSplitEditorInGroupLayout', \"Toggle Layout\")),\n    icon: Codicon.editorLayout\n}, SideBySideEditorActiveContext, SPLIT_ORDER - 1);\nappendEditorToolItem({\n    id: CLOSE_EDITOR_COMMAND_ID,\n    title: ( localize('close', \"Close\")),\n    icon: Codicon.close\n}, ( ContextKeyExpr.and(( EditorTabsVisibleContext.toNegated()), ( ActiveEditorDirtyContext.toNegated()), ( ActiveEditorStickyContext.toNegated()))), CLOSE_ORDER, {\n    id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n    title: ( localize('closeAll', \"Close All\")),\n    icon: Codicon.closeAll\n});\nappendEditorToolItem({\n    id: CLOSE_EDITOR_COMMAND_ID,\n    title: ( localize('close', \"Close\")),\n    icon: Codicon.closeDirty\n}, ( ContextKeyExpr.and(( EditorTabsVisibleContext.toNegated()), ActiveEditorDirtyContext, ( ActiveEditorStickyContext.toNegated()))), CLOSE_ORDER, {\n    id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n    title: ( localize('closeAll', \"Close All\")),\n    icon: Codicon.closeAll\n});\nappendEditorToolItem({\n    id: UNPIN_EDITOR_COMMAND_ID,\n    title: ( localize('unpin', \"Unpin\")),\n    icon: Codicon.pinned\n}, ( ContextKeyExpr.and(( EditorTabsVisibleContext.toNegated()), ( ActiveEditorDirtyContext.toNegated()), ActiveEditorStickyContext)), CLOSE_ORDER, {\n    id: CLOSE_EDITOR_COMMAND_ID,\n    title: ( localize('close', \"Close\")),\n    icon: Codicon.close\n});\nappendEditorToolItem({\n    id: UNPIN_EDITOR_COMMAND_ID,\n    title: ( localize('unpin', \"Unpin\")),\n    icon: Codicon.pinnedDirty\n}, ( ContextKeyExpr.and(( EditorTabsVisibleContext.toNegated()), ActiveEditorDirtyContext, ActiveEditorStickyContext)), CLOSE_ORDER, {\n    id: CLOSE_EDITOR_COMMAND_ID,\n    title: ( localize('close', \"Close\")),\n    icon: Codicon.close\n});\nappendEditorToolItem({\n    id: UNLOCK_GROUP_COMMAND_ID,\n    title: ( localize('unlockEditorGroup', \"Unlock Group\")),\n    icon: Codicon.lock\n}, ActiveEditorGroupLockedContext, CLOSE_ORDER - 1);\nconst previousChangeIcon = registerIcon('diff-editor-previous-change', Codicon.arrowUp, ( localize(\n    'previousChangeIcon',\n    'Icon for the previous change action in the diff editor.'\n)));\nconst nextChangeIcon = registerIcon('diff-editor-next-change', Codicon.arrowDown, ( localize('nextChangeIcon', 'Icon for the next change action in the diff editor.')));\nconst toggleWhitespace = registerIcon('diff-editor-toggle-whitespace', Codicon.whitespace, ( localize(\n    'toggleWhitespace',\n    'Icon for the toggle whitespace action in the diff editor.'\n)));\nappendEditorToolItem({\n    id: GOTO_PREVIOUS_CHANGE,\n    title: ( localize('navigate.prev.label', \"Previous Change\")),\n    icon: previousChangeIcon\n}, TextCompareEditorActiveContext, 10);\nappendEditorToolItem({\n    id: GOTO_NEXT_CHANGE,\n    title: ( localize('navigate.next.label', \"Next Change\")),\n    icon: nextChangeIcon\n}, TextCompareEditorActiveContext, 11);\nappendEditorToolItem({\n    id: TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE,\n    title: ( localize(\n        'ignoreTrimWhitespace.label',\n        \"Ignore Leading/Trailing Whitespace Differences\"\n    )),\n    icon: toggleWhitespace\n}, ( ContextKeyExpr.and(TextCompareEditorActiveContext, ( ContextKeyExpr.notEquals('config.diffEditor.ignoreTrimWhitespace', true)))), 20);\nappendEditorToolItem({\n    id: TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE,\n    title: ( localize('showTrimWhitespace.label', \"Show Leading/Trailing Whitespace Differences\")),\n    icon: ThemeIcon.modify(toggleWhitespace, 'disabled')\n}, ( ContextKeyExpr.and(TextCompareEditorActiveContext, ( ContextKeyExpr.notEquals('config.diffEditor.ignoreTrimWhitespace', false)))), 20);\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: KEEP_EDITOR_COMMAND_ID, title: { value: ( localize('keepEditor', \"Keep Editor\")), original: 'Keep Editor' }, category: Categories.View }, when: ( ContextKeyExpr.has('config.workbench.editor.enablePreview')) });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: PIN_EDITOR_COMMAND_ID, title: { value: ( localize('pinEditor', \"Pin Editor\")), original: 'Pin Editor' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: UNPIN_EDITOR_COMMAND_ID, title: { value: ( localize('unpinEditor', \"Unpin Editor\")), original: 'Unpin Editor' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_EDITOR_COMMAND_ID, title: { value: ( localize('closeEditor', \"Close Editor\")), original: 'Close Editor' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_PINNED_EDITOR_COMMAND_ID, title: { value: ( localize('closePinnedEditor', \"Close Pinned Editor\")), original: 'Close Pinned Editor' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_EDITORS_IN_GROUP_COMMAND_ID, title: { value: ( localize('closeEditorsInGroup', \"Close All Editors in Group\")), original: 'Close All Editors in Group' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_SAVED_EDITORS_COMMAND_ID, title: { value: ( localize('closeSavedEditors', \"Close Saved Editors in Group\")), original: 'Close Saved Editors in Group' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID, title: { value: ( localize('closeOtherEditors', \"Close Other Editors in Group\")), original: 'Close Other Editors in Group' }, category: Categories.View } });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID, title: { value: ( localize('closeRightEditors', \"Close Editors to the Right in Group\")), original: 'Close Editors to the Right in Group' }, category: Categories.View }, when: ( ActiveEditorLastInGroupContext.toNegated()) });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: CLOSE_EDITORS_AND_GROUP_COMMAND_ID, title: { value: ( localize('closeEditorGroup', \"Close Editor Group\")), original: 'Close Editor Group' }, category: Categories.View }, when: MultipleEditorGroupsContext });\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, { command: { id: REOPEN_WITH_COMMAND_ID, title: { value: ( localize('reopenWith', \"Reopen Editor With...\")), original: 'Reopen Editor With...' }, category: Categories.View }, when: ActiveEditorAvailableEditorIdsContext });\nMenuRegistry.appendMenuItem(MenuId.MenubarRecentMenu, {\n    group: '1_editor',\n    command: {\n        id: ReopenClosedEditorAction.ID,\n        title: ( localize(\n            { key: 'miReopenClosedEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Reopen Closed Editor\"\n        )),\n        precondition: ( ContextKeyExpr.has('canReopenClosedEditor'))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarRecentMenu, {\n    group: 'z_clear',\n    command: {\n        id: ClearRecentFilesAction.ID,\n        title: ( localize(\n            { key: 'miClearRecentOpen', comment: ['&& denotes a mnemonic'] },\n            \"&&Clear Recently Opened\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n    group: '2_appearance',\n    title: ( localize(\n        { key: 'miEditorLayout', comment: ['&& denotes a mnemonic'] },\n        \"Editor &&Layout\"\n    )),\n    submenu: MenuId.MenubarLayoutMenu,\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '1_split',\n    command: {\n        id: SPLIT_EDITOR_UP,\n        title: {\n            original: 'Split Up',\n            value: ( localize('miSplitEditorUpWithoutMnemonic', \"Split Up\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSplitEditorUp', comment: ['&& denotes a mnemonic'] },\n                \"Split &&Up\"\n            )),\n        }\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '1_split',\n    command: {\n        id: SPLIT_EDITOR_DOWN,\n        title: {\n            original: 'Split Down',\n            value: ( localize('miSplitEditorDownWithoutMnemonic', \"Split Down\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSplitEditorDown', comment: ['&& denotes a mnemonic'] },\n                \"Split &&Down\"\n            ))\n        }\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '1_split',\n    command: {\n        id: SPLIT_EDITOR_LEFT,\n        title: {\n            original: 'Split Left',\n            value: ( localize('miSplitEditorLeftWithoutMnemonic', \"Split Left\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSplitEditorLeft', comment: ['&& denotes a mnemonic'] },\n                \"Split &&Left\"\n            ))\n        }\n    },\n    order: 3\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '1_split',\n    command: {\n        id: SPLIT_EDITOR_RIGHT,\n        title: {\n            original: 'Split Right',\n            value: ( localize('miSplitEditorRightWithoutMnemonic', \"Split Right\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSplitEditorRight', comment: ['&& denotes a mnemonic'] },\n                \"Split &&Right\"\n            ))\n        }\n    },\n    order: 4\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '2_split_in_group',\n    command: {\n        id: SPLIT_EDITOR_IN_GROUP,\n        title: {\n            original: 'Split in Group',\n            value: ( localize('miSplitEditorInGroupWithoutMnemonic', \"Split in Group\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSplitEditorInGroup', comment: ['&& denotes a mnemonic'] },\n                \"Split in &&Group\"\n            ))\n        }\n    },\n    when: ActiveEditorCanSplitInGroupContext,\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '2_split_in_group',\n    command: {\n        id: JOIN_EDITOR_IN_GROUP,\n        title: {\n            original: 'Join in Group',\n            value: ( localize('miJoinEditorInGroupWithoutMnemonic', \"Join in Group\")),\n            mnemonicTitle: ( localize(\n                { key: 'miJoinEditorInGroup', comment: ['&& denotes a mnemonic'] },\n                \"Join in &&Group\"\n            ))\n        }\n    },\n    when: SideBySideEditorActiveContext,\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutSingleAction.ID,\n        title: {\n            original: 'Single',\n            value: ( localize('miSingleColumnEditorLayoutWithoutMnemonic', \"Single\")),\n            mnemonicTitle: ( localize(\n                { key: 'miSingleColumnEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"&&Single\"\n            ))\n        }\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutTwoColumnsAction.ID,\n        title: {\n            original: 'Two Columns',\n            value: ( localize('miTwoColumnsEditorLayoutWithoutMnemonic', \"Two Columns\")),\n            mnemonicTitle: ( localize(\n                { key: 'miTwoColumnsEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"&&Two Columns\"\n            ))\n        }\n    },\n    order: 3\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutThreeColumnsAction.ID,\n        title: {\n            original: 'Three Columns',\n            value: ( localize('miThreeColumnsEditorLayoutWithoutMnemonic', \"Three Columns\")),\n            mnemonicTitle: ( localize(\n                { key: 'miThreeColumnsEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"T&&hree Columns\"\n            ))\n        }\n    },\n    order: 4\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutTwoRowsAction.ID,\n        title: {\n            original: 'Two Rows',\n            value: ( localize('miTwoRowsEditorLayoutWithoutMnemonic', \"Two Rows\")),\n            mnemonicTitle: ( localize(\n                { key: 'miTwoRowsEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"T&&wo Rows\"\n            ))\n        }\n    },\n    order: 5\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutThreeRowsAction.ID,\n        title: {\n            original: 'Three Rows',\n            value: ( localize('miThreeRowsEditorLayoutWithoutMnemonic', \"Three Rows\")),\n            mnemonicTitle: ( localize(\n                { key: 'miThreeRowsEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"Three &&Rows\"\n            ))\n        }\n    },\n    order: 6\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutTwoByTwoGridAction.ID,\n        title: {\n            original: 'Grid (2x2)',\n            value: ( localize('miTwoByTwoGridEditorLayoutWithoutMnemonic', \"Grid (2x2)\")),\n            mnemonicTitle: ( localize(\n                { key: 'miTwoByTwoGridEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"&&Grid (2x2)\"\n            ))\n        }\n    },\n    order: 7\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutTwoRowsRightAction.ID,\n        title: {\n            original: 'Two Rows Right',\n            value: ( localize('miTwoRowsRightEditorLayoutWithoutMnemonic', \"Two Rows Right\")),\n            mnemonicTitle: ( localize(\n                { key: 'miTwoRowsRightEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"Two R&&ows Right\"\n            ))\n        }\n    },\n    order: 8\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarLayoutMenu, {\n    group: '3_layouts',\n    command: {\n        id: EditorLayoutTwoColumnsBottomAction.ID,\n        title: {\n            original: 'Two Columns Bottom',\n            value: ( localize('miTwoColumnsBottomEditorLayoutWithoutMnemonic', \"Two Columns Bottom\")),\n            mnemonicTitle: ( localize(\n                { key: 'miTwoColumnsBottomEditorLayout', comment: ['&& denotes a mnemonic'] },\n                \"Two &&Columns Bottom\"\n            ))\n        }\n    },\n    order: 9\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '1_history_nav',\n    command: {\n        id: 'workbench.action.navigateToLastEditLocation',\n        title: ( localize(\n            { key: 'miLastEditLocation', comment: ['&& denotes a mnemonic'] },\n            \"&&Last Edit Location\"\n        )),\n        precondition: ( ContextKeyExpr.has('canNavigateToLastEditLocation'))\n    },\n    order: 3\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '1_sideBySide',\n    command: {\n        id: FOCUS_FIRST_SIDE_EDITOR,\n        title: ( localize(\n            { key: 'miFirstSideEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&First Side in Editor\"\n        ))\n    },\n    when: ( ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext)),\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '1_sideBySide',\n    command: {\n        id: FOCUS_SECOND_SIDE_EDITOR,\n        title: ( localize(\n            { key: 'miSecondSideEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Second Side in Editor\"\n        ))\n    },\n    when: ( ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext)),\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '2_any',\n    command: {\n        id: 'workbench.action.nextEditor',\n        title: ( localize(\n            { key: 'miNextEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Next Editor\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '2_any',\n    command: {\n        id: 'workbench.action.previousEditor',\n        title: ( localize(\n            { key: 'miPreviousEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Previous Editor\"\n        ))\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '3_any_used',\n    command: {\n        id: 'workbench.action.openNextRecentlyUsedEditor',\n        title: ( localize(\n            { key: 'miNextRecentlyUsedEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Next Used Editor\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '3_any_used',\n    command: {\n        id: 'workbench.action.openPreviousRecentlyUsedEditor',\n        title: ( localize(\n            { key: 'miPreviousRecentlyUsedEditor', comment: ['&& denotes a mnemonic'] },\n            \"&&Previous Used Editor\"\n        ))\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '4_group',\n    command: {\n        id: 'workbench.action.nextEditorInGroup',\n        title: ( localize(\n            { key: 'miNextEditorInGroup', comment: ['&& denotes a mnemonic'] },\n            \"&&Next Editor in Group\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '4_group',\n    command: {\n        id: 'workbench.action.previousEditorInGroup',\n        title: ( localize(\n            { key: 'miPreviousEditorInGroup', comment: ['&& denotes a mnemonic'] },\n            \"&&Previous Editor in Group\"\n        ))\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '5_group_used',\n    command: {\n        id: 'workbench.action.openNextRecentlyUsedEditorInGroup',\n        title: ( localize(\n            { key: 'miNextUsedEditorInGroup', comment: ['&& denotes a mnemonic'] },\n            \"&&Next Used Editor in Group\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchEditorMenu, {\n    group: '5_group_used',\n    command: {\n        id: 'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n        title: ( localize(\n            { key: 'miPreviousUsedEditorInGroup', comment: ['&& denotes a mnemonic'] },\n            \"&&Previous Used Editor in Group\"\n        ))\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '2_editor_nav',\n    title: ( localize(\n        { key: 'miSwitchEditor', comment: ['&& denotes a mnemonic'] },\n        \"Switch &&Editor\"\n    )),\n    submenu: MenuId.MenubarSwitchEditorMenu,\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '1_focus_index',\n    command: {\n        id: 'workbench.action.focusFirstEditorGroup',\n        title: ( localize(\n            { key: 'miFocusFirstGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&1\"\n        ))\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '1_focus_index',\n    command: {\n        id: 'workbench.action.focusSecondEditorGroup',\n        title: ( localize(\n            { key: 'miFocusSecondGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&2\"\n        ))\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '1_focus_index',\n    command: {\n        id: 'workbench.action.focusThirdEditorGroup',\n        title: ( localize(\n            { key: 'miFocusThirdGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&3\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 3\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '1_focus_index',\n    command: {\n        id: 'workbench.action.focusFourthEditorGroup',\n        title: ( localize(\n            { key: 'miFocusFourthGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&4\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 4\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '1_focus_index',\n    command: {\n        id: 'workbench.action.focusFifthEditorGroup',\n        title: ( localize(\n            { key: 'miFocusFifthGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&5\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 5\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '2_next_prev',\n    command: {\n        id: 'workbench.action.focusNextGroup',\n        title: ( localize({ key: 'miNextGroup', comment: ['&& denotes a mnemonic'] }, \"&&Next Group\")),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '2_next_prev',\n    command: {\n        id: 'workbench.action.focusPreviousGroup',\n        title: ( localize(\n            { key: 'miPreviousGroup', comment: ['&& denotes a mnemonic'] },\n            \"&&Previous Group\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '3_directional',\n    command: {\n        id: 'workbench.action.focusLeftGroup',\n        title: ( localize(\n            { key: 'miFocusLeftGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&Left\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '3_directional',\n    command: {\n        id: 'workbench.action.focusRightGroup',\n        title: ( localize(\n            { key: 'miFocusRightGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&Right\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 2\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '3_directional',\n    command: {\n        id: 'workbench.action.focusAboveGroup',\n        title: ( localize(\n            { key: 'miFocusAboveGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&Above\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 3\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSwitchGroupMenu, {\n    group: '3_directional',\n    command: {\n        id: 'workbench.action.focusBelowGroup',\n        title: ( localize(\n            { key: 'miFocusBelowGroup', comment: ['&& denotes a mnemonic'] },\n            \"Group &&Below\"\n        )),\n        precondition: MultipleEditorGroupsContext\n    },\n    order: 4\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '2_editor_nav',\n    title: ( localize(\n        { key: 'miSwitchGroup', comment: ['&& denotes a mnemonic'] },\n        \"Switch &&Group\"\n    )),\n    submenu: MenuId.MenubarSwitchGroupMenu,\n    order: 2\n});\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor-pane-placeholder{align-items:center;box-sizing:border-box;display:flex;flex-direction:column;gap:10px;justify-content:center;padding:0 16px}.monaco-editor-pane-placeholder:focus{outline:none!important}.monaco-editor-pane-placeholder .editor-placeholder-icon-container .codicon{font-size:48px}.monaco-editor-pane-placeholder .editor-placeholder-icon-container .codicon.codicon-error{color:var(--vscode-editorError-foreground)}.monaco-editor-pane-placeholder .editor-placeholder-icon-container .codicon.codicon-warning{color:var(--vscode-editorWarning-foreground)}.monaco-editor-pane-placeholder .editor-placeholder-icon-container .codicon.codicon-info,.monaco-editor-pane-placeholder .editor-placeholder-icon-container .codicon.codicon-workspace-untrusted{color:var(--vscode-editorInfo-foreground)}.monaco-editor-pane-placeholder.max-height-200px .editor-placeholder-icon-container{display:none}.monaco-editor-pane-placeholder .editor-placeholder-label-container{font-size:14px;max-width:450px;text-align:center;word-break:break-word}.monaco-editor-pane-placeholder .editor-placeholder-buttons-container{display:flex}.monaco-editor-pane-placeholder .editor-placeholder-buttons-container>.monaco-button{font-size:14px;margin:4px 5px;outline-offset:2px!important;padding:6px 11px;width:fit-content}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/editorplaceholder.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { isEditorOpenError } from '../../../common/editor.js';\nimport { EditorPane } from './editorPane.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { DomScrollableElement } from 'monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { clearNode, $, EventHelper, size } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { MutableDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { assertAllDefined, assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { EditorOpenSource } from 'monaco-editor/esm/vs/platform/editor/common/editor.js';\nimport { computeEditorAriaLabel, EditorPaneDescriptor } from '../../editor.js';\nimport { ButtonBar } from 'monaco-editor/esm/vs/base/browser/ui/button/button.js';\nimport { defaultButtonStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { SimpleIconLabel } from '../../../../base/browser/ui/iconLabel/simpleIconLabel.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { toErrorMessage } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { truncate } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet EditorPlaceholder = class EditorPlaceholder extends EditorPane {\n    static { this.PLACEHOLDER_LABEL_MAX_LENGTH = 1024; }\n    constructor(id, telemetryService, themeService, storageService) {\n        super(id, telemetryService, themeService, storageService);\n        this.inputDisposable = this._register(( new MutableDisposable()));\n    }\n    createEditor(parent) {\n        this.container = document.createElement('div');\n        this.container.className = 'monaco-editor-pane-placeholder';\n        this.container.style.outline = 'none';\n        this.container.tabIndex = 0;\n        this.scrollbar = this._register(( new DomScrollableElement(\n            this.container,\n            { horizontal: 1 , vertical: 1  }\n        )));\n        parent.appendChild(this.scrollbar.getDomNode());\n    }\n    async setInput(input, options, context, token) {\n        await super.setInput(input, options, context, token);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.inputDisposable.value = await this.renderInput(input, options);\n    }\n    async renderInput(input, options) {\n        const [container, scrollbar] = assertAllDefined(this.container, this.scrollbar);\n        clearNode(container);\n        const disposables = ( new DisposableStore());\n        const { icon, label, actions } = await this.getContents(input, options, disposables);\n        const truncatedLabel = truncate(label, EditorPlaceholder.PLACEHOLDER_LABEL_MAX_LENGTH);\n        const iconContainer = container.appendChild($('.editor-placeholder-icon-container'));\n        const iconWidget = ( new SimpleIconLabel(iconContainer));\n        iconWidget.text = icon;\n        const labelContainer = container.appendChild($('.editor-placeholder-label-container'));\n        const labelWidget = document.createElement('span');\n        labelWidget.textContent = truncatedLabel;\n        labelContainer.appendChild(labelWidget);\n        container.setAttribute('aria-label', `${computeEditorAriaLabel(input, undefined, this.group, undefined)}, ${truncatedLabel}`);\n        if (actions.length) {\n            const actionsContainer = container.appendChild($('.editor-placeholder-buttons-container'));\n            const buttons = disposables.add(( new ButtonBar(actionsContainer)));\n            for (let i = 0; i < actions.length; i++) {\n                const button = disposables.add(buttons.addButton({\n                    ...defaultButtonStyles,\n                    secondary: i !== 0\n                }));\n                button.label = actions[i].label;\n                disposables.add(button.onDidClick(e => {\n                    if (e) {\n                        EventHelper.stop(e, true);\n                    }\n                    actions[i].run();\n                }));\n            }\n        }\n        scrollbar.scanDomNode();\n        return disposables;\n    }\n    clearInput() {\n        if (this.container) {\n            clearNode(this.container);\n        }\n        this.inputDisposable.clear();\n        super.clearInput();\n    }\n    layout(dimension) {\n        const [container, scrollbar] = assertAllDefined(this.container, this.scrollbar);\n        size(container, dimension.width, dimension.height);\n        scrollbar.scanDomNode();\n        container.classList.toggle('max-height-200px', dimension.height <= 200);\n    }\n    focus() {\n        const container = assertIsDefined(this.container);\n        container.focus();\n    }\n    dispose() {\n        this.container?.remove();\n        super.dispose();\n    }\n};\nEditorPlaceholder = ( __decorate([\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IThemeService)),\n    ( __param(3, IStorageService))\n], EditorPlaceholder));\nlet WorkspaceTrustRequiredPlaceholderEditor = class WorkspaceTrustRequiredPlaceholderEditor extends EditorPlaceholder {\n    static { this.ID = 'workbench.editors.workspaceTrustRequiredEditor'; }\n    static { this.LABEL = ( localize('trustRequiredEditor', \"Workspace Trust Required\")); }\n    static { this.DESCRIPTOR = EditorPaneDescriptor.create(WorkspaceTrustRequiredPlaceholderEditor, WorkspaceTrustRequiredPlaceholderEditor.ID, WorkspaceTrustRequiredPlaceholderEditor.LABEL); }\n    constructor(telemetryService, themeService, commandService, workspaceService, storageService) {\n        super(WorkspaceTrustRequiredPlaceholderEditor.ID, telemetryService, themeService, storageService);\n        this.commandService = commandService;\n        this.workspaceService = workspaceService;\n    }\n    getTitle() {\n        return WorkspaceTrustRequiredPlaceholderEditor.LABEL;\n    }\n    async getContents() {\n        return {\n            icon: '$(workspace-untrusted)',\n            label: isSingleFolderWorkspaceIdentifier(toWorkspaceIdentifier(this.workspaceService.getWorkspace())) ?\n                ( localize(\n                    'requiresFolderTrustText',\n                    \"The file is not displayed in the editor because trust has not been granted to the folder.\"\n                )) :\n                ( localize(\n                    'requiresWorkspaceTrustText',\n                    \"The file is not displayed in the editor because trust has not been granted to the workspace.\"\n                )),\n            actions: [\n                {\n                    label: ( localize('manageTrust', \"Manage Workspace Trust\")),\n                    run: () => this.commandService.executeCommand('workbench.trust.manage')\n                }\n            ]\n        };\n    }\n};\nWorkspaceTrustRequiredPlaceholderEditor = ( __decorate([\n    ( __param(0, ITelemetryService)),\n    ( __param(1, IThemeService)),\n    ( __param(2, ICommandService)),\n    ( __param(3, IWorkspaceContextService)),\n    ( __param(4, IStorageService))\n], WorkspaceTrustRequiredPlaceholderEditor));\nlet ErrorPlaceholderEditor = class ErrorPlaceholderEditor extends EditorPlaceholder {\n    static { this.ID = 'workbench.editors.errorEditor'; }\n    static { this.LABEL = ( localize('errorEditor', \"Error Editor\")); }\n    static { this.DESCRIPTOR = EditorPaneDescriptor.create(ErrorPlaceholderEditor, ErrorPlaceholderEditor.ID, ErrorPlaceholderEditor.LABEL); }\n    constructor(telemetryService, themeService, storageService, fileService, dialogService) {\n        super(ErrorPlaceholderEditor.ID, telemetryService, themeService, storageService);\n        this.fileService = fileService;\n        this.dialogService = dialogService;\n    }\n    async getContents(input, options, disposables) {\n        const resource = input.resource;\n        const group = this.group;\n        const error = options.error;\n        const isFileNotFound = error?.fileOperationResult === 1 ;\n        let label;\n        if (isFileNotFound) {\n            label = ( localize(\n                'unavailableResourceErrorEditorText',\n                \"The editor could not be opened because the file was not found.\"\n            ));\n        }\n        else if (isEditorOpenError(error) && error.forceMessage) {\n            label = error.message;\n        }\n        else if (error) {\n            label = ( localize(\n                'unknownErrorEditorTextWithError',\n                \"The editor could not be opened due to an unexpected error: {0}\",\n                toErrorMessage(error)\n            ));\n        }\n        else {\n            label = ( localize(\n                'unknownErrorEditorTextWithoutError',\n                \"The editor could not be opened due to an unexpected error.\"\n            ));\n        }\n        let icon = '$(error)';\n        if (isEditorOpenError(error)) {\n            if (error.forceSeverity === Severity.Info) {\n                icon = '$(info)';\n            }\n            else if (error.forceSeverity === Severity.Warning) {\n                icon = '$(warning)';\n            }\n        }\n        let actions = undefined;\n        if (isEditorOpenError(error) && error.actions.length > 0) {\n            actions = ( error.actions.map(action => {\n                return {\n                    label: action.label,\n                    run: () => {\n                        const result = action.run();\n                        if (result instanceof Promise) {\n                            result.catch(error => this.dialogService.error(toErrorMessage(error)));\n                        }\n                    }\n                };\n            }));\n        }\n        else if (group) {\n            actions = [\n                {\n                    label: ( localize('retry', \"Try Again\")),\n                    run: () => group.openEditor(input, { ...options, source: EditorOpenSource.USER  })\n                }\n            ];\n        }\n        if (group && isFileNotFound && resource && this.fileService.hasProvider(resource)) {\n            disposables.add(this.fileService.onDidFilesChange(e => {\n                if (e.contains(resource, 1 , 0 )) {\n                    group.openEditor(input, options);\n                }\n            }));\n        }\n        return { icon, label, actions: actions ?? [] };\n    }\n};\nErrorPlaceholderEditor = ( __decorate([\n    ( __param(0, ITelemetryService)),\n    ( __param(1, IThemeService)),\n    ( __param(2, IStorageService)),\n    ( __param(3, IFileService)),\n    ( __param(4, IDialogService))\n], ErrorPlaceholderEditor));\nexport { EditorPlaceholder, ErrorPlaceholderEditor, WorkspaceTrustRequiredPlaceholderEditor };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-workbench.nopanel .part.panel{display:none!important;visibility:hidden!important}.monaco-workbench .part.panel.bottom .composite.title{border-top-style:solid;border-top-width:1px}.monaco-workbench.noeditorarea .part.panel.bottom .composite.title{border-top-width:0}.monaco-workbench .part.panel.right{border-left-style:solid;border-left-width:1px}.monaco-workbench.noeditorarea .part.panel.right{border-left-width:0}.monaco-workbench .part.panel.left{border-right-style:solid;border-right-width:1px}.monaco-workbench.noeditorarea .part.panel.left{border-right-width:0}.monaco-workbench .part.panel>.content .monaco-editor,.monaco-workbench .part.panel>.content .monaco-editor .margin,.monaco-workbench .part.panel>.content .monaco-editor .monaco-editor-background{background-color:var(--vscode-panel-background)}.monaco-workbench .part.panel>.title>.panel-switcher-container>.monaco-action-bar .action-item:focus .action-label,.monaco-workbench .part.panel>.title>.panel-switcher-container>.monaco-action-bar .action-item:hover .action-label{color:var(--vscode-panelTitle-activeForeground)!important}.monaco-workbench .part.panel .monaco-inputbox{border-color:var(--vscode-panelInput-border,transparent)!important}.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item:focus .active-item-indicator:before{border-top-color:var(--vscode-focusBorder)!important}.monaco-workbench .part.panel>.title>.panel-switcher-container>.monaco-action-bar .action-item:focus{outline:none}.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item.checked.clicked:focus .active-item-indicator:before,.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item.checked:not(:focus) .active-item-indicator:before{border-top-color:var(--vscode-panelTitle-activeBorder)!important}.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item.checked .action-label,.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item:hover .action-label{outline:var(--vscode-contrastActiveBorder,unset) solid 1px!important}.monaco-workbench .part.basepanel>.title>.panel-switcher-container>.monaco-action-bar .action-item:not(.checked):hover .action-label{outline:var(--vscode-contrastActiveBorder,unset) dashed 1px!important}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/panelpart.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Action2, MenuId, registerAction2, MenuRegistry } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { Categories } from 'monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js';\nimport { IWorkbenchLayoutService, positionToString } from '../../../services/layout/browser/layoutService.js';\nimport { ActivityAction, ToggleCompositePinnedAction } from '../compositeBarActions.js';\nimport { PanelVisibleContext, AuxiliaryBarVisibleContext, PanelPositionContext, PanelAlignmentContext } from '../../../common/contextkeys.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { ViewContainerLocationToString, IViewDescriptorService, IViewsService } from '../../../common/views.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nregisterIcon('panel-maximize', Codicon.chevronUp, ( localize('maximizeIcon', 'Icon to maximize a panel.')));\nregisterIcon('panel-restore', Codicon.chevronDown, ( localize('restoreIcon', 'Icon to restore a panel.')));\nconst closeIcon = registerIcon('panel-close', Codicon.close, ( localize('closeIcon', 'Icon to close a panel.')));\nconst panelIcon = registerIcon('panel-layout-icon', Codicon.layoutPanel, ( localize('togglePanelOffIcon', 'Icon to toggle the panel off when it is on.')));\nconst panelOffIcon = registerIcon('panel-layout-icon-off', Codicon.layoutPanelOff, ( localize('togglePanelOnIcon', 'Icon to toggle the panel on when it is off.')));\nclass TogglePanelAction extends Action2 {\n    static { this.ID = 'workbench.action.togglePanel'; }\n    static { this.LABEL = ( localize('togglePanelVisibility', \"Toggle Panel Visibility\")); }\n    constructor() {\n        super({\n            id: TogglePanelAction.ID,\n            title: { value: TogglePanelAction.LABEL, original: 'Toggle Panel Visibility' },\n            toggled: {\n                condition: PanelVisibleContext,\n                title: ( localize('toggle panel', \"Panel\")),\n                mnemonicTitle: ( localize(\n                    { key: 'toggle panel mnemonic', comment: ['&& denotes a mnemonic'] },\n                    \"&&Panel\"\n                )),\n            },\n            f1: true,\n            category: Categories.View,\n            keybinding: { primary: 2048  | 40 , weight: 200  },\n            menu: [\n                {\n                    id: MenuId.MenubarAppearanceMenu,\n                    group: '2_workbench_layout',\n                    order: 5\n                }, {\n                    id: MenuId.LayoutControlMenuSubmenu,\n                    group: '0_workbench_layout',\n                    order: 4\n                },\n            ]\n        });\n    }\n    async run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        layoutService.setPartHidden(layoutService.isVisible(\"workbench.parts.panel\" ), \"workbench.parts.panel\" );\n    }\n}\nregisterAction2(TogglePanelAction);\nregisterAction2(class extends Action2 {\n    static { this.ID = 'workbench.action.focusPanel'; }\n    static { this.LABEL = ( localize('focusPanel', \"Focus into Panel\")); }\n    constructor() {\n        super({\n            id: 'workbench.action.focusPanel',\n            title: { value: ( localize('focusPanel', \"Focus into Panel\")), original: 'Focus into Panel' },\n            category: Categories.View,\n            f1: true,\n        });\n    }\n    async run(accessor) {\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        if (!layoutService.isVisible(\"workbench.parts.panel\" )) {\n            layoutService.setPartHidden(false, \"workbench.parts.panel\" );\n        }\n        const panel = paneCompositeService.getActivePaneComposite(1 );\n        panel?.focus();\n    }\n});\nconst PositionPanelActionId = {\n    LEFT: 'workbench.action.positionPanelLeft',\n    RIGHT: 'workbench.action.positionPanelRight',\n    BOTTOM: 'workbench.action.positionPanelBottom',\n};\nconst AlignPanelActionId = {\n    LEFT: 'workbench.action.alignPanelLeft',\n    RIGHT: 'workbench.action.alignPanelRight',\n    CENTER: 'workbench.action.alignPanelCenter',\n    JUSTIFY: 'workbench.action.alignPanelJustify',\n};\nfunction createPanelActionConfig(id, title, shortLabel, value, when) {\n    return {\n        id,\n        title,\n        shortLabel,\n        value,\n        when,\n    };\n}\nfunction createPositionPanelActionConfig(id, title, shortLabel, position) {\n    return createPanelActionConfig(id, title, shortLabel, position, ( PanelPositionContext.notEqualsTo(positionToString(position))));\n}\nfunction createAlignmentPanelActionConfig(id, title, shortLabel, alignment) {\n    return createPanelActionConfig(id, title, shortLabel, alignment, ( PanelAlignmentContext.notEqualsTo(alignment)));\n}\nconst PositionPanelActionConfigs = [\n    createPositionPanelActionConfig(PositionPanelActionId.LEFT, { value: ( localize('positionPanelLeft', 'Move Panel Left')), original: 'Move Panel Left' }, ( localize('positionPanelLeftShort', \"Left\")), 0 ),\n    createPositionPanelActionConfig(PositionPanelActionId.RIGHT, { value: ( localize('positionPanelRight', 'Move Panel Right')), original: 'Move Panel Right' }, ( localize('positionPanelRightShort', \"Right\")), 1 ),\n    createPositionPanelActionConfig(PositionPanelActionId.BOTTOM, { value: ( localize('positionPanelBottom', 'Move Panel To Bottom')), original: 'Move Panel To Bottom' }, ( localize('positionPanelBottomShort', \"Bottom\")), 2 ),\n];\nconst AlignPanelActionConfigs = [\n    createAlignmentPanelActionConfig(AlignPanelActionId.LEFT, { value: ( localize('alignPanelLeft', 'Set Panel Alignment to Left')), original: 'Set Panel Alignment to Left' }, ( localize('alignPanelLeftShort', \"Left\")), 'left'),\n    createAlignmentPanelActionConfig(AlignPanelActionId.RIGHT, { value: ( localize('alignPanelRight', 'Set Panel Alignment to Right')), original: 'Set Panel Alignment to Right' }, ( localize('alignPanelRightShort', \"Right\")), 'right'),\n    createAlignmentPanelActionConfig(AlignPanelActionId.CENTER, { value: ( localize('alignPanelCenter', 'Set Panel Alignment to Center')), original: 'Set Panel Alignment to Center' }, ( localize('alignPanelCenterShort', \"Center\")), 'center'),\n    createAlignmentPanelActionConfig(AlignPanelActionId.JUSTIFY, { value: ( localize('alignPanelJustify', 'Set Panel Alignment to Justify')), original: 'Set Panel Alignment to Justify' }, ( localize('alignPanelJustifyShort', \"Justify\")), 'justify'),\n];\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n    submenu: MenuId.PanelPositionMenu,\n    title: ( localize('positionPanel', \"Panel Position\")),\n    group: '3_workbench_layout_move',\n    order: 4\n});\nPositionPanelActionConfigs.forEach(positionPanelAction => {\n    const { id, title, shortLabel, value, when } = positionPanelAction;\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id,\n                title,\n                category: Categories.View,\n                f1: true\n            });\n        }\n        run(accessor) {\n            const layoutService = accessor.get(IWorkbenchLayoutService);\n            layoutService.setPanelPosition(value === undefined ? 2  : value);\n        }\n    });\n    MenuRegistry.appendMenuItem(MenuId.PanelPositionMenu, {\n        command: {\n            id,\n            title: shortLabel,\n            toggled: ( when.negate())\n        },\n        order: 5\n    });\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n    submenu: MenuId.PanelAlignmentMenu,\n    title: ( localize('alignPanel', \"Align Panel\")),\n    group: '3_workbench_layout_move',\n    order: 5\n});\nAlignPanelActionConfigs.forEach(alignPanelAction => {\n    const { id, title, shortLabel, value, when } = alignPanelAction;\n    registerAction2(class extends Action2 {\n        constructor() {\n            super({\n                id,\n                title: title,\n                category: Categories.View,\n                toggled: ( when.negate()),\n                f1: true\n            });\n        }\n        run(accessor) {\n            const layoutService = accessor.get(IWorkbenchLayoutService);\n            layoutService.setPanelAlignment(value === undefined ? 'center' : value);\n        }\n    });\n    MenuRegistry.appendMenuItem(MenuId.PanelAlignmentMenu, {\n        command: {\n            id,\n            title: shortLabel,\n            toggled: ( when.negate())\n        },\n        order: 5\n    });\n});\nlet PanelActivityAction = class PanelActivityAction extends ActivityAction {\n    constructor(activity, viewContainerLocation, paneCompositeService) {\n        super(activity);\n        this.viewContainerLocation = viewContainerLocation;\n        this.paneCompositeService = paneCompositeService;\n    }\n    async run() {\n        await this.paneCompositeService.openPaneComposite(this.activity.id, this.viewContainerLocation, true);\n        this.activate();\n    }\n    setActivity(activity) {\n        this.activity = activity;\n    }\n};\nPanelActivityAction = ( __decorate([\n    ( __param(2, IPaneCompositePartService))\n], PanelActivityAction));\nlet PlaceHolderPanelActivityAction = class PlaceHolderPanelActivityAction extends PanelActivityAction {\n    constructor(id, viewContainerLocation, paneCompositeService) {\n        super({ id, name: id }, viewContainerLocation, paneCompositeService);\n    }\n};\nPlaceHolderPanelActivityAction = ( __decorate([\n    ( __param(2, IPaneCompositePartService))\n], PlaceHolderPanelActivityAction));\nclass PlaceHolderToggleCompositePinnedAction extends ToggleCompositePinnedAction {\n    constructor(id, compositeBar) {\n        super({ id, name: id, classNames: undefined }, compositeBar);\n    }\n    setActivity(activity) {\n        this.label = activity.name;\n    }\n}\nclass SwitchPanelViewAction extends Action2 {\n    constructor(id, title) {\n        super({\n            id,\n            title,\n            category: Categories.View,\n            f1: true,\n        });\n    }\n    async run(accessor, offset) {\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        const pinnedPanels = paneCompositeService.getPinnedPaneCompositeIds(1 );\n        const activePanel = paneCompositeService.getActivePaneComposite(1 );\n        if (!activePanel) {\n            return;\n        }\n        let targetPanelId;\n        for (let i = 0; i < pinnedPanels.length; i++) {\n            if (pinnedPanels[i] === activePanel.getId()) {\n                targetPanelId = pinnedPanels[(i + pinnedPanels.length + offset) % pinnedPanels.length];\n                break;\n            }\n        }\n        if (typeof targetPanelId === 'string') {\n            await paneCompositeService.openPaneComposite(targetPanelId, 1 , true);\n        }\n    }\n}\nregisterAction2(class extends SwitchPanelViewAction {\n    constructor() {\n        super('workbench.action.previousPanelView', {\n            value: ( localize('previousPanelView', 'Previous Panel View')),\n            original: 'Previous Panel View'\n        });\n    }\n    run(accessor) {\n        return super.run(accessor, -1);\n    }\n});\nregisterAction2(class extends SwitchPanelViewAction {\n    constructor() {\n        super('workbench.action.nextPanelView', {\n            value: ( localize('nextPanelView', 'Next Panel View')),\n            original: 'Next Panel View'\n        });\n    }\n    run(accessor) {\n        return super.run(accessor, 1);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'workbench.action.closeAuxiliaryBar',\n            title: { value: ( localize('closeSecondarySideBar', \"Close Secondary Side Bar\")), original: 'Close Secondary Side Bar' },\n            category: Categories.View,\n            icon: closeIcon,\n            menu: [{\n                    id: MenuId.CommandPalette,\n                    when: AuxiliaryBarVisibleContext,\n                }, {\n                    id: MenuId.AuxiliaryBarTitle,\n                    group: 'navigation',\n                    order: 2\n                }]\n        });\n    }\n    run(accessor) {\n        accessor.get(IWorkbenchLayoutService).setPartHidden(true, \"workbench.parts.auxiliarybar\" );\n    }\n});\nMenuRegistry.appendMenuItems([\n    {\n        id: MenuId.LayoutControlMenu,\n        item: {\n            group: '0_workbench_toggles',\n            command: {\n                id: TogglePanelAction.ID,\n                title: ( localize('togglePanel', \"Toggle Panel\")),\n                icon: panelOffIcon,\n                toggled: { condition: PanelVisibleContext, icon: panelIcon }\n            },\n            when: ( ContextKeyExpr.or(( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles')), ( ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')))),\n            order: 1\n        }\n    }, {\n        id: MenuId.ViewTitleContext,\n        item: {\n            group: '3_workbench_layout_move',\n            command: {\n                id: TogglePanelAction.ID,\n                title: { value: ( localize('hidePanel', \"Hide Panel\")), original: 'Hide Panel' },\n            },\n            when: ( ContextKeyExpr.and(PanelVisibleContext, ( ContextKeyExpr.equals(\n                'viewLocation',\n                ViewContainerLocationToString(1 )\n            )))),\n            order: 2\n        }\n    }\n]);\nclass MoveViewsBetweenPanelsAction extends Action2 {\n    constructor(source, destination, desc) {\n        super(desc);\n        this.source = source;\n        this.destination = destination;\n    }\n    run(accessor, ...args) {\n        const viewDescriptorService = accessor.get(IViewDescriptorService);\n        const layoutService = accessor.get(IWorkbenchLayoutService);\n        const viewsService = accessor.get(IViewsService);\n        const srcContainers = viewDescriptorService.getViewContainersByLocation(this.source);\n        const destContainers = viewDescriptorService.getViewContainersByLocation(this.destination);\n        if (srcContainers.length) {\n            const activeViewContainer = viewsService.getVisibleViewContainer(this.source);\n            srcContainers.forEach(viewContainer => viewDescriptorService.moveViewContainerToLocation(viewContainer, this.destination));\n            layoutService.setPartHidden(false, this.destination === 1  ? \"workbench.parts.panel\"  : \"workbench.parts.auxiliarybar\" );\n            if (activeViewContainer && destContainers.length === 0) {\n                viewsService.openViewContainer(activeViewContainer.id, true);\n            }\n        }\n    }\n}\nclass MovePanelToSidePanelAction extends MoveViewsBetweenPanelsAction {\n    static { this.ID = 'workbench.action.movePanelToSidePanel'; }\n    constructor() {\n        super(1 , 2 , {\n            id: MovePanelToSidePanelAction.ID,\n            title: {\n                value: ( localize('movePanelToSecondarySideBar', \"Move Panel Views To Secondary Side Bar\")),\n                original: 'Move Panel Views To Secondary Side Bar'\n            },\n            category: Categories.View,\n            f1: false\n        });\n    }\n}\nclass MovePanelToSecondarySideBarAction extends MoveViewsBetweenPanelsAction {\n    static { this.ID = 'workbench.action.movePanelToSecondarySideBar'; }\n    constructor() {\n        super(1 , 2 , {\n            id: MovePanelToSecondarySideBarAction.ID,\n            title: {\n                value: ( localize('movePanelToSecondarySideBar', \"Move Panel Views To Secondary Side Bar\")),\n                original: 'Move Panel Views To Secondary Side Bar'\n            },\n            category: Categories.View,\n            f1: true\n        });\n    }\n}\nregisterAction2(MovePanelToSidePanelAction);\nregisterAction2(MovePanelToSecondarySideBarAction);\nclass MoveSidePanelToPanelAction extends MoveViewsBetweenPanelsAction {\n    static { this.ID = 'workbench.action.moveSidePanelToPanel'; }\n    constructor() {\n        super(2 , 1 , {\n            id: MoveSidePanelToPanelAction.ID,\n            title: {\n                value: ( localize('moveSidePanelToPanel', \"Move Secondary Side Bar Views To Panel\")),\n                original: 'Move Secondary Side Bar Views To Panel'\n            },\n            category: Categories.View,\n            f1: false\n        });\n    }\n}\nclass MoveSecondarySideBarToPanelAction extends MoveViewsBetweenPanelsAction {\n    static { this.ID = 'workbench.action.moveSecondarySideBarToPanel'; }\n    constructor() {\n        super(2 , 1 , {\n            id: MoveSecondarySideBarToPanelAction.ID,\n            title: {\n                value: ( localize('moveSidePanelToPanel', \"Move Secondary Side Bar Views To Panel\")),\n                original: 'Move Secondary Side Bar Views To Panel'\n            },\n            category: Categories.View,\n            f1: true\n        });\n    }\n}\nregisterAction2(MoveSidePanelToPanelAction);\nregisterAction2(MoveSecondarySideBarToPanelAction);\nexport { MovePanelToSecondarySideBarAction, MoveSecondarySideBarToPanelAction, PanelActivityAction, PlaceHolderPanelActivityAction, PlaceHolderToggleCompositePinnedAction, TogglePanelAction };\n","import { __decorate, __param } from '../../../../../node_modules/tslib/tslib.es6.js';\nimport { EditorModel } from './editorModel.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { Mimes } from 'monaco-editor/esm/vs/base/common/mime.js';\nlet BinaryEditorModel = class BinaryEditorModel extends EditorModel {\n    constructor(resource, name, fileService) {\n        super();\n        this.resource = resource;\n        this.name = name;\n        this.fileService = fileService;\n        this.mime = Mimes.binary;\n    }\n    getName() {\n        return this.name;\n    }\n    getSize() {\n        return this.size;\n    }\n    getMime() {\n        return this.mime;\n    }\n    getETag() {\n        return this.etag;\n    }\n    async resolve() {\n        if (this.fileService.hasProvider(this.resource)) {\n            const stat = await this.fileService.stat(this.resource);\n            this.etag = stat.etag;\n            if (typeof stat.size === 'number') {\n                this.size = stat.size;\n            }\n        }\n        return super.resolve();\n    }\n};\nBinaryEditorModel = ( __decorate([\n    ( __param(2, IFileService))\n], BinaryEditorModel));\nexport { BinaryEditorModel };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { isCodeEditor, isDiffEditor, isCompositeEditor, getCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { AbstractCodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { SIDE_GROUP, ACTIVE_GROUP, IEditorService } from '../common/editorService.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { applyTextEditorOptions } from '../../../common/editor/editorOptions.js';\nlet CodeEditorService = class CodeEditorService extends AbstractCodeEditorService {\n    constructor(editorService, themeService, configurationService) {\n        super(themeService);\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n        this.registerCodeEditorOpenHandler(this.doOpenCodeEditor.bind(this));\n        this.registerCodeEditorOpenHandler(this.doOpenCodeEditorFromDiff.bind(this));\n    }\n    getActiveCodeEditor() {\n        const activeTextEditorControl = this.editorService.activeTextEditorControl;\n        if (isCodeEditor(activeTextEditorControl)) {\n            return activeTextEditorControl;\n        }\n        if (isDiffEditor(activeTextEditorControl)) {\n            return activeTextEditorControl.getModifiedEditor();\n        }\n        const activeControl = this.editorService.activeEditorPane?.getControl();\n        if (isCompositeEditor(activeControl) && isCodeEditor(activeControl.activeCodeEditor)) {\n            return activeControl.activeCodeEditor;\n        }\n        return null;\n    }\n    async doOpenCodeEditorFromDiff(input, source, sideBySide) {\n        const activeTextEditorControl = this.editorService.activeTextEditorControl;\n        if (!sideBySide &&\n            isDiffEditor(activeTextEditorControl) &&\n            input.options &&\n            input.resource &&\n            source === activeTextEditorControl.getModifiedEditor() &&\n            activeTextEditorControl.getModel() &&\n            isEqual(input.resource, activeTextEditorControl.getModel()?.modified.uri)\n        ) {\n            const targetEditor = activeTextEditorControl.getModifiedEditor();\n            applyTextEditorOptions(input.options, targetEditor, 0 );\n            return targetEditor;\n        }\n        return null;\n    }\n    async doOpenCodeEditor(input, source, sideBySide) {\n        const enablePreviewFromCodeNavigation = this.configurationService.getValue().workbench?.editor?.enablePreviewFromCodeNavigation;\n        if (!enablePreviewFromCodeNavigation &&\n            source &&\n            !input.options?.pinned &&\n            !sideBySide &&\n            !isEqual(source.getModel()?.uri, input.resource)\n        ) {\n            for (const visiblePane of this.editorService.visibleEditorPanes) {\n                if (getCodeEditor(visiblePane.getControl()) === source) {\n                    visiblePane.group.pinEditor();\n                    break;\n                }\n            }\n        }\n        const control = await this.editorService.openEditor(input, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n        if (control) {\n            const widget = control.getControl();\n            if (isCodeEditor(widget)) {\n                return widget;\n            }\n            if (isCompositeEditor(widget) && isCodeEditor(widget.activeCodeEditor)) {\n                return widget.activeCodeEditor;\n            }\n        }\n        return null;\n    }\n};\nCodeEditorService = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, IThemeService)),\n    ( __param(2, IConfigurationService))\n], CodeEditorService));\nexport { CodeEditorService };\n"],"names":["SimpleEditorPane","constructor","editor","this","onDidChangeControl","None","onDidChangeSizeConstraints","onDidFocus","onDidBlur","input","undefined","options","group","scopedContextKeyService","getViewState","isVisible","hasFocus","getId","getTitle","focus","minimumWidth","width","maximumWidth","minimumHeight","height","maximumHeight","getControl","wrapOpenEditor","textModelService","defaultBehavior","fallbackBahavior","async","optionsOrPreferredGroup","preferredGroup","resource","canHandleResource","modelEditor","get","listCodeEditors","find","getModel","uri","toString","defaultBehaviorResult","modelRef","createModelReference","dispose","preserveFocus","getContainerDomNode","scrollIntoView","SimpleIconLabel","_container","text","title","menubarIcon","layoutMenubar","activityBarLeftIcon","layoutActivitybarLeft","activityBarRightIcon","layoutActivitybarRight","panelLeftIcon","layoutSidebarLeft","layoutSidebarLeftOff","panelRightIcon","layoutSidebarRight","layoutSidebarRightOff","panelIcon","layoutPanel","statusBarIcon","layoutStatusbar","panelAlignmentLeftIcon","layoutPanelLeft","panelAlignmentRightIcon","layoutPanelRight","panelAlignmentCenterIcon","layoutPanelCenter","panelAlignmentJustifyIcon","layoutPanelJustify","fullscreenIcon","screenFull","centerLayoutIcon","layoutCentered","zenModeIcon","target","ToggleActivityBarVisibilityAction","ID","activityBarVisibleKey","super","id","value","mnemonicTitle","key","comment","original","category","View","f1","toggled","equals","menu","MenubarAppearanceMenu","order","run","accessor","layoutService","configurationService","newVisibilityValue","updateValue","sidebarPositionConfigurationKey","MoveSidebarPositionAction","position","getSideBarPosition","MoveSidebarRightAction","MoveSidebarLeftAction","ToggleSidebarPositionAction","LABEL","getLabel","newPositionValue","layout","ToggleSidebarVisibilityAction","condition","keybinding","weight","primary","LayoutControlMenuSubmenu","setPartHidden","ToggleStatusbarVisibilityAction","statusbarVisibleKey","ToggleTabsVisibilityAction","getValue","registerCommandAndKeybindingRule","handler","contextKeyService","toggleZenMode","when","BaseResizeViewAction","RESIZE_INCREMENT","resizePart","widthChange","heightChange","partToResize","CreateToggleLayoutItem","active","label","visualIcon","activeIcon","eye","inactiveIcon","eyeClosed","activeAriaLabel","inactiveAriaLabel","useButtons","CreateOptionLayoutItem","check","MenuBarToggledContext","and","toNegated","notEquals","ToggleVisibilityActions","push","whenA","iconA","iconB","MoveSideBarActions","AlignPanelActions","isEqualTo","MiscLayoutOptions","LayoutContextKeySet","Set","keys","add","RangeHighlightDecorations","editorService","_onHighlightRemoved","_register","onHighlightRemoved","event","rangeHighlightDecorationId","editorDisposables","removeHighlightRange","decorationId","changeDecorations","removeDecoration","fire","highlightRange","range","getEditor","doHighlightRange","activeCodeEditor","selectionRange","changeAccessor","addDecoration","createRangeHighlightDecoration","isWholeLine","setEditor","resourceRange","activeEditor","activeTextEditorControl","clear","onDidChangeCursorPosition","e","reason","onDidChangeModel","onDidDispose","_WHOLE_LINE_RANGE_HIGHLIGHT","register","description","stickiness","className","_RANGE_HIGHLIGHT","FloatingClickWidget","keyBindingAction","keybindingService","_onClick","onClick","_domNode","$","style","padding","borderRadius","cursor","zIndex","lookupKeybinding","getDomNode","getPosition","preference","render","backgroundColor","color","border","textContent","onclick","addOverlayWidget","removeOverlayWidget","FloatingClickMenu","instantiationService","menuService","createMenu","EditorContent","menuDisposables","renderMenuAsFloatingClickBtn","hasModel","getOption","actions","renderShortTitle","shouldForwardArgs","length","first","widget","createInstance","_store","onDidChange","auxiliaryBarRightIcon","auxiliaryBarRightOffIcon","auxiliaryBarLeftIcon","auxiliaryBarLeftOffIcon","ToggleAuxiliaryBarAction","FocusAuxiliaryBarAction","paneCompositeService","composite","getActivePaneComposite","appendMenuItems","LayoutControlMenu","item","command","icon","or","ViewTitleContext","ActivityAction","_activity","name","classNames","join","_onDidChangeActivity","onDidChangeActivity","_onDidChangeBadge","onDidChangeBadge","activity","_label","activate","checked","_setChecked","deactivate","getBadge","badge","getClass","clazz","setBadge","ActivityActionViewItem","hoverLeaveTime","action","badgesEnabled","themeService","hoverService","badgeDisposable","hoverDisposables","showHoverScheduler","showHover","onDidColorThemeChange","onThemeChange","updateActivity","filter","onDidUpdateKeybindings","keybindingLabel","computeKeybindingLabel","updateTitle","updateBadge","cancel","_action","updateStyles","theme","getColorTheme","colors","foreground","activeForegroundColor","inactiveForegroundColor","iconUrl","borderBottomColor","activeBorderBottomColor","container","setProperty","dragAndDropBorder","badgeContent","badgeForeground","badgeBackground","contrastBorderColor","getColor","borderStyle","borderWidth","borderColor","classList","hasPopup","setAttribute","MOUSE_DOWN","MOUSE_UP","mouseUpTimeout","clearTimeout","setTimeout","remove","updateHover","updateLabel","shouldRenderBadges","number","noOfThousands","floor","Math","clazzList","asClassNameArray","split","computeTitle","forEach","element","removeAttribute","getDescription","keybindingId","MOUSE_OVER","isScheduled","Date","now","schedule","MOUSE_LEAVE","hideHover","skipFadeInAnimation","lastHover","isDisposed","hoverPosition","hoverOptions","content","showPointer","compact","hideOnKeyDown","CompositeOverflowActivityAction","showMenu","more","CompositeOverflowActivityActionViewItem","getOverflowingComposites","getActiveCompositeId","getCompositeOpenAction","contextMenuService","getActions","showContextMenu","getAnchor","getCheckedActionsRepresentation","onHide","map","suffix","ManageExtensionAction","commandService","executeCommand","CompositeActionViewItem","compositeActivityAction","toggleCompositePinnedAction","toggleCompositeBadgeAction","compositeContextMenuActionsProvider","contextMenuActionsProvider","dndHandler","compositeBar","areBadgesEnabled","bind","manageExtensionAction","insertDropBefore","updateChecked","updateEnabled","CONTEXT_MENU","stop","INSTANCE","registerDraggable","type","onDragOver","isValidMove","dragAndDropData","getData","eventData","dataTransfer","updateFromDragging","onDragLeave","onDragEnd","onDrop","drop","onDragStart","effectAllowed","blur","showFeedback","rect","getBoundingClientRect","posX","clientX","posY","clientY","bottom","top","right","left","forceTop","forceBottom","preferTop","forceLeft","forceRight","preferLeft","classes","lastClasses","contains","toggle","verticallyBefore","horizontallyBefore","compositeContextMenuActions","extensionId","isPinned","isBadgeEnabled","otherActions","elementPosition","anchor","x","y","getActionsContext","enabled","ToggleCompositePinnedAction","context","unpin","pin","ToggleCompositeBadgeAction","toggleBadgeEnablement","BaseBinaryResourceEditor","callbacks","telemetryService","storageService","_onDidChangeMetadata","onDidChangeMetadata","_onDidOpenInPlace","onDidOpenInPlace","getName","getContents","model","resolve","Error","size","getSize","handleMetadataChanged","formatSize","openInternal","meta","metadata","getMetadata","BinaryResourceDiffEditor","textResourceConfigurationService","editorGroupService","getPrimaryEditorPane","secondary","getSecondaryEditorPane","TrimTrailingWhitespaceCommand","selection","cursors","_selection","_cursors","_selectionId","getEditOperations","builder","ops","sort","a","b","lineNumber","column","i","splice","r","rLen","cursorIndex","cursorLen","lineCount","getLineCount","lineContent","getLineContent","maxLineColumn","minEditColumn","lastNonWhitespaceIndex","strings","fromColumn","max","delete","trimTrailingWhitespace","len","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection","CopyLinesCommand","isCopyingDown","noop","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","s","startLineNumber","endLineNumber","endColumn","setEndPosition","getLineMaxColumn","sourceLines","sourceText","getDirection","result","startColumn","createWithDirection","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","MoveLinesCommand","isMovingDown","autoIndent","_languageConfigurationService","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","indentSize","getOptions","indentConverter","buildIndentConverter","virtualModel","tokenization","getLineTokens","getLanguageId","getLanguageIdAtPosition","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","newIndentation","trimLeft","indentOfMovingLine","oldIndentation","newSpaceCnt","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","unshiftIndent","parseEnterResult","line","enter","enterPrefix","indentAction","Indent","appendText","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","maxColumn","validPrecedingLine","oneLineAbove","previousLineText","replace","isCheapToTokenize","languageAtSelectionStart","getLanguageConfiguration","indentRulesSupport","offset","originalIndent","newIndent","paramIndex","decorator","decorators","desc","d","c","arguments","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__decorate","SortLinesCommand","getCollator","_COLLATOR","Intl","Collator","descending","selectionId","data","getSortData","after","sortLines","canRun","before","linesToSort","sorted","slice","compare","reverse","AbstractCopyLinesAction","down","opts","_accessor","selections","getSelections","index","ignore","compareRangesUsingStarts","prev","curr","commands","pushUndoStop","executeCommands","DuplicateSelectionAction","nls","alias","precondition","writable","menuOpts","menuId","MenubarSelectionMenu","args","isEmpty","insertSelection","getValueInRange","AbstractMoveLinesAction","languageConfigurationService","AbstractSortLinesAction","DeleteDuplicateLinesAction","edits","endCursorState","linesDeleted","uniqueLines","lines","has","selectionToReplace","adjustedSelectionStart","finalSelection","executeEdits","TrimTrailingWhitespaceAction","kbOpts","kbExpr","editorTextFocus","positionLineNumber","positionColumn","getSelection","DeleteLinesAction","textInputFocus","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","viewModel","_getViewModel","indent","cursorConfig","OutdentLinesAction","runEditorCommand","InsertLineBeforeAction","lineInsertBefore","InsertLineAfterAction","lineInsertAfter","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","intersectRanges","plusRange","_getEndCursorState","JoinLinesAction","mac","reducedSelections","lastSelection","reduce","previousValue","currentValue","equalsSelection","endPrimaryCursor","lineOffset","columnDeltaOffset","selectionEndPositionOffset","getStartPosition","trimmedLinesContent","lineText","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","substr","deleteSelection","resultSelection","unshift","TransposeAction","chars","AbstractCaseAction","wordSeparators","textEdits","word","getConfiguredWordAtPosition","wordRange","_modifyText","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","RegExp","err","isSupported","TitleCaseAction","titleBoundary","toLocaleLowerCase","toLocaleUpperCase","SnakeCaseAction","caseBoundary","singleLetters","CamelCaseAction","wordBoundary","words","shift","substring","KebabCaseAction","underscoreBoundary","every","regexp","_","linux","deletedLines","endCursor","newStartLine","deleteFromLine","deleteFromColumn","sel","getReindentEditOperations","inheritedIndent","indentationRules","min","unIndentedLinePattern","test","indentEdits","globalIndent","currentLineText","adjustedLineContent","decreaseIndentPattern","replaceMove","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","quickInputService","modelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","n","autoFocusIndex","pick","placeHolder","activeItem","then","pickedVal","parseInt","IndentUsingTabs","IndentUsingSpaces","ChangeTabDisplaySize","DetectIndentation","detectIndentation","ReindentLinesAction","ReindentSelectedLinesAction","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","edit","lift","selectionIsSet","Array","isArray","AutoIndentOnPaste","callOnDispose","callOnModel","onDidChangeConfiguration","update","onDidChangeModelLanguage","onDidPaste","trigger","shouldIgnoreLine","firstLineText","indentMetadata","firstLineNumber","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","cmd","forceTokenization","nonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","lastIndentationColumn","originalIndentationRange","originalIndentation","editorTabFocusContextKey","TabFocusMode","_onDidChange","_editorContext","bindTo","_terminalContext","terminal","editorConfig","terminalConfig","set","setTabFocusMode","viewKey","onDidChangeContext","affectsSome","terminalFocus","getContextKeyValue","_previousViewContext","reset","affectsConfiguration","onDidChangeTabFocus","focusedView","getTabFocusMode","SideBySideEditorEncodingSupport","getEncoding","setEncoding","encoding","mode","settled","SideBySideEditorLanguageSupport","setLanguageId","languageId","source","toEditorWithEncodingSupport","primaryEncodingSupport","secondaryEncodingSupport","encodingSupport","toEditorWithLanguageSupport","primaryLanguageSupport","secondaryLanguageSupport","languageSupport","StateChange","selectionStatus","languageStatus","EOL","tabFocusMode","columnSelectionMode","combine","other","hasChanges","State","_selectionStatus","_languageId","_encoding","_EOL","_indentation","_tabFocusMode","_columnSelectionMode","_metadata","change","nlsSingleSelectionRange","nlsSingleSelection","nlsMultiSelectionRange","nlsMultiSelection","nlsEOLLF","nlsEOLCRLF","EditorStatus","languageService","textFileService","statusbarService","tabFocusModeElement","columnSelectionModeElement","indentationElement","selectionElement","encodingElement","eolElement","languageElement","metadataElement","currentProblemStatus","ShowCurrentMarkerInStatusbarContribution","state","activeEditorListeners","delayedRender","toRender","registerCommands","registerListeners","onDidActiveEditorChange","updateStatusBar","untitled","onDidChangeEncoding","onResourceEncodingChange","files","runAndSubscribe","onTabFocusModeChange","registerCommand","showIndentationPicker","isReadonly","getAction","detail","isDefaultVariant","matchOnDetail","updateTabFocusModeElement","visible","addEntry","ariaLabel","tooltip","updateColumnSelectionModeElement","updateSelectionElement","props","updateElement","updateIndentationElement","updateEncodingElement","updateEOLElement","updateLanguageIdElement","updateMetadataElement","alignment","priority","updateState","changed","doRenderNow","getSelectionLabel","info","charactersSelected","activeInput","activeEditorPane","onColumnSelectionModeChange","onSelectionChange","onLanguageChange","onEOLChange","onEncodingChange","onIndentationChange","onMetadataChange","hasChanged","defer","accumulate","onDidChangeModelContent","inner","changes","some","areIntersecting","onDidChangeModelOptions","binaryEditors","editorWidget","editorInput","textModel","getLanguageName","create","getCharacterCountInRange","editorPosition","selectionClone","selectionStartLineNumber","getStatusbarColumn","codeEditorModel","getEOL","isActiveEditor","rawEncoding","encodingInfo","labelShort","activeResource","getCanonicalUri","supportSideBySide","PRIMARY","control","markerService","markers","currentMarker","statusBarEntryAccessor","onMarkerChanged","changedResources","updateStatus","updateMarkers","previousMarker","getMarker","hasToUpdateStatus","message","getType","makeKey","marker","severity","Warning","Info","containsPosition","read","severities","compareMarker","res","ShowLanguageExtensionsAction","fileExtension","galleryService","isEnabled","ChangeLanguageAction","not","languageDetectionService","preferencesService","getOriginalUri","currentLanguageName","currentLanguageId","hasLanguageSupport","scheme","hasAssociatedFilePath","getSortedRegisteredLanguageNames","languageName","extensions","getExtensions","iconClasses","getIconClasses","configureLanguageAssociations","configureLanguageSettings","galleryAction","ext","autoDetectLanguage","matchOnDescription","configureFileAssociation","openUserSettings","jsonEditor","revealSetting","languageSelection","detectedLanguage","guessLanguageIdByFilepathOrFirstLine","detectLanguage","createById","getLanguageIdByLanguageName","detectedLanguageId","chosenLanguageId","modelPreference","publicLog2","nextLanguageId","to","from","extension","base","currentAssociation","file","language","fileAssociationsConfig","inspect","associationKey","workspaceValue","currentAssociations","userValue","ChangeEOLAction","EOLOptions","eol","selectedIndex","pushStackElement","pushEOL","ChangeEncodingAction","fileService","saveWithEncodingPick","reopenWithEncodingPick","saveWithEncodingAlias","reopenWithEncodingAlias","hasProvider","guessedEncoding","readStream","autoGuessEncoding","isReopenWithEncoding","configuredEncoding","directMatchIndex","aliasMatchIndex","k1","k2","k","encodeOnly","labelLong","items","activeEncodingSupport","EditorAutoSave","filesConfigurationService","hostService","workingCopyService","logService","pendingAutoSavesAfterDelay","Map","lastActiveEditor","lastActiveGroupId","lastActiveEditorControlDisposable","onAutoSaveConfigurationChange","getAutoSaveConfiguration","dirtyWorkingCopy","dirtyWorkingCopies","onDidRegister","onDidChangeFocus","focused","onWindowFocusChange","config","workingCopy","onDidUnregister","onDidChangeDirty","onDidChangeContent","maybeTriggerAutoSave","groupId","activeGroup","editorIdentifier","hasCapability","getAutoSaveMode","trace","save","saveAllDirty","fromEvent","autoSaveAfterDelay","autoSaveDelay","capabilities","isDirty","scheduleAutoSave","discardAutoSave","typeId","handle","UntitledTextEditorWorkingCopyEditorHandler","workingCopyEditorService","environmentService","pathService","textEditorService","untitledTextEditorService","registerHandler","handles","isOpen","createEditor","editorInputResource","isUntitledWithAssociatedResource","remoteAuthority","defaultUriScheme","createTextEditor","forceUntitled","DynamicEditorConfigurations","AUTO_LOCK_DEFAULT_ENABLED","AUTO_LOCK_EXTRA_EDITORS","builtin","AUTO_LOCK_REMOVE_EDITORS","editorResolverService","extensionService","configurationRegistry","as","Configuration","whenInstalledExtensionsRegistered","updateDynamicEditorConfigurations","debounce","onDidChangeEditorRegistrations","lockableEditors","getEditors","binaryEditorCandidates","exclusive","autoLockGroupConfiguration","default","defaultAutoLockGroupConfiguration","oldAutoLockConfigurationNode","autoLockConfigurationNode","properties","additionalProperties","oldDefaultBinaryEditorConfigurationNode","defaultBinaryEditorConfigurationNode","enum","oldEditorAssociationsConfigurationNode","editorAssociationsConfigurationNode","markdownDescription","patternProperties","oldEditorLargeFileConfirmationConfigurationNode","editorLargeFileConfirmationConfigurationNode","MB","minimum","scope","updateConfigurations","AccessibilityStatus","notificationService","_accessibilityService","screenReaderNotification","promptedScreenReader","screenReaderModeElement","onDidChangeScreenReaderOptimized","onScreenReaderModeChange","showScreenReaderNotification","updateScreenReaderModeElement","isScreenReaderOptimized","prompt","sticky","URGENT","once","onDidClose","close","ToggleCollapseUnchangedRegions","newValue","appendMenuItem","EditorTitle","modify","negate","ToggleShowMovedCodeBlocks","diffEditorCategory","SwitchSide","arrowSwap","diffEditor","switchSide","EditorPane","registerEditorPane","Workbench","registerWorkbenchContribution","quickAccessRegistry","Quickaccess","editorPickerContextKey","editorPickerContext","registerQuickAccessProvider","ctor","prefix","PREFIX","contextKey","placeholder","helpEntries","commandId","quickAccessNavigateNextInEditorPickerId","quickAccessNavigatePreviousInEditorPickerId","appendEditorToolItem","alternative","alt","EmptyEditorGroup","lock","EmptyEditorGroupContext","EditorTabsBarContext","EditorTitleContext","notEqualsTo","SPLIT_ORDER","CLOSE_ORDER","splitHorizontal","splitVertical","editorLayout","closeAll","closeDirty","pinned","pinnedDirty","previousChangeIcon","arrowUp","nextChangeIcon","arrowDown","toggleWhitespace","whitespace","CommandPalette","MenubarRecentMenu","MenubarViewMenu","submenu","MenubarLayoutMenu","MenubarGoMenu","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","EditorPlaceholder","PLACEHOLDER_LABEL_MAX_LENGTH","inputDisposable","parent","document","createElement","outline","tabIndex","scrollbar","horizontal","vertical","appendChild","setInput","token","isCancellationRequested","renderInput","disposables","truncatedLabel","iconContainer","labelContainer","labelWidget","actionsContainer","buttons","button","addButton","onDidClick","scanDomNode","clearInput","dimension","WorkspaceTrustRequiredPlaceholderEditor","DESCRIPTOR","workspaceService","getWorkspace","ErrorPlaceholderEditor","dialogService","error","isFileNotFound","fileOperationResult","forceMessage","forceSeverity","Promise","catch","openEditor","USER","onDidFilesChange","chevronUp","chevronDown","closeIcon","panelOffIcon","layoutPanelOff","TogglePanelAction","panel","createPanelActionConfig","shortLabel","createPositionPanelActionConfig","createAlignmentPanelActionConfig","PositionPanelActionConfigs","AlignPanelActionConfigs","PanelPositionMenu","positionPanelAction","setPanelPosition","PanelAlignmentMenu","alignPanelAction","setPanelAlignment","PanelActivityAction","viewContainerLocation","openPaneComposite","setActivity","PlaceHolderPanelActivityAction","PlaceHolderToggleCompositePinnedAction","SwitchPanelViewAction","pinnedPanels","getPinnedPaneCompositeIds","activePanel","targetPanelId","AuxiliaryBarTitle","MoveViewsBetweenPanelsAction","destination","viewDescriptorService","viewsService","srcContainers","getViewContainersByLocation","destContainers","activeViewContainer","getVisibleViewContainer","viewContainer","moveViewContainerToLocation","openViewContainer","MovePanelToSidePanelAction","MovePanelToSecondarySideBarAction","MoveSidePanelToPanelAction","MoveSecondarySideBarToPanelAction","BinaryEditorModel","mime","binary","getMime","getETag","etag","stat","CodeEditorService","registerCodeEditorOpenHandler","doOpenCodeEditor","doOpenCodeEditorFromDiff","getActiveCodeEditor","getModifiedEditor","activeControl","sideBySide","modified","targetEditor","enablePreviewFromCodeNavigation","workbench","visiblePane","visibleEditorPanes","pinEditor"],"sourceRoot":""}