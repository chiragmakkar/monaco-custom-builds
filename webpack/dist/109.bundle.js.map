{"version":3,"file":"109.bundle.js","mappings":"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","sources":["webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/breakpoints.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugger.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/configurationResolver/common/configurationResolverUtils.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/configurationResolver/common/configurationResolverSchema.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugSchemas.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugAdapterManager.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugConfigurationManager.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugMemory.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/rawDebugSession.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/replModel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugSession.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugTaskRunner.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugCompoundRoot.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugStorage.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugTelemetry.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugViewModel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/editor/common/services/languageFeaturesService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/configurationResolver/browser/baseConfigurationResolverService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/configurationResolver/browser/configurationResolverService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/debug.contribution.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/debugHover.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/breakpointWidget.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/breakpointWidget.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/breakpointEditorContribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/callStackEditorContribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/baseDebugView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/debugToolBar.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugActionViewItems.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugColors.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugToolBar.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/callStackView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugConsoleQuickAccess.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugEditorActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/linkDetector.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/variablesView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugHover.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/exceptionWidget.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/exceptionWidget.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugEditorContribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugProgress.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugQuickAccess.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/debugViewlet.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/welcomeView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugViewlet.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/disassemblyView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugContentProvider.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/loadedScriptsView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/media/repl.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/replFilter.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debugANSIHandling.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/replViewer.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/repl.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/statusbarColorProvider.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/watchExpressionsView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/common/debugLifecycle.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/debug/browser/debug.contribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/service-override/debug.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/platform/actions/browser/dropdownWithPrimaryActionViewItem.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/markers/common/markers.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/configuration/common/configuration.js"],"sourcesContent":["import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nlet Breakpoints = class Breakpoints {\n    constructor(breakpointContribution, contextKeyService) {\n        this.breakpointContribution = breakpointContribution;\n        this.contextKeyService = contextKeyService;\n        this.breakpointsWhen = typeof breakpointContribution.when === 'string' ? ContextKeyExpr.deserialize(breakpointContribution.when) : undefined;\n    }\n    get language() {\n        return this.breakpointContribution.language;\n    }\n    get enabled() {\n        return !this.breakpointsWhen || this.contextKeyService.contextMatchesRules(this.breakpointsWhen);\n    }\n};\nBreakpoints = ( __decorate([\n    ( __param(1, IContextKeyService))\n], Breakpoints));\nexport { Breakpoints };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { isObject } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { debuggerDisabledMessage, IDebugService } from './debug.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IConfigurationResolverService } from '../../../services/configurationResolver/common/configurationResolver.js';\nimport { applyDeprecatedVariableMessage } from '../../../services/configurationResolver/common/configurationResolverUtils.js';\nimport { ITextResourcePropertiesService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { isDebuggerMainContribution } from './debugUtils.js';\nimport { cleanRemoteAuthority } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { filter } from 'monaco-editor/esm/vs/base/common/objects.js';\nlet Debugger = class Debugger {\n    constructor(adapterManager, dbgContribution, extensionDescription, configurationService, resourcePropertiesService, configurationResolverService, environmentService, debugService, contextKeyService) {\n        this.adapterManager = adapterManager;\n        this.configurationService = configurationService;\n        this.resourcePropertiesService = resourcePropertiesService;\n        this.configurationResolverService = configurationResolverService;\n        this.environmentService = environmentService;\n        this.debugService = debugService;\n        this.contextKeyService = contextKeyService;\n        this.mergedExtensionDescriptions = [];\n        this.debuggerContribution = { type: dbgContribution.type };\n        this.merge(dbgContribution, extensionDescription);\n        this.debuggerWhen = typeof this.debuggerContribution.when === 'string' ? ContextKeyExpr.deserialize(this.debuggerContribution.when) : undefined;\n    }\n    merge(otherDebuggerContribution, extensionDescription) {\n        function mixin(destination, source, overwrite, level = 0) {\n            if (!isObject(destination)) {\n                return source;\n            }\n            if (isObject(source)) {\n                ( Object.keys(source)).forEach(key => {\n                    if (key !== '__proto__') {\n                        if (isObject(destination[key]) && isObject(source[key])) {\n                            mixin(destination[key], source[key], overwrite, level + 1);\n                        }\n                        else {\n                            if (key in destination) {\n                                if (overwrite) {\n                                    if (level === 0 && key === 'type') ;\n                                    else {\n                                        destination[key] = source[key];\n                                    }\n                                }\n                            }\n                            else {\n                                destination[key] = source[key];\n                            }\n                        }\n                    }\n                });\n            }\n            return destination;\n        }\n        if (this.mergedExtensionDescriptions.indexOf(extensionDescription) < 0) {\n            this.mergedExtensionDescriptions.push(extensionDescription);\n            mixin(this.debuggerContribution, otherDebuggerContribution, extensionDescription.isBuiltin);\n            if (isDebuggerMainContribution(otherDebuggerContribution)) {\n                this.mainExtensionDescription = extensionDescription;\n            }\n        }\n    }\n    async startDebugging(configuration, parentSessionId) {\n        const parentSession = this.debugService.getModel().getSession(parentSessionId);\n        return await this.debugService.startDebugging(undefined, configuration, { parentSession }, undefined);\n    }\n    async createDebugAdapter(session) {\n        await this.adapterManager.activateDebuggers('onDebugAdapterProtocolTracker', this.type);\n        const da = this.adapterManager.createDebugAdapter(session);\n        if (da) {\n            return Promise.resolve(da);\n        }\n        throw new Error(nls.localize('cannot.find.da', \"Cannot find debug adapter for type '{0}'.\", this.type));\n    }\n    async substituteVariables(folder, config) {\n        const substitutedConfig = await this.adapterManager.substituteVariables(this.type, folder, config);\n        return await this.configurationResolverService.resolveWithInteractionReplace(folder, substitutedConfig, 'launch', this.variables, substitutedConfig.__configurationTarget);\n    }\n    runInTerminal(args, sessionId) {\n        return this.adapterManager.runInTerminal(this.type, args, sessionId);\n    }\n    get label() {\n        return this.debuggerContribution.label || this.debuggerContribution.type;\n    }\n    get type() {\n        return this.debuggerContribution.type;\n    }\n    get variables() {\n        return this.debuggerContribution.variables;\n    }\n    get configurationSnippets() {\n        return this.debuggerContribution.configurationSnippets;\n    }\n    get languages() {\n        return this.debuggerContribution.languages;\n    }\n    get when() {\n        return this.debuggerWhen;\n    }\n    get enabled() {\n        return !this.debuggerWhen || this.contextKeyService.contextMatchesRules(this.debuggerWhen);\n    }\n    get strings() {\n        return this.debuggerContribution.strings ?? this.debuggerContribution.uiMessages;\n    }\n    interestedInLanguage(languageId) {\n        return !!(this.languages && this.languages.indexOf(languageId) >= 0);\n    }\n    hasInitialConfiguration() {\n        return !!this.debuggerContribution.initialConfigurations;\n    }\n    hasConfigurationProvider() {\n        return this.debugService.getConfigurationManager().hasDebugConfigurationProvider(this.type);\n    }\n    getInitialConfigurationContent(initialConfigs) {\n        let initialConfigurations = this.debuggerContribution.initialConfigurations || [];\n        if (initialConfigs) {\n            initialConfigurations = initialConfigurations.concat(initialConfigs);\n        }\n        const eol = this.resourcePropertiesService.getEOL(( URI.from({ scheme: Schemas.untitled, path: '1' }))) === '\\r\\n' ? '\\r\\n' : '\\n';\n        const configs = ( JSON.stringify(initialConfigurations, null, '\\t').split('\\n').map(line => '\\t' + line)).join(eol).trim();\n        const comment1 = ( nls.localize(\n            'launch.config.comment1',\n            \"Use IntelliSense to learn about possible attributes.\"\n        ));\n        const comment2 = ( nls.localize(\n            'launch.config.comment2',\n            \"Hover to view descriptions of existing attributes.\"\n        ));\n        const comment3 = ( nls.localize(\n            'launch.config.comment3',\n            \"For more information, visit: {0}\",\n            'https://go.microsoft.com/fwlink/?linkid=830387'\n        ));\n        let content = [\n            '{',\n            `\\t// ${comment1}`,\n            `\\t// ${comment2}`,\n            `\\t// ${comment3}`,\n            `\\t\"version\": \"0.2.0\",`,\n            `\\t\"configurations\": ${configs}`,\n            '}'\n        ].join(eol);\n        const editorConfig = this.configurationService.getValue();\n        if (editorConfig.editor && editorConfig.editor.insertSpaces) {\n            content = content.replace(( new RegExp('\\t', 'g')), ' '.repeat(editorConfig.editor.tabSize));\n        }\n        return Promise.resolve(content);\n    }\n    getMainExtensionDescriptor() {\n        return this.mainExtensionDescription || this.mergedExtensionDescriptions[0];\n    }\n    getCustomTelemetryEndpoint() {\n        const aiKey = this.debuggerContribution.aiKey;\n        if (!aiKey) {\n            return undefined;\n        }\n        const sendErrorTelemtry = cleanRemoteAuthority(this.environmentService.remoteAuthority) !== 'other';\n        return {\n            id: `${this.getMainExtensionDescriptor().publisher}.${this.type}`,\n            aiKey,\n            sendErrorTelemetry: sendErrorTelemtry\n        };\n    }\n    getSchemaAttributes(definitions) {\n        if (!this.debuggerContribution.configurationAttributes) {\n            return null;\n        }\n        return ( ( Object.keys(this.debuggerContribution.configurationAttributes)).map(request => {\n            const definitionId = `${this.type}:${request}`;\n            const platformSpecificDefinitionId = `${this.type}:${request}:platform`;\n            const attributes = this.debuggerContribution.configurationAttributes[request];\n            const defaultRequired = ['name', 'type', 'request'];\n            attributes.required = attributes.required && attributes.required.length ? defaultRequired.concat(attributes.required) : defaultRequired;\n            attributes.additionalProperties = false;\n            attributes.type = 'object';\n            if (!attributes.properties) {\n                attributes.properties = {};\n            }\n            const properties = attributes.properties;\n            properties['type'] = {\n                enum: [this.type],\n                enumDescriptions: [this.label],\n                description: ( nls.localize('debugType', \"Type of configuration.\")),\n                pattern: '^(?!node2)',\n                deprecationMessage: this.debuggerContribution.deprecated || (this.enabled ? undefined : debuggerDisabledMessage(this.type)),\n                doNotSuggest: !!this.debuggerContribution.deprecated,\n                errorMessage: ( nls.localize(\n                    'debugTypeNotRecognised',\n                    \"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.\"\n                )),\n                patternErrorMessage: ( nls.localize(\n                    'node2NotSupported',\n                    \"\\\"node2\\\" is no longer supported, use \\\"node\\\" instead and set the \\\"protocol\\\" attribute to \\\"inspector\\\".\"\n                ))\n            };\n            properties['request'] = {\n                enum: [request],\n                description: ( nls.localize(\n                    'debugRequest',\n                    \"Request type of configuration. Can be \\\"launch\\\" or \\\"attach\\\".\"\n                )),\n            };\n            for (const prop in definitions['common'].properties) {\n                properties[prop] = {\n                    $ref: `#/definitions/common/properties/${prop}`\n                };\n            }\n            ( Object.keys(properties)).forEach(name => {\n                applyDeprecatedVariableMessage(properties[name]);\n            });\n            definitions[definitionId] = { ...attributes };\n            definitions[platformSpecificDefinitionId] = {\n                type: 'object',\n                additionalProperties: false,\n                properties: filter(properties, key => key !== 'type' && key !== 'request' && key !== 'name')\n            };\n            const attributesCopy = { ...attributes };\n            attributesCopy.properties = {\n                ...properties,\n                ...{\n                    windows: {\n                        $ref: `#/definitions/${platformSpecificDefinitionId}`,\n                        description: ( nls.localize(\n                            'debugWindowsConfiguration',\n                            \"Windows specific launch configuration attributes.\"\n                        )),\n                    },\n                    osx: {\n                        $ref: `#/definitions/${platformSpecificDefinitionId}`,\n                        description: ( nls.localize('debugOSXConfiguration', \"OS X specific launch configuration attributes.\")),\n                    },\n                    linux: {\n                        $ref: `#/definitions/${platformSpecificDefinitionId}`,\n                        description: ( nls.localize(\n                            'debugLinuxConfiguration',\n                            \"Linux specific launch configuration attributes.\"\n                        )),\n                    }\n                }\n            };\n            return attributesCopy;\n        }));\n    }\n};\nDebugger = ( __decorate([\n    ( __param(3, IConfigurationService)),\n    ( __param(4, ITextResourcePropertiesService)),\n    ( __param(5, IConfigurationResolverService)),\n    ( __param(6, IWorkbenchEnvironmentService)),\n    ( __param(7, IDebugService)),\n    ( __param(8, IContextKeyService))\n], Debugger));\nexport { Debugger };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nfunction applyDeprecatedVariableMessage(schema) {\n    schema.pattern = schema.pattern || '^(?!.*\\\\$\\\\{(env|config|command)\\\\.)';\n    schema.patternErrorMessage = schema.patternErrorMessage ||\n        ( nls.localize(\n         'deprecatedVariables',\n         \"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead.\"\n        ));\n}\nexport { applyDeprecatedVariableMessage };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nconst idDescription = ( nls.localize(\n    'JsonSchema.input.id',\n    \"The input's id is used to associate an input with a variable of the form ${input:id}.\"\n));\nconst typeDescription = ( nls.localize('JsonSchema.input.type', \"The type of user input prompt to use.\"));\nconst descriptionDescription = ( nls.localize(\n    'JsonSchema.input.description',\n    \"The description is shown when the user is prompted for input.\"\n));\nconst defaultDescription = ( nls.localize('JsonSchema.input.default', \"The default value for the input.\"));\nconst inputsSchema = {\n    definitions: {\n        inputs: {\n            type: 'array',\n            description: ( nls.localize(\n                'JsonSchema.inputs',\n                'User inputs. Used for defining user input prompts, such as free string input or a choice from several options.'\n            )),\n            items: {\n                oneOf: [\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'description'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['promptString'],\n                                enumDescriptions: [\n                                    ( nls.localize(\n                                        'JsonSchema.input.type.promptString',\n                                        \"The 'promptString' type opens an input box to ask the user for input.\"\n                                    )),\n                                ]\n                            },\n                            description: {\n                                type: 'string',\n                                description: descriptionDescription\n                            },\n                            default: {\n                                type: 'string',\n                                description: defaultDescription\n                            },\n                            password: {\n                                type: 'boolean',\n                                description: ( nls.localize(\n                                    'JsonSchema.input.password',\n                                    \"Controls if a password input is shown. Password input hides the typed text.\"\n                                )),\n                            },\n                        }\n                    },\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'description', 'options'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['pickString'],\n                                enumDescriptions: [\n                                    ( nls.localize(\n                                        'JsonSchema.input.type.pickString',\n                                        \"The 'pickString' type shows a selection list.\"\n                                    )),\n                                ]\n                            },\n                            description: {\n                                type: 'string',\n                                description: descriptionDescription\n                            },\n                            default: {\n                                type: 'string',\n                                description: defaultDescription\n                            },\n                            options: {\n                                type: 'array',\n                                description: ( nls.localize(\n                                    'JsonSchema.input.options',\n                                    \"An array of strings that defines the options for a quick pick.\"\n                                )),\n                                items: {\n                                    oneOf: [\n                                        {\n                                            type: 'string'\n                                        },\n                                        {\n                                            type: 'object',\n                                            required: ['value'],\n                                            additionalProperties: false,\n                                            properties: {\n                                                label: {\n                                                    type: 'string',\n                                                    description: ( nls.localize('JsonSchema.input.pickString.optionLabel', \"Label for the option.\"))\n                                                },\n                                                value: {\n                                                    type: 'string',\n                                                    description: ( nls.localize('JsonSchema.input.pickString.optionValue', \"Value for the option.\"))\n                                                }\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'command'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['command'],\n                                enumDescriptions: [\n                                    ( nls.localize('JsonSchema.input.type.command', \"The 'command' type executes a command.\")),\n                                ]\n                            },\n                            command: {\n                                type: 'string',\n                                description: ( nls.localize(\n                                    'JsonSchema.input.command.command',\n                                    \"The command to execute for this input variable.\"\n                                ))\n                            },\n                            args: {\n                                oneOf: [\n                                    {\n                                        type: 'object',\n                                        description: ( nls.localize(\n                                            'JsonSchema.input.command.args',\n                                            \"Optional arguments passed to the command.\"\n                                        ))\n                                    },\n                                    {\n                                        type: 'array',\n                                        description: ( nls.localize(\n                                            'JsonSchema.input.command.args',\n                                            \"Optional arguments passed to the command.\"\n                                        ))\n                                    },\n                                    {\n                                        type: 'string',\n                                        description: ( nls.localize(\n                                            'JsonSchema.input.command.args',\n                                            \"Optional arguments passed to the command.\"\n                                        ))\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    }\n};\nexport { inputsSchema };\n","import { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { launchSchemaId } from '../../../services/configuration/common/configuration.js';\nimport { inputsSchema } from '../../../services/configurationResolver/common/configurationResolverSchema.js';\nconst debuggersExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'debuggers',\n    defaultExtensionKind: ['workspace'],\n    jsonSchema: {\n        description: ( nls.localize('vscode.extension.contributes.debuggers', 'Contributes debug adapters.')),\n        type: 'array',\n        defaultSnippets: [{ body: [{ type: '' }] }],\n        items: {\n            additionalProperties: false,\n            type: 'object',\n            defaultSnippets: [{ body: { type: '', program: '', runtime: '' } }],\n            properties: {\n                type: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.type',\n                        \"Unique identifier for this debug adapter.\"\n                    )),\n                    type: 'string'\n                },\n                label: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.label',\n                        \"Display name for this debug adapter.\"\n                    )),\n                    type: 'string'\n                },\n                program: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.program',\n                        \"Path to the debug adapter program. Path is either absolute or relative to the extension folder.\"\n                    )),\n                    type: 'string'\n                },\n                args: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.args',\n                        \"Optional arguments to pass to the adapter.\"\n                    )),\n                    type: 'array'\n                },\n                runtime: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.runtime',\n                        \"Optional runtime in case the program attribute is not an executable but requires a runtime.\"\n                    )),\n                    type: 'string'\n                },\n                runtimeArgs: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.runtimeArgs',\n                        \"Optional runtime arguments.\"\n                    )),\n                    type: 'array'\n                },\n                variables: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.variables',\n                        \"Mapping from interactive variables (e.g. ${action.pickProcess}) in `launch.json` to a command.\"\n                    )),\n                    type: 'object'\n                },\n                initialConfigurations: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.initialConfigurations',\n                        \"Configurations for generating the initial \\'launch.json\\'.\"\n                    )),\n                    type: ['array', 'string'],\n                },\n                languages: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.languages',\n                        \"List of languages for which the debug extension could be considered the \\\"default debugger\\\".\"\n                    )),\n                    type: 'array'\n                },\n                configurationSnippets: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.configurationSnippets',\n                        \"Snippets for adding new configurations in \\'launch.json\\'.\"\n                    )),\n                    type: 'array'\n                },\n                configurationAttributes: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.configurationAttributes',\n                        \"JSON schema configurations for validating \\'launch.json\\'.\"\n                    )),\n                    type: 'object'\n                },\n                when: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.when',\n                        \"Condition which must be true to enable this type of debugger. Consider using 'shellExecutionSupported', 'virtualWorkspace', 'resourceScheme' or an extension-defined context key as appropriate for this.\"\n                    )),\n                    type: 'string',\n                    default: ''\n                },\n                deprecated: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.deprecated',\n                        \"Optional message to mark this debug type as being deprecated.\"\n                    )),\n                    type: 'string',\n                    default: ''\n                },\n                windows: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.windows',\n                        \"Windows specific settings.\"\n                    )),\n                    type: 'object',\n                    properties: {\n                        runtime: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.debuggers.windows.runtime',\n                                \"Runtime used for Windows.\"\n                            )),\n                            type: 'string'\n                        }\n                    }\n                },\n                osx: {\n                    description: ( nls.localize('vscode.extension.contributes.debuggers.osx', \"macOS specific settings.\")),\n                    type: 'object',\n                    properties: {\n                        runtime: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.debuggers.osx.runtime',\n                                \"Runtime used for macOS.\"\n                            )),\n                            type: 'string'\n                        }\n                    }\n                },\n                linux: {\n                    description: ( nls.localize('vscode.extension.contributes.debuggers.linux', \"Linux specific settings.\")),\n                    type: 'object',\n                    properties: {\n                        runtime: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.debuggers.linux.runtime',\n                                \"Runtime used for Linux.\"\n                            )),\n                            type: 'string'\n                        }\n                    }\n                },\n                strings: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.debuggers.strings',\n                        \"UI strings contributed by this debug adapter.\"\n                    )),\n                    type: 'object',\n                    properties: {\n                        unverifiedBreakpoints: {\n                            description: ( nls.localize(\n                                'vscode.extension.contributes.debuggers.strings.unverifiedBreakpoints',\n                                \"When there are unverified breakpoints in a language supported by this debug adapter, this message will appear on the breakpoint hover and in the breakpoints view. Markdown and command links are supported.\"\n                            )),\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}));\nconst breakpointsExtPoint = ( ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'breakpoints',\n    jsonSchema: {\n        description: ( nls.localize('vscode.extension.contributes.breakpoints', 'Contributes breakpoints.')),\n        type: 'array',\n        defaultSnippets: [{ body: [{ language: '' }] }],\n        items: {\n            type: 'object',\n            additionalProperties: false,\n            defaultSnippets: [{ body: { language: '' } }],\n            properties: {\n                language: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.breakpoints.language',\n                        \"Allow breakpoints for this language.\"\n                    )),\n                    type: 'string'\n                },\n                when: {\n                    description: ( nls.localize(\n                        'vscode.extension.contributes.breakpoints.when',\n                        \"Condition which must be true to enable breakpoints in this language. Consider matching this to the debugger when clause as appropriate.\"\n                    )),\n                    type: 'string',\n                    default: ''\n                }\n            }\n        }\n    }\n}));\nconst presentationSchema = {\n    type: 'object',\n    description: ( nls.localize(\n        'presentation',\n        \"Presentation options on how to show this configuration in the debug configuration dropdown and the command palette.\"\n    )),\n    properties: {\n        hidden: {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'presentation.hidden',\n                \"Controls if this configuration should be shown in the configuration dropdown and the command palette.\"\n            ))\n        },\n        group: {\n            type: 'string',\n            default: '',\n            description: ( nls.localize(\n                'presentation.group',\n                \"Group that this configuration belongs to. Used for grouping and sorting in the configuration dropdown and the command palette.\"\n            ))\n        },\n        order: {\n            type: 'number',\n            default: 1,\n            description: ( nls.localize(\n                'presentation.order',\n                \"Order of this configuration within a group. Used for grouping and sorting in the configuration dropdown and the command palette.\"\n            ))\n        }\n    },\n    default: {\n        hidden: false,\n        group: '',\n        order: 1\n    }\n};\nconst defaultCompound = { name: 'Compound', configurations: [] };\nconst launchSchema = {\n    id: launchSchemaId,\n    type: 'object',\n    title: ( nls.localize('app.launch.json.title', \"Launch\")),\n    allowTrailingCommas: true,\n    allowComments: true,\n    required: [],\n    default: { version: '0.2.0', configurations: [], compounds: [] },\n    properties: {\n        version: {\n            type: 'string',\n            description: ( nls.localize('app.launch.json.version', \"Version of this file format.\")),\n            default: '0.2.0'\n        },\n        configurations: {\n            type: 'array',\n            description: ( nls.localize(\n                'app.launch.json.configurations',\n                \"List of configurations. Add new configurations or edit existing ones by using IntelliSense.\"\n            )),\n            items: {\n                defaultSnippets: [],\n                'type': 'object',\n                oneOf: []\n            }\n        },\n        compounds: {\n            type: 'array',\n            description: ( nls.localize(\n                'app.launch.json.compounds',\n                \"List of compounds. Each compound references multiple configurations which will get launched together.\"\n            )),\n            items: {\n                type: 'object',\n                required: ['name', 'configurations'],\n                properties: {\n                    name: {\n                        type: 'string',\n                        description: ( nls.localize(\n                            'app.launch.json.compound.name',\n                            \"Name of compound. Appears in the launch configuration drop down menu.\"\n                        ))\n                    },\n                    presentation: presentationSchema,\n                    configurations: {\n                        type: 'array',\n                        default: [],\n                        items: {\n                            oneOf: [{\n                                    enum: [],\n                                    description: ( nls.localize('useUniqueNames', \"Please use unique configuration names.\"))\n                                }, {\n                                    type: 'object',\n                                    required: ['name'],\n                                    properties: {\n                                        name: {\n                                            enum: [],\n                                            description: ( nls.localize(\n                                                'app.launch.json.compound.name',\n                                                \"Name of compound. Appears in the launch configuration drop down menu.\"\n                                            ))\n                                        },\n                                        folder: {\n                                            enum: [],\n                                            description: ( nls.localize(\n                                                'app.launch.json.compound.folder',\n                                                \"Name of folder in which the compound is located.\"\n                                            ))\n                                        }\n                                    }\n                                }]\n                        },\n                        description: ( nls.localize(\n                            'app.launch.json.compounds.configurations',\n                            \"Names of configurations that will be started as part of this compound.\"\n                        ))\n                    },\n                    stopAll: {\n                        type: 'boolean',\n                        default: false,\n                        description: ( nls.localize(\n                            'app.launch.json.compound.stopAll',\n                            \"Controls whether manually terminating one session will stop all of the compound sessions.\"\n                        ))\n                    },\n                    preLaunchTask: {\n                        type: 'string',\n                        default: '',\n                        description: ( nls.localize(\n                            'compoundPrelaunchTask',\n                            \"Task to run before any of the compound configurations start.\"\n                        ))\n                    }\n                },\n                default: defaultCompound\n            },\n            default: [\n                defaultCompound\n            ]\n        },\n        inputs: inputsSchema.definitions.inputs\n    }\n};\nexport { breakpointsExtPoint, debuggersExtPoint, launchSchema, presentationSchema };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport * as strings from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Breakpoints } from '../common/breakpoints.js';\nimport { CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_EXTENSION_AVAILABLE, INTERNAL_CONSOLE_OPTIONS_SCHEMA } from '../common/debug.js';\nimport { Debugger } from '../common/debugger.js';\nimport { debuggersExtPoint, breakpointsExtPoint, launchSchema, presentationSchema } from '../common/debugSchemas.js';\nimport { TaskDefinitionRegistry } from '../../tasks/common/taskDefinitionRegistry.js';\nimport { launchSchemaId } from '../../../services/configuration/common/configuration.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst jsonRegistry = ( Registry.as(Extensions.JSONContribution));\nlet AdapterManager = class AdapterManager extends Disposable {\n    constructor(delegate, editorService, configurationService, quickInputService, instantiationService, commandService, extensionService, contextKeyService, languageService, dialogService, lifecycleService) {\n        super();\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.commandService = commandService;\n        this.extensionService = extensionService;\n        this.contextKeyService = contextKeyService;\n        this.languageService = languageService;\n        this.dialogService = dialogService;\n        this.lifecycleService = lifecycleService;\n        this.debugAdapterFactories = ( new Map());\n        this._onDidRegisterDebugger = ( new Emitter());\n        this._onDidDebuggersExtPointRead = ( new Emitter());\n        this.breakpointContributions = [];\n        this.debuggerWhenKeys = ( new Set());\n        this.usedDebugTypes = ( new Set());\n        this.adapterDescriptorFactories = [];\n        this.debuggers = [];\n        this.registerListeners();\n        this.contextKeyService.bufferChangeEvents(() => {\n            this.debuggersAvailable = CONTEXT_DEBUGGERS_AVAILABLE.bindTo(contextKeyService);\n            this.debugExtensionsAvailable = CONTEXT_DEBUG_EXTENSION_AVAILABLE.bindTo(contextKeyService);\n        });\n        this._register(this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(this.debuggerWhenKeys)) {\n                this.debuggersAvailable.set(this.hasEnabledDebuggers());\n                this.updateDebugAdapterSchema();\n            }\n        }));\n        this._register(this.onDidDebuggersExtPointRead(() => {\n            this.debugExtensionsAvailable.set(this.debuggers.length > 0);\n        }));\n        this.lifecycleService.when(4 )\n            .then(() => this.debugExtensionsAvailable.set(this.debuggers.length > 0));\n        this._register(delegate.onDidNewSession(s => {\n            this.usedDebugTypes.add(s.configuration.type);\n        }));\n    }\n    registerListeners() {\n        debuggersExtPoint.setHandler((extensions, delta) => {\n            delta.added.forEach(added => {\n                added.value.forEach(rawAdapter => {\n                    if (!rawAdapter.type || (typeof rawAdapter.type !== 'string')) {\n                        added.collector.error(( nls.localize(\n                            'debugNoType',\n                            \"Debugger 'type' can not be omitted and must be of type 'string'.\"\n                        )));\n                    }\n                    if (rawAdapter.type !== '*') {\n                        const existing = this.getDebugger(rawAdapter.type);\n                        if (existing) {\n                            existing.merge(rawAdapter, added.description);\n                        }\n                        else {\n                            const dbg = this.instantiationService.createInstance(Debugger, this, rawAdapter, added.description);\n                            dbg.when?.keys().forEach(key => this.debuggerWhenKeys.add(key));\n                            this.debuggers.push(dbg);\n                        }\n                    }\n                });\n            });\n            extensions.forEach(extension => {\n                extension.value.forEach(rawAdapter => {\n                    if (rawAdapter.type === '*') {\n                        this.debuggers.forEach(dbg => dbg.merge(rawAdapter, extension.description));\n                    }\n                });\n            });\n            delta.removed.forEach(removed => {\n                const removedTypes = ( removed.value.map(rawAdapter => rawAdapter.type));\n                this.debuggers = this.debuggers.filter(d => removedTypes.indexOf(d.type) === -1);\n            });\n            this.updateDebugAdapterSchema();\n            this._onDidDebuggersExtPointRead.fire();\n        });\n        breakpointsExtPoint.setHandler(extensions => {\n            this.breakpointContributions = extensions.flatMap(ext => ( ext.value.map(\n                breakpoint => this.instantiationService.createInstance(Breakpoints, breakpoint)\n            )));\n        });\n    }\n    updateDebugAdapterSchema() {\n        const items = launchSchema.properties['configurations'].items;\n        const taskSchema = TaskDefinitionRegistry.getJsonSchema();\n        const definitions = {\n            'common': {\n                properties: {\n                    'name': {\n                        type: 'string',\n                        description: ( nls.localize(\n                            'debugName',\n                            \"Name of configuration; appears in the launch configuration dropdown menu.\"\n                        )),\n                        default: 'Launch'\n                    },\n                    'debugServer': {\n                        type: 'number',\n                        description: ( nls.localize(\n                            'debugServer',\n                            \"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode\"\n                        )),\n                        default: 4711\n                    },\n                    'preLaunchTask': {\n                        anyOf: [taskSchema, {\n                                type: ['string']\n                            }],\n                        default: '',\n                        defaultSnippets: [{ body: { task: '', type: '' } }],\n                        description: ( nls.localize('debugPrelaunchTask', \"Task to run before debug session starts.\"))\n                    },\n                    'postDebugTask': {\n                        anyOf: [taskSchema, {\n                                type: ['string'],\n                            }],\n                        default: '',\n                        defaultSnippets: [{ body: { task: '', type: '' } }],\n                        description: ( nls.localize('debugPostDebugTask', \"Task to run after debug session ends.\"))\n                    },\n                    'presentation': presentationSchema,\n                    'internalConsoleOptions': INTERNAL_CONSOLE_OPTIONS_SCHEMA,\n                    'suppressMultipleSessionWarning': {\n                        type: 'boolean',\n                        description: ( nls.localize(\n                            'suppressMultipleSessionWarning',\n                            \"Disable the warning when trying to start the same debug configuration more than once.\"\n                        )),\n                        default: true\n                    }\n                }\n            }\n        };\n        launchSchema.definitions = definitions;\n        items.oneOf = [];\n        items.defaultSnippets = [];\n        this.debuggers.forEach(adapter => {\n            const schemaAttributes = adapter.getSchemaAttributes(definitions);\n            if (schemaAttributes && items.oneOf) {\n                items.oneOf.push(...schemaAttributes);\n            }\n            const configurationSnippets = adapter.configurationSnippets;\n            if (configurationSnippets && items.defaultSnippets) {\n                items.defaultSnippets.push(...configurationSnippets);\n            }\n        });\n        jsonRegistry.registerSchema(launchSchemaId, launchSchema);\n    }\n    registerDebugAdapterFactory(debugTypes, debugAdapterLauncher) {\n        debugTypes.forEach(debugType => this.debugAdapterFactories.set(debugType, debugAdapterLauncher));\n        this.debuggersAvailable.set(this.hasEnabledDebuggers());\n        this._onDidRegisterDebugger.fire();\n        return {\n            dispose: () => {\n                debugTypes.forEach(debugType => this.debugAdapterFactories.delete(debugType));\n            }\n        };\n    }\n    hasEnabledDebuggers() {\n        for (const [type] of this.debugAdapterFactories) {\n            const dbg = this.getDebugger(type);\n            if (dbg && dbg.enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n    createDebugAdapter(session) {\n        const factory = this.debugAdapterFactories.get(session.configuration.type);\n        if (factory) {\n            return factory.createDebugAdapter(session);\n        }\n        return undefined;\n    }\n    substituteVariables(debugType, folder, config) {\n        const factory = this.debugAdapterFactories.get(debugType);\n        if (factory) {\n            return factory.substituteVariables(folder, config);\n        }\n        return Promise.resolve(config);\n    }\n    runInTerminal(debugType, args, sessionId) {\n        const factory = this.debugAdapterFactories.get(debugType);\n        if (factory) {\n            return factory.runInTerminal(args, sessionId);\n        }\n        return Promise.resolve(void 0);\n    }\n    registerDebugAdapterDescriptorFactory(debugAdapterProvider) {\n        this.adapterDescriptorFactories.push(debugAdapterProvider);\n        return {\n            dispose: () => {\n                this.unregisterDebugAdapterDescriptorFactory(debugAdapterProvider);\n            }\n        };\n    }\n    unregisterDebugAdapterDescriptorFactory(debugAdapterProvider) {\n        const ix = this.adapterDescriptorFactories.indexOf(debugAdapterProvider);\n        if (ix >= 0) {\n            this.adapterDescriptorFactories.splice(ix, 1);\n        }\n    }\n    getDebugAdapterDescriptor(session) {\n        const config = session.configuration;\n        const providers = this.adapterDescriptorFactories.filter(p => p.type === config.type && p.createDebugAdapterDescriptor);\n        if (providers.length === 1) {\n            return providers[0].createDebugAdapterDescriptor(session);\n        }\n        return Promise.resolve(undefined);\n    }\n    getDebuggerLabel(type) {\n        const dbgr = this.getDebugger(type);\n        if (dbgr) {\n            return dbgr.label;\n        }\n        return undefined;\n    }\n    get onDidRegisterDebugger() {\n        return this._onDidRegisterDebugger.event;\n    }\n    get onDidDebuggersExtPointRead() {\n        return this._onDidDebuggersExtPointRead.event;\n    }\n    canSetBreakpointsIn(model) {\n        const languageId = model.getLanguageId();\n        if (!languageId || languageId === 'jsonc' || languageId === 'log') {\n            return false;\n        }\n        if (this.configurationService.getValue('debug').allowBreakpointsEverywhere) {\n            return true;\n        }\n        return ( this.breakpointContributions.some(breakpoints => breakpoints.language === languageId && breakpoints.enabled));\n    }\n    getDebugger(type) {\n        return this.debuggers.find(dbg => strings.equalsIgnoreCase(dbg.type, type));\n    }\n    getEnabledDebugger(type) {\n        const adapter = this.getDebugger(type);\n        return adapter && adapter.enabled ? adapter : undefined;\n    }\n    someDebuggerInterestedInLanguage(languageId) {\n        return !!this.debuggers\n            .filter(d => d.enabled)\n            .find(a => a.interestedInLanguage(languageId));\n    }\n    async guessDebugger(gettingConfigurations) {\n        const activeTextEditorControl = this.editorService.activeTextEditorControl;\n        let candidates = [];\n        let languageLabel = null;\n        let model = null;\n        if (isCodeEditor(activeTextEditorControl)) {\n            model = activeTextEditorControl.getModel();\n            const language = model ? model.getLanguageId() : undefined;\n            if (language) {\n                languageLabel = this.languageService.getLanguageName(language);\n            }\n            const adapters = this.debuggers\n                .filter(a => a.enabled)\n                .filter(a => language && a.interestedInLanguage(language));\n            if (adapters.length === 1) {\n                return adapters[0];\n            }\n            if (adapters.length > 1) {\n                candidates = adapters;\n            }\n        }\n        if ((!languageLabel || gettingConfigurations || (model && this.canSetBreakpointsIn(model))) && candidates.length === 0) {\n            await this.activateDebuggers('onDebugInitialConfigurations');\n            candidates = this.debuggers\n                .filter(a => a.enabled)\n                .filter(dbg => dbg.hasInitialConfiguration() || dbg.hasConfigurationProvider());\n        }\n        if (candidates.length === 0 && languageLabel) {\n            if (languageLabel.indexOf(' ') >= 0) {\n                languageLabel = `'${languageLabel}'`;\n            }\n            const { confirmed } = await this.dialogService.confirm({\n                type: Severity.Warning,\n                message: ( nls.localize(\n                    'CouldNotFindLanguage',\n                    \"You don't have an extension for debugging {0}. Should we find a {0} extension in the Marketplace?\",\n                    languageLabel\n                )),\n                primaryButton: ( nls.localize(\n                    { key: 'findExtension', comment: ['&& denotes a mnemonic'] },\n                    \"&&Find {0} extension\",\n                    languageLabel\n                ))\n            });\n            if (confirmed) {\n                await this.commandService.executeCommand('debug.installAdditionalDebuggers', languageLabel);\n            }\n            return undefined;\n        }\n        this.initExtensionActivationsIfNeeded();\n        candidates.sort((first, second) => first.label.localeCompare(second.label));\n        const suggestedCandidates = [];\n        const otherCandidates = [];\n        candidates.forEach(d => {\n            const descriptor = d.getMainExtensionDescriptor();\n            if (descriptor.id && !!this.earlyActivatedExtensions?.has(descriptor.id)) {\n                suggestedCandidates.push(d);\n            }\n            else if (( this.usedDebugTypes.has(d.type))) {\n                suggestedCandidates.push(d);\n            }\n            else {\n                otherCandidates.push(d);\n            }\n        });\n        const picks = [];\n        if (suggestedCandidates.length > 0) {\n            picks.push({ type: 'separator', label: ( nls.localize('suggestedDebuggers', \"Suggested\")) }, ...( suggestedCandidates.map(c => ({ label: c.label, debugger: c }))));\n        }\n        if (otherCandidates.length > 0) {\n            if (picks.length > 0) {\n                picks.push({ type: 'separator', label: '' });\n            }\n            picks.push(...( otherCandidates.map(c => ({ label: c.label, debugger: c }))));\n        }\n        picks.push({ type: 'separator', label: '' }, { label: languageLabel ? ( nls.localize('installLanguage', \"Install an extension for {0}...\", languageLabel)) : ( nls.localize('installExt', \"Install extension...\")) });\n        const placeHolder = ( nls.localize('selectDebug', \"Select debugger\"));\n        return this.quickInputService.pick(picks, { activeItem: picks[0], placeHolder })\n            .then(picked => {\n            if (picked && picked.debugger) {\n                return picked.debugger;\n            }\n            if (picked) {\n                this.commandService.executeCommand('debug.installAdditionalDebuggers', languageLabel);\n            }\n            return undefined;\n        });\n    }\n    initExtensionActivationsIfNeeded() {\n        if (!this.earlyActivatedExtensions) {\n            this.earlyActivatedExtensions = ( new Set());\n            const status = this.extensionService.getExtensionsStatus();\n            for (const id in status) {\n                if (!!status[id].activationTimes) {\n                    this.earlyActivatedExtensions.add(id);\n                }\n            }\n        }\n    }\n    async activateDebuggers(activationEvent, debugType) {\n        this.initExtensionActivationsIfNeeded();\n        const promises = [\n            this.extensionService.activateByEvent(activationEvent),\n            this.extensionService.activateByEvent('onDebug')\n        ];\n        if (debugType) {\n            promises.push(this.extensionService.activateByEvent(`${activationEvent}:${debugType}`));\n        }\n        await Promise.all(promises);\n    }\n};\nAdapterManager = ( __decorate([\n    ( __param(1, IEditorService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IQuickInputService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, ICommandService)),\n    ( __param(6, IExtensionService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, ILanguageService)),\n    ( __param(9, IDialogService)),\n    ( __param(10, ILifecycleService))\n], AdapterManager));\nexport { AdapterManager };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { flatten, distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { sequence } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource, CancellationToken } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport * as json from 'monaco-editor/esm/vs/base/common/json.js';\nimport { dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { withUndefinedAsNull } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Extensions } from 'monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { debugConfigure } from './debugIcons.js';\nimport { CONTEXT_DEBUG_CONFIGURATION_TYPE, DebugConfigurationProviderTriggerKind } from '../common/debug.js';\nimport { launchSchema } from '../common/debugSchemas.js';\nimport { getVisibleAndSorted } from '../common/debugUtils.js';\nimport { launchSchemaId } from '../../../services/configuration/common/configuration.js';\nimport { ACTIVE_GROUP, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nconst jsonRegistry = ( Registry.as(Extensions.JSONContribution));\njsonRegistry.registerSchema(launchSchemaId, launchSchema);\nconst DEBUG_SELECTED_CONFIG_NAME_KEY = 'debug.selectedconfigname';\nconst DEBUG_SELECTED_ROOT = 'debug.selectedroot';\nconst DEBUG_SELECTED_TYPE = 'debug.selectedtype';\nconst DEBUG_RECENT_DYNAMIC_CONFIGURATIONS = 'debug.recentdynamicconfigurations';\nlet ConfigurationManager = class ConfigurationManager {\n    constructor(adapterManager, contextService, configurationService, quickInputService, instantiationService, storageService, extensionService, historyService, uriIdentityService, contextKeyService) {\n        this.adapterManager = adapterManager;\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.storageService = storageService;\n        this.extensionService = extensionService;\n        this.historyService = historyService;\n        this.uriIdentityService = uriIdentityService;\n        this.getSelectedConfig = () => Promise.resolve(undefined);\n        this.selectedDynamic = false;\n        this._onDidSelectConfigurationName = ( new Emitter());\n        this.configProviders = [];\n        this.toDispose = [];\n        this.initLaunches();\n        this.setCompoundSchemaValues();\n        this.registerListeners();\n        const previousSelectedRoot = this.storageService.get(DEBUG_SELECTED_ROOT, 1 );\n        const previousSelectedType = this.storageService.get(DEBUG_SELECTED_TYPE, 1 );\n        const previousSelectedLaunch = this.launches.find(l => ( l.uri.toString()) === previousSelectedRoot);\n        const previousSelectedName = this.storageService.get(DEBUG_SELECTED_CONFIG_NAME_KEY, 1 );\n        this.debugConfigurationTypeContext = CONTEXT_DEBUG_CONFIGURATION_TYPE.bindTo(contextKeyService);\n        const dynamicConfig = previousSelectedType ? { type: previousSelectedType } : undefined;\n        if (previousSelectedLaunch && previousSelectedLaunch.getConfigurationNames().length) {\n            this.selectConfiguration(previousSelectedLaunch, previousSelectedName, undefined, dynamicConfig);\n        }\n        else if (this.launches.length > 0) {\n            this.selectConfiguration(undefined, previousSelectedName, undefined, dynamicConfig);\n        }\n    }\n    registerDebugConfigurationProvider(debugConfigurationProvider) {\n        this.configProviders.push(debugConfigurationProvider);\n        return {\n            dispose: () => {\n                this.unregisterDebugConfigurationProvider(debugConfigurationProvider);\n            }\n        };\n    }\n    unregisterDebugConfigurationProvider(debugConfigurationProvider) {\n        const ix = this.configProviders.indexOf(debugConfigurationProvider);\n        if (ix >= 0) {\n            this.configProviders.splice(ix, 1);\n        }\n    }\n    hasDebugConfigurationProvider(debugType, triggerKind) {\n        if (triggerKind === undefined) {\n            triggerKind = DebugConfigurationProviderTriggerKind.Initial;\n        }\n        const provider = this.configProviders.find(p => p.provideDebugConfigurations && (p.type === debugType) && (p.triggerKind === triggerKind));\n        return !!provider;\n    }\n    async resolveConfigurationByProviders(folderUri, type, config, token) {\n        const resolveDebugConfigurationForType = async (type, config) => {\n            if (type !== '*') {\n                await this.adapterManager.activateDebuggers('onDebugResolve', type);\n            }\n            for (const p of this.configProviders) {\n                if (p.type === type && p.resolveDebugConfiguration && config) {\n                    config = await p.resolveDebugConfiguration(folderUri, config, token);\n                }\n            }\n            return config;\n        };\n        let resolvedType = config.type ?? type;\n        let result = config;\n        for (let seen = ( new Set()); result && !( seen.has(resolvedType));) {\n            seen.add(resolvedType);\n            result = await resolveDebugConfigurationForType(resolvedType, result);\n            result = await resolveDebugConfigurationForType('*', result);\n            resolvedType = result?.type ?? type;\n        }\n        return result;\n    }\n    async resolveDebugConfigurationWithSubstitutedVariables(folderUri, type, config, token) {\n        const providers = this.configProviders.filter(p => p.type === type && p.resolveDebugConfigurationWithSubstitutedVariables)\n            .concat(this.configProviders.filter(p => p.type === '*' && p.resolveDebugConfigurationWithSubstitutedVariables));\n        let result = config;\n        await sequence(( providers.map(provider => async () => {\n            if (result) {\n                result = await provider.resolveDebugConfigurationWithSubstitutedVariables(folderUri, result, token);\n            }\n        })));\n        return result;\n    }\n    async provideDebugConfigurations(folderUri, type, token) {\n        await this.adapterManager.activateDebuggers('onDebugInitialConfigurations');\n        const results = await Promise.all(( this.configProviders.filter(p => p.type === type && p.triggerKind === DebugConfigurationProviderTriggerKind.Initial && p.provideDebugConfigurations).map(p => p.provideDebugConfigurations(folderUri, token))));\n        return results.reduce((first, second) => first.concat(second), []);\n    }\n    async getDynamicProviders() {\n        await this.extensionService.whenInstalledExtensionsRegistered();\n        const onDebugDynamicConfigurationsName = 'onDebugDynamicConfigurations';\n        const debugDynamicExtensionsTypes = this.extensionService.extensions.reduce((acc, e) => {\n            if (!e.activationEvents) {\n                return acc;\n            }\n            const explicitTypes = [];\n            let hasGenericEvent = false;\n            for (const event of e.activationEvents) {\n                if (event === onDebugDynamicConfigurationsName) {\n                    hasGenericEvent = true;\n                }\n                else if (event.startsWith(`${onDebugDynamicConfigurationsName}:`)) {\n                    explicitTypes.push(event.slice(onDebugDynamicConfigurationsName.length + 1));\n                }\n            }\n            if (explicitTypes.length) {\n                return acc.concat(explicitTypes);\n            }\n            if (hasGenericEvent) {\n                const debuggerType = e.contributes?.debuggers?.[0].type;\n                return debuggerType ? acc.concat(debuggerType) : acc;\n            }\n            return acc;\n        }, []);\n        return ( debugDynamicExtensionsTypes.map(type => {\n            return {\n                label: this.adapterManager.getDebuggerLabel(type),\n                getProvider: async () => {\n                    await this.adapterManager.activateDebuggers(onDebugDynamicConfigurationsName, type);\n                    return this.configProviders.find(p => p.type === type && p.triggerKind === DebugConfigurationProviderTriggerKind.Dynamic && p.provideDebugConfigurations);\n                },\n                type,\n                pick: async () => {\n                    await this.adapterManager.activateDebuggers(onDebugDynamicConfigurationsName, type);\n                    const token = ( new CancellationTokenSource());\n                    const picks = [];\n                    const provider = this.configProviders.find(p => p.type === type && p.triggerKind === DebugConfigurationProviderTriggerKind.Dynamic && p.provideDebugConfigurations);\n                    this.getLaunches().forEach(launch => {\n                        if (launch.workspace && provider) {\n                            picks.push(provider.provideDebugConfigurations(launch.workspace.uri, token.token).then(configurations => ( configurations.map(config => ({\n                                label: config.name,\n                                description: launch.name,\n                                config,\n                                buttons: [{\n                                        iconClass: ThemeIcon.asClassName(debugConfigure),\n                                        tooltip: ( nls.localize('editLaunchConfig', \"Edit Debug Configuration in launch.json\"))\n                                    }],\n                                launch\n                            })))));\n                        }\n                    });\n                    const disposables = ( new DisposableStore());\n                    const input = disposables.add(this.quickInputService.createQuickPick());\n                    input.busy = true;\n                    input.placeholder = ( nls.localize('selectConfiguration', \"Select Launch Configuration\"));\n                    const chosenPromise = ( new Promise(resolve => {\n                        disposables.add(input.onDidAccept(() => resolve(input.activeItems[0])));\n                        disposables.add(input.onDidTriggerItemButton(async (context) => {\n                            resolve(undefined);\n                            const { launch, config } = context.item;\n                            await launch.openConfigFile({ preserveFocus: false, type: config.type, suppressInitialConfigs: true });\n                            await launch.writeConfiguration(config);\n                            await this.selectConfiguration(launch, config.name);\n                            this.removeRecentDynamicConfigurations(config.name, config.type);\n                        }));\n                    }));\n                    const nestedPicks = await Promise.all(picks);\n                    const items = flatten(nestedPicks);\n                    input.items = items;\n                    input.busy = false;\n                    input.show();\n                    const chosen = await chosenPromise;\n                    disposables.dispose();\n                    if (!chosen) {\n                        token.cancel();\n                        return;\n                    }\n                    return chosen;\n                }\n            };\n        }));\n    }\n    getAllConfigurations() {\n        const all = [];\n        for (const l of this.launches) {\n            for (const name of l.getConfigurationNames()) {\n                const config = l.getConfiguration(name) || l.getCompound(name);\n                if (config) {\n                    all.push({ launch: l, name, presentation: config.presentation });\n                }\n            }\n        }\n        return getVisibleAndSorted(all);\n    }\n    removeRecentDynamicConfigurations(name, type) {\n        const remaining = this.getRecentDynamicConfigurations().filter(c => c.name !== name || c.type !== type);\n        this.storageService.store(DEBUG_RECENT_DYNAMIC_CONFIGURATIONS, JSON.stringify(remaining), 1 , 1 );\n        if (this.selectedConfiguration.name === name && this.selectedType === type && this.selectedDynamic) {\n            this.selectConfiguration(undefined, undefined);\n        }\n        else {\n            this._onDidSelectConfigurationName.fire();\n        }\n    }\n    getRecentDynamicConfigurations() {\n        return JSON.parse(this.storageService.get(DEBUG_RECENT_DYNAMIC_CONFIGURATIONS, 1 , '[]'));\n    }\n    registerListeners() {\n        this.toDispose.push(Event.any(this.contextService.onDidChangeWorkspaceFolders, this.contextService.onDidChangeWorkbenchState)(() => {\n            this.initLaunches();\n            this.selectConfiguration(undefined);\n            this.setCompoundSchemaValues();\n        }));\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(async (e) => {\n            if (e.affectsConfiguration('launch')) {\n                await this.selectConfiguration(undefined);\n                this.setCompoundSchemaValues();\n            }\n        }));\n        this.toDispose.push(this.adapterManager.onDidDebuggersExtPointRead(() => {\n            this.setCompoundSchemaValues();\n        }));\n    }\n    initLaunches() {\n        this.launches = ( this.contextService.getWorkspace().folders.map(\n            folder => this.instantiationService.createInstance(Launch, this, this.adapterManager, folder)\n        ));\n        if (this.contextService.getWorkbenchState() === 3 ) {\n            this.launches.push(this.instantiationService.createInstance(WorkspaceLaunch, this, this.adapterManager));\n        }\n        this.launches.push(this.instantiationService.createInstance(UserLaunch, this, this.adapterManager));\n        if (this.selectedLaunch && this.launches.indexOf(this.selectedLaunch) === -1) {\n            this.selectConfiguration(undefined);\n        }\n    }\n    setCompoundSchemaValues() {\n        const compoundConfigurationsSchema = launchSchema.properties['compounds'].items.properties['configurations'];\n        const launchNames = ( this.launches.map(l => l.getConfigurationNames(true))).reduce((first, second) => first.concat(second), []);\n        compoundConfigurationsSchema.items.oneOf[0].enum = launchNames;\n        compoundConfigurationsSchema.items.oneOf[1].properties.name.enum = launchNames;\n        const folderNames = ( this.contextService.getWorkspace().folders.map(f => f.name));\n        compoundConfigurationsSchema.items.oneOf[1].properties.folder.enum = folderNames;\n        jsonRegistry.registerSchema(launchSchemaId, launchSchema);\n    }\n    getLaunches() {\n        return this.launches;\n    }\n    getLaunch(workspaceUri) {\n        if (!URI.isUri(workspaceUri)) {\n            return undefined;\n        }\n        return this.launches.find(l => l.workspace && this.uriIdentityService.extUri.isEqual(l.workspace.uri, workspaceUri));\n    }\n    get selectedConfiguration() {\n        return {\n            launch: this.selectedLaunch,\n            name: this.selectedName,\n            getConfig: this.getSelectedConfig,\n            type: this.selectedType\n        };\n    }\n    get onDidSelectConfiguration() {\n        return this._onDidSelectConfigurationName.event;\n    }\n    getWorkspaceLaunch() {\n        if (this.contextService.getWorkbenchState() === 3 ) {\n            return this.launches[this.launches.length - 1];\n        }\n        return undefined;\n    }\n    async selectConfiguration(launch, name, config, dynamicConfig) {\n        if (typeof launch === 'undefined') {\n            const rootUri = this.historyService.getLastActiveWorkspaceRoot();\n            launch = this.getLaunch(rootUri);\n            if (!launch || launch.getConfigurationNames().length === 0) {\n                launch = this.launches.find(l => !!(l && l.getConfigurationNames().length)) || launch || this.launches[0];\n            }\n        }\n        const previousLaunch = this.selectedLaunch;\n        const previousName = this.selectedName;\n        const previousSelectedDynamic = this.selectedDynamic;\n        this.selectedLaunch = launch;\n        if (this.selectedLaunch) {\n            this.storageService.store(DEBUG_SELECTED_ROOT, ( this.selectedLaunch.uri.toString()), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_SELECTED_ROOT, 1 );\n        }\n        const names = launch ? launch.getConfigurationNames() : [];\n        this.getSelectedConfig = () => {\n            const selected = this.selectedName ? launch?.getConfiguration(this.selectedName) : undefined;\n            return Promise.resolve(selected || config);\n        };\n        let type = config?.type;\n        if (name && names.indexOf(name) >= 0) {\n            this.setSelectedLaunchName(name);\n        }\n        else if (dynamicConfig && dynamicConfig.type) {\n            type = dynamicConfig.type;\n            if (!config) {\n                const providers = (await this.getDynamicProviders()).filter(p => p.type === type);\n                this.getSelectedConfig = async () => {\n                    const activatedProviders = await Promise.all(( providers.map(p => p.getProvider())));\n                    const provider = activatedProviders.length > 0 ? activatedProviders[0] : undefined;\n                    if (provider && launch && launch.workspace) {\n                        const token = ( new CancellationTokenSource());\n                        const dynamicConfigs = await provider.provideDebugConfigurations(launch.workspace.uri, token.token);\n                        const dynamicConfig = dynamicConfigs.find(c => c.name === name);\n                        if (dynamicConfig) {\n                            return dynamicConfig;\n                        }\n                    }\n                    return undefined;\n                };\n            }\n            this.setSelectedLaunchName(name);\n            let recentDynamicProviders = this.getRecentDynamicConfigurations();\n            if (name && dynamicConfig.type) {\n                recentDynamicProviders.unshift({ name, type: dynamicConfig.type });\n                recentDynamicProviders = distinct(recentDynamicProviders, t => `${t.name} : ${t.type}`);\n                this.storageService.store(DEBUG_RECENT_DYNAMIC_CONFIGURATIONS, JSON.stringify(recentDynamicProviders), 1 , 1 );\n            }\n        }\n        else if (!this.selectedName || names.indexOf(this.selectedName) === -1) {\n            const nameToSet = names.length ? names[0] : undefined;\n            this.setSelectedLaunchName(nameToSet);\n        }\n        if (!config && launch && this.selectedName) {\n            config = launch.getConfiguration(this.selectedName);\n            type = config?.type;\n        }\n        this.selectedType = dynamicConfig?.type || config?.type;\n        this.selectedDynamic = !!dynamicConfig;\n        this.storageService.store(DEBUG_SELECTED_TYPE, dynamicConfig ? this.selectedType : undefined, 1 , 1 );\n        if (type) {\n            this.debugConfigurationTypeContext.set(type);\n        }\n        else {\n            this.debugConfigurationTypeContext.reset();\n        }\n        if (this.selectedLaunch !== previousLaunch || this.selectedName !== previousName || previousSelectedDynamic !== this.selectedDynamic) {\n            this._onDidSelectConfigurationName.fire();\n        }\n    }\n    setSelectedLaunchName(selectedName) {\n        this.selectedName = selectedName;\n        if (this.selectedName) {\n            this.storageService.store(DEBUG_SELECTED_CONFIG_NAME_KEY, this.selectedName, 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_SELECTED_CONFIG_NAME_KEY, 1 );\n        }\n    }\n    dispose() {\n        this.toDispose = dispose(this.toDispose);\n    }\n};\nConfigurationManager = ( __decorate([\n    ( __param(1, IWorkspaceContextService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IQuickInputService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IStorageService)),\n    ( __param(6, IExtensionService)),\n    ( __param(7, IHistoryService)),\n    ( __param(8, IUriIdentityService)),\n    ( __param(9, IContextKeyService))\n], ConfigurationManager));\nclass AbstractLaunch {\n    constructor(configurationManager, adapterManager) {\n        this.configurationManager = configurationManager;\n        this.adapterManager = adapterManager;\n    }\n    getCompound(name) {\n        const config = this.getConfig();\n        if (!config || !config.compounds) {\n            return undefined;\n        }\n        return config.compounds.find(compound => compound.name === name);\n    }\n    getConfigurationNames(ignoreCompoundsAndPresentation = false) {\n        const config = this.getConfig();\n        if (!config || (!Array.isArray(config.configurations) && !Array.isArray(config.compounds))) {\n            return [];\n        }\n        else {\n            const configurations = [];\n            if (config.configurations) {\n                configurations.push(...config.configurations.filter(cfg => cfg && typeof cfg.name === 'string'));\n            }\n            if (ignoreCompoundsAndPresentation) {\n                return ( configurations.map(c => c.name));\n            }\n            if (config.compounds) {\n                configurations.push(...config.compounds.filter(compound => typeof compound.name === 'string' && compound.configurations && compound.configurations.length));\n            }\n            return ( getVisibleAndSorted(configurations).map(c => c.name));\n        }\n    }\n    getConfiguration(name) {\n        const config = objects.deepClone(this.getConfig());\n        if (!config || !config.configurations) {\n            return undefined;\n        }\n        const configuration = config.configurations.find(config => config && config.name === name);\n        if (configuration) {\n            if (this instanceof UserLaunch) {\n                configuration.__configurationTarget = 2 ;\n            }\n            else if (this instanceof WorkspaceLaunch) {\n                configuration.__configurationTarget = 5 ;\n            }\n            else {\n                configuration.__configurationTarget = 6 ;\n            }\n        }\n        return configuration;\n    }\n    async getInitialConfigurationContent(folderUri, type, useInitialConfigs, token) {\n        let content = '';\n        const adapter = type ? this.adapterManager.getEnabledDebugger(type) : await this.adapterManager.guessDebugger(true);\n        if (adapter) {\n            const initialConfigs = useInitialConfigs ?\n                await this.configurationManager.provideDebugConfigurations(folderUri, adapter.type, token || CancellationToken.None) :\n                [];\n            content = await adapter.getInitialConfigurationContent(initialConfigs);\n        }\n        return content;\n    }\n    get hidden() {\n        return false;\n    }\n}\nlet Launch = class Launch extends AbstractLaunch {\n    constructor(configurationManager, adapterManager, workspace, fileService, textFileService, editorService, configurationService) {\n        super(configurationManager, adapterManager);\n        this.workspace = workspace;\n        this.fileService = fileService;\n        this.textFileService = textFileService;\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n    }\n    get uri() {\n        return resources.joinPath(this.workspace.uri, '/.vscode/launch.json');\n    }\n    get name() {\n        return this.workspace.name;\n    }\n    getConfig() {\n        return this.configurationService.inspect('launch', { resource: this.workspace.uri }).workspaceFolderValue;\n    }\n    async openConfigFile({ preserveFocus, type, suppressInitialConfigs }, token) {\n        const resource = this.uri;\n        let created = false;\n        let content = '';\n        try {\n            const fileContent = await this.fileService.readFile(resource);\n            content = ( fileContent.value.toString());\n        }\n        catch {\n            content = await this.getInitialConfigurationContent(this.workspace.uri, type, !suppressInitialConfigs, token);\n            if (!content) {\n                return { editor: null, created: false };\n            }\n            created = true;\n            try {\n                await this.textFileService.write(resource, content);\n            }\n            catch (error) {\n                throw new Error(nls.localize('DebugConfig.failed', \"Unable to create 'launch.json' file inside the '.vscode' folder ({0}).\", error.message));\n            }\n        }\n        const index = content.indexOf(`\"${this.configurationManager.selectedConfiguration.name}\"`);\n        let startLineNumber = 1;\n        for (let i = 0; i < index; i++) {\n            if (content.charAt(i) === '\\n') {\n                startLineNumber++;\n            }\n        }\n        const selection = startLineNumber > 1 ? { startLineNumber, startColumn: 4 } : undefined;\n        const editor = await this.editorService.openEditor({\n            resource,\n            options: {\n                selection,\n                preserveFocus,\n                pinned: created,\n                revealIfVisible: true\n            },\n        }, ACTIVE_GROUP);\n        return ({\n            editor: withUndefinedAsNull(editor),\n            created\n        });\n    }\n    async writeConfiguration(configuration) {\n        const fullConfig = objects.deepClone(this.getConfig());\n        if (!fullConfig.configurations) {\n            fullConfig.configurations = [];\n        }\n        fullConfig.configurations.push(configuration);\n        await this.configurationService.updateValue('launch', fullConfig, { resource: this.workspace.uri }, 6 );\n    }\n};\nLaunch = ( __decorate([\n    ( __param(3, IFileService)),\n    ( __param(4, ITextFileService)),\n    ( __param(5, IEditorService)),\n    ( __param(6, IConfigurationService))\n], Launch));\nlet WorkspaceLaunch = class WorkspaceLaunch extends AbstractLaunch {\n    constructor(configurationManager, adapterManager, editorService, configurationService, contextService) {\n        super(configurationManager, adapterManager);\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n        this.contextService = contextService;\n    }\n    get workspace() {\n        return undefined;\n    }\n    get uri() {\n        return this.contextService.getWorkspace().configuration;\n    }\n    get name() {\n        return ( nls.localize('workspace', \"workspace\"));\n    }\n    getConfig() {\n        return this.configurationService.inspect('launch').workspaceValue;\n    }\n    async openConfigFile({ preserveFocus, type, useInitialConfigs }, token) {\n        const launchExistInFile = !!this.getConfig();\n        if (!launchExistInFile) {\n            const content = await this.getInitialConfigurationContent(undefined, type, useInitialConfigs, token);\n            if (content) {\n                await this.configurationService.updateValue('launch', json.parse(content), 5 );\n            }\n            else {\n                return { editor: null, created: false };\n            }\n        }\n        const editor = await this.editorService.openEditor({\n            resource: this.contextService.getWorkspace().configuration,\n            options: { preserveFocus }\n        }, ACTIVE_GROUP);\n        return ({\n            editor: withUndefinedAsNull(editor),\n            created: false\n        });\n    }\n};\nWorkspaceLaunch = ( __decorate([\n    ( __param(2, IEditorService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IWorkspaceContextService))\n], WorkspaceLaunch));\nlet UserLaunch = class UserLaunch extends AbstractLaunch {\n    constructor(configurationManager, adapterManager, configurationService, preferencesService) {\n        super(configurationManager, adapterManager);\n        this.configurationService = configurationService;\n        this.preferencesService = preferencesService;\n    }\n    get workspace() {\n        return undefined;\n    }\n    get uri() {\n        return this.preferencesService.userSettingsResource;\n    }\n    get name() {\n        return ( nls.localize('user settings', \"user settings\"));\n    }\n    get hidden() {\n        return true;\n    }\n    getConfig() {\n        return this.configurationService.inspect('launch').userValue;\n    }\n    async openConfigFile({ preserveFocus, type, useInitialContent }) {\n        const editor = await this.preferencesService.openUserSettings({ jsonEditor: true, preserveFocus, revealSetting: { key: 'launch' } });\n        return ({\n            editor: withUndefinedAsNull(editor),\n            created: false\n        });\n    }\n};\nUserLaunch = ( __decorate([\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IPreferencesService))\n], UserLaunch));\nexport { ConfigurationManager };\n","import { VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { toDisposable, DisposableStore, Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { clamp } from 'monaco-editor/esm/vs/base/common/numbers.js';\nimport { assertNever } from 'monaco-editor/esm/vs/base/common/assert.js';\nimport { FileType, FilePermission, createFileSystemProviderError, FileSystemProviderErrorCode } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { DEBUG_MEMORY_SCHEME } from '../common/debug.js';\nconst rangeRe = /range=([0-9]+):([0-9]+)/;\nclass DebugMemoryFileSystemProvider {\n    constructor(debugService) {\n        this.debugService = debugService;\n        this.memoryFdCounter = 0;\n        this.fdMemory = ( new Map());\n        this.changeEmitter = ( new Emitter());\n        this.onDidChangeCapabilities = Event.None;\n        this.onDidChangeFile = this.changeEmitter.event;\n        this.capabilities = 0\n            | 1024\n            | 4 ;\n        debugService.onDidEndSession(session => {\n            for (const [fd, memory] of this.fdMemory) {\n                if (memory.session === session) {\n                    this.close(fd);\n                }\n            }\n        });\n    }\n    watch(resource, opts) {\n        if (opts.recursive) {\n            return toDisposable(() => { });\n        }\n        const { session, memoryReference, offset } = this.parseUri(resource);\n        const disposable = ( new DisposableStore());\n        disposable.add(session.onDidChangeState(() => {\n            if (session.state === 3  || session.state === 0 ) {\n                this.changeEmitter.fire([{ type: 2 , resource }]);\n            }\n        }));\n        disposable.add(session.onDidInvalidateMemory(e => {\n            if (e.body.memoryReference !== memoryReference) {\n                return;\n            }\n            if (offset && (e.body.offset >= offset.toOffset || e.body.offset + e.body.count < offset.fromOffset)) {\n                return;\n            }\n            this.changeEmitter.fire([{ resource, type: 0  }]);\n        }));\n        return disposable;\n    }\n    stat(file) {\n        const { readOnly } = this.parseUri(file);\n        return Promise.resolve({\n            type: FileType.File,\n            mtime: 0,\n            ctime: 0,\n            size: 0,\n            permissions: readOnly ? FilePermission.Readonly : undefined,\n        });\n    }\n    mkdir() {\n        throw createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n    }\n    readdir() {\n        throw createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n    }\n    delete() {\n        throw createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n    }\n    rename() {\n        throw createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n    }\n    open(resource, _opts) {\n        const { session, memoryReference, offset } = this.parseUri(resource);\n        const fd = this.memoryFdCounter++;\n        let region = session.getMemory(memoryReference);\n        if (offset) {\n            region = ( new MemoryRegionView(region, offset));\n        }\n        this.fdMemory.set(fd, { session, region });\n        return Promise.resolve(fd);\n    }\n    close(fd) {\n        this.fdMemory.get(fd)?.region.dispose();\n        this.fdMemory.delete(fd);\n        return Promise.resolve();\n    }\n    async writeFile(resource, content) {\n        const { offset } = this.parseUri(resource);\n        if (!offset) {\n            throw createFileSystemProviderError(`Range must be present to read a file`, FileSystemProviderErrorCode.FileNotFound);\n        }\n        const fd = await this.open(resource, { create: false });\n        try {\n            await this.write(fd, offset.fromOffset, content, 0, content.length);\n        }\n        finally {\n            this.close(fd);\n        }\n    }\n    async readFile(resource) {\n        const { offset } = this.parseUri(resource);\n        if (!offset) {\n            throw createFileSystemProviderError(`Range must be present to read a file`, FileSystemProviderErrorCode.FileNotFound);\n        }\n        const data = ( new Uint8Array(offset.toOffset - offset.fromOffset));\n        const fd = await this.open(resource, { create: false });\n        try {\n            await this.read(fd, offset.fromOffset, data, 0, data.length);\n            return data;\n        }\n        finally {\n            this.close(fd);\n        }\n    }\n    async read(fd, pos, data, offset, length) {\n        const memory = this.fdMemory.get(fd);\n        if (!memory) {\n            throw createFileSystemProviderError(`No file with that descriptor open`, FileSystemProviderErrorCode.Unavailable);\n        }\n        const ranges = await memory.region.read(pos, length);\n        let readSoFar = 0;\n        for (const range of ranges) {\n            switch (range.type) {\n                case 1 :\n                    return readSoFar;\n                case 2 :\n                    if (readSoFar > 0) {\n                        return readSoFar;\n                    }\n                    else {\n                        throw createFileSystemProviderError(range.error, FileSystemProviderErrorCode.Unknown);\n                    }\n                case 0 : {\n                    const start = Math.max(0, pos - range.offset);\n                    const toWrite = range.data.slice(start, Math.min(range.data.byteLength, start + (length - readSoFar)));\n                    data.set(toWrite.buffer, offset + readSoFar);\n                    readSoFar += toWrite.byteLength;\n                    break;\n                }\n                default:\n                    assertNever(range);\n            }\n        }\n        return readSoFar;\n    }\n    write(fd, pos, data, offset, length) {\n        const memory = this.fdMemory.get(fd);\n        if (!memory) {\n            throw createFileSystemProviderError(`No file with that descriptor open`, FileSystemProviderErrorCode.Unavailable);\n        }\n        return memory.region.write(pos, VSBuffer.wrap(data).slice(offset, offset + length));\n    }\n    parseUri(uri) {\n        if (uri.scheme !== DEBUG_MEMORY_SCHEME) {\n            throw createFileSystemProviderError(`Cannot open file with scheme ${uri.scheme}`, FileSystemProviderErrorCode.FileNotFound);\n        }\n        const session = this.debugService.getModel().getSession(uri.authority);\n        if (!session) {\n            throw createFileSystemProviderError(`Debug session not found`, FileSystemProviderErrorCode.FileNotFound);\n        }\n        let offset;\n        const rangeMatch = rangeRe.exec(uri.query);\n        if (rangeMatch) {\n            offset = { fromOffset: Number(rangeMatch[1]), toOffset: Number(rangeMatch[2]) };\n        }\n        const [, memoryReference] = uri.path.split('/');\n        return {\n            session,\n            offset,\n            readOnly: !session.capabilities.supportsWriteMemoryRequest,\n            sessionId: uri.authority,\n            memoryReference: decodeURIComponent(memoryReference),\n        };\n    }\n}\nclass MemoryRegionView extends Disposable {\n    constructor(parent, range) {\n        super();\n        this.parent = parent;\n        this.range = range;\n        this.invalidateEmitter = ( new Emitter());\n        this.onDidInvalidate = this.invalidateEmitter.event;\n        this.width = this.range.toOffset - this.range.fromOffset;\n        this.writable = parent.writable;\n        this._register(parent);\n        this._register(parent.onDidInvalidate(e => {\n            const fromOffset = clamp(e.fromOffset - range.fromOffset, 0, this.width);\n            const toOffset = clamp(e.toOffset - range.fromOffset, 0, this.width);\n            if (toOffset > fromOffset) {\n                this.invalidateEmitter.fire({ fromOffset, toOffset });\n            }\n        }));\n    }\n    read(fromOffset, toOffset) {\n        if (fromOffset < 0) {\n            throw new RangeError(`Invalid fromOffset: ${fromOffset}`);\n        }\n        return this.parent.read(this.range.fromOffset + fromOffset, this.range.fromOffset + Math.min(toOffset, this.width));\n    }\n    write(offset, data) {\n        return this.parent.write(this.range.fromOffset + offset, data);\n    }\n}\nexport { DebugMemoryFileSystemProvider };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { toAction } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport * as errors from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { createErrorWithActions } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { isUri, formatPII } from '../common/debugUtils.js';\nimport { IExtensionHostDebugService } from '../../../../platform/debug/common/extensionHostDebug.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet RawDebugSession = class RawDebugSession {\n    constructor(debugAdapter, dbgr, sessionId, name, extensionHostDebugService, openerService, notificationService, dialogSerivce) {\n        this.dbgr = dbgr;\n        this.sessionId = sessionId;\n        this.name = name;\n        this.extensionHostDebugService = extensionHostDebugService;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.dialogSerivce = dialogSerivce;\n        this.allThreadsContinued = true;\n        this._readyForBreakpoints = false;\n        this.debugAdapterStopped = false;\n        this.inShutdown = false;\n        this.terminated = false;\n        this.firedAdapterExitEvent = false;\n        this.startTime = 0;\n        this.didReceiveStoppedEvent = false;\n        this._onDidInitialize = ( new Emitter());\n        this._onDidStop = ( new Emitter());\n        this._onDidContinued = ( new Emitter());\n        this._onDidTerminateDebugee = ( new Emitter());\n        this._onDidExitDebugee = ( new Emitter());\n        this._onDidThread = ( new Emitter());\n        this._onDidOutput = ( new Emitter());\n        this._onDidBreakpoint = ( new Emitter());\n        this._onDidLoadedSource = ( new Emitter());\n        this._onDidProgressStart = ( new Emitter());\n        this._onDidProgressUpdate = ( new Emitter());\n        this._onDidProgressEnd = ( new Emitter());\n        this._onDidInvalidated = ( new Emitter());\n        this._onDidInvalidateMemory = ( new Emitter());\n        this._onDidCustomEvent = ( new Emitter());\n        this._onDidEvent = ( new Emitter());\n        this._onDidExitAdapter = ( new Emitter());\n        this.stoppedSinceLastStep = false;\n        this.toDispose = [];\n        this.debugAdapter = debugAdapter;\n        this._capabilities = Object.create(null);\n        this.toDispose.push(this.debugAdapter.onError(err => {\n            this.shutdown(err);\n        }));\n        this.toDispose.push(this.debugAdapter.onExit(code => {\n            if (code !== 0) {\n                this.shutdown(( new Error(`exit code: ${code}`)));\n            }\n            else {\n                this.shutdown();\n            }\n        }));\n        this.debugAdapter.onEvent(event => {\n            switch (event.event) {\n                case 'initialized':\n                    this._readyForBreakpoints = true;\n                    this._onDidInitialize.fire(event);\n                    break;\n                case 'loadedSource':\n                    this._onDidLoadedSource.fire(event);\n                    break;\n                case 'capabilities':\n                    if (event.body) {\n                        const capabilities = event.body.capabilities;\n                        this.mergeCapabilities(capabilities);\n                    }\n                    break;\n                case 'stopped':\n                    this.didReceiveStoppedEvent = true;\n                    this.stoppedSinceLastStep = true;\n                    this._onDidStop.fire(event);\n                    break;\n                case 'continued':\n                    this.allThreadsContinued = event.body.allThreadsContinued === false ? false : true;\n                    this._onDidContinued.fire(event);\n                    break;\n                case 'thread':\n                    this._onDidThread.fire(event);\n                    break;\n                case 'output':\n                    this._onDidOutput.fire(event);\n                    break;\n                case 'breakpoint':\n                    this._onDidBreakpoint.fire(event);\n                    break;\n                case 'terminated':\n                    this._onDidTerminateDebugee.fire(event);\n                    break;\n                case 'exit':\n                    this._onDidExitDebugee.fire(event);\n                    break;\n                case 'progressStart':\n                    this._onDidProgressStart.fire(event);\n                    break;\n                case 'progressUpdate':\n                    this._onDidProgressUpdate.fire(event);\n                    break;\n                case 'progressEnd':\n                    this._onDidProgressEnd.fire(event);\n                    break;\n                case 'invalidated':\n                    this._onDidInvalidated.fire(event);\n                    break;\n                case 'memory':\n                    this._onDidInvalidateMemory.fire(event);\n                    break;\n                case 'process':\n                    break;\n                case 'module':\n                    break;\n                default:\n                    this._onDidCustomEvent.fire(event);\n                    break;\n            }\n            this._onDidEvent.fire(event);\n        });\n        this.debugAdapter.onRequest(request => this.dispatchRequest(request));\n    }\n    get isInShutdown() {\n        return this.inShutdown;\n    }\n    get onDidExitAdapter() {\n        return this._onDidExitAdapter.event;\n    }\n    get capabilities() {\n        return this._capabilities;\n    }\n    get readyForBreakpoints() {\n        return this._readyForBreakpoints;\n    }\n    get onDidInitialize() {\n        return this._onDidInitialize.event;\n    }\n    get onDidStop() {\n        return this._onDidStop.event;\n    }\n    get onDidContinued() {\n        return this._onDidContinued.event;\n    }\n    get onDidTerminateDebugee() {\n        return this._onDidTerminateDebugee.event;\n    }\n    get onDidExitDebugee() {\n        return this._onDidExitDebugee.event;\n    }\n    get onDidThread() {\n        return this._onDidThread.event;\n    }\n    get onDidOutput() {\n        return this._onDidOutput.event;\n    }\n    get onDidBreakpoint() {\n        return this._onDidBreakpoint.event;\n    }\n    get onDidLoadedSource() {\n        return this._onDidLoadedSource.event;\n    }\n    get onDidCustomEvent() {\n        return this._onDidCustomEvent.event;\n    }\n    get onDidProgressStart() {\n        return this._onDidProgressStart.event;\n    }\n    get onDidProgressUpdate() {\n        return this._onDidProgressUpdate.event;\n    }\n    get onDidProgressEnd() {\n        return this._onDidProgressEnd.event;\n    }\n    get onDidInvalidated() {\n        return this._onDidInvalidated.event;\n    }\n    get onDidInvalidateMemory() {\n        return this._onDidInvalidateMemory.event;\n    }\n    get onDidEvent() {\n        return this._onDidEvent.event;\n    }\n    async start() {\n        if (!this.debugAdapter) {\n            return Promise.reject(( new Error(( nls.localize('noDebugAdapterStart', \"No debug adapter, can not start debug session.\")))));\n        }\n        await this.debugAdapter.startSession();\n        this.startTime = ( new Date()).getTime();\n    }\n    async initialize(args) {\n        const response = await this.send('initialize', args, undefined, undefined, false);\n        if (response) {\n            this.mergeCapabilities(response.body);\n        }\n        return response;\n    }\n    disconnect(args) {\n        const terminateDebuggee = this.capabilities.supportTerminateDebuggee ? args.terminateDebuggee : undefined;\n        const suspendDebuggee = this.capabilities.supportTerminateDebuggee && this.capabilities.supportSuspendDebuggee ? args.suspendDebuggee : undefined;\n        return this.shutdown(undefined, args.restart, terminateDebuggee, suspendDebuggee);\n    }\n    async launchOrAttach(config) {\n        const response = await this.send(config.request, config, undefined, undefined, false);\n        if (response) {\n            this.mergeCapabilities(response.body);\n        }\n        return response;\n    }\n    terminate(restart = false) {\n        if (this.capabilities.supportsTerminateRequest) {\n            if (!this.terminated) {\n                this.terminated = true;\n                return this.send('terminate', { restart }, undefined);\n            }\n            return this.disconnect({ terminateDebuggee: true, restart });\n        }\n        return Promise.reject(( new Error('terminated not supported')));\n    }\n    restart(args) {\n        if (this.capabilities.supportsRestartRequest) {\n            return this.send('restart', args);\n        }\n        return Promise.reject(( new Error('restart not supported')));\n    }\n    async next(args) {\n        this.stoppedSinceLastStep = false;\n        const response = await this.send('next', args);\n        if (!this.stoppedSinceLastStep) {\n            this.fireSimulatedContinuedEvent(args.threadId);\n        }\n        return response;\n    }\n    async stepIn(args) {\n        this.stoppedSinceLastStep = false;\n        const response = await this.send('stepIn', args);\n        if (!this.stoppedSinceLastStep) {\n            this.fireSimulatedContinuedEvent(args.threadId);\n        }\n        return response;\n    }\n    async stepOut(args) {\n        this.stoppedSinceLastStep = false;\n        const response = await this.send('stepOut', args);\n        if (!this.stoppedSinceLastStep) {\n            this.fireSimulatedContinuedEvent(args.threadId);\n        }\n        return response;\n    }\n    async continue(args) {\n        this.stoppedSinceLastStep = false;\n        const response = await this.send('continue', args);\n        if (response && response.body && response.body.allThreadsContinued !== undefined) {\n            this.allThreadsContinued = response.body.allThreadsContinued;\n        }\n        if (!this.stoppedSinceLastStep) {\n            this.fireSimulatedContinuedEvent(args.threadId, this.allThreadsContinued);\n        }\n        return response;\n    }\n    pause(args) {\n        return this.send('pause', args);\n    }\n    terminateThreads(args) {\n        if (this.capabilities.supportsTerminateThreadsRequest) {\n            return this.send('terminateThreads', args);\n        }\n        return Promise.reject(( new Error('terminateThreads not supported')));\n    }\n    setVariable(args) {\n        if (this.capabilities.supportsSetVariable) {\n            return this.send('setVariable', args);\n        }\n        return Promise.reject(( new Error('setVariable not supported')));\n    }\n    setExpression(args) {\n        if (this.capabilities.supportsSetExpression) {\n            return this.send('setExpression', args);\n        }\n        return Promise.reject(( new Error('setExpression not supported')));\n    }\n    async restartFrame(args, threadId) {\n        if (this.capabilities.supportsRestartFrame) {\n            this.stoppedSinceLastStep = false;\n            const response = await this.send('restartFrame', args);\n            if (!this.stoppedSinceLastStep) {\n                this.fireSimulatedContinuedEvent(threadId);\n            }\n            return response;\n        }\n        return Promise.reject(( new Error('restartFrame not supported')));\n    }\n    stepInTargets(args) {\n        if (this.capabilities.supportsStepInTargetsRequest) {\n            return this.send('stepInTargets', args);\n        }\n        return Promise.reject(( new Error('stepInTargets not supported')));\n    }\n    completions(args, token) {\n        if (this.capabilities.supportsCompletionsRequest) {\n            return this.send('completions', args, token);\n        }\n        return Promise.reject(( new Error('completions not supported')));\n    }\n    setBreakpoints(args) {\n        return this.send('setBreakpoints', args);\n    }\n    setFunctionBreakpoints(args) {\n        if (this.capabilities.supportsFunctionBreakpoints) {\n            return this.send('setFunctionBreakpoints', args);\n        }\n        return Promise.reject(( new Error('setFunctionBreakpoints not supported')));\n    }\n    dataBreakpointInfo(args) {\n        if (this.capabilities.supportsDataBreakpoints) {\n            return this.send('dataBreakpointInfo', args);\n        }\n        return Promise.reject(( new Error('dataBreakpointInfo not supported')));\n    }\n    setDataBreakpoints(args) {\n        if (this.capabilities.supportsDataBreakpoints) {\n            return this.send('setDataBreakpoints', args);\n        }\n        return Promise.reject(( new Error('setDataBreakpoints not supported')));\n    }\n    setExceptionBreakpoints(args) {\n        return this.send('setExceptionBreakpoints', args);\n    }\n    breakpointLocations(args) {\n        if (this.capabilities.supportsBreakpointLocationsRequest) {\n            return this.send('breakpointLocations', args);\n        }\n        return Promise.reject(( new Error('breakpointLocations is not supported')));\n    }\n    configurationDone() {\n        if (this.capabilities.supportsConfigurationDoneRequest) {\n            return this.send('configurationDone', null);\n        }\n        return Promise.reject(( new Error('configurationDone not supported')));\n    }\n    stackTrace(args, token) {\n        return this.send('stackTrace', args, token);\n    }\n    exceptionInfo(args) {\n        if (this.capabilities.supportsExceptionInfoRequest) {\n            return this.send('exceptionInfo', args);\n        }\n        return Promise.reject(( new Error('exceptionInfo not supported')));\n    }\n    scopes(args, token) {\n        return this.send('scopes', args, token);\n    }\n    variables(args, token) {\n        return this.send('variables', args, token);\n    }\n    source(args) {\n        return this.send('source', args);\n    }\n    loadedSources(args) {\n        if (this.capabilities.supportsLoadedSourcesRequest) {\n            return this.send('loadedSources', args);\n        }\n        return Promise.reject(( new Error('loadedSources not supported')));\n    }\n    threads() {\n        return this.send('threads', null);\n    }\n    evaluate(args) {\n        return this.send('evaluate', args);\n    }\n    async stepBack(args) {\n        if (this.capabilities.supportsStepBack) {\n            this.stoppedSinceLastStep = false;\n            const response = await this.send('stepBack', args);\n            if (!this.stoppedSinceLastStep) {\n                this.fireSimulatedContinuedEvent(args.threadId);\n            }\n            return response;\n        }\n        return Promise.reject(( new Error('stepBack not supported')));\n    }\n    async reverseContinue(args) {\n        if (this.capabilities.supportsStepBack) {\n            this.stoppedSinceLastStep = false;\n            const response = await this.send('reverseContinue', args);\n            if (!this.stoppedSinceLastStep) {\n                this.fireSimulatedContinuedEvent(args.threadId);\n            }\n            return response;\n        }\n        return Promise.reject(( new Error('reverseContinue not supported')));\n    }\n    gotoTargets(args) {\n        if (this.capabilities.supportsGotoTargetsRequest) {\n            return this.send('gotoTargets', args);\n        }\n        return Promise.reject(( new Error('gotoTargets is not supported')));\n    }\n    async goto(args) {\n        if (this.capabilities.supportsGotoTargetsRequest) {\n            this.stoppedSinceLastStep = false;\n            const response = await this.send('goto', args);\n            if (!this.stoppedSinceLastStep) {\n                this.fireSimulatedContinuedEvent(args.threadId);\n            }\n            return response;\n        }\n        return Promise.reject(( new Error('goto is not supported')));\n    }\n    async setInstructionBreakpoints(args) {\n        if (this.capabilities.supportsInstructionBreakpoints) {\n            return await this.send('setInstructionBreakpoints', args);\n        }\n        return Promise.reject(( new Error('setInstructionBreakpoints is not supported')));\n    }\n    async disassemble(args) {\n        if (this.capabilities.supportsDisassembleRequest) {\n            return await this.send('disassemble', args);\n        }\n        return Promise.reject(( new Error('disassemble is not supported')));\n    }\n    async readMemory(args) {\n        if (this.capabilities.supportsReadMemoryRequest) {\n            return await this.send('readMemory', args);\n        }\n        return Promise.reject(( new Error('readMemory is not supported')));\n    }\n    async writeMemory(args) {\n        if (this.capabilities.supportsWriteMemoryRequest) {\n            return await this.send('writeMemory', args);\n        }\n        return Promise.reject(( new Error('writeMemory is not supported')));\n    }\n    cancel(args) {\n        return this.send('cancel', args);\n    }\n    custom(request, args) {\n        return this.send(request, args);\n    }\n    async shutdown(error, restart = false, terminateDebuggee = undefined, suspendDebuggee = undefined) {\n        if (!this.inShutdown) {\n            this.inShutdown = true;\n            if (this.debugAdapter) {\n                try {\n                    const args = { restart };\n                    if (typeof terminateDebuggee === 'boolean') {\n                        args.terminateDebuggee = terminateDebuggee;\n                    }\n                    if (typeof suspendDebuggee === 'boolean') {\n                        args.suspendDebuggee = suspendDebuggee;\n                    }\n                    await this.send('disconnect', args, undefined, error ? 200 : 2000);\n                }\n                catch (e) {\n                }\n                finally {\n                    await this.stopAdapter(error);\n                }\n            }\n            else {\n                return this.stopAdapter(error);\n            }\n        }\n    }\n    async stopAdapter(error) {\n        try {\n            if (this.debugAdapter) {\n                const da = this.debugAdapter;\n                this.debugAdapter = null;\n                await da.stopSession();\n                this.debugAdapterStopped = true;\n            }\n        }\n        finally {\n            this.fireAdapterExitEvent(error);\n        }\n    }\n    fireAdapterExitEvent(error) {\n        if (!this.firedAdapterExitEvent) {\n            this.firedAdapterExitEvent = true;\n            const e = {\n                emittedStopped: this.didReceiveStoppedEvent,\n                sessionLengthInSeconds: (( new Date()).getTime() - this.startTime) / 1000\n            };\n            if (error && !this.debugAdapterStopped) {\n                e.error = error;\n            }\n            this._onDidExitAdapter.fire(e);\n        }\n    }\n    async dispatchRequest(request) {\n        const response = {\n            type: 'response',\n            seq: 0,\n            command: request.command,\n            request_seq: request.seq,\n            success: true\n        };\n        const safeSendResponse = (response) => this.debugAdapter && this.debugAdapter.sendResponse(response);\n        if (request.command === 'launchVSCode') {\n            try {\n                let result = await this.launchVsCode(request.arguments);\n                if (!result.success) {\n                    const { confirmed } = await this.dialogSerivce.confirm({\n                        type: Severity.Warning,\n                        message: ( nls.localize(\n                            'canNotStart',\n                            \"The debugger needs to open a new tab or window for the debuggee but the browser prevented this. You must give permission to continue.\"\n                        )),\n                        primaryButton: ( nls.localize({ key: 'continue', comment: ['&& denotes a mnemonic'] }, \"&&Continue\"))\n                    });\n                    if (confirmed) {\n                        result = await this.launchVsCode(request.arguments);\n                    }\n                    else {\n                        response.success = false;\n                        safeSendResponse(response);\n                        await this.shutdown();\n                    }\n                }\n                response.body = {\n                    rendererDebugPort: result.rendererDebugPort,\n                };\n                safeSendResponse(response);\n            }\n            catch (err) {\n                response.success = false;\n                response.message = err.message;\n                safeSendResponse(response);\n            }\n        }\n        else if (request.command === 'runInTerminal') {\n            try {\n                const shellProcessId = await this.dbgr.runInTerminal(request.arguments, this.sessionId);\n                const resp = response;\n                resp.body = {};\n                if (typeof shellProcessId === 'number') {\n                    resp.body.shellProcessId = shellProcessId;\n                }\n                safeSendResponse(resp);\n            }\n            catch (err) {\n                response.success = false;\n                response.message = err.message;\n                safeSendResponse(response);\n            }\n        }\n        else if (request.command === 'startDebugging') {\n            try {\n                const args = request.arguments;\n                const config = {\n                    ...args.configuration,\n                    ...{\n                        request: args.request,\n                        type: this.dbgr.type,\n                        name: args.configuration.name || this.name\n                    }\n                };\n                const success = await this.dbgr.startDebugging(config, this.sessionId);\n                if (success) {\n                    safeSendResponse(response);\n                }\n                else {\n                    response.success = false;\n                    response.message = 'Failed to start debugging';\n                    safeSendResponse(response);\n                }\n            }\n            catch (err) {\n                response.success = false;\n                response.message = err.message;\n                safeSendResponse(response);\n            }\n        }\n        else {\n            response.success = false;\n            response.message = `unknown request '${request.command}'`;\n            safeSendResponse(response);\n        }\n    }\n    launchVsCode(vscodeArgs) {\n        const args = [];\n        for (const arg of vscodeArgs.args) {\n            const a2 = (arg.prefix || '') + (arg.path || '');\n            const match = /^--(.+)=(.+)$/.exec(a2);\n            if (match && match.length === 3) {\n                const key = match[1];\n                let value = match[2];\n                if ((key === 'file-uri' || key === 'folder-uri') && !isUri(arg.path)) {\n                    value = isUri(value) ? value : ( URI.file(value).toString());\n                }\n                args.push(`--${key}=${value}`);\n            }\n            else {\n                args.push(a2);\n            }\n        }\n        if (vscodeArgs.env) {\n            args.push(`--extensionEnvironment=${JSON.stringify(vscodeArgs.env)}`);\n        }\n        return this.extensionHostDebugService.openExtensionDevelopmentHostWindow(args, !!vscodeArgs.debugRenderer);\n    }\n    send(command, args, token, timeout, showErrors = true) {\n        return ( new Promise((completeDispatch, errorDispatch) => {\n            if (!this.debugAdapter) {\n                if (this.inShutdown) {\n                    completeDispatch(undefined);\n                }\n                else {\n                    errorDispatch(( new Error(( nls.localize(\n                        'noDebugAdapter',\n                        \"No debugger available found. Can not send '{0}'.\",\n                        command\n                    )))));\n                }\n                return;\n            }\n            let cancelationListener;\n            const requestId = this.debugAdapter.sendRequest(command, args, (response) => {\n                cancelationListener?.dispose();\n                if (response.success) {\n                    completeDispatch(response);\n                }\n                else {\n                    errorDispatch(response);\n                }\n            }, timeout);\n            if (token) {\n                cancelationListener = token.onCancellationRequested(() => {\n                    cancelationListener.dispose();\n                    if (this.capabilities.supportsCancelRequest) {\n                        this.cancel({ requestId });\n                    }\n                });\n            }\n        })).then(undefined, err => Promise.reject(this.handleErrorResponse(err, showErrors)));\n    }\n    handleErrorResponse(errorResponse, showErrors) {\n        if (errorResponse.command === 'canceled' && errorResponse.message === 'canceled') {\n            return new errors.CancellationError();\n        }\n        const error = errorResponse?.body?.error;\n        const errorMessage = errorResponse?.message || '';\n        const userMessage = error ? formatPII(error.format, false, error.variables) : errorMessage;\n        const url = error?.url;\n        if (error && url) {\n            const label = error.urlLabel ? error.urlLabel : ( nls.localize('moreInfo', \"More Info\"));\n            const uri = ( URI.parse(url));\n            const actionId = uri.scheme === Schemas.command ? 'debug.moreInfo.command' : 'debug.moreInfo';\n            return createErrorWithActions(userMessage, [toAction({ id: actionId, label, run: () => this.openerService.open(uri, { allowCommands: true }) })]);\n        }\n        if (showErrors && error && error.format && error.showUser) {\n            this.notificationService.error(userMessage);\n        }\n        const result = new errors.ErrorNoTelemetry(userMessage);\n        result.showUser = error?.showUser;\n        return result;\n    }\n    mergeCapabilities(capabilities) {\n        if (capabilities) {\n            this._capabilities = objects.mixin(this._capabilities, capabilities);\n        }\n    }\n    fireSimulatedContinuedEvent(threadId, allThreadsContinued = false) {\n        this._onDidContinued.fire({\n            type: 'event',\n            event: 'continued',\n            body: {\n                threadId,\n                allThreadsContinued\n            },\n            seq: undefined\n        });\n    }\n    dispose() {\n        dispose(this.toDispose);\n    }\n};\nRawDebugSession = ( __decorate([\n    ( __param(4, IExtensionHostDebugService)),\n    ( __param(5, IOpenerService)),\n    ( __param(6, INotificationService)),\n    ( __param(7, IDialogService))\n], RawDebugSession));\nexport { RawDebugSession };\n","import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { isObject, isString } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ExpressionContainer } from './debugModel.js';\nconst MAX_REPL_LENGTH = 10000;\nlet topReplElementCounter = 0;\nconst getUniqueId = () => `topReplElement:${topReplElementCounter++}`;\nclass ReplOutputElement {\n    constructor(session, id, value, severity, sourceData, expression) {\n        this.session = session;\n        this.id = id;\n        this.value = value;\n        this.severity = severity;\n        this.sourceData = sourceData;\n        this.expression = expression;\n        this._count = 1;\n        this._onDidChangeCount = ( new Emitter());\n    }\n    toString(includeSource = false) {\n        let valueRespectCount = this.value;\n        for (let i = 1; i < this.count; i++) {\n            valueRespectCount += (valueRespectCount.endsWith('\\n') ? '' : '\\n') + this.value;\n        }\n        const sourceStr = (this.sourceData && includeSource) ? ` ${this.sourceData.source.name}` : '';\n        return valueRespectCount + sourceStr;\n    }\n    getId() {\n        return this.id;\n    }\n    getChildren() {\n        return this.expression?.getChildren() || Promise.resolve([]);\n    }\n    set count(value) {\n        this._count = value;\n        this._onDidChangeCount.fire();\n    }\n    get count() {\n        return this._count;\n    }\n    get onDidChangeCount() {\n        return this._onDidChangeCount.event;\n    }\n    get hasChildren() {\n        return !!this.expression?.hasChildren;\n    }\n}\nclass ReplVariableElement {\n    constructor(expression, severity, sourceData) {\n        this.expression = expression;\n        this.severity = severity;\n        this.sourceData = sourceData;\n        this.id = generateUuid();\n        this.hasChildren = expression.hasChildren;\n    }\n    getChildren() {\n        return this.expression.getChildren();\n    }\n    toString() {\n        return ( this.expression.toString());\n    }\n    getId() {\n        return this.id;\n    }\n}\nclass RawObjectReplElement {\n    static { this.MAX_CHILDREN = 1000; }\n    constructor(id, name, valueObj, sourceData, annotation) {\n        this.id = id;\n        this.name = name;\n        this.valueObj = valueObj;\n        this.sourceData = sourceData;\n        this.annotation = annotation;\n    }\n    getId() {\n        return this.id;\n    }\n    get value() {\n        if (this.valueObj === null) {\n            return 'null';\n        }\n        else if (Array.isArray(this.valueObj)) {\n            return `Array[${this.valueObj.length}]`;\n        }\n        else if (isObject(this.valueObj)) {\n            return 'Object';\n        }\n        else if (isString(this.valueObj)) {\n            return `\"${this.valueObj}\"`;\n        }\n        return String(this.valueObj) || '';\n    }\n    get hasChildren() {\n        return (Array.isArray(this.valueObj) && this.valueObj.length > 0) || (isObject(this.valueObj) && Object.getOwnPropertyNames(this.valueObj).length > 0);\n    }\n    evaluateLazy() {\n        throw new Error('Method not implemented.');\n    }\n    getChildren() {\n        let result = [];\n        if (Array.isArray(this.valueObj)) {\n            result = ( this.valueObj.slice(0, RawObjectReplElement.MAX_CHILDREN)\n                .map((v, index) => ( new RawObjectReplElement(`${this.id}:${index}`, String(index), v))));\n        }\n        else if (isObject(this.valueObj)) {\n            result = ( Object.getOwnPropertyNames(this.valueObj).slice(0, RawObjectReplElement.MAX_CHILDREN)\n                .map((key, index) => ( new RawObjectReplElement(`${this.id}:${index}`, key, this.valueObj[key]))));\n        }\n        return Promise.resolve(result);\n    }\n    toString() {\n        return `${this.name}\\n${this.value}`;\n    }\n}\nclass ReplEvaluationInput {\n    constructor(value) {\n        this.value = value;\n        this.id = generateUuid();\n    }\n    toString() {\n        return this.value;\n    }\n    getId() {\n        return this.id;\n    }\n}\nclass ReplEvaluationResult extends ExpressionContainer {\n    get available() {\n        return this._available;\n    }\n    constructor(originalExpression) {\n        super(undefined, undefined, 0, generateUuid());\n        this.originalExpression = originalExpression;\n        this._available = true;\n    }\n    async evaluateExpression(expression, session, stackFrame, context) {\n        const result = await super.evaluateExpression(expression, session, stackFrame, context);\n        this._available = result;\n        return result;\n    }\n    toString() {\n        return `${this.value}`;\n    }\n}\nclass ReplGroup {\n    static { this.COUNTER = 0; }\n    constructor(name, autoExpand, sourceData) {\n        this.name = name;\n        this.autoExpand = autoExpand;\n        this.sourceData = sourceData;\n        this.children = [];\n        this.ended = false;\n        this.id = `replGroup:${ReplGroup.COUNTER++}`;\n    }\n    get hasChildren() {\n        return true;\n    }\n    getId() {\n        return this.id;\n    }\n    toString(includeSource = false) {\n        const sourceStr = (includeSource && this.sourceData) ? ` ${this.sourceData.source.name}` : '';\n        return this.name + sourceStr;\n    }\n    addChild(child) {\n        const lastElement = this.children.length ? this.children[this.children.length - 1] : undefined;\n        if (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n            lastElement.addChild(child);\n        }\n        else {\n            this.children.push(child);\n        }\n    }\n    getChildren() {\n        return this.children;\n    }\n    end() {\n        const lastElement = this.children.length ? this.children[this.children.length - 1] : undefined;\n        if (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n            lastElement.end();\n        }\n        else {\n            this.ended = true;\n        }\n    }\n    get hasEnded() {\n        return this.ended;\n    }\n}\nfunction areSourcesEqual(first, second) {\n    if (!first && !second) {\n        return true;\n    }\n    if (first && second) {\n        return first.column === second.column && first.lineNumber === second.lineNumber && ( first.source.uri.toString()) === ( second.source.uri.toString());\n    }\n    return false;\n}\nclass ReplModel {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n        this.replElements = [];\n        this._onDidChangeElements = ( new Emitter());\n        this.onDidChangeElements = this._onDidChangeElements.event;\n    }\n    getReplElements() {\n        return this.replElements;\n    }\n    async addReplExpression(session, stackFrame, name) {\n        this.addReplElement(( new ReplEvaluationInput(name)));\n        const result = ( new ReplEvaluationResult(name));\n        await result.evaluateExpression(name, session, stackFrame, 'repl');\n        this.addReplElement(result);\n    }\n    appendToRepl(session, { output, expression, sev, source }) {\n        const clearAnsiSequence = '\\u001b[2J';\n        const clearAnsiIndex = output.lastIndexOf(clearAnsiSequence);\n        if (clearAnsiIndex !== -1) {\n            this.removeReplExpressions();\n            this.appendToRepl(session, { output: ( nls.localize('consoleCleared', \"Console was cleared\")), sev: Severity.Ignore });\n            output = output.substring(clearAnsiIndex + clearAnsiSequence.length);\n        }\n        if (expression) {\n            this.addReplElement(output\n                ? ( new ReplOutputElement(session, getUniqueId(), output, sev, source, expression))\n                : ( new ReplVariableElement(expression, sev, source)));\n            return;\n        }\n        const previousElement = this.replElements.length ? this.replElements[this.replElements.length - 1] : undefined;\n        if (previousElement instanceof ReplOutputElement && previousElement.severity === sev) {\n            const config = this.configurationService.getValue('debug');\n            if (previousElement.value === output && areSourcesEqual(previousElement.sourceData, source) && config.console.collapseIdenticalLines) {\n                previousElement.count++;\n                return;\n            }\n            if (!previousElement.value.endsWith('\\n') && !previousElement.value.endsWith('\\r\\n') && previousElement.count === 1) {\n                this.replElements[this.replElements.length - 1] = ( new ReplOutputElement(session, getUniqueId(), previousElement.value + output, sev, source));\n                this._onDidChangeElements.fire();\n                return;\n            }\n        }\n        const element = ( new ReplOutputElement(session, getUniqueId(), output, sev, source));\n        this.addReplElement(element);\n    }\n    startGroup(name, autoExpand, sourceData) {\n        const group = ( new ReplGroup(name, autoExpand, sourceData));\n        this.addReplElement(group);\n    }\n    endGroup() {\n        const lastElement = this.replElements[this.replElements.length - 1];\n        if (lastElement instanceof ReplGroup) {\n            lastElement.end();\n        }\n    }\n    addReplElement(newElement) {\n        const lastElement = this.replElements.length ? this.replElements[this.replElements.length - 1] : undefined;\n        if (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n            lastElement.addChild(newElement);\n        }\n        else {\n            this.replElements.push(newElement);\n            if (this.replElements.length > MAX_REPL_LENGTH) {\n                this.replElements.splice(0, this.replElements.length - MAX_REPL_LENGTH);\n            }\n        }\n        this._onDidChangeElements.fire();\n    }\n    removeReplExpressions() {\n        if (this.replElements.length > 0) {\n            this.replElements = [];\n            this._onDidChangeElements.fire();\n        }\n    }\n    clone() {\n        const newRepl = ( new ReplModel(this.configurationService));\n        newRepl.replElements = this.replElements.slice();\n        return newRepl;\n    }\n}\nexport { RawObjectReplElement, ReplEvaluationInput, ReplEvaluationResult, ReplGroup, ReplModel, ReplOutputElement, ReplVariableElement };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as aria from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler, Queue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { canceled } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { normalizeDriveLetter } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { MutableDisposable, dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { mixin } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport * as resources from 'monaco-editor/esm/vs/base/common/resources.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IProductService } from 'monaco-editor/esm/vs/platform/product/common/productService.js';\nimport { ITelemetryService, ICustomEndpointTelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { RawDebugSession } from './rawDebugSession.js';\nimport { IDebugService, VIEWLET_ID } from '../common/debug.js';\nimport { MemoryRegion, ExpressionContainer, Thread } from '../common/debugModel.js';\nimport { Source } from '../common/debugSource.js';\nimport { filterExceptionsFromTelemetry } from '../common/debugUtils.js';\nimport { ReplModel } from '../common/replModel.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nlet DebugSession = class DebugSession {\n    constructor(id, _configuration, root, model, options, debugService, telemetryService, hostService, configurationService, paneCompositeService, workspaceContextService, productService, notificationService, lifecycleService, uriIdentityService, instantiationService, customEndpointTelemetryService, workbenchEnvironmentService, logService) {\n        this.id = id;\n        this._configuration = _configuration;\n        this.root = root;\n        this.model = model;\n        this.debugService = debugService;\n        this.telemetryService = telemetryService;\n        this.hostService = hostService;\n        this.configurationService = configurationService;\n        this.paneCompositeService = paneCompositeService;\n        this.workspaceContextService = workspaceContextService;\n        this.productService = productService;\n        this.notificationService = notificationService;\n        this.uriIdentityService = uriIdentityService;\n        this.instantiationService = instantiationService;\n        this.customEndpointTelemetryService = customEndpointTelemetryService;\n        this.workbenchEnvironmentService = workbenchEnvironmentService;\n        this.logService = logService;\n        this.initialized = false;\n        this.sources = ( new Map());\n        this.threads = ( new Map());\n        this.threadIds = [];\n        this.cancellationMap = ( new Map());\n        this.rawListeners = [];\n        this.stoppedDetails = [];\n        this._onDidChangeState = ( new Emitter());\n        this._onDidEndAdapter = ( new Emitter());\n        this._onDidLoadedSource = ( new Emitter());\n        this._onDidCustomEvent = ( new Emitter());\n        this._onDidProgressStart = ( new Emitter());\n        this._onDidProgressUpdate = ( new Emitter());\n        this._onDidProgressEnd = ( new Emitter());\n        this._onDidInvalidMemory = ( new Emitter());\n        this._onDidChangeREPLElements = ( new Emitter());\n        this._onDidChangeName = ( new Emitter());\n        this._options = options || {};\n        this.parentSession = this._options.parentSession;\n        if (this.hasSeparateRepl()) {\n            this.repl = ( new ReplModel(this.configurationService));\n        }\n        else {\n            this.repl = this.parentSession.repl;\n        }\n        const toDispose = ( new DisposableStore());\n        const replListener = toDispose.add(( new MutableDisposable()));\n        replListener.value = this.repl.onDidChangeElements(() => this._onDidChangeREPLElements.fire());\n        if (lifecycleService) {\n            toDispose.add(lifecycleService.onWillShutdown(() => {\n                this.shutdown();\n                dispose(toDispose);\n            }));\n        }\n        const compoundRoot = this._options.compoundRoot;\n        if (compoundRoot) {\n            toDispose.add(compoundRoot.onDidSessionStop(() => this.terminate()));\n        }\n        this.passFocusScheduler = ( new RunOnceScheduler(() => {\n            if (( this.debugService.getModel().getSessions().some(s => s.state === 2 )) || ( this.getAllThreads().some(t => t.stopped))) {\n                if (typeof this.lastContinuedThreadId === 'number') {\n                    const thread = this.debugService.getViewModel().focusedThread;\n                    if (thread && thread.threadId === this.lastContinuedThreadId && !thread.stopped) {\n                        const toFocusThreadId = this.getStoppedDetails()?.threadId;\n                        const toFocusThread = typeof toFocusThreadId === 'number' ? this.getThread(toFocusThreadId) : undefined;\n                        this.debugService.focusStackFrame(undefined, toFocusThread);\n                    }\n                }\n                else {\n                    const session = this.debugService.getViewModel().focusedSession;\n                    if (session && session.getId() === this.getId() && session.state !== 2 ) {\n                        this.debugService.focusStackFrame(undefined);\n                    }\n                }\n            }\n        }, 800));\n        const parent = this._options.parentSession;\n        if (parent) {\n            toDispose.add(parent.onDidEndAdapter(() => {\n                if (!this.hasSeparateRepl() && this.raw?.isInShutdown === false) {\n                    this.repl = this.repl.clone();\n                    replListener.value = this.repl.onDidChangeElements(() => this._onDidChangeREPLElements.fire());\n                    this.parentSession = undefined;\n                }\n            }));\n        }\n    }\n    getId() {\n        return this.id;\n    }\n    setSubId(subId) {\n        this._subId = subId;\n    }\n    getMemory(memoryReference) {\n        return ( new MemoryRegion(memoryReference, this));\n    }\n    get subId() {\n        return this._subId;\n    }\n    get configuration() {\n        return this._configuration.resolved;\n    }\n    get unresolvedConfiguration() {\n        return this._configuration.unresolved;\n    }\n    get lifecycleManagedByParent() {\n        return !!this._options.lifecycleManagedByParent;\n    }\n    get compact() {\n        return !!this._options.compact;\n    }\n    get saveBeforeRestart() {\n        return this._options.saveBeforeRestart ?? !this._options?.parentSession;\n    }\n    get compoundRoot() {\n        return this._options.compoundRoot;\n    }\n    get suppressDebugStatusbar() {\n        return this._options.suppressDebugStatusbar ?? false;\n    }\n    get suppressDebugToolbar() {\n        return this._options.suppressDebugToolbar ?? false;\n    }\n    get suppressDebugView() {\n        return this._options.suppressDebugView ?? false;\n    }\n    get autoExpandLazyVariables() {\n        return this.configurationService.getValue('debug').autoExpandLazyVariables;\n    }\n    setConfiguration(configuration) {\n        this._configuration = configuration;\n    }\n    getLabel() {\n        const includeRoot = this.workspaceContextService.getWorkspace().folders.length > 1;\n        return includeRoot && this.root ? `${this.name} (${resources.basenameOrAuthority(this.root.uri)})` : this.name;\n    }\n    setName(name) {\n        this._name = name;\n        this._onDidChangeName.fire(name);\n    }\n    get name() {\n        return this._name || this.configuration.name;\n    }\n    get state() {\n        if (!this.initialized) {\n            return 1 ;\n        }\n        if (!this.raw) {\n            return 0 ;\n        }\n        const focusedThread = this.debugService.getViewModel().focusedThread;\n        if (focusedThread && focusedThread.session === this) {\n            return focusedThread.stopped ? 2  : 3 ;\n        }\n        if (( this.getAllThreads().some(t => t.stopped))) {\n            return 2 ;\n        }\n        return 3 ;\n    }\n    get capabilities() {\n        return this.raw ? this.raw.capabilities : Object.create(null);\n    }\n    get onDidChangeState() {\n        return this._onDidChangeState.event;\n    }\n    get onDidEndAdapter() {\n        return this._onDidEndAdapter.event;\n    }\n    get onDidChangeReplElements() {\n        return this._onDidChangeREPLElements.event;\n    }\n    get onDidChangeName() {\n        return this._onDidChangeName.event;\n    }\n    get onDidCustomEvent() {\n        return this._onDidCustomEvent.event;\n    }\n    get onDidLoadedSource() {\n        return this._onDidLoadedSource.event;\n    }\n    get onDidProgressStart() {\n        return this._onDidProgressStart.event;\n    }\n    get onDidProgressUpdate() {\n        return this._onDidProgressUpdate.event;\n    }\n    get onDidProgressEnd() {\n        return this._onDidProgressEnd.event;\n    }\n    get onDidInvalidateMemory() {\n        return this._onDidInvalidMemory.event;\n    }\n    async initialize(dbgr) {\n        if (this.raw) {\n            await this.shutdown();\n        }\n        try {\n            const debugAdapter = await dbgr.createDebugAdapter(this);\n            this.raw = this.instantiationService.createInstance(RawDebugSession, debugAdapter, dbgr, this.id, this.configuration.name);\n            await this.raw.start();\n            this.registerListeners();\n            await this.raw.initialize({\n                clientID: 'vscode',\n                clientName: this.productService.nameLong,\n                adapterID: this.configuration.type,\n                pathFormat: 'path',\n                linesStartAt1: true,\n                columnsStartAt1: true,\n                supportsVariableType: true,\n                supportsVariablePaging: true,\n                supportsRunInTerminalRequest: true,\n                locale: platform.language,\n                supportsProgressReporting: true,\n                supportsInvalidatedEvent: true,\n                supportsMemoryReferences: true,\n                supportsArgsCanBeInterpretedByShell: true,\n                supportsMemoryEvent: true,\n                supportsStartDebuggingRequest: true\n            });\n            this.initialized = true;\n            this._onDidChangeState.fire();\n            this.debugService.setExceptionBreakpointsForSession(this, (this.raw && this.raw.capabilities.exceptionBreakpointFilters) || []);\n        }\n        catch (err) {\n            this.initialized = true;\n            this._onDidChangeState.fire();\n            await this.shutdown();\n            throw err;\n        }\n    }\n    async launchOrAttach(config) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'launch or attach'));\n        }\n        if (this.parentSession && this.parentSession.state === 0 ) {\n            throw canceled();\n        }\n        config.__sessionId = this.getId();\n        try {\n            await this.raw.launchOrAttach(config);\n        }\n        catch (err) {\n            this.shutdown();\n            throw err;\n        }\n    }\n    async terminate(restart = false) {\n        if (!this.raw) {\n            this.onDidExitAdapter();\n        }\n        this.cancelAllRequests();\n        if (this._options.lifecycleManagedByParent && this.parentSession) {\n            await this.parentSession.terminate(restart);\n        }\n        else if (this.raw) {\n            if (this.raw.capabilities.supportsTerminateRequest && this._configuration.resolved.request === 'launch') {\n                await this.raw.terminate(restart);\n            }\n            else {\n                await this.raw.disconnect({ restart, terminateDebuggee: true });\n            }\n        }\n        if (!restart) {\n            this._options.compoundRoot?.sessionStopped();\n        }\n    }\n    async disconnect(restart = false, suspend = false) {\n        if (!this.raw) {\n            this.onDidExitAdapter();\n        }\n        this.cancelAllRequests();\n        if (this._options.lifecycleManagedByParent && this.parentSession) {\n            await this.parentSession.disconnect(restart, suspend);\n        }\n        else if (this.raw) {\n            await this.raw.disconnect({ restart, terminateDebuggee: false, suspendDebuggee: suspend });\n        }\n        if (!restart) {\n            this._options.compoundRoot?.sessionStopped();\n        }\n    }\n    async restart() {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'restart'));\n        }\n        this.cancelAllRequests();\n        if (this._options.lifecycleManagedByParent && this.parentSession) {\n            await this.parentSession.restart();\n        }\n        else {\n            await this.raw.restart({ arguments: this.configuration });\n        }\n    }\n    async sendBreakpoints(modelUri, breakpointsToSend, sourceModified) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'breakpoints'));\n        }\n        if (!this.raw.readyForBreakpoints) {\n            return Promise.resolve(undefined);\n        }\n        const rawSource = this.getRawSource(modelUri);\n        if (breakpointsToSend.length && !rawSource.adapterData) {\n            rawSource.adapterData = breakpointsToSend[0].adapterData;\n        }\n        if (rawSource.path) {\n            rawSource.path = normalizeDriveLetter(rawSource.path);\n        }\n        const response = await this.raw.setBreakpoints({\n            source: rawSource,\n            lines: ( breakpointsToSend.map(bp => bp.sessionAgnosticData.lineNumber)),\n            breakpoints: ( breakpointsToSend.map(\n                bp => ({ line: bp.sessionAgnosticData.lineNumber, column: bp.sessionAgnosticData.column, condition: bp.condition, hitCondition: bp.hitCondition, logMessage: bp.logMessage })\n            )),\n            sourceModified\n        });\n        if (response && response.body) {\n            const data = ( new Map());\n            for (let i = 0; i < breakpointsToSend.length; i++) {\n                data.set(breakpointsToSend[i].getId(), response.body.breakpoints[i]);\n            }\n            this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n        }\n    }\n    async sendFunctionBreakpoints(fbpts) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'function breakpoints'));\n        }\n        if (this.raw.readyForBreakpoints) {\n            const response = await this.raw.setFunctionBreakpoints({ breakpoints: fbpts });\n            if (response && response.body) {\n                const data = ( new Map());\n                for (let i = 0; i < fbpts.length; i++) {\n                    data.set(fbpts[i].getId(), response.body.breakpoints[i]);\n                }\n                this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n            }\n        }\n    }\n    async sendExceptionBreakpoints(exbpts) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'exception breakpoints'));\n        }\n        if (this.raw.readyForBreakpoints) {\n            const args = this.capabilities.supportsExceptionFilterOptions ? {\n                filters: [],\n                filterOptions: ( exbpts.map(exb => {\n                    if (exb.condition) {\n                        return { filterId: exb.filter, condition: exb.condition };\n                    }\n                    return { filterId: exb.filter };\n                }))\n            } : { filters: ( exbpts.map(exb => exb.filter)) };\n            const response = await this.raw.setExceptionBreakpoints(args);\n            if (response && response.body && response.body.breakpoints) {\n                const data = ( new Map());\n                for (let i = 0; i < exbpts.length; i++) {\n                    data.set(exbpts[i].getId(), response.body.breakpoints[i]);\n                }\n                this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n            }\n        }\n    }\n    async dataBreakpointInfo(name, variablesReference) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'data breakpoints info'));\n        }\n        if (!this.raw.readyForBreakpoints) {\n            throw new Error(localize('sessionNotReadyForBreakpoints', \"Session is not ready for breakpoints\"));\n        }\n        const response = await this.raw.dataBreakpointInfo({ name, variablesReference });\n        return response?.body;\n    }\n    async sendDataBreakpoints(dataBreakpoints) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'data breakpoints'));\n        }\n        if (this.raw.readyForBreakpoints) {\n            const response = await this.raw.setDataBreakpoints({ breakpoints: dataBreakpoints });\n            if (response && response.body) {\n                const data = ( new Map());\n                for (let i = 0; i < dataBreakpoints.length; i++) {\n                    data.set(dataBreakpoints[i].getId(), response.body.breakpoints[i]);\n                }\n                this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n            }\n        }\n    }\n    async sendInstructionBreakpoints(instructionBreakpoints) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'instruction breakpoints'));\n        }\n        if (this.raw.readyForBreakpoints) {\n            const response = await this.raw.setInstructionBreakpoints({ breakpoints: instructionBreakpoints });\n            if (response && response.body) {\n                const data = ( new Map());\n                for (let i = 0; i < instructionBreakpoints.length; i++) {\n                    data.set(instructionBreakpoints[i].getId(), response.body.breakpoints[i]);\n                }\n                this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n            }\n        }\n    }\n    async breakpointsLocations(uri, lineNumber) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'breakpoints locations'));\n        }\n        const source = this.getRawSource(uri);\n        const response = await this.raw.breakpointLocations({ source, line: lineNumber });\n        if (!response || !response.body || !response.body.breakpoints) {\n            return [];\n        }\n        const positions = ( response.body.breakpoints.map(bp => ({ lineNumber: bp.line, column: bp.column || 1 })));\n        return distinct(positions, p => `${p.lineNumber}:${p.column}`);\n    }\n    getDebugProtocolBreakpoint(breakpointId) {\n        return this.model.getDebugProtocolBreakpoint(breakpointId, this.getId());\n    }\n    customRequest(request, args) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", request));\n        }\n        return this.raw.custom(request, args);\n    }\n    stackTrace(threadId, startFrame, levels, token) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stackTrace'));\n        }\n        const sessionToken = this.getNewCancellationToken(threadId, token);\n        return this.raw.stackTrace({ threadId, startFrame, levels }, sessionToken);\n    }\n    async exceptionInfo(threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'exceptionInfo'));\n        }\n        const response = await this.raw.exceptionInfo({ threadId });\n        if (response) {\n            return {\n                id: response.body.exceptionId,\n                description: response.body.description,\n                breakMode: response.body.breakMode,\n                details: response.body.details\n            };\n        }\n        return undefined;\n    }\n    scopes(frameId, threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'scopes'));\n        }\n        const token = this.getNewCancellationToken(threadId);\n        return this.raw.scopes({ frameId }, token);\n    }\n    variables(variablesReference, threadId, filter, start, count) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'variables'));\n        }\n        const token = threadId ? this.getNewCancellationToken(threadId) : undefined;\n        return this.raw.variables({ variablesReference, filter, start, count }, token);\n    }\n    evaluate(expression, frameId, context) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'evaluate'));\n        }\n        return this.raw.evaluate({ expression, frameId, context });\n    }\n    async restartFrame(frameId, threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'restartFrame'));\n        }\n        await this.raw.restartFrame({ frameId }, threadId);\n    }\n    setLastSteppingGranularity(threadId, granularity) {\n        const thread = this.getThread(threadId);\n        if (thread) {\n            thread.lastSteppingGranularity = granularity;\n        }\n    }\n    async next(threadId, granularity) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'next'));\n        }\n        this.setLastSteppingGranularity(threadId, granularity);\n        await this.raw.next({ threadId, granularity });\n    }\n    async stepIn(threadId, targetId, granularity) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepIn'));\n        }\n        this.setLastSteppingGranularity(threadId, granularity);\n        await this.raw.stepIn({ threadId, targetId, granularity });\n    }\n    async stepOut(threadId, granularity) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepOut'));\n        }\n        this.setLastSteppingGranularity(threadId, granularity);\n        await this.raw.stepOut({ threadId, granularity });\n    }\n    async stepBack(threadId, granularity) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'stepBack'));\n        }\n        this.setLastSteppingGranularity(threadId, granularity);\n        await this.raw.stepBack({ threadId, granularity });\n    }\n    async continue(threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'continue'));\n        }\n        await this.raw.continue({ threadId });\n    }\n    async reverseContinue(threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'reverse continue'));\n        }\n        await this.raw.reverseContinue({ threadId });\n    }\n    async pause(threadId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'pause'));\n        }\n        await this.raw.pause({ threadId });\n    }\n    async terminateThreads(threadIds) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'terminateThreads'));\n        }\n        await this.raw.terminateThreads({ threadIds });\n    }\n    setVariable(variablesReference, name, value) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'setVariable'));\n        }\n        return this.raw.setVariable({ variablesReference, name, value });\n    }\n    setExpression(frameId, expression, value) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'setExpression'));\n        }\n        return this.raw.setExpression({ expression, value, frameId });\n    }\n    gotoTargets(source, line, column) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'gotoTargets'));\n        }\n        return this.raw.gotoTargets({ source, line, column });\n    }\n    goto(threadId, targetId) {\n        if (!this.raw) {\n            throw new Error(localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'goto'));\n        }\n        return this.raw.goto({ threadId, targetId });\n    }\n    loadSource(resource) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'loadSource'\n            )))));\n        }\n        const source = this.getSourceForUri(resource);\n        let rawSource;\n        if (source) {\n            rawSource = source.raw;\n        }\n        else {\n            const data = Source.getEncodedDebugData(resource);\n            rawSource = { path: data.path, sourceReference: data.sourceReference };\n        }\n        return this.raw.source({ sourceReference: rawSource.sourceReference || 0, source: rawSource });\n    }\n    async getLoadedSources() {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'getLoadedSources'\n            )))));\n        }\n        const response = await this.raw.loadedSources({});\n        if (response && response.body && response.body.sources) {\n            return ( response.body.sources.map(src => this.getSource(src)));\n        }\n        else {\n            return [];\n        }\n    }\n    async completions(frameId, threadId, text, position, overwriteBefore, token) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'completions'\n            )))));\n        }\n        const sessionCancelationToken = this.getNewCancellationToken(threadId, token);\n        return this.raw.completions({\n            frameId,\n            text,\n            column: position.column,\n            line: position.lineNumber,\n        }, sessionCancelationToken);\n    }\n    async stepInTargets(frameId) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'stepInTargets'\n            )))));\n        }\n        const response = await this.raw.stepInTargets({ frameId });\n        return response?.body.targets;\n    }\n    async cancel(progressId) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize('noDebugAdapter', \"No debugger available, can not send '{0}'\", 'cancel')))));\n        }\n        return this.raw.cancel({ progressId });\n    }\n    async disassemble(memoryReference, offset, instructionOffset, instructionCount) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'disassemble'\n            )))));\n        }\n        const response = await this.raw.disassemble({ memoryReference, offset, instructionOffset, instructionCount, resolveSymbols: true });\n        return response?.body?.instructions;\n    }\n    readMemory(memoryReference, offset, count) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'readMemory'\n            )))));\n        }\n        return this.raw.readMemory({ count, memoryReference, offset });\n    }\n    writeMemory(memoryReference, offset, data, allowPartial) {\n        if (!this.raw) {\n            return Promise.reject(( new Error(( localize(\n                'noDebugAdapter',\n                \"No debugger available, can not send '{0}'\",\n                'disassemble'\n            )))));\n        }\n        return this.raw.writeMemory({ memoryReference, offset, allowPartial, data });\n    }\n    getThread(threadId) {\n        return this.threads.get(threadId);\n    }\n    getAllThreads() {\n        const result = [];\n        this.threadIds.forEach((threadId) => {\n            const thread = this.threads.get(threadId);\n            if (thread) {\n                result.push(thread);\n            }\n        });\n        return result;\n    }\n    clearThreads(removeThreads, reference = undefined) {\n        if (reference !== undefined && reference !== null) {\n            const thread = this.threads.get(reference);\n            if (thread) {\n                thread.clearCallStack();\n                thread.stoppedDetails = undefined;\n                thread.stopped = false;\n                if (removeThreads) {\n                    this.threads.delete(reference);\n                }\n            }\n        }\n        else {\n            this.threads.forEach(thread => {\n                thread.clearCallStack();\n                thread.stoppedDetails = undefined;\n                thread.stopped = false;\n            });\n            if (removeThreads) {\n                this.threads.clear();\n                this.threadIds = [];\n                ExpressionContainer.allValues.clear();\n            }\n        }\n    }\n    getStoppedDetails() {\n        return this.stoppedDetails.length >= 1 ? this.stoppedDetails[0] : undefined;\n    }\n    rawUpdate(data) {\n        this.threadIds = [];\n        data.threads.forEach(thread => {\n            this.threadIds.push(thread.id);\n            if (!( this.threads.has(thread.id))) {\n                this.threads.set(thread.id, ( new Thread(this, thread.name, thread.id)));\n            }\n            else if (thread.name) {\n                const oldThread = this.threads.get(thread.id);\n                if (oldThread) {\n                    oldThread.name = thread.name;\n                }\n            }\n        });\n        this.threads.forEach(t => {\n            if (this.threadIds.indexOf(t.threadId) === -1) {\n                this.threads.delete(t.threadId);\n            }\n        });\n        const stoppedDetails = data.stoppedDetails;\n        if (stoppedDetails) {\n            if (stoppedDetails.allThreadsStopped) {\n                this.threads.forEach(thread => {\n                    thread.stoppedDetails = thread.threadId === stoppedDetails.threadId ? stoppedDetails : { reason: thread.stoppedDetails?.reason };\n                    thread.stopped = true;\n                    thread.clearCallStack();\n                });\n            }\n            else {\n                const thread = typeof stoppedDetails.threadId === 'number' ? this.threads.get(stoppedDetails.threadId) : undefined;\n                if (thread) {\n                    thread.stoppedDetails = stoppedDetails;\n                    thread.clearCallStack();\n                    thread.stopped = true;\n                }\n            }\n        }\n    }\n    async fetchThreads(stoppedDetails) {\n        if (this.raw) {\n            const response = await this.raw.threads();\n            if (response && response.body && response.body.threads) {\n                this.model.rawUpdate({\n                    sessionId: this.getId(),\n                    threads: response.body.threads,\n                    stoppedDetails\n                });\n            }\n        }\n    }\n    initializeForTest(raw) {\n        this.raw = raw;\n        this.registerListeners();\n    }\n    registerListeners() {\n        if (!this.raw) {\n            return;\n        }\n        this.rawListeners.push(this.raw.onDidInitialize(async () => {\n            aria.status(( localize('debuggingStarted', \"Debugging started.\")));\n            const sendConfigurationDone = async () => {\n                if (this.raw && this.raw.capabilities.supportsConfigurationDoneRequest) {\n                    try {\n                        await this.raw.configurationDone();\n                    }\n                    catch (e) {\n                        this.notificationService.error(e);\n                        this.raw?.disconnect({});\n                    }\n                }\n                return undefined;\n            };\n            try {\n                await this.debugService.sendAllBreakpoints(this);\n            }\n            finally {\n                await sendConfigurationDone();\n                await this.fetchThreads();\n            }\n        }));\n        const statusQueue = ( new Queue());\n        this.rawListeners.push(this.raw.onDidStop(async (event) => {\n            statusQueue.queue(async () => {\n                this.passFocusScheduler.cancel();\n                this.stoppedDetails.push(event.body);\n                await this.fetchThreads(event.body);\n                const focusedThread = this.debugService.getViewModel().focusedThread;\n                const focusedThreadDoesNotExist = focusedThread !== undefined && focusedThread.session === this && !( this.threads.has(focusedThread.threadId));\n                if (focusedThreadDoesNotExist) {\n                    this.debugService.focusStackFrame(undefined, undefined);\n                }\n                const thread = typeof event.body.threadId === 'number' ? this.getThread(event.body.threadId) : undefined;\n                if (thread) {\n                    const promises = this.model.refreshTopOfCallstack(thread);\n                    const focus = async () => {\n                        if (focusedThreadDoesNotExist || (!event.body.preserveFocusHint && thread.getCallStack().length)) {\n                            const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n                            if (!focusedStackFrame || focusedStackFrame.thread.session === this) {\n                                const preserveFocus = !this.configurationService.getValue('debug').focusEditorOnBreak;\n                                await this.debugService.focusStackFrame(undefined, thread, undefined, { preserveFocus });\n                            }\n                            if (thread.stoppedDetails) {\n                                if (thread.stoppedDetails.reason === 'breakpoint' && this.configurationService.getValue('debug').openDebug === 'openOnDebugBreak' && !this.suppressDebugView) {\n                                    await this.paneCompositeService.openPaneComposite(VIEWLET_ID, 0 );\n                                }\n                                if (this.configurationService.getValue('debug').focusWindowOnBreak && !this.workbenchEnvironmentService.extensionTestsLocationURI) {\n                                    await this.hostService.focus({ force: true  });\n                                }\n                            }\n                        }\n                    };\n                    await promises.topCallStack;\n                    focus();\n                    await promises.wholeCallStack;\n                    const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n                    if (!focusedStackFrame || !focusedStackFrame.source || focusedStackFrame.source.presentationHint === 'deemphasize' || focusedStackFrame.presentationHint === 'deemphasize') {\n                        focus();\n                    }\n                }\n                this._onDidChangeState.fire();\n            });\n        }));\n        this.rawListeners.push(this.raw.onDidThread(event => {\n            statusQueue.queue(async () => {\n                if (event.body.reason === 'started') {\n                    if (!this.fetchThreadsScheduler) {\n                        this.fetchThreadsScheduler = ( new RunOnceScheduler(() => {\n                            this.fetchThreads();\n                        }, 100));\n                        this.rawListeners.push(this.fetchThreadsScheduler);\n                    }\n                    if (!this.fetchThreadsScheduler.isScheduled()) {\n                        this.fetchThreadsScheduler.schedule();\n                    }\n                }\n                else if (event.body.reason === 'exited') {\n                    this.model.clearThreads(this.getId(), true, event.body.threadId);\n                    const viewModel = this.debugService.getViewModel();\n                    const focusedThread = viewModel.focusedThread;\n                    this.passFocusScheduler.cancel();\n                    if (focusedThread && event.body.threadId === focusedThread.threadId) {\n                        this.debugService.focusStackFrame(undefined, undefined, viewModel.focusedSession, { explicit: false });\n                    }\n                }\n            });\n        }));\n        this.rawListeners.push(this.raw.onDidTerminateDebugee(async (event) => {\n            aria.status(( localize('debuggingStopped', \"Debugging stopped.\")));\n            if (event.body && event.body.restart) {\n                await this.debugService.restartSession(this, event.body.restart);\n            }\n            else if (this.raw) {\n                await this.raw.disconnect({ terminateDebuggee: false });\n            }\n        }));\n        this.rawListeners.push(this.raw.onDidContinued(event => {\n            statusQueue.queue(async () => {\n                const threadId = event.body.allThreadsContinued !== false ? undefined : event.body.threadId;\n                if (typeof threadId === 'number') {\n                    this.stoppedDetails = this.stoppedDetails.filter(sd => sd.threadId !== threadId);\n                    const tokens = this.cancellationMap.get(threadId);\n                    this.cancellationMap.delete(threadId);\n                    tokens?.forEach(t => t.cancel());\n                }\n                else {\n                    this.stoppedDetails = [];\n                    this.cancelAllRequests();\n                }\n                this.lastContinuedThreadId = threadId;\n                this.passFocusScheduler.schedule();\n                this.model.clearThreads(this.getId(), false, threadId);\n                this._onDidChangeState.fire();\n            });\n        }));\n        const outputQueue = ( new Queue());\n        this.rawListeners.push(this.raw.onDidOutput(async (event) => {\n            const outputSeverity = event.body.category === 'stderr' ? Severity.Error : event.body.category === 'console' ? Severity.Warning : Severity.Info;\n            if (event.body.variablesReference) {\n                const source = event.body.source && event.body.line ? {\n                    lineNumber: event.body.line,\n                    column: event.body.column ? event.body.column : 1,\n                    source: this.getSource(event.body.source)\n                } : undefined;\n                const container = ( new ExpressionContainer(this, undefined, event.body.variablesReference, generateUuid()));\n                const children = container.getChildren();\n                outputQueue.queue(async () => {\n                    const resolved = await children;\n                    if (resolved.length === 1) {\n                        this.appendToRepl({ output: event.body.output, expression: resolved[0], sev: outputSeverity, source }, event.body.category === 'important');\n                        return;\n                    }\n                    resolved.forEach((child) => {\n                        child.name = null;\n                        this.appendToRepl({ output: '', expression: child, sev: outputSeverity, source }, event.body.category === 'important');\n                    });\n                });\n                return;\n            }\n            outputQueue.queue(async () => {\n                if (!event.body || !this.raw) {\n                    return;\n                }\n                if (event.body.category === 'telemetry') {\n                    const telemetryEndpoint = this.raw.dbgr.getCustomTelemetryEndpoint();\n                    if (telemetryEndpoint && this.telemetryService.telemetryLevel !== 0 ) {\n                        let data = event.body.data;\n                        if (!telemetryEndpoint.sendErrorTelemetry && event.body.data) {\n                            data = filterExceptionsFromTelemetry(event.body.data);\n                        }\n                        this.customEndpointTelemetryService.publicLog(telemetryEndpoint, event.body.output, data);\n                    }\n                    return;\n                }\n                const source = event.body.source && event.body.line ? {\n                    lineNumber: event.body.line,\n                    column: event.body.column ? event.body.column : 1,\n                    source: this.getSource(event.body.source)\n                } : undefined;\n                if (event.body.group === 'start' || event.body.group === 'startCollapsed') {\n                    const expanded = event.body.group === 'start';\n                    this.repl.startGroup(event.body.output || '', expanded, source);\n                    return;\n                }\n                if (event.body.group === 'end') {\n                    this.repl.endGroup();\n                    if (!event.body.output) {\n                        return;\n                    }\n                }\n                if (typeof event.body.output === 'string') {\n                    this.appendToRepl({ output: event.body.output, sev: outputSeverity, source }, event.body.category === 'important');\n                }\n            });\n        }));\n        this.rawListeners.push(this.raw.onDidBreakpoint(event => {\n            const id = event.body && event.body.breakpoint ? event.body.breakpoint.id : undefined;\n            const breakpoint = this.model.getBreakpoints().find(bp => bp.getIdFromAdapter(this.getId()) === id);\n            const functionBreakpoint = this.model.getFunctionBreakpoints().find(bp => bp.getIdFromAdapter(this.getId()) === id);\n            const dataBreakpoint = this.model.getDataBreakpoints().find(dbp => dbp.getIdFromAdapter(this.getId()) === id);\n            const exceptionBreakpoint = this.model.getExceptionBreakpoints().find(excbp => excbp.getIdFromAdapter(this.getId()) === id);\n            if (event.body.reason === 'new' && event.body.breakpoint.source && event.body.breakpoint.line) {\n                const source = this.getSource(event.body.breakpoint.source);\n                const bps = this.model.addBreakpoints(source.uri, [{\n                        column: event.body.breakpoint.column,\n                        enabled: true,\n                        lineNumber: event.body.breakpoint.line,\n                    }], false);\n                if (bps.length === 1) {\n                    const data = ( new Map([[bps[0].getId(), event.body.breakpoint]]));\n                    this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n                }\n            }\n            if (event.body.reason === 'removed') {\n                if (breakpoint) {\n                    this.model.removeBreakpoints([breakpoint]);\n                }\n                if (functionBreakpoint) {\n                    this.model.removeFunctionBreakpoints(functionBreakpoint.getId());\n                }\n                if (dataBreakpoint) {\n                    this.model.removeDataBreakpoints(dataBreakpoint.getId());\n                }\n            }\n            if (event.body.reason === 'changed') {\n                if (breakpoint) {\n                    if (!breakpoint.column) {\n                        event.body.breakpoint.column = undefined;\n                    }\n                    const data = ( new Map([[breakpoint.getId(), event.body.breakpoint]]));\n                    this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n                }\n                if (functionBreakpoint) {\n                    const data = ( new Map([[functionBreakpoint.getId(), event.body.breakpoint]]));\n                    this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n                }\n                if (dataBreakpoint) {\n                    const data = ( new Map([[dataBreakpoint.getId(), event.body.breakpoint]]));\n                    this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n                }\n                if (exceptionBreakpoint) {\n                    const data = ( new Map([[exceptionBreakpoint.getId(), event.body.breakpoint]]));\n                    this.model.setBreakpointSessionData(this.getId(), this.capabilities, data);\n                }\n            }\n        }));\n        this.rawListeners.push(this.raw.onDidLoadedSource(event => {\n            this._onDidLoadedSource.fire({\n                reason: event.body.reason,\n                source: this.getSource(event.body.source)\n            });\n        }));\n        this.rawListeners.push(this.raw.onDidCustomEvent(event => {\n            this._onDidCustomEvent.fire(event);\n        }));\n        this.rawListeners.push(this.raw.onDidProgressStart(event => {\n            this._onDidProgressStart.fire(event);\n        }));\n        this.rawListeners.push(this.raw.onDidProgressUpdate(event => {\n            this._onDidProgressUpdate.fire(event);\n        }));\n        this.rawListeners.push(this.raw.onDidProgressEnd(event => {\n            this._onDidProgressEnd.fire(event);\n        }));\n        this.rawListeners.push(this.raw.onDidInvalidateMemory(event => {\n            this._onDidInvalidMemory.fire(event);\n        }));\n        this.rawListeners.push(this.raw.onDidInvalidated(async (event) => {\n            if (!(event.body.areas && event.body.areas.length === 1 && (event.body.areas[0] === 'variables' || event.body.areas[0] === 'watch'))) {\n                this.cancelAllRequests();\n                this.model.clearThreads(this.getId(), true);\n                await this.fetchThreads(this.getStoppedDetails());\n            }\n            const viewModel = this.debugService.getViewModel();\n            if (viewModel.focusedSession === this) {\n                viewModel.updateViews();\n            }\n        }));\n        this.rawListeners.push(this.raw.onDidExitAdapter(event => this.onDidExitAdapter(event)));\n    }\n    onDidExitAdapter(event) {\n        this.initialized = true;\n        this.model.setBreakpointSessionData(this.getId(), this.capabilities, undefined);\n        this.shutdown();\n        this._onDidEndAdapter.fire(event);\n    }\n    shutdown() {\n        dispose(this.rawListeners);\n        if (this.raw) {\n            this.raw.disconnect({});\n            this.raw.dispose();\n            this.raw = undefined;\n        }\n        this.fetchThreadsScheduler?.dispose();\n        this.fetchThreadsScheduler = undefined;\n        this.passFocusScheduler.cancel();\n        this.passFocusScheduler.dispose();\n        this.model.clearThreads(this.getId(), true);\n        this._onDidChangeState.fire();\n    }\n    getSourceForUri(uri) {\n        return this.sources.get(( this.uriIdentityService.asCanonicalUri(uri).toString()));\n    }\n    getSource(raw) {\n        let source = ( new Source(raw, this.getId(), this.uriIdentityService, this.logService));\n        const uriKey = ( source.uri.toString());\n        const found = this.sources.get(uriKey);\n        if (found) {\n            source = found;\n            source.raw = mixin(source.raw, raw);\n            if (source.raw && raw) {\n                source.raw.presentationHint = raw.presentationHint;\n            }\n        }\n        else {\n            this.sources.set(uriKey, source);\n        }\n        return source;\n    }\n    getRawSource(uri) {\n        const source = this.getSourceForUri(uri);\n        if (source) {\n            return source.raw;\n        }\n        else {\n            const data = Source.getEncodedDebugData(uri);\n            return { name: data.name, path: data.path, sourceReference: data.sourceReference };\n        }\n    }\n    getNewCancellationToken(threadId, token) {\n        const tokenSource = ( new CancellationTokenSource(token));\n        const tokens = this.cancellationMap.get(threadId) || [];\n        tokens.push(tokenSource);\n        this.cancellationMap.set(threadId, tokens);\n        return tokenSource.token;\n    }\n    cancelAllRequests() {\n        this.cancellationMap.forEach(tokens => tokens.forEach(t => t.cancel()));\n        this.cancellationMap.clear();\n    }\n    getReplElements() {\n        return this.repl.getReplElements();\n    }\n    hasSeparateRepl() {\n        return !this.parentSession || this._options.repl !== 'mergeWithParent';\n    }\n    removeReplExpressions() {\n        this.repl.removeReplExpressions();\n    }\n    async addReplExpression(stackFrame, name) {\n        await this.repl.addReplExpression(this, stackFrame, name);\n        this.debugService.getViewModel().updateViews();\n    }\n    appendToRepl(data, isImportant) {\n        this.repl.appendToRepl(this, data);\n        if (isImportant) {\n            this.notificationService.notify({ message: ( data.output.toString()), severity: data.sev, source: this.name });\n        }\n    }\n};\nDebugSession = ( __decorate([\n    ( __param(5, IDebugService)),\n    ( __param(6, ITelemetryService)),\n    ( __param(7, IHostService)),\n    ( __param(8, IConfigurationService)),\n    ( __param(9, IPaneCompositePartService)),\n    ( __param(10, IWorkspaceContextService)),\n    ( __param(11, IProductService)),\n    ( __param(12, INotificationService)),\n    ( __param(13, ILifecycleService)),\n    ( __param(14, IUriIdentityService)),\n    ( __param(15, IInstantiationService)),\n    ( __param(16, ICustomEndpointTelemetryService)),\n    ( __param(17, IWorkbenchEnvironmentService)),\n    ( __param(18, ILogService))\n], DebugSession));\nexport { DebugSession };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { Markers } from '../../markers/common/markers.js';\nimport { ITaskService } from '../../tasks/common/taskService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { withUndefinedAsNull } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { MarkerSeverity, IMarkerService } from 'monaco-editor/esm/vs/platform/markers/common/markers.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { createErrorWithActions } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { DEBUG_CONFIGURE_COMMAND_ID, DEBUG_CONFIGURE_LABEL } from './debugCommands.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nfunction once(match, event) {\n    return (listener, thisArgs = null, disposables) => {\n        const result = event(e => {\n            if (match(e)) {\n                result.dispose();\n                return listener.call(thisArgs, e);\n            }\n        }, null, disposables);\n        return result;\n    };\n}\nconst DEBUG_TASK_ERROR_CHOICE_KEY = 'debug.taskerrorchoice';\nlet DebugTaskRunner = class DebugTaskRunner {\n    constructor(taskService, markerService, configurationService, viewsService, dialogService, storageService, commandService) {\n        this.taskService = taskService;\n        this.markerService = markerService;\n        this.configurationService = configurationService;\n        this.viewsService = viewsService;\n        this.dialogService = dialogService;\n        this.storageService = storageService;\n        this.commandService = commandService;\n        this.canceled = false;\n    }\n    cancel() {\n        this.canceled = true;\n    }\n    async runTaskAndCheckErrors(root, taskId) {\n        try {\n            this.canceled = false;\n            const taskSummary = await this.runTask(root, taskId);\n            if (this.canceled || (taskSummary && taskSummary.exitCode === undefined)) {\n                return 0 ;\n            }\n            const errorCount = taskId ? this.markerService.read({ severities: MarkerSeverity.Error, take: 2 }).length : 0;\n            const successExitCode = taskSummary && taskSummary.exitCode === 0;\n            const failureExitCode = taskSummary && taskSummary.exitCode !== 0;\n            const onTaskErrors = this.configurationService.getValue('debug').onTaskErrors;\n            if (successExitCode || onTaskErrors === 'debugAnyway' || (errorCount === 0 && !failureExitCode)) {\n                return 1 ;\n            }\n            if (onTaskErrors === 'showErrors') {\n                await this.viewsService.openView(Markers.MARKERS_VIEW_ID, true);\n                return Promise.resolve(0 );\n            }\n            if (onTaskErrors === 'abort') {\n                return Promise.resolve(0 );\n            }\n            const taskLabel = typeof taskId === 'string' ? taskId : taskId ? taskId.name : '';\n            const message = errorCount > 1\n                ? ( nls.localize(\n                'preLaunchTaskErrors',\n                \"Errors exist after running preLaunchTask '{0}'.\",\n                taskLabel\n            ))\n                : errorCount === 1\n                    ? ( nls.localize(\n                'preLaunchTaskError',\n                \"Error exists after running preLaunchTask '{0}'.\",\n                taskLabel\n            ))\n                    : taskSummary && typeof taskSummary.exitCode === 'number'\n                        ? ( nls.localize(\n                'preLaunchTaskExitCode',\n                \"The preLaunchTask '{0}' terminated with exit code {1}.\",\n                taskLabel,\n                taskSummary.exitCode\n            ))\n                        : ( nls.localize(\n                'preLaunchTaskTerminated',\n                \"The preLaunchTask '{0}' terminated.\",\n                taskLabel\n            ));\n            let DebugChoice;\n            ( (function(DebugChoice) {\n                DebugChoice[DebugChoice[\"DebugAnyway\"] = 1] = \"DebugAnyway\";\n                DebugChoice[DebugChoice[\"ShowErrors\"] = 2] = \"ShowErrors\";\n                DebugChoice[DebugChoice[\"Cancel\"] = 0] = \"Cancel\";\n            })(DebugChoice || (DebugChoice = {})));\n            const { result, checkboxChecked } = await this.dialogService.prompt({\n                type: Severity.Warning,\n                message,\n                buttons: [\n                    {\n                        label: ( nls.localize(\n                            { key: 'debugAnyway', comment: ['&& denotes a mnemonic'] },\n                            \"&&Debug Anyway\"\n                        )),\n                        run: () => DebugChoice.DebugAnyway\n                    },\n                    {\n                        label: ( nls.localize({ key: 'showErrors', comment: ['&& denotes a mnemonic'] }, \"&&Show Errors\")),\n                        run: () => DebugChoice.ShowErrors\n                    }\n                ],\n                cancelButton: {\n                    label: ( nls.localize('abort', \"Abort\")),\n                    run: () => DebugChoice.Cancel\n                },\n                checkbox: {\n                    label: ( nls.localize('remember', \"Remember my choice in user settings\")),\n                }\n            });\n            const debugAnyway = result === DebugChoice.DebugAnyway;\n            const abort = result === DebugChoice.Cancel;\n            if (checkboxChecked) {\n                this.configurationService.updateValue('debug.onTaskErrors', result === DebugChoice.DebugAnyway ? 'debugAnyway' : abort ? 'abort' : 'showErrors');\n            }\n            if (abort) {\n                return Promise.resolve(0 );\n            }\n            if (debugAnyway) {\n                return 1 ;\n            }\n            await this.viewsService.openView(Markers.MARKERS_VIEW_ID, true);\n            return Promise.resolve(0 );\n        }\n        catch (err) {\n            const taskConfigureAction = this.taskService.configureAction();\n            const choiceMap = JSON.parse(this.storageService.get(DEBUG_TASK_ERROR_CHOICE_KEY, 1 , '{}'));\n            let choice = -1;\n            let DebugChoice;\n            ( (function(DebugChoice) {\n                DebugChoice[DebugChoice[\"DebugAnyway\"] = 0] = \"DebugAnyway\";\n                DebugChoice[DebugChoice[\"ConfigureTask\"] = 1] = \"ConfigureTask\";\n                DebugChoice[DebugChoice[\"Cancel\"] = 2] = \"Cancel\";\n            })(DebugChoice || (DebugChoice = {})));\n            if (choiceMap[err.message] !== undefined) {\n                choice = choiceMap[err.message];\n            }\n            else {\n                const { result, checkboxChecked } = await this.dialogService.prompt({\n                    type: Severity.Error,\n                    message: err.message,\n                    buttons: [\n                        {\n                            label: ( nls.localize(\n                                { key: 'debugAnyway', comment: ['&& denotes a mnemonic'] },\n                                \"&&Debug Anyway\"\n                            )),\n                            run: () => DebugChoice.DebugAnyway\n                        },\n                        {\n                            label: taskConfigureAction.label,\n                            run: () => DebugChoice.ConfigureTask\n                        }\n                    ],\n                    cancelButton: {\n                        run: () => DebugChoice.Cancel\n                    },\n                    checkbox: {\n                        label: ( nls.localize('rememberTask', \"Remember my choice for this task\"))\n                    }\n                });\n                choice = result;\n                if (checkboxChecked) {\n                    choiceMap[err.message] = choice;\n                    this.storageService.store(DEBUG_TASK_ERROR_CHOICE_KEY, JSON.stringify(choiceMap), 1 , 1 );\n                }\n            }\n            if (choice === DebugChoice.ConfigureTask) {\n                await taskConfigureAction.run();\n            }\n            return choice === DebugChoice.DebugAnyway ? 1  : 0 ;\n        }\n    }\n    async runTask(root, taskId) {\n        if (!taskId) {\n            return Promise.resolve(null);\n        }\n        if (!root) {\n            return Promise.reject(( new Error(( nls.localize(\n                'invalidTaskReference',\n                \"Task '{0}' can not be referenced from a launch configuration that is in a different workspace folder.\",\n                typeof taskId === 'string' ? taskId : taskId.type\n            )))));\n        }\n        const task = await this.taskService.getTask(root, taskId);\n        if (!task) {\n            const errorMessage = typeof taskId === 'string'\n                ? ( nls.localize('DebugTaskNotFoundWithTaskId', \"Could not find the task '{0}'.\", taskId))\n                : ( nls.localize('DebugTaskNotFound', \"Could not find the specified task.\"));\n            return Promise.reject(createErrorWithActions(errorMessage, [( new Action(\n                DEBUG_CONFIGURE_COMMAND_ID,\n                DEBUG_CONFIGURE_LABEL,\n                undefined,\n                true,\n                () => this.commandService.executeCommand(DEBUG_CONFIGURE_COMMAND_ID)\n            ))]));\n        }\n        let taskStarted = false;\n        const inactivePromise = ( new Promise((c, e) => once(e => {\n            return (e.kind === \"inactive\"\n                || (e.kind === \"processEnded\"  && e.exitCode === undefined))\n                && e.taskId === task._id;\n        }, this.taskService.onDidStateChange)(e => {\n            taskStarted = true;\n            c(e.kind === \"processEnded\"  ? { exitCode: e.exitCode } : null);\n        })));\n        const promise = this.taskService.getActiveTasks().then(async (tasks) => {\n            if (tasks.find(t => t._id === task._id)) {\n                const busyTasks = await this.taskService.getBusyTasks();\n                if (busyTasks.find(t => t._id === task._id)) {\n                    taskStarted = true;\n                    return inactivePromise;\n                }\n                return Promise.resolve(null);\n            }\n            once(e => (((e.kind === \"active\") ) || ((e.kind === \"dependsOnStarted\") )) && e.taskId === task._id, this.taskService.onDidStateChange)(() => {\n                taskStarted = true;\n            });\n            const taskPromise = this.taskService.run(task);\n            if (task.configurationProperties.isBackground) {\n                return inactivePromise;\n            }\n            return taskPromise.then(withUndefinedAsNull);\n        });\n        return ( new Promise((c, e) => {\n            const waitForInput = ( new Promise(\n                resolve => once(e => ((e.kind === \"acquiredInput\") ) && e.taskId === task._id, this.taskService.onDidStateChange)(() => {\n                    resolve();\n                })\n            ));\n            promise.then(result => {\n                taskStarted = true;\n                c(result);\n            }, error => e(error));\n            waitForInput.then(() => {\n                const waitTime = task.configurationProperties.isBackground ? 5000 : 10000;\n                setTimeout(() => {\n                    if (!taskStarted) {\n                        const errorMessage = typeof taskId === 'string'\n                            ? ( nls.localize(\n                            'taskNotTrackedWithTaskId',\n                            \"The task '{0}' cannot be tracked. Make sure to have a problem matcher defined.\",\n                            taskId\n                        ))\n                            : ( nls.localize(\n                            'taskNotTracked',\n                            \"The task '{0}' cannot be tracked. Make sure to have a problem matcher defined.\",\n                            JSON.stringify(taskId)\n                        ));\n                        e({ severity: Severity.Error, message: errorMessage });\n                    }\n                }, waitTime);\n            });\n        }));\n    }\n};\nDebugTaskRunner = ( __decorate([\n    ( __param(0, ITaskService)),\n    ( __param(1, IMarkerService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IViewsService)),\n    ( __param(4, IDialogService)),\n    ( __param(5, IStorageService)),\n    ( __param(6, ICommandService))\n], DebugTaskRunner));\nexport { DebugTaskRunner };\n","import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nclass DebugCompoundRoot {\n    constructor() {\n        this.stopped = false;\n        this.stopEmitter = ( new Emitter());\n        this.onDidSessionStop = this.stopEmitter.event;\n    }\n    sessionStopped() {\n        if (!this.stopped) {\n            this.stopped = true;\n            this.stopEmitter.fire();\n        }\n    }\n}\nexport { DebugCompoundRoot };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { Breakpoint, FunctionBreakpoint, ExceptionBreakpoint, DataBreakpoint, Expression } from './debugModel.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nconst DEBUG_BREAKPOINTS_KEY = 'debug.breakpoint';\nconst DEBUG_FUNCTION_BREAKPOINTS_KEY = 'debug.functionbreakpoint';\nconst DEBUG_DATA_BREAKPOINTS_KEY = 'debug.databreakpoint';\nconst DEBUG_EXCEPTION_BREAKPOINTS_KEY = 'debug.exceptionbreakpoint';\nconst DEBUG_WATCH_EXPRESSIONS_KEY = 'debug.watchexpressions';\nconst DEBUG_CHOSEN_ENVIRONMENTS_KEY = 'debug.chosenenvironment';\nconst DEBUG_UX_STATE_KEY = 'debug.uxstate';\nlet DebugStorage = class DebugStorage {\n    constructor(storageService, textFileService, uriIdentityService, logService) {\n        this.storageService = storageService;\n        this.textFileService = textFileService;\n        this.uriIdentityService = uriIdentityService;\n        this.logService = logService;\n    }\n    loadDebugUxState() {\n        return this.storageService.get(DEBUG_UX_STATE_KEY, 1 , 'default');\n    }\n    storeDebugUxState(value) {\n        this.storageService.store(DEBUG_UX_STATE_KEY, value, 1 , 1 );\n    }\n    loadBreakpoints() {\n        let result;\n        try {\n            result = ( JSON.parse(this.storageService.get(DEBUG_BREAKPOINTS_KEY, 1 , '[]')).map((breakpoint) => {\n                return ( new Breakpoint(( URI.parse(breakpoint.uri.external || breakpoint.source.uri.external)), breakpoint.lineNumber, breakpoint.column, breakpoint.enabled, breakpoint.condition, breakpoint.hitCondition, breakpoint.logMessage, breakpoint.adapterData, this.textFileService, this.uriIdentityService, this.logService, breakpoint.id));\n            }));\n        }\n        catch (e) { }\n        return result || [];\n    }\n    loadFunctionBreakpoints() {\n        let result;\n        try {\n            result = ( JSON.parse(this.storageService.get(DEBUG_FUNCTION_BREAKPOINTS_KEY, 1 , '[]')).map((fb) => {\n                return ( new FunctionBreakpoint(fb.name, fb.enabled, fb.hitCondition, fb.condition, fb.logMessage, fb.id));\n            }));\n        }\n        catch (e) { }\n        return result || [];\n    }\n    loadExceptionBreakpoints() {\n        let result;\n        try {\n            result = ( JSON.parse(this.storageService.get(DEBUG_EXCEPTION_BREAKPOINTS_KEY, 1 , '[]')).map((exBreakpoint) => {\n                return ( new ExceptionBreakpoint(\n                    exBreakpoint.filter,\n                    exBreakpoint.label,\n                    exBreakpoint.enabled,\n                    exBreakpoint.supportsCondition,\n                    exBreakpoint.condition,\n                    exBreakpoint.description,\n                    exBreakpoint.conditionDescription,\n                    !!exBreakpoint.fallback\n                ));\n            }));\n        }\n        catch (e) { }\n        return result || [];\n    }\n    loadDataBreakpoints() {\n        let result;\n        try {\n            result = ( JSON.parse(this.storageService.get(DEBUG_DATA_BREAKPOINTS_KEY, 1 , '[]')).map((dbp) => {\n                return ( new DataBreakpoint(\n                    dbp.description,\n                    dbp.dataId,\n                    true,\n                    dbp.enabled,\n                    dbp.hitCondition,\n                    dbp.condition,\n                    dbp.logMessage,\n                    dbp.accessTypes,\n                    dbp.accessType,\n                    dbp.id\n                ));\n            }));\n        }\n        catch (e) { }\n        return result || [];\n    }\n    loadWatchExpressions() {\n        let result;\n        try {\n            result = ( JSON.parse(this.storageService.get(DEBUG_WATCH_EXPRESSIONS_KEY, 1 , '[]')).map((watchStoredData) => {\n                return ( new Expression(watchStoredData.name, watchStoredData.id));\n            }));\n        }\n        catch (e) { }\n        return result || [];\n    }\n    loadChosenEnvironments() {\n        return JSON.parse(this.storageService.get(DEBUG_CHOSEN_ENVIRONMENTS_KEY, 1 , '{}'));\n    }\n    storeChosenEnvironments(environments) {\n        this.storageService.store(DEBUG_CHOSEN_ENVIRONMENTS_KEY, JSON.stringify(environments), 1 , 1 );\n    }\n    storeWatchExpressions(watchExpressions) {\n        if (watchExpressions.length) {\n            this.storageService.store(DEBUG_WATCH_EXPRESSIONS_KEY, JSON.stringify(( watchExpressions.map(we => ({ name: we.name, id: we.getId() })))), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_WATCH_EXPRESSIONS_KEY, 1 );\n        }\n    }\n    storeBreakpoints(debugModel) {\n        const breakpoints = debugModel.getBreakpoints();\n        if (breakpoints.length) {\n            this.storageService.store(DEBUG_BREAKPOINTS_KEY, JSON.stringify(breakpoints), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_BREAKPOINTS_KEY, 1 );\n        }\n        const functionBreakpoints = debugModel.getFunctionBreakpoints();\n        if (functionBreakpoints.length) {\n            this.storageService.store(DEBUG_FUNCTION_BREAKPOINTS_KEY, JSON.stringify(functionBreakpoints), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_FUNCTION_BREAKPOINTS_KEY, 1 );\n        }\n        const dataBreakpoints = debugModel.getDataBreakpoints().filter(dbp => dbp.canPersist);\n        if (dataBreakpoints.length) {\n            this.storageService.store(DEBUG_DATA_BREAKPOINTS_KEY, JSON.stringify(dataBreakpoints), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_DATA_BREAKPOINTS_KEY, 1 );\n        }\n        const exceptionBreakpoints = debugModel.getExceptionBreakpoints();\n        if (exceptionBreakpoints.length) {\n            this.storageService.store(DEBUG_EXCEPTION_BREAKPOINTS_KEY, JSON.stringify(exceptionBreakpoints), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(DEBUG_EXCEPTION_BREAKPOINTS_KEY, 1 );\n        }\n    }\n};\nDebugStorage = ( __decorate([\n    ( __param(0, IStorageService)),\n    ( __param(1, ITextFileService)),\n    ( __param(2, IUriIdentityService)),\n    ( __param(3, ILogService))\n], DebugStorage));\nexport { DebugStorage };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nlet DebugTelemetry = class DebugTelemetry {\n    constructor(model, telemetryService) {\n        this.model = model;\n        this.telemetryService = telemetryService;\n    }\n    logDebugSessionStart(dbgr, launchJsonExists) {\n        const extension = dbgr.getMainExtensionDescriptor();\n        this.telemetryService.publicLog('debugSessionStart', {\n            type: dbgr.type,\n            breakpointCount: this.model.getBreakpoints().length,\n            exceptionBreakpoints: this.model.getExceptionBreakpoints(),\n            watchExpressionsCount: this.model.getWatchExpressions().length,\n            extensionName: extension.identifier.value,\n            isBuiltin: extension.isBuiltin,\n            launchJsonExists\n        });\n    }\n    logDebugSessionStop(session, adapterExitEvent) {\n        const breakpoints = this.model.getBreakpoints();\n        this.telemetryService.publicLog('debugSessionStop', {\n            type: session && session.configuration.type,\n            success: adapterExitEvent.emittedStopped || breakpoints.length === 0,\n            sessionLengthInSeconds: adapterExitEvent.sessionLengthInSeconds,\n            breakpointCount: breakpoints.length,\n            watchExpressionsCount: this.model.getWatchExpressions().length\n        });\n    }\n};\nDebugTelemetry = ( __decorate([\n    ( __param(1, ITelemetryService))\n], DebugTelemetry));\nexport { DebugTelemetry };\n","import { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { CONTEXT_EXPRESSION_SELECTED, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE } from './debug.js';\nimport { isSessionAttach } from './debugUtils.js';\nclass ViewModel {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.firstSessionStart = true;\n        this._onDidFocusSession = ( new Emitter());\n        this._onDidFocusThread = ( new Emitter());\n        this._onDidFocusStackFrame = ( new Emitter());\n        this._onDidSelectExpression = ( new Emitter());\n        this._onDidEvaluateLazyExpression = ( new Emitter());\n        this._onWillUpdateViews = ( new Emitter());\n        contextKeyService.bufferChangeEvents(() => {\n            this.expressionSelectedContextKey = CONTEXT_EXPRESSION_SELECTED.bindTo(contextKeyService);\n            this.loadedScriptsSupportedContextKey = CONTEXT_LOADED_SCRIPTS_SUPPORTED.bindTo(contextKeyService);\n            this.stepBackSupportedContextKey = CONTEXT_STEP_BACK_SUPPORTED.bindTo(contextKeyService);\n            this.focusedSessionIsAttach = CONTEXT_FOCUSED_SESSION_IS_ATTACH.bindTo(contextKeyService);\n            this.restartFrameSupportedContextKey = CONTEXT_RESTART_FRAME_SUPPORTED.bindTo(contextKeyService);\n            this.stepIntoTargetsSupported = CONTEXT_STEP_INTO_TARGETS_SUPPORTED.bindTo(contextKeyService);\n            this.jumpToCursorSupported = CONTEXT_JUMP_TO_CURSOR_SUPPORTED.bindTo(contextKeyService);\n            this.setVariableSupported = CONTEXT_SET_VARIABLE_SUPPORTED.bindTo(contextKeyService);\n            this.setExpressionSupported = CONTEXT_SET_EXPRESSION_SUPPORTED.bindTo(contextKeyService);\n            this.multiSessionDebug = CONTEXT_MULTI_SESSION_DEBUG.bindTo(contextKeyService);\n            this.terminateDebuggeeSupported = CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED.bindTo(contextKeyService);\n            this.suspendDebuggeeSupported = CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED.bindTo(contextKeyService);\n            this.disassembleRequestSupported = CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED.bindTo(contextKeyService);\n            this.focusedStackFrameHasInstructionPointerReference = CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE.bindTo(contextKeyService);\n        });\n    }\n    getId() {\n        return 'root';\n    }\n    get focusedSession() {\n        return this._focusedSession;\n    }\n    get focusedThread() {\n        return this._focusedThread;\n    }\n    get focusedStackFrame() {\n        return this._focusedStackFrame;\n    }\n    setFocus(stackFrame, thread, session, explicit) {\n        const shouldEmitForStackFrame = this._focusedStackFrame !== stackFrame;\n        const shouldEmitForSession = this._focusedSession !== session;\n        const shouldEmitForThread = this._focusedThread !== thread;\n        this._focusedStackFrame = stackFrame;\n        this._focusedThread = thread;\n        this._focusedSession = session;\n        this.contextKeyService.bufferChangeEvents(() => {\n            this.loadedScriptsSupportedContextKey.set(session ? !!session.capabilities.supportsLoadedSourcesRequest : false);\n            this.stepBackSupportedContextKey.set(session ? !!session.capabilities.supportsStepBack : false);\n            this.restartFrameSupportedContextKey.set(session ? !!session.capabilities.supportsRestartFrame : false);\n            this.stepIntoTargetsSupported.set(session ? !!session.capabilities.supportsStepInTargetsRequest : false);\n            this.jumpToCursorSupported.set(session ? !!session.capabilities.supportsGotoTargetsRequest : false);\n            this.setVariableSupported.set(session ? !!session.capabilities.supportsSetVariable : false);\n            this.setExpressionSupported.set(session ? !!session.capabilities.supportsSetExpression : false);\n            this.terminateDebuggeeSupported.set(session ? !!session.capabilities.supportTerminateDebuggee : false);\n            this.suspendDebuggeeSupported.set(session ? !!session.capabilities.supportSuspendDebuggee : false);\n            this.disassembleRequestSupported.set(!!session?.capabilities.supportsDisassembleRequest);\n            this.focusedStackFrameHasInstructionPointerReference.set(!!stackFrame?.instructionPointerReference);\n            const attach = !!session && isSessionAttach(session);\n            this.focusedSessionIsAttach.set(attach);\n        });\n        if (shouldEmitForSession) {\n            this._onDidFocusSession.fire(session);\n        }\n        if (shouldEmitForStackFrame) {\n            this._onDidFocusStackFrame.fire({ stackFrame, explicit, session });\n        }\n        else if (shouldEmitForThread) {\n            this._onDidFocusThread.fire({ thread, explicit, session });\n        }\n    }\n    get onDidFocusSession() {\n        return this._onDidFocusSession.event;\n    }\n    get onDidFocusThread() {\n        return this._onDidFocusThread.event;\n    }\n    get onDidFocusStackFrame() {\n        return this._onDidFocusStackFrame.event;\n    }\n    getSelectedExpression() {\n        return this.selectedExpression;\n    }\n    setSelectedExpression(expression, settingWatch) {\n        this.selectedExpression = expression ? { expression, settingWatch: settingWatch } : undefined;\n        this.expressionSelectedContextKey.set(!!expression);\n        this._onDidSelectExpression.fire(this.selectedExpression);\n    }\n    get onDidSelectExpression() {\n        return this._onDidSelectExpression.event;\n    }\n    get onDidEvaluateLazyExpression() {\n        return this._onDidEvaluateLazyExpression.event;\n    }\n    updateViews() {\n        this._onWillUpdateViews.fire();\n    }\n    get onWillUpdateViews() {\n        return this._onWillUpdateViews.event;\n    }\n    isMultiSessionView() {\n        return !!this.multiSessionDebug.get();\n    }\n    setMultiSessionView(isMultiSessionView) {\n        this.multiSessionDebug.set(isMultiSessionView);\n    }\n    async evaluateLazyExpression(expression) {\n        await expression.evaluateLazy();\n        this._onDidEvaluateLazyExpression.fire(expression);\n    }\n}\nexport { ViewModel };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as aria from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { raceTimeout, RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { isErrorWithActions } from 'monaco-editor/esm/vs/base/common/errorMessage.js';\nimport * as errors from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Emitter, Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { deepClone, equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IExtensionHostDebugService } from '../../../../platform/debug/common/extensionHostDebug.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IWorkspaceTrustRequestService } from 'monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js';\nimport { IViewsService, IViewDescriptorService } from '../../../common/views.js';\nimport { AdapterManager } from './debugAdapterManager.js';\nimport { DEBUG_CONFIGURE_COMMAND_ID, DEBUG_CONFIGURE_LABEL } from './debugCommands.js';\nimport { ConfigurationManager } from './debugConfigurationManager.js';\nimport { DebugMemoryFileSystemProvider } from './debugMemory.js';\nimport { DebugSession } from './debugSession.js';\nimport { DebugTaskRunner } from './debugTaskRunner.js';\nimport { CALLSTACK_VIEW_ID, DEBUG_MEMORY_SCHEME, CONTEXT_DEBUG_TYPE, CONTEXT_DEBUG_STATE, CONTEXT_HAS_DEBUGGED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_UX, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_DISASSEMBLY_VIEW_FOCUS, getStateLabel, debuggerDisabledMessage, VIEWLET_ID, REPL_VIEW_ID } from '../common/debug.js';\nimport { DebugCompoundRoot } from '../common/debugCompoundRoot.js';\nimport { DebugModel, Breakpoint, FunctionBreakpoint, DataBreakpoint, InstructionBreakpoint } from '../common/debugModel.js';\nimport { DebugStorage } from '../common/debugStorage.js';\nimport { DebugTelemetry } from '../common/debugTelemetry.js';\nimport { saveAllBeforeDebugStart, getExtensionHostDebugSession } from '../common/debugUtils.js';\nimport { ViewModel } from '../common/debugViewModel.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport { VIEWLET_ID as VIEWLET_ID$1 } from '../../files/common/files.js';\nimport { NumberBadge, IActivityService } from '../../../services/activity/common/activity.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet DebugService = class DebugService {\n    constructor(editorService, paneCompositeService, viewsService, viewDescriptorService, notificationService, dialogService, layoutService, contextService, contextKeyService, lifecycleService, instantiationService, extensionService, fileService, configurationService, extensionHostDebugService, activityService, commandService, quickInputService, workspaceTrustRequestService, uriIdentityService) {\n        this.editorService = editorService;\n        this.paneCompositeService = paneCompositeService;\n        this.viewsService = viewsService;\n        this.viewDescriptorService = viewDescriptorService;\n        this.notificationService = notificationService;\n        this.dialogService = dialogService;\n        this.layoutService = layoutService;\n        this.contextService = contextService;\n        this.contextKeyService = contextKeyService;\n        this.lifecycleService = lifecycleService;\n        this.instantiationService = instantiationService;\n        this.extensionService = extensionService;\n        this.fileService = fileService;\n        this.configurationService = configurationService;\n        this.extensionHostDebugService = extensionHostDebugService;\n        this.activityService = activityService;\n        this.commandService = commandService;\n        this.quickInputService = quickInputService;\n        this.workspaceTrustRequestService = workspaceTrustRequestService;\n        this.uriIdentityService = uriIdentityService;\n        this.disposables = ( new DisposableStore());\n        this.initializing = false;\n        this.sessionCancellationTokens = ( new Map());\n        this.haveDoneLazySetup = false;\n        this.breakpointsToSendOnResourceSaved = ( new Set());\n        this._onDidChangeState = ( new Emitter());\n        this._onDidNewSession = ( new Emitter());\n        this._onWillNewSession = ( new Emitter());\n        this._onDidEndSession = ( new Emitter());\n        this.adapterManager = this.instantiationService.createInstance(AdapterManager, { onDidNewSession: this.onDidNewSession });\n        this.disposables.add(this.adapterManager);\n        this.configurationManager = this.instantiationService.createInstance(ConfigurationManager, this.adapterManager);\n        this.disposables.add(this.configurationManager);\n        this.debugStorage = this.instantiationService.createInstance(DebugStorage);\n        this.chosenEnvironments = this.debugStorage.loadChosenEnvironments();\n        this.model = this.instantiationService.createInstance(DebugModel, this.debugStorage);\n        this.telemetry = this.instantiationService.createInstance(DebugTelemetry, this.model);\n        this.viewModel = ( new ViewModel(contextKeyService));\n        this.taskRunner = this.instantiationService.createInstance(DebugTaskRunner);\n        this.disposables.add(this.fileService.onDidFilesChange(e => this.onFileChanges(e)));\n        this.disposables.add(this.lifecycleService.onWillShutdown(this.dispose, this));\n        this.disposables.add(this.extensionHostDebugService.onAttachSession(event => {\n            const session = this.model.getSession(event.sessionId, true);\n            if (session) {\n                session.configuration.request = 'attach';\n                session.configuration.port = event.port;\n                session.setSubId(event.subId);\n                this.launchOrAttachToSession(session);\n            }\n        }));\n        this.disposables.add(this.extensionHostDebugService.onTerminateSession(event => {\n            const session = this.model.getSession(event.sessionId);\n            if (session && session.subId === event.subId) {\n                session.disconnect();\n            }\n        }));\n        this.disposables.add(this.viewModel.onDidFocusStackFrame(() => {\n            this.onStateChange();\n        }));\n        this.disposables.add(this.viewModel.onDidFocusSession((session) => {\n            this.onStateChange();\n            if (session) {\n                this.setExceptionBreakpointFallbackSession(session.getId());\n            }\n        }));\n        this.disposables.add(Event.any(this.adapterManager.onDidRegisterDebugger, this.configurationManager.onDidSelectConfiguration)(() => {\n            const debugUxValue = (this.state !== 0  || (this.configurationManager.getAllConfigurations().length > 0 && this.adapterManager.hasEnabledDebuggers())) ? 'default' : 'simple';\n            this.debugUx.set(debugUxValue);\n            this.debugStorage.storeDebugUxState(debugUxValue);\n        }));\n        this.disposables.add(this.model.onDidChangeCallStack(() => {\n            const numberOfSessions = this.model.getSessions().filter(s => !s.parentSession).length;\n            this.activity?.dispose();\n            if (numberOfSessions > 0) {\n                const viewContainer = this.viewDescriptorService.getViewContainerByViewId(CALLSTACK_VIEW_ID);\n                if (viewContainer) {\n                    this.activity = this.activityService.showViewContainerActivity(viewContainer.id, { badge: ( new NumberBadge(numberOfSessions, n => n === 1 ? ( nls.localize('1activeSession', \"1 active session\")) : ( nls.localize('nActiveSessions', \"{0} active sessions\", n)))) });\n                }\n            }\n        }));\n        this.disposables.add(editorService.onDidActiveEditorChange(() => {\n            this.contextKeyService.bufferChangeEvents(() => {\n                if (editorService.activeEditor === DisassemblyViewInput.instance) {\n                    this.disassemblyViewFocus.set(true);\n                }\n                else {\n                    this.disassemblyViewFocus?.reset();\n                }\n            });\n        }));\n        this.disposables.add(this.lifecycleService.onBeforeShutdown(() => {\n            for (const editor of editorService.editors) {\n                if (editor.resource?.scheme === DEBUG_MEMORY_SCHEME) {\n                    editor.dispose();\n                }\n            }\n        }));\n        this.initContextKeys(contextKeyService);\n    }\n    initContextKeys(contextKeyService) {\n        queueMicrotask(() => {\n            contextKeyService.bufferChangeEvents(() => {\n                this.debugType = CONTEXT_DEBUG_TYPE.bindTo(contextKeyService);\n                this.debugState = CONTEXT_DEBUG_STATE.bindTo(contextKeyService);\n                this.hasDebugged = CONTEXT_HAS_DEBUGGED.bindTo(contextKeyService);\n                this.inDebugMode = CONTEXT_IN_DEBUG_MODE.bindTo(contextKeyService);\n                this.debugUx = CONTEXT_DEBUG_UX.bindTo(contextKeyService);\n                this.debugUx.set(this.debugStorage.loadDebugUxState());\n                this.breakpointsExist = CONTEXT_BREAKPOINTS_EXIST.bindTo(contextKeyService);\n                this.disassemblyViewFocus = CONTEXT_DISASSEMBLY_VIEW_FOCUS.bindTo(contextKeyService);\n            });\n            const setBreakpointsExistContext = () => this.breakpointsExist.set(!!(this.model.getBreakpoints().length || this.model.getDataBreakpoints().length || this.model.getFunctionBreakpoints().length));\n            setBreakpointsExistContext();\n            this.disposables.add(this.model.onDidChangeBreakpoints(() => setBreakpointsExistContext()));\n        });\n    }\n    getModel() {\n        return this.model;\n    }\n    getViewModel() {\n        return this.viewModel;\n    }\n    getConfigurationManager() {\n        return this.configurationManager;\n    }\n    getAdapterManager() {\n        return this.adapterManager;\n    }\n    sourceIsNotAvailable(uri) {\n        this.model.sourceIsNotAvailable(uri);\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n    get state() {\n        const focusedSession = this.viewModel.focusedSession;\n        if (focusedSession) {\n            return focusedSession.state;\n        }\n        return this.initializing ? 1  : 0 ;\n    }\n    get initializingOptions() {\n        return this._initializingOptions;\n    }\n    startInitializingState(options) {\n        if (!this.initializing) {\n            this.initializing = true;\n            this._initializingOptions = options;\n            this.onStateChange();\n        }\n    }\n    endInitializingState() {\n        if (this.initializing) {\n            this.initializing = false;\n            this._initializingOptions = undefined;\n            this.onStateChange();\n        }\n    }\n    cancelTokens(id) {\n        if (id) {\n            const token = this.sessionCancellationTokens.get(id);\n            if (token) {\n                token.cancel();\n                this.sessionCancellationTokens.delete(id);\n            }\n        }\n        else {\n            this.sessionCancellationTokens.forEach(t => t.cancel());\n            this.sessionCancellationTokens.clear();\n        }\n    }\n    onStateChange() {\n        const state = this.state;\n        if (this.previousState !== state) {\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.debugState.set(getStateLabel(state));\n                this.inDebugMode.set(state !== 0 );\n                const debugUxValue = (((state !== 0  && state !== 1) ) || (this.adapterManager.hasEnabledDebuggers() && this.configurationManager.selectedConfiguration.name)) ? 'default' : 'simple';\n                this.debugUx.set(debugUxValue);\n                this.debugStorage.storeDebugUxState(debugUxValue);\n            });\n            this.previousState = state;\n            this._onDidChangeState.fire(state);\n        }\n    }\n    get onDidChangeState() {\n        return this._onDidChangeState.event;\n    }\n    get onDidNewSession() {\n        return this._onDidNewSession.event;\n    }\n    get onWillNewSession() {\n        return this._onWillNewSession.event;\n    }\n    get onDidEndSession() {\n        return this._onDidEndSession.event;\n    }\n    lazySetup() {\n        if (!this.haveDoneLazySetup) {\n            this.disposables.add(this.fileService.registerProvider(DEBUG_MEMORY_SCHEME, ( new DebugMemoryFileSystemProvider(this))));\n            this.haveDoneLazySetup = true;\n        }\n    }\n    async startDebugging(launch, configOrName, options, saveBeforeStart = !options?.parentSession) {\n        const message = options && options.noDebug ? ( nls.localize(\n            'runTrust',\n            \"Running executes build tasks and program code from your workspace.\"\n        )) : ( nls.localize(\n            'debugTrust',\n            \"Debugging executes build tasks and program code from your workspace.\"\n        ));\n        const trust = await this.workspaceTrustRequestService.requestWorkspaceTrust({ message });\n        if (!trust) {\n            return false;\n        }\n        this.lazySetup();\n        this.startInitializingState(options);\n        this.hasDebugged.set(true);\n        try {\n            await this.extensionService.activateByEvent('onDebug');\n            if (saveBeforeStart) {\n                await saveAllBeforeDebugStart(this.configurationService, this.editorService);\n            }\n            await this.extensionService.whenInstalledExtensionsRegistered();\n            let config;\n            let compound;\n            if (!configOrName) {\n                configOrName = this.configurationManager.selectedConfiguration.name;\n            }\n            if (typeof configOrName === 'string' && launch) {\n                config = launch.getConfiguration(configOrName);\n                compound = launch.getCompound(configOrName);\n            }\n            else if (typeof configOrName !== 'string') {\n                config = configOrName;\n            }\n            if (compound) {\n                if (!compound.configurations) {\n                    throw new Error(nls.localize({ key: 'compoundMustHaveConfigurations', comment: ['compound indicates a \"compounds\" configuration item', '\"configurations\" is an attribute and should not be localized'] }, \"Compound must have \\\"configurations\\\" attribute set in order to start multiple configurations.\"));\n                }\n                if (compound.preLaunchTask) {\n                    const taskResult = await this.taskRunner.runTaskAndCheckErrors(launch?.workspace || this.contextService.getWorkspace(), compound.preLaunchTask);\n                    if (taskResult === 0 ) {\n                        this.endInitializingState();\n                        return false;\n                    }\n                }\n                if (compound.stopAll) {\n                    options = { ...options, compoundRoot: ( new DebugCompoundRoot()) };\n                }\n                const values = await Promise.all(( compound.configurations.map(configData => {\n                    const name = typeof configData === 'string' ? configData : configData.name;\n                    if (name === compound.name) {\n                        return Promise.resolve(false);\n                    }\n                    let launchForName;\n                    if (typeof configData === 'string') {\n                        const launchesContainingName = this.configurationManager.getLaunches().filter(l => !!l.getConfiguration(name));\n                        if (launchesContainingName.length === 1) {\n                            launchForName = launchesContainingName[0];\n                        }\n                        else if (launch && launchesContainingName.length > 1 && launchesContainingName.indexOf(launch) >= 0) {\n                            launchForName = launch;\n                        }\n                        else {\n                            throw new Error(launchesContainingName.length === 0 ? nls.localize('noConfigurationNameInWorkspace', \"Could not find launch configuration '{0}' in the workspace.\", name)\n                                : nls.localize('multipleConfigurationNamesInWorkspace', \"There are multiple launch configurations '{0}' in the workspace. Use folder name to qualify the configuration.\", name));\n                        }\n                    }\n                    else if (configData.folder) {\n                        const launchesMatchingConfigData = this.configurationManager.getLaunches().filter(l => l.workspace && l.workspace.name === configData.folder && !!l.getConfiguration(configData.name));\n                        if (launchesMatchingConfigData.length === 1) {\n                            launchForName = launchesMatchingConfigData[0];\n                        }\n                        else {\n                            throw new Error(nls.localize('noFolderWithName', \"Can not find folder with name '{0}' for configuration '{1}' in compound '{2}'.\", configData.folder, configData.name, compound.name));\n                        }\n                    }\n                    return this.createSession(launchForName, launchForName.getConfiguration(name), options);\n                })));\n                const result = values.every(success => !!success);\n                this.endInitializingState();\n                return result;\n            }\n            if (configOrName && !config) {\n                const message = !!launch ? ( nls.localize(\n                    'configMissing',\n                    \"Configuration '{0}' is missing in 'launch.json'.\",\n                    typeof configOrName === 'string' ? configOrName : configOrName.name\n                )) :\n                    ( nls.localize(\n                        'launchJsonDoesNotExist',\n                        \"'launch.json' does not exist for passed workspace folder.\"\n                    ));\n                throw new Error(message);\n            }\n            const result = await this.createSession(launch, config, options);\n            this.endInitializingState();\n            return result;\n        }\n        catch (err) {\n            this.notificationService.error(err);\n            this.endInitializingState();\n            return Promise.reject(err);\n        }\n    }\n    async createSession(launch, config, options) {\n        let type;\n        if (config) {\n            type = config.type;\n        }\n        else {\n            config = Object.create(null);\n        }\n        if (options && options.noDebug) {\n            config.noDebug = true;\n        }\n        else if (options && typeof options.noDebug === 'undefined' && options.parentSession && options.parentSession.configuration.noDebug) {\n            config.noDebug = true;\n        }\n        const unresolvedConfig = deepClone(config);\n        let guess;\n        let activeEditor;\n        if (!type) {\n            activeEditor = this.editorService.activeEditor;\n            if (activeEditor && activeEditor.resource) {\n                type = this.chosenEnvironments[( activeEditor.resource.toString())];\n            }\n            if (!type) {\n                guess = await this.adapterManager.guessDebugger(false);\n                if (guess) {\n                    type = guess.type;\n                }\n            }\n        }\n        const initCancellationToken = ( new CancellationTokenSource());\n        const sessionId = generateUuid();\n        this.sessionCancellationTokens.set(sessionId, initCancellationToken);\n        const configByProviders = await this.configurationManager.resolveConfigurationByProviders(launch && launch.workspace ? launch.workspace.uri : undefined, type, config, initCancellationToken.token);\n        if (configByProviders && configByProviders.type) {\n            try {\n                let resolvedConfig = await this.substituteVariables(launch, configByProviders);\n                if (!resolvedConfig) {\n                    return false;\n                }\n                if (initCancellationToken.token.isCancellationRequested) {\n                    return false;\n                }\n                const workspace = launch?.workspace || this.contextService.getWorkspace();\n                const taskResult = await this.taskRunner.runTaskAndCheckErrors(workspace, resolvedConfig.preLaunchTask);\n                if (taskResult === 0 ) {\n                    return false;\n                }\n                const cfg = await this.configurationManager.resolveDebugConfigurationWithSubstitutedVariables(launch && launch.workspace ? launch.workspace.uri : undefined, type, resolvedConfig, initCancellationToken.token);\n                if (!cfg) {\n                    if (launch && type && cfg === null && !initCancellationToken.token.isCancellationRequested) {\n                        await launch.openConfigFile({ preserveFocus: true, type }, initCancellationToken.token);\n                    }\n                    return false;\n                }\n                resolvedConfig = cfg;\n                const dbg = this.adapterManager.getDebugger(resolvedConfig.type);\n                if (!dbg || (configByProviders.request !== 'attach' && configByProviders.request !== 'launch')) {\n                    let message;\n                    if (configByProviders.request !== 'attach' && configByProviders.request !== 'launch') {\n                        message = configByProviders.request ? ( nls.localize(\n                            'debugRequestNotSupported',\n                            \"Attribute '{0}' has an unsupported value '{1}' in the chosen debug configuration.\",\n                            'request',\n                            configByProviders.request\n                        ))\n                            : ( nls.localize(\n                            'debugRequesMissing',\n                            \"Attribute '{0}' is missing from the chosen debug configuration.\",\n                            'request'\n                        ));\n                    }\n                    else {\n                        message = resolvedConfig.type ? ( nls.localize(\n                            'debugTypeNotSupported',\n                            \"Configured debug type '{0}' is not supported.\",\n                            resolvedConfig.type\n                        )) :\n                            ( nls.localize(\n                                'debugTypeMissing',\n                                \"Missing property 'type' for the chosen launch configuration.\"\n                            ));\n                    }\n                    const actionList = [];\n                    actionList.push(( new Action('installAdditionalDebuggers', ( nls.localize(\n                        { key: 'installAdditionalDebuggers', comment: ['Placeholder is the debug type, so for example \"node\", \"python\"'] },\n                        \"Install {0} Extension\",\n                        resolvedConfig.type\n                    )), undefined, true, async () => this.commandService.executeCommand('debug.installAdditionalDebuggers', resolvedConfig?.type))));\n                    await this.showError(message, actionList);\n                    return false;\n                }\n                if (!dbg.enabled) {\n                    await this.showError(debuggerDisabledMessage(dbg.type), []);\n                    return false;\n                }\n                const result = await this.doCreateSession(sessionId, launch?.workspace, { resolved: resolvedConfig, unresolved: unresolvedConfig }, options);\n                if (result && guess && activeEditor && activeEditor.resource) {\n                    this.chosenEnvironments[( activeEditor.resource.toString())] = guess.type;\n                    this.debugStorage.storeChosenEnvironments(this.chosenEnvironments);\n                }\n                return result;\n            }\n            catch (err) {\n                if (err && err.message) {\n                    await this.showError(err.message);\n                }\n                else if (this.contextService.getWorkbenchState() === 1 ) {\n                    await this.showError(( nls.localize(\n                        'noFolderWorkspaceDebugError',\n                        \"The active file can not be debugged. Make sure it is saved and that you have a debug extension installed for that file type.\"\n                    )));\n                }\n                if (launch && !initCancellationToken.token.isCancellationRequested) {\n                    await launch.openConfigFile({ preserveFocus: true }, initCancellationToken.token);\n                }\n                return false;\n            }\n        }\n        if (launch && type && configByProviders === null && !initCancellationToken.token.isCancellationRequested) {\n            await launch.openConfigFile({ preserveFocus: true, type }, initCancellationToken.token);\n        }\n        return false;\n    }\n    async doCreateSession(sessionId, root, configuration, options) {\n        const session = this.instantiationService.createInstance(DebugSession, sessionId, configuration, root, this.model, options);\n        if (options?.startedByUser && ( this.model.getSessions().some(s => s.getLabel() === session.getLabel())) && configuration.resolved.suppressMultipleSessionWarning !== true) {\n            const result = await this.dialogService.confirm({ message: ( nls.localize(\n                'multipleSession',\n                \"'{0}' is already running. Do you want to start another instance?\",\n                session.getLabel()\n            )) });\n            if (!result.confirmed) {\n                return false;\n            }\n        }\n        this.model.addSession(session);\n        this.registerSessionListeners(session);\n        this._onWillNewSession.fire(session);\n        const openDebug = this.configurationService.getValue('debug').openDebug;\n        if (!configuration.resolved.noDebug && (openDebug === 'openOnSessionStart' || (openDebug !== 'neverOpen' && this.viewModel.firstSessionStart)) && !session.suppressDebugView) {\n            await this.paneCompositeService.openPaneComposite(VIEWLET_ID, 0 );\n        }\n        try {\n            await this.launchOrAttachToSession(session);\n            const internalConsoleOptions = session.configuration.internalConsoleOptions || this.configurationService.getValue('debug').internalConsoleOptions;\n            if (internalConsoleOptions === 'openOnSessionStart' || (this.viewModel.firstSessionStart && internalConsoleOptions === 'openOnFirstSessionStart')) {\n                this.viewsService.openView(REPL_VIEW_ID, false);\n            }\n            this.viewModel.firstSessionStart = false;\n            const showSubSessions = this.configurationService.getValue('debug').showSubSessionsInToolBar;\n            const sessions = this.model.getSessions();\n            const shownSessions = showSubSessions ? sessions : sessions.filter(s => !s.parentSession);\n            if (shownSessions.length > 1) {\n                this.viewModel.setMultiSessionView(true);\n            }\n            this._onDidNewSession.fire(session);\n            return true;\n        }\n        catch (error) {\n            if (errors.isCancellationError(error)) {\n                return false;\n            }\n            if (session && session.getReplElements().length > 0) {\n                this.viewsService.openView(REPL_VIEW_ID, false);\n            }\n            if (session.configuration && session.configuration.request === 'attach' && session.configuration.__autoAttach) {\n                return false;\n            }\n            const errorMessage = error instanceof Error ? error.message : error;\n            if (error.showUser !== false) {\n                await this.showError(errorMessage, isErrorWithActions(error) ? error.actions : []);\n            }\n            return false;\n        }\n    }\n    async launchOrAttachToSession(session, forceFocus = false) {\n        const dbgr = this.adapterManager.getDebugger(session.configuration.type);\n        try {\n            await session.initialize(dbgr);\n            await session.launchOrAttach(session.configuration);\n            const launchJsonExists = !!session.root && !!this.configurationService.getValue('launch', { resource: session.root.uri });\n            await this.telemetry.logDebugSessionStart(dbgr, launchJsonExists);\n            if (forceFocus || !this.viewModel.focusedSession || (session.parentSession === this.viewModel.focusedSession && session.compact)) {\n                await this.focusStackFrame(undefined, undefined, session);\n            }\n        }\n        catch (err) {\n            if (this.viewModel.focusedSession === session) {\n                await this.focusStackFrame(undefined);\n            }\n            return Promise.reject(err);\n        }\n    }\n    registerSessionListeners(session) {\n        const sessionRunningScheduler = ( new RunOnceScheduler(() => {\n            if (session.state === 3  && this.viewModel.focusedSession === session) {\n                this.viewModel.setFocus(undefined, this.viewModel.focusedThread, session, false);\n            }\n        }, 200));\n        this.disposables.add(session.onDidChangeState(() => {\n            if (session.state === 3  && this.viewModel.focusedSession === session) {\n                sessionRunningScheduler.schedule();\n            }\n            if (session === this.viewModel.focusedSession) {\n                this.onStateChange();\n            }\n        }));\n        this.disposables.add(session.onDidEndAdapter(async (adapterExitEvent) => {\n            if (adapterExitEvent) {\n                if (adapterExitEvent.error) {\n                    this.notificationService.error(( nls.localize(\n                        'debugAdapterCrash',\n                        \"Debug adapter process has terminated unexpectedly ({0})\",\n                        adapterExitEvent.error.message || ( adapterExitEvent.error.toString())\n                    )));\n                }\n                this.telemetry.logDebugSessionStop(session, adapterExitEvent);\n            }\n            const extensionDebugSession = getExtensionHostDebugSession(session);\n            if (extensionDebugSession && extensionDebugSession.state === 3  && extensionDebugSession.configuration.noDebug) {\n                this.extensionHostDebugService.close(extensionDebugSession.getId());\n            }\n            if (session.configuration.postDebugTask) {\n                const root = session.root ?? this.contextService.getWorkspace();\n                try {\n                    await this.taskRunner.runTask(root, session.configuration.postDebugTask);\n                }\n                catch (err) {\n                    this.notificationService.error(err);\n                }\n            }\n            this.endInitializingState();\n            this.cancelTokens(session.getId());\n            this._onDidEndSession.fire(session);\n            const focusedSession = this.viewModel.focusedSession;\n            if (focusedSession && focusedSession.getId() === session.getId()) {\n                const { session, thread, stackFrame } = getStackFrameThreadAndSessionToFocus(this.model, undefined, undefined, undefined, focusedSession);\n                this.viewModel.setFocus(stackFrame, thread, session, false);\n            }\n            if (this.model.getSessions().length === 0) {\n                this.viewModel.setMultiSessionView(false);\n                if (this.layoutService.isVisible(\"workbench.parts.sidebar\" ) && this.configurationService.getValue('debug').openExplorerOnEnd) {\n                    this.paneCompositeService.openPaneComposite(VIEWLET_ID$1, 0 );\n                }\n                const dataBreakpoints = this.model.getDataBreakpoints().filter(dbp => !dbp.canPersist);\n                dataBreakpoints.forEach(dbp => this.model.removeDataBreakpoints(dbp.getId()));\n                if (this.configurationService.getValue('debug').console.closeOnEnd) {\n                    const debugConsoleContainer = this.viewDescriptorService.getViewContainerByViewId(REPL_VIEW_ID);\n                    if (debugConsoleContainer && this.viewsService.isViewContainerVisible(debugConsoleContainer.id)) {\n                        this.viewsService.closeViewContainer(debugConsoleContainer.id);\n                    }\n                }\n            }\n            this.model.removeExceptionBreakpointsForSession(session.getId());\n        }));\n    }\n    async restartSession(session, restartData) {\n        if (session.saveBeforeRestart) {\n            await saveAllBeforeDebugStart(this.configurationService, this.editorService);\n        }\n        const isAutoRestart = !!restartData;\n        const runTasks = async () => {\n            if (isAutoRestart) {\n                return Promise.resolve(1 );\n            }\n            const root = session.root || this.contextService.getWorkspace();\n            await this.taskRunner.runTask(root, session.configuration.preRestartTask);\n            await this.taskRunner.runTask(root, session.configuration.postDebugTask);\n            const taskResult1 = await this.taskRunner.runTaskAndCheckErrors(root, session.configuration.preLaunchTask);\n            if (taskResult1 !== 1 ) {\n                return taskResult1;\n            }\n            return this.taskRunner.runTaskAndCheckErrors(root, session.configuration.postRestartTask);\n        };\n        const extensionDebugSession = getExtensionHostDebugSession(session);\n        if (extensionDebugSession) {\n            const taskResult = await runTasks();\n            if (taskResult === 1 ) {\n                this.extensionHostDebugService.reload(extensionDebugSession.getId());\n            }\n            return;\n        }\n        let needsToSubstitute = false;\n        let unresolved;\n        const launch = session.root ? this.configurationManager.getLaunch(session.root.uri) : undefined;\n        if (launch) {\n            unresolved = launch.getConfiguration(session.configuration.name);\n            if (unresolved && !equals(unresolved, session.unresolvedConfiguration)) {\n                unresolved.type = session.configuration.type;\n                unresolved.noDebug = session.configuration.noDebug;\n                needsToSubstitute = true;\n            }\n        }\n        let resolved = session.configuration;\n        if (launch && needsToSubstitute && unresolved) {\n            const initCancellationToken = ( new CancellationTokenSource());\n            this.sessionCancellationTokens.set(session.getId(), initCancellationToken);\n            const resolvedByProviders = await this.configurationManager.resolveConfigurationByProviders(launch.workspace ? launch.workspace.uri : undefined, unresolved.type, unresolved, initCancellationToken.token);\n            if (resolvedByProviders) {\n                resolved = await this.substituteVariables(launch, resolvedByProviders);\n                if (resolved && !initCancellationToken.token.isCancellationRequested) {\n                    resolved = await this.configurationManager.resolveDebugConfigurationWithSubstitutedVariables(launch && launch.workspace ? launch.workspace.uri : undefined, unresolved.type, resolved, initCancellationToken.token);\n                }\n            }\n            else {\n                resolved = resolvedByProviders;\n            }\n        }\n        if (resolved) {\n            session.setConfiguration({ resolved, unresolved });\n        }\n        session.configuration.__restart = restartData;\n        if (session.capabilities.supportsRestartRequest) {\n            const taskResult = await runTasks();\n            if (taskResult === 1 ) {\n                await session.restart();\n            }\n            return;\n        }\n        const shouldFocus = !!this.viewModel.focusedSession && session.getId() === this.viewModel.focusedSession.getId();\n        if (isAutoRestart) {\n            await session.disconnect(true);\n        }\n        else {\n            await session.terminate(true);\n        }\n        return ( new Promise((c, e) => {\n            setTimeout(async () => {\n                const taskResult = await runTasks();\n                if (taskResult !== 1 ) {\n                    return;\n                }\n                if (!resolved) {\n                    return c(undefined);\n                }\n                try {\n                    await this.launchOrAttachToSession(session, shouldFocus);\n                    this._onDidNewSession.fire(session);\n                    c(undefined);\n                }\n                catch (error) {\n                    e(error);\n                }\n            }, 300);\n        }));\n    }\n    async stopSession(session, disconnect = false, suspend = false) {\n        if (session) {\n            return disconnect ? session.disconnect(undefined, suspend) : session.terminate();\n        }\n        const sessions = this.model.getSessions();\n        if (sessions.length === 0) {\n            this.taskRunner.cancel();\n            await this.quickInputService.cancel();\n            this.endInitializingState();\n            this.cancelTokens(undefined);\n        }\n        return Promise.all(( sessions.map(s => disconnect ? s.disconnect(undefined, suspend) : s.terminate())));\n    }\n    async substituteVariables(launch, config) {\n        const dbg = this.adapterManager.getDebugger(config.type);\n        if (dbg) {\n            let folder = undefined;\n            if (launch && launch.workspace) {\n                folder = launch.workspace;\n            }\n            else {\n                const folders = this.contextService.getWorkspace().folders;\n                if (folders.length === 1) {\n                    folder = folders[0];\n                }\n            }\n            try {\n                return await dbg.substituteVariables(folder, config);\n            }\n            catch (err) {\n                this.showError(err.message, undefined, !!launch?.getConfiguration(config.name));\n                return undefined;\n            }\n        }\n        return Promise.resolve(config);\n    }\n    async showError(message, errorActions = [], promptLaunchJson = true) {\n        const configureAction = ( new Action(\n            DEBUG_CONFIGURE_COMMAND_ID,\n            DEBUG_CONFIGURE_LABEL,\n            undefined,\n            true,\n            () => this.commandService.executeCommand(DEBUG_CONFIGURE_COMMAND_ID)\n        ));\n        const actions = errorActions.filter((action) => action.id.endsWith('.command')).length > 0 ?\n            errorActions :\n            [...errorActions, ...(promptLaunchJson ? [configureAction] : [])];\n        await this.dialogService.prompt({\n            type: Severity.Error,\n            message,\n            buttons: ( actions.map(action => ({\n                label: action.label,\n                run: () => action.run()\n            }))),\n            cancelButton: true\n        });\n    }\n    async focusStackFrame(_stackFrame, _thread, _session, options) {\n        const { stackFrame, thread, session } = getStackFrameThreadAndSessionToFocus(this.model, _stackFrame, _thread, _session);\n        if (stackFrame) {\n            const editor = await stackFrame.openInEditor(this.editorService, options?.preserveFocus ?? true, options?.sideBySide, options?.pinned);\n            if (editor) {\n                if (editor.input === DisassemblyViewInput.instance) ;\n                else {\n                    const control = editor.getControl();\n                    if (stackFrame && isCodeEditor(control) && control.hasModel()) {\n                        const model = control.getModel();\n                        const lineNumber = stackFrame.range.startLineNumber;\n                        if (lineNumber >= 1 && lineNumber <= model.getLineCount()) {\n                            const lineContent = control.getModel().getLineContent(lineNumber);\n                            aria.alert(( nls.localize(\n                                { key: 'debuggingPaused', comment: ['First placeholder is the file line content, second placeholder is the reason why debugging is stopped, for example \"breakpoint\", third is the stack frame name, and last is the line number.'] },\n                                \"{0}, debugging paused {1}, {2}:{3}\",\n                                lineContent,\n                                thread && thread.stoppedDetails ? `, reason ${thread.stoppedDetails.reason}` : '',\n                                stackFrame.source ? stackFrame.source.name : '',\n                                stackFrame.range.startLineNumber\n                            )));\n                        }\n                    }\n                }\n            }\n        }\n        if (session) {\n            this.debugType.set(session.configuration.type);\n        }\n        else {\n            this.debugType.reset();\n        }\n        this.viewModel.setFocus(stackFrame, thread, session, !!options?.explicit);\n    }\n    addWatchExpression(name) {\n        const we = this.model.addWatchExpression(name);\n        if (!name) {\n            this.viewModel.setSelectedExpression(we, false);\n        }\n        this.debugStorage.storeWatchExpressions(this.model.getWatchExpressions());\n    }\n    renameWatchExpression(id, newName) {\n        this.model.renameWatchExpression(id, newName);\n        this.debugStorage.storeWatchExpressions(this.model.getWatchExpressions());\n    }\n    moveWatchExpression(id, position) {\n        this.model.moveWatchExpression(id, position);\n        this.debugStorage.storeWatchExpressions(this.model.getWatchExpressions());\n    }\n    removeWatchExpressions(id) {\n        this.model.removeWatchExpressions(id);\n        this.debugStorage.storeWatchExpressions(this.model.getWatchExpressions());\n    }\n    canSetBreakpointsIn(model) {\n        return this.adapterManager.canSetBreakpointsIn(model);\n    }\n    async enableOrDisableBreakpoints(enable, breakpoint) {\n        if (breakpoint) {\n            this.model.setEnablement(breakpoint, enable);\n            this.debugStorage.storeBreakpoints(this.model);\n            if (breakpoint instanceof Breakpoint) {\n                await this.sendBreakpoints(breakpoint.originalUri);\n            }\n            else if (breakpoint instanceof FunctionBreakpoint) {\n                await this.sendFunctionBreakpoints();\n            }\n            else if (breakpoint instanceof DataBreakpoint) {\n                await this.sendDataBreakpoints();\n            }\n            else if (breakpoint instanceof InstructionBreakpoint) {\n                await this.sendInstructionBreakpoints();\n            }\n            else {\n                await this.sendExceptionBreakpoints();\n            }\n        }\n        else {\n            this.model.enableOrDisableAllBreakpoints(enable);\n            this.debugStorage.storeBreakpoints(this.model);\n            await this.sendAllBreakpoints();\n        }\n        this.debugStorage.storeBreakpoints(this.model);\n    }\n    async addBreakpoints(uri, rawBreakpoints, ariaAnnounce = true) {\n        const breakpoints = this.model.addBreakpoints(uri, rawBreakpoints);\n        if (ariaAnnounce) {\n            breakpoints.forEach(bp => aria.status(( nls.localize(\n                'breakpointAdded',\n                \"Added breakpoint, line {0}, file {1}\",\n                bp.lineNumber,\n                uri.fsPath\n            ))));\n        }\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendBreakpoints(uri);\n        this.debugStorage.storeBreakpoints(this.model);\n        return breakpoints;\n    }\n    async updateBreakpoints(uri, data, sendOnResourceSaved) {\n        this.model.updateBreakpoints(data);\n        this.debugStorage.storeBreakpoints(this.model);\n        if (sendOnResourceSaved) {\n            this.breakpointsToSendOnResourceSaved.add(uri);\n        }\n        else {\n            await this.sendBreakpoints(uri);\n            this.debugStorage.storeBreakpoints(this.model);\n        }\n    }\n    async removeBreakpoints(id) {\n        const toRemove = this.model.getBreakpoints().filter(bp => !id || bp.getId() === id);\n        toRemove.forEach(bp => aria.status(( nls.localize(\n            'breakpointRemoved',\n            \"Removed breakpoint, line {0}, file {1}\",\n            bp.lineNumber,\n            bp.uri.fsPath\n        ))));\n        const urisToClear = ( distinct(toRemove, bp => ( bp.originalUri.toString())).map(bp => bp.originalUri));\n        this.model.removeBreakpoints(toRemove);\n        this.debugStorage.storeBreakpoints(this.model);\n        await Promise.all(( urisToClear.map(uri => this.sendBreakpoints(uri))));\n    }\n    setBreakpointsActivated(activated) {\n        this.model.setBreakpointsActivated(activated);\n        return this.sendAllBreakpoints();\n    }\n    addFunctionBreakpoint(name, id) {\n        this.model.addFunctionBreakpoint(name || '', id);\n    }\n    async updateFunctionBreakpoint(id, update) {\n        this.model.updateFunctionBreakpoint(id, update);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendFunctionBreakpoints();\n    }\n    async removeFunctionBreakpoints(id) {\n        this.model.removeFunctionBreakpoints(id);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendFunctionBreakpoints();\n    }\n    async addDataBreakpoint(label, dataId, canPersist, accessTypes, accessType) {\n        this.model.addDataBreakpoint(label, dataId, canPersist, accessTypes, accessType);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendDataBreakpoints();\n        this.debugStorage.storeBreakpoints(this.model);\n    }\n    async removeDataBreakpoints(id) {\n        this.model.removeDataBreakpoints(id);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendDataBreakpoints();\n    }\n    async addInstructionBreakpoint(address, offset, condition, hitCondition) {\n        this.model.addInstructionBreakpoint(address, offset, condition, hitCondition);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendInstructionBreakpoints();\n        this.debugStorage.storeBreakpoints(this.model);\n    }\n    async removeInstructionBreakpoints(address) {\n        this.model.removeInstructionBreakpoints(address);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendInstructionBreakpoints();\n    }\n    setExceptionBreakpointFallbackSession(sessionId) {\n        this.model.setExceptionBreakpointFallbackSession(sessionId);\n        this.debugStorage.storeBreakpoints(this.model);\n    }\n    setExceptionBreakpointsForSession(session, data) {\n        this.model.setExceptionBreakpointsForSession(session.getId(), data);\n        this.debugStorage.storeBreakpoints(this.model);\n    }\n    async setExceptionBreakpointCondition(exceptionBreakpoint, condition) {\n        this.model.setExceptionBreakpointCondition(exceptionBreakpoint, condition);\n        this.debugStorage.storeBreakpoints(this.model);\n        await this.sendExceptionBreakpoints();\n    }\n    async sendAllBreakpoints(session) {\n        const setBreakpointsPromises = ( distinct(this.model.getBreakpoints(), bp => ( bp.originalUri.toString()))\n            .map(bp => this.sendBreakpoints(bp.originalUri, false, session)));\n        if (session?.capabilities.supportsConfigurationDoneRequest) {\n            await Promise.all([\n                ...setBreakpointsPromises,\n                this.sendFunctionBreakpoints(session),\n                this.sendDataBreakpoints(session),\n                this.sendInstructionBreakpoints(session),\n                this.sendExceptionBreakpoints(session),\n            ]);\n        }\n        else {\n            await Promise.all(setBreakpointsPromises);\n            await this.sendFunctionBreakpoints(session);\n            await this.sendDataBreakpoints(session);\n            await this.sendInstructionBreakpoints(session);\n            await this.sendExceptionBreakpoints(session);\n        }\n    }\n    async sendBreakpoints(modelUri, sourceModified = false, session) {\n        const breakpointsToSend = this.model.getBreakpoints({ originalUri: modelUri, enabledOnly: true });\n        await sendToOneOrAllSessions(this.model, session, async (s) => {\n            if (!s.configuration.noDebug) {\n                await s.sendBreakpoints(modelUri, breakpointsToSend, sourceModified);\n            }\n        });\n    }\n    async sendFunctionBreakpoints(session) {\n        const breakpointsToSend = this.model.getFunctionBreakpoints().filter(fbp => fbp.enabled && this.model.areBreakpointsActivated());\n        await sendToOneOrAllSessions(this.model, session, async (s) => {\n            if (s.capabilities.supportsFunctionBreakpoints && !s.configuration.noDebug) {\n                await s.sendFunctionBreakpoints(breakpointsToSend);\n            }\n        });\n    }\n    async sendDataBreakpoints(session) {\n        const breakpointsToSend = this.model.getDataBreakpoints().filter(fbp => fbp.enabled && this.model.areBreakpointsActivated());\n        await sendToOneOrAllSessions(this.model, session, async (s) => {\n            if (s.capabilities.supportsDataBreakpoints && !s.configuration.noDebug) {\n                await s.sendDataBreakpoints(breakpointsToSend);\n            }\n        });\n    }\n    async sendInstructionBreakpoints(session) {\n        const breakpointsToSend = this.model.getInstructionBreakpoints().filter(fbp => fbp.enabled && this.model.areBreakpointsActivated());\n        await sendToOneOrAllSessions(this.model, session, async (s) => {\n            if (s.capabilities.supportsInstructionBreakpoints && !s.configuration.noDebug) {\n                await s.sendInstructionBreakpoints(breakpointsToSend);\n            }\n        });\n    }\n    sendExceptionBreakpoints(session) {\n        return sendToOneOrAllSessions(this.model, session, async (s) => {\n            const enabledExceptionBps = this.model.getExceptionBreakpointsForSession(s.getId()).filter(exb => exb.enabled);\n            if (s.capabilities.supportsConfigurationDoneRequest && (!s.capabilities.exceptionBreakpointFilters || s.capabilities.exceptionBreakpointFilters.length === 0)) {\n                return;\n            }\n            if (!s.configuration.noDebug) {\n                await s.sendExceptionBreakpoints(enabledExceptionBps);\n            }\n        });\n    }\n    onFileChanges(fileChangesEvent) {\n        const toRemove = this.model.getBreakpoints().filter(bp => fileChangesEvent.contains(bp.originalUri, 2 ));\n        if (toRemove.length) {\n            this.model.removeBreakpoints(toRemove);\n        }\n        const toSend = [];\n        for (const uri of this.breakpointsToSendOnResourceSaved) {\n            if (fileChangesEvent.contains(uri, 0 )) {\n                toSend.push(uri);\n            }\n        }\n        for (const uri of toSend) {\n            this.breakpointsToSendOnResourceSaved.delete(uri);\n            this.sendBreakpoints(uri, true);\n        }\n    }\n    async runTo(uri, lineNumber, column) {\n        let breakpointToRemove;\n        let threadToContinue = this.getViewModel().focusedThread;\n        const addTempBreakPoint = async () => {\n            const bpExists = !!(this.getModel().getBreakpoints({ column, lineNumber, uri }).length);\n            if (!bpExists) {\n                const addResult = await this.addAndValidateBreakpoints(uri, lineNumber, column);\n                if (addResult.thread) {\n                    threadToContinue = addResult.thread;\n                }\n                if (addResult.breakpoint) {\n                    breakpointToRemove = addResult.breakpoint;\n                }\n            }\n            return { threadToContinue, breakpointToRemove };\n        };\n        const removeTempBreakPoint = (state) => {\n            if (state === 2  || state === 0 ) {\n                if (breakpointToRemove) {\n                    this.removeBreakpoints(breakpointToRemove.getId());\n                }\n                return true;\n            }\n            return false;\n        };\n        await addTempBreakPoint();\n        if (this.state === 0 ) {\n            const { launch, name, getConfig } = this.getConfigurationManager().selectedConfiguration;\n            const config = await getConfig();\n            const configOrName = config ? Object.assign(deepClone(config), {}) : name;\n            const listener = this.onDidChangeState(state => {\n                if (removeTempBreakPoint(state)) {\n                    listener.dispose();\n                }\n            });\n            await this.startDebugging(launch, configOrName, undefined, true);\n        }\n        if (this.state === 2 ) {\n            const focusedSession = this.getViewModel().focusedSession;\n            if (!focusedSession || !threadToContinue) {\n                return;\n            }\n            const listener = threadToContinue.session.onDidChangeState(() => {\n                if (removeTempBreakPoint(focusedSession.state)) {\n                    listener.dispose();\n                }\n            });\n            await threadToContinue.continue();\n        }\n    }\n    async addAndValidateBreakpoints(uri, lineNumber, column) {\n        const debugModel = this.getModel();\n        const viewModel = this.getViewModel();\n        const breakpoints = await this.addBreakpoints(uri, [{ lineNumber, column }], false);\n        const breakpoint = breakpoints?.[0];\n        if (!breakpoint) {\n            return { breakpoint: undefined, thread: viewModel.focusedThread };\n        }\n        if (!breakpoint.verified) {\n            let listener;\n            await raceTimeout(( new Promise(resolve => {\n                listener = debugModel.onDidChangeBreakpoints(() => {\n                    if (breakpoint.verified) {\n                        resolve();\n                    }\n                });\n            })), 2000);\n            listener.dispose();\n        }\n        let bestThread = viewModel.focusedThread;\n        let bestScore = 0 ;\n        for (const sessionId of breakpoint.sessionsThatVerified) {\n            const session = debugModel.getSession(sessionId);\n            if (!session) {\n                continue;\n            }\n            const threads = session.getAllThreads().filter(t => t.stopped);\n            if (bestScore < 3 ) {\n                if (viewModel.focusedThread && threads.includes(viewModel.focusedThread)) {\n                    bestThread = viewModel.focusedThread;\n                    bestScore = 3 ;\n                }\n            }\n            if (bestScore < 2 ) {\n                const pausedInThisFile = threads.find(t => {\n                    const top = t.getTopStackFrame();\n                    return top && this.uriIdentityService.extUri.isEqual(top.source.uri, uri);\n                });\n                if (pausedInThisFile) {\n                    bestThread = pausedInThisFile;\n                    bestScore = 2 ;\n                }\n            }\n            if (bestScore < 1 ) {\n                bestThread = threads[0];\n                bestScore = 2 ;\n            }\n        }\n        return { thread: bestThread, breakpoint };\n    }\n};\nDebugService = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, IPaneCompositePartService)),\n    ( __param(2, IViewsService)),\n    ( __param(3, IViewDescriptorService)),\n    ( __param(4, INotificationService)),\n    ( __param(5, IDialogService)),\n    ( __param(6, IWorkbenchLayoutService)),\n    ( __param(7, IWorkspaceContextService)),\n    ( __param(8, IContextKeyService)),\n    ( __param(9, ILifecycleService)),\n    ( __param(10, IInstantiationService)),\n    ( __param(11, IExtensionService)),\n    ( __param(12, IFileService)),\n    ( __param(13, IConfigurationService)),\n    ( __param(14, IExtensionHostDebugService)),\n    ( __param(15, IActivityService)),\n    ( __param(16, ICommandService)),\n    ( __param(17, IQuickInputService)),\n    ( __param(18, IWorkspaceTrustRequestService)),\n    ( __param(19, IUriIdentityService))\n], DebugService));\nfunction getStackFrameThreadAndSessionToFocus(model, stackFrame, thread, session, avoidSession) {\n    if (!session) {\n        if (stackFrame || thread) {\n            session = stackFrame ? stackFrame.thread.session : thread.session;\n        }\n        else {\n            const sessions = model.getSessions();\n            const stoppedSession = sessions.find(s => s.state === 2 );\n            session = stoppedSession || sessions.find(s => s !== avoidSession && s !== avoidSession?.parentSession) || (sessions.length ? sessions[0] : undefined);\n        }\n    }\n    if (!thread) {\n        if (stackFrame) {\n            thread = stackFrame.thread;\n        }\n        else {\n            const threads = session ? session.getAllThreads() : undefined;\n            const stoppedThread = threads && threads.find(t => t.stopped);\n            thread = stoppedThread || (threads && threads.length ? threads[0] : undefined);\n        }\n    }\n    if (!stackFrame && thread) {\n        stackFrame = thread.getTopStackFrame();\n    }\n    return { session, thread, stackFrame };\n}\nasync function sendToOneOrAllSessions(model, session, send) {\n    if (session) {\n        await send(session);\n    }\n    else {\n        await Promise.all(( model.getSessions().map(s => send(s))));\n    }\n}\nexport { DebugService, getStackFrameThreadAndSessionToFocus };\n","import { LanguageFeatureRegistry } from 'monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js';\nclass LanguageFeaturesService {\n    constructor() {\n        this.referenceProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.renameProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.codeActionProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.definitionProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.typeDefinitionProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.declarationProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.implementationProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentSymbolProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.inlayHintsProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.colorProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.codeLensProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentFormattingEditProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentRangeFormattingEditProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.onTypeFormattingEditProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.signatureHelpProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.hoverProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentHighlightProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.selectionRangeProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.foldingRangeProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.linkProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.inlineCompletionsProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.completionProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.linkedEditingRangeProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.inlineValuesProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.evaluatableExpressionProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentRangeSemanticTokensProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentSemanticTokensProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentOnDropEditProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n        this.documentPasteEditProvider = ( new LanguageFeatureRegistry(this._score.bind(this)));\n    }\n    setNotebookTypeResolver(resolver) {\n        this._notebookTypeResolver = resolver;\n    }\n    _score(uri) {\n        return this._notebookTypeResolver?.(uri);\n    }\n}\nexport { LanguageFeaturesService };\n","import { Queue } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport * as types from 'monaco-editor/esm/vs/base/common/types.js';\nimport { isCodeEditor, isDiffEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { AbstractVariableResolverService } from '../common/variableResolver.js';\nclass BaseConfigurationResolverService extends AbstractVariableResolverService {\n    static { this.INPUT_OR_COMMAND_VARIABLES_PATTERN = /\\${((input|command):(.*?))}/g; }\n    constructor(context, envVariablesPromise, editorService, configurationService, commandService, workspaceContextService, quickInputService, labelService, pathService, extensionService) {\n        super({\n            getFolderUri: (folderName) => {\n                const folder = workspaceContextService.getWorkspace().folders.filter(f => f.name === folderName).pop();\n                return folder ? folder.uri : undefined;\n            },\n            getWorkspaceFolderCount: () => {\n                return workspaceContextService.getWorkspace().folders.length;\n            },\n            getConfigurationValue: (folderUri, suffix) => {\n                return configurationService.getValue(suffix, folderUri ? { resource: folderUri } : {});\n            },\n            getAppRoot: () => {\n                return context.getAppRoot();\n            },\n            getExecPath: () => {\n                return context.getExecPath();\n            },\n            getFilePath: () => {\n                const fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, {\n                    supportSideBySide: SideBySideEditor.PRIMARY,\n                    filterByScheme: [Schemas.file, Schemas.vscodeUserData, this.pathService.defaultUriScheme]\n                });\n                if (!fileResource) {\n                    return undefined;\n                }\n                return this.labelService.getUriLabel(fileResource, { noPrefix: true });\n            },\n            getWorkspaceFolderPathForFile: () => {\n                const fileResource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, {\n                    supportSideBySide: SideBySideEditor.PRIMARY,\n                    filterByScheme: [Schemas.file, Schemas.vscodeUserData, this.pathService.defaultUriScheme]\n                });\n                if (!fileResource) {\n                    return undefined;\n                }\n                const wsFolder = workspaceContextService.getWorkspaceFolder(fileResource);\n                if (!wsFolder) {\n                    return undefined;\n                }\n                return this.labelService.getUriLabel(wsFolder.uri, { noPrefix: true });\n            },\n            getSelectedText: () => {\n                const activeTextEditorControl = editorService.activeTextEditorControl;\n                let activeControl = null;\n                if (isCodeEditor(activeTextEditorControl)) {\n                    activeControl = activeTextEditorControl;\n                }\n                else if (isDiffEditor(activeTextEditorControl)) {\n                    const original = activeTextEditorControl.getOriginalEditor();\n                    const modified = activeTextEditorControl.getModifiedEditor();\n                    activeControl = original.hasWidgetFocus() ? original : modified;\n                }\n                const activeModel = activeControl?.getModel();\n                const activeSelection = activeControl?.getSelection();\n                if (activeModel && activeSelection) {\n                    return activeModel.getValueInRange(activeSelection);\n                }\n                return undefined;\n            },\n            getLineNumber: () => {\n                const activeTextEditorControl = editorService.activeTextEditorControl;\n                if (isCodeEditor(activeTextEditorControl)) {\n                    const selection = activeTextEditorControl.getSelection();\n                    if (selection) {\n                        const lineNumber = selection.positionLineNumber;\n                        return String(lineNumber);\n                    }\n                }\n                return undefined;\n            },\n            getExtension: id => {\n                return extensionService.getExtension(id);\n            },\n        }, labelService, pathService.userHome().then(home => home.path), envVariablesPromise);\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.workspaceContextService = workspaceContextService;\n        this.quickInputService = quickInputService;\n        this.labelService = labelService;\n        this.pathService = pathService;\n        this.userInputAccessQueue = ( new Queue());\n    }\n    async resolveWithInteractionReplace(folder, config, section, variables, target) {\n        config = await this.resolveAnyAsync(folder, config);\n        return this.resolveWithInteraction(folder, config, section, variables, target).then(mapping => {\n            if (!mapping) {\n                return null;\n            }\n            else if (mapping.size > 0) {\n                return this.resolveAnyAsync(folder, config, Object.fromEntries(mapping));\n            }\n            else {\n                return config;\n            }\n        });\n    }\n    async resolveWithInteraction(folder, config, section, variables, target) {\n        const resolved = await this.resolveAnyMap(folder, config);\n        config = resolved.newConfig;\n        const allVariableMapping = resolved.resolvedVariables;\n        return this.resolveWithInputAndCommands(folder, config, variables, section, target).then(inputOrCommandMapping => {\n            if (this.updateMapping(inputOrCommandMapping, allVariableMapping)) {\n                return allVariableMapping;\n            }\n            return undefined;\n        });\n    }\n    updateMapping(newMapping, fullMapping) {\n        if (!newMapping) {\n            return false;\n        }\n        for (const [key, value] of Object.entries(newMapping)) {\n            fullMapping.set(key, value);\n        }\n        return true;\n    }\n    async resolveWithInputAndCommands(folder, configuration, variableToCommandMap, section, target) {\n        if (!configuration) {\n            return Promise.resolve(undefined);\n        }\n        let inputs = [];\n        if (this.workspaceContextService.getWorkbenchState() !== 1  && section) {\n            const overrides = folder ? { resource: folder.uri } : {};\n            const result = this.configurationService.inspect(section, overrides);\n            if (result && (result.userValue || result.workspaceValue || result.workspaceFolderValue)) {\n                switch (target) {\n                    case 2 :\n                        inputs = result.userValue?.inputs;\n                        break;\n                    case 5 :\n                        inputs = result.workspaceValue?.inputs;\n                        break;\n                    default: inputs = result.workspaceFolderValue?.inputs;\n                }\n            }\n            else {\n                const valueResult = this.configurationService.getValue(section, overrides);\n                if (valueResult) {\n                    inputs = valueResult.inputs;\n                }\n            }\n        }\n        const variables = [];\n        this.findVariables(configuration, variables);\n        const variableValues = Object.create(null);\n        for (const variable of variables) {\n            const [type, name] = variable.split(':', 2);\n            let result;\n            switch (type) {\n                case 'input':\n                    result = await this.showUserInput(name, inputs);\n                    break;\n                case 'command': {\n                    const commandId = (variableToCommandMap ? variableToCommandMap[name] : undefined) || name;\n                    result = await this.commandService.executeCommand(commandId, configuration);\n                    if (typeof result !== 'string' && !types.isUndefinedOrNull(result)) {\n                        throw new Error(nls.localize('commandVariable.noStringType', \"Cannot substitute command variable '{0}' because command did not return a result of type string.\", commandId));\n                    }\n                    break;\n                }\n                default:\n                    if (( this._contributedVariables.has(variable))) {\n                        result = await this._contributedVariables.get(variable)();\n                    }\n            }\n            if (typeof result === 'string') {\n                variableValues[variable] = result;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return variableValues;\n    }\n    findVariables(object, variables) {\n        if (typeof object === 'string') {\n            let matches;\n            while ((matches = BaseConfigurationResolverService.INPUT_OR_COMMAND_VARIABLES_PATTERN.exec(object)) !== null) {\n                if (matches.length === 4) {\n                    const command = matches[1];\n                    if (variables.indexOf(command) < 0) {\n                        variables.push(command);\n                    }\n                }\n            }\n            for (const contributed of ( this._contributedVariables.keys())) {\n                if ((variables.indexOf(contributed) < 0) && (object.indexOf('${' + contributed + '}') >= 0)) {\n                    variables.push(contributed);\n                }\n            }\n        }\n        else if (Array.isArray(object)) {\n            for (const value of object) {\n                this.findVariables(value, variables);\n            }\n        }\n        else if (object) {\n            for (const value of ( Object.values(object))) {\n                this.findVariables(value, variables);\n            }\n        }\n    }\n    showUserInput(variable, inputInfos) {\n        if (!inputInfos) {\n            return Promise.reject(( new Error(( nls.localize(\n                'inputVariable.noInputSection',\n                \"Variable '{0}' must be defined in an '{1}' section of the debug or task configuration.\",\n                variable,\n                'input'\n            )))));\n        }\n        const info = inputInfos.filter(item => item.id === variable).pop();\n        if (info) {\n            const missingAttribute = (attrName) => {\n                throw new Error(nls.localize('inputVariable.missingAttribute', \"Input variable '{0}' is of type '{1}' and must include '{2}'.\", variable, info.type, attrName));\n            };\n            switch (info.type) {\n                case 'promptString': {\n                    if (!types.isString(info.description)) {\n                        missingAttribute('description');\n                    }\n                    const inputOptions = { prompt: info.description, ignoreFocusLost: true };\n                    if (info.default) {\n                        inputOptions.value = info.default;\n                    }\n                    if (info.password) {\n                        inputOptions.password = info.password;\n                    }\n                    return this.userInputAccessQueue.queue(() => this.quickInputService.input(inputOptions)).then(resolvedInput => {\n                        return resolvedInput;\n                    });\n                }\n                case 'pickString': {\n                    if (!types.isString(info.description)) {\n                        missingAttribute('description');\n                    }\n                    if (Array.isArray(info.options)) {\n                        for (const pickOption of info.options) {\n                            if (!types.isString(pickOption) && !types.isString(pickOption.value)) {\n                                missingAttribute('value');\n                            }\n                        }\n                    }\n                    else {\n                        missingAttribute('options');\n                    }\n                    const picks = ( new Array());\n                    for (const pickOption of info.options) {\n                        const value = types.isString(pickOption) ? pickOption : pickOption.value;\n                        const label = types.isString(pickOption) ? undefined : pickOption.label;\n                        const item = {\n                            label: label ? `${label}: ${value}` : value,\n                            value: value\n                        };\n                        if (value === info.default) {\n                            item.description = ( nls.localize('inputVariable.defaultInputValue', \"(Default)\"));\n                            picks.unshift(item);\n                        }\n                        else {\n                            picks.push(item);\n                        }\n                    }\n                    const pickOptions = { placeHolder: info.description, matchOnDetail: true, ignoreFocusLost: true };\n                    return this.userInputAccessQueue.queue(() => this.quickInputService.pick(picks, pickOptions, undefined)).then(resolvedInput => {\n                        if (resolvedInput) {\n                            return resolvedInput.value;\n                        }\n                        return undefined;\n                    });\n                }\n                case 'command': {\n                    if (!types.isString(info.command)) {\n                        missingAttribute('command');\n                    }\n                    return this.userInputAccessQueue.queue(() => this.commandService.executeCommand(info.command, info.args)).then(result => {\n                        if (typeof result === 'string' || types.isUndefinedOrNull(result)) {\n                            return result;\n                        }\n                        throw new Error(nls.localize('inputVariable.command.noStringType', \"Cannot substitute input variable '{0}' because command '{1}' did not return a result of type string.\", variable, info.command));\n                    });\n                }\n                default:\n                    throw new Error(nls.localize('inputVariable.unknownType', \"Input variable '{0}' can only be of type 'promptString', 'pickString', or 'command'.\", variable));\n            }\n        }\n        return Promise.reject(( new Error(( nls.localize(\n            'inputVariable.undefinedVariable',\n            \"Undefined input variable '{0}' encountered. Remove or define '{0}' to continue.\",\n            variable\n        )))));\n    }\n}\nexport { BaseConfigurationResolverService };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { BaseConfigurationResolverService } from './baseConfigurationResolverService.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { IPathService } from '../../path/common/pathService.js';\nlet ConfigurationResolverService = class ConfigurationResolverService extends BaseConfigurationResolverService {\n    constructor(editorService, configurationService, commandService, workspaceContextService, quickInputService, labelService, pathService, extensionService) {\n        super({ getAppRoot: () => undefined, getExecPath: () => undefined }, Promise.resolve(Object.create(null)), editorService, configurationService, commandService, workspaceContextService, quickInputService, labelService, pathService, extensionService);\n    }\n};\nConfigurationResolverService = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, ICommandService)),\n    ( __param(3, IWorkspaceContextService)),\n    ( __param(4, IQuickInputService)),\n    ( __param(5, ILabelService)),\n    ( __param(6, IPathService)),\n    ( __param(7, IExtensionService))\n], ConfigurationResolverService));\nexport { ConfigurationResolverService };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".codicon-debug-hint{cursor:pointer}.codicon-debug-hint:not([class*=codicon-debug-breakpoint]):not([class*=codicon-debug-stackframe]){opacity:.4!important}.inline-breakpoint-widget.codicon{align-items:center;display:flex!important}.inline-breakpoint-widget.codicon-debug-breakpoint-disabled{opacity:.7}.monaco-editor .inline-breakpoint-widget.line-start{left:-8px!important}.monaco-editor .debug-breakpoint-placeholder{display:inline-flex;margin-top:-1px;vertical-align:middle;width:.9em}.codicon-debug-breakpoint.codicon-debug-stackframe-focused:after,.codicon-debug-breakpoint.codicon-debug-stackframe:after{content:\\\"\\\\eb8a\\\";position:absolute}.monaco-editor .debug-top-stack-frame-column{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;align-items:center;display:inline-flex;font:normal normal normal 16px/1 codicon;margin-left:0;margin-right:4px;margin-top:-1px;text-rendering:auto;vertical-align:middle;width:.9em}.monaco-editor .debug-top-stack-frame-column.start-of-line{margin-top:0;position:absolute;top:50%;transform:translate(-17px,-50%)}.monaco-editor .inline-breakpoint-widget{cursor:pointer}.monaco-workbench .debug-view-content .monaco-list-row .monaco-tl-contents{overflow:hidden;text-overflow:ellipsis}.monaco-workbench .monaco-list-row .expression{display:flex}.monaco-workbench .debug-hover-widget .monaco-list-row .expression,.monaco-workbench .debug-pane .monaco-list-row .expression{font-family:var(--monaco-monospace-font);font-size:13px;overflow:hidden;text-overflow:ellipsis;white-space:pre}.monaco-workbench.mac .debug-hover-widget .monaco-list-row .expression,.monaco-workbench.mac .debug-pane .monaco-list-row .expression{font-size:11px}.monaco-workbench .monaco-list-row .expression .value{margin-left:6px}.monaco-workbench .monaco-list-row .expression .lazy-button{align-self:center;border-radius:5px;display:none;margin-left:3px}.monaco-workbench .monaco-list-row .expression.lazy .lazy-button{display:inline}.monaco-workbench .monaco-list-row .expression .value a.link:hover{text-decoration:underline}.monaco-workbench .monaco-list-row .expression .value a.link.pointer{cursor:pointer}.monaco-workbench .monaco-list:focus .monaco-list-row.selected .expression .name,.monaco-workbench .monaco-list:focus .monaco-list-row.selected .expression .value{color:inherit}.monaco-workbench .monaco-list-row .expression .name.internal,.monaco-workbench .monaco-list-row .expression .name.virtual{opacity:.5}.monaco-workbench .monaco-list-row .expression .unavailable{font-style:italic}.monaco-workbench .debug-inline-value{background-color:var(--vscode-editor-inlineValuesBackground);color:var(--vscode-editor-inlineValuesForeground)}\";\nn(css,{});\nexport { css, css as default };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor .debug-hover-widget{animation-duration:.15s;animation-name:fadeIn;position:absolute;user-select:text;-webkit-user-select:text;white-space:pre;word-break:break-all;z-index:50}.monaco-editor .debug-hover-widget .complex-value{max-width:550px}.monaco-editor .debug-hover-widget .complex-value .tip,.monaco-editor .debug-hover-widget .complex-value .title{font-size:11px;height:18px;line-height:18px;overflow:hidden;padding-left:15px;padding-right:2px;text-overflow:ellipsis;white-space:pre;word-break:normal}.monaco-editor .debug-hover-widget .complex-value .title{border-bottom:1px solid hsla(0,0%,50%,.35)}.monaco-editor .debug-hover-widget .complex-value .tip{border-top:1px solid hsla(0,0%,50%,.35);opacity:.5}.monaco-editor .debug-hover-widget .debug-hover-tree{cursor:pointer;line-height:18px}.monaco-editor .debug-hover-widget .debug-hover-tree .monaco-list-row .monaco-tl-contents{user-select:text;-webkit-user-select:text;white-space:pre}.monaco-editor .debug-hover-widget .debug-hover-tree .monaco-list-rows .monaco-list-row:hover:not(.highlighted):not(.selected):not(.focused){background-color:inherit}.monaco-editor .debug-hover-widget pre{margin-bottom:0;margin-top:0}.monaco-editor .debugHoverHighlight{background-color:rgba(173,214,255,.15)}.monaco-editor .debug-hover-widget>.monaco-scrollable-element>.value{color:hsla(0,0%,42%,.8);font-family:var(--monaco-monospace-font);max-height:500px;overflow:auto;padding:4px 5px;white-space:pre-wrap}.monaco-editor.hc-theme .debugHoverHighlight,.monaco-editor.vs-dark .debugHoverHighlight{background-color:rgba(38,79,120,.25)}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Separator } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nclass GutterActionsRegistryImpl {\n    constructor() {\n        this._registeredGutterActionsGenerators = ( new Set());\n    }\n    registerGutterActionsGenerator(gutterActionsGenerator) {\n        this._registeredGutterActionsGenerators.add(gutterActionsGenerator);\n        return {\n            dispose: () => {\n                this._registeredGutterActionsGenerators.delete(gutterActionsGenerator);\n            }\n        };\n    }\n    getGutterActionsGenerators() {\n        return Array.from(( this._registeredGutterActionsGenerators.values()));\n    }\n}\nRegistry.add('gutterActionsRegistry', ( new GutterActionsRegistryImpl()));\nconst GutterActionsRegistry = ( Registry.as('gutterActionsRegistry'));\nlet EditorLineNumberContextMenu = class EditorLineNumberContextMenu extends Disposable {\n    static { this.ID = 'workbench.contrib.editorLineNumberContextMenu'; }\n    constructor(editor, contextMenuService, menuService, contextKeyService, instantiationService) {\n        super();\n        this.editor = editor;\n        this.contextMenuService = contextMenuService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.instantiationService = instantiationService;\n        this._register(this.editor.onMouseDown((e) => this.doShow(e, false)));\n    }\n    show(e) {\n        this.doShow(e, true);\n    }\n    doShow(e, force) {\n        const model = this.editor.getModel();\n        if (!e.event.rightButton && !(isMacintosh && e.event.leftButton && e.event.ctrlKey) && !force\n            || e.target.type !== 3  && e.target.type !== 2\n            || !e.target.position || !model) {\n            return;\n        }\n        const lineNumber = e.target.position.lineNumber;\n        const contextKeyService = this.contextKeyService.createOverlay([['editorLineNumber', lineNumber]]);\n        const menu = this.menuService.createMenu(MenuId.EditorLineNumberContext, contextKeyService);\n        const allActions = [];\n        this.instantiationService.invokeFunction(accessor => {\n            for (const generator of GutterActionsRegistry.getGutterActionsGenerators()) {\n                const collectedActions = ( new Map());\n                generator({ lineNumber, editor: this.editor, accessor }, {\n                    push: (action, group = 'navigation') => {\n                        const actions = (collectedActions.get(group) ?? []);\n                        actions.push(action);\n                        collectedActions.set(group, actions);\n                    }\n                });\n                for (const [group, actions] of collectedActions.entries()) {\n                    allActions.push([group, actions]);\n                }\n            }\n            allActions.sort((a, b) => a[0].localeCompare(b[0]));\n            const menuActions = menu.getActions({ arg: { lineNumber, uri: model.uri }, shouldForwardArgs: true });\n            allActions.push(...menuActions);\n            if (e.target.type === 3 ) {\n                const currentSelections = this.editor.getSelections();\n                const lineRange = {\n                    startLineNumber: lineNumber,\n                    endLineNumber: lineNumber,\n                    startColumn: 1,\n                    endColumn: model.getLineLength(lineNumber) + 1\n                };\n                const containsSelection = currentSelections?.some(selection => !selection.isEmpty() && selection.intersectRanges(lineRange) !== null);\n                if (!containsSelection) {\n                    this.editor.setSelection(lineRange, \"api\" );\n                }\n            }\n            this.contextMenuService.showContextMenu({\n                getAnchor: () => e.event,\n                getActions: () => Separator.join(...( allActions.map((a) => a[1]))),\n                onHide: () => menu.dispose(),\n            });\n        });\n    }\n};\nEditorLineNumberContextMenu = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IMenuService)),\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IInstantiationService))\n], EditorLineNumberContextMenu));\nregisterEditorContribution(EditorLineNumberContextMenu.ID, EditorLineNumberContextMenu, 1 );\nexport { EditorLineNumberContextMenu, GutterActionsRegistry, GutterActionsRegistryImpl };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor .zone-widget .zone-widget-container.breakpoint-widget{border-color:#007acc;display:flex}.monaco-editor .zone-widget .zone-widget-container.breakpoint-widget .breakpoint-select-container{display:flex;flex-direction:column;flex-shrink:0;justify-content:center;padding:0 10px}.monaco-editor .zone-widget .zone-widget-container.breakpoint-widget .breakpoint-select-container .monaco-select-box{min-height:18px;min-width:100px;padding:2px 20px 2px 8px}.monaco-editor .zone-widget .zone-widget-container.breakpoint-widget .breakpoint-select-container:after{right:14px}.monaco-editor .zone-widget .zone-widget-container.breakpoint-widget .inputContainer{flex:1}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/breakpointWidget.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { SelectBox } from 'monaco-editor/esm/vs/base/browser/ui/selectBox/selectBox.js';\nimport * as lifecycle from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { ZoneWidget } from 'monaco-editor/esm/vs/editor/contrib/zoneWidget/browser/zoneWidget.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { CONTEXT_BREAKPOINT_WIDGET_VISIBLE, CONTEXT_IN_BREAKPOINT_WIDGET, BREAKPOINT_EDITOR_CONTRIBUTION_ID, DEBUG_SCHEME, IDebugService } from '../common/debug.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { createDecorator, IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { EditorCommand, registerEditorCommand } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { provideSuggestionItems, CompletionOptions } from 'monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { editorForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { CodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js';\nimport { getSimpleCodeEditorWidgetOptions, getSimpleEditorOptions } from '../../codeEditor/browser/simpleEditorOptions.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { PLAINTEXT_LANGUAGE_ID } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { defaultSelectBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nconst $ = dom.$;\nconst IPrivateBreakpointWidgetService = ( (createDecorator('privateBreakpointWidgetService')));\nconst DECORATION_KEY = 'breakpointwidgetdecoration';\nfunction isPositionInCurlyBracketBlock(input) {\n    const model = input.getModel();\n    const bracketPairs = model.bracketPairs.getBracketPairsInRange(Range.fromPositions(input.getPosition()));\n    return (\n         (bracketPairs.some(p => p.openingBracketInfo.bracketText === '{'))\n    );\n}\nfunction createDecorations(theme, placeHolder) {\n    const transparentForeground = theme.getColor(editorForeground)?.transparent(0.4);\n    return [{\n            range: {\n                startLineNumber: 0,\n                endLineNumber: 0,\n                startColumn: 0,\n                endColumn: 1\n            },\n            renderOptions: {\n                after: {\n                    contentText: placeHolder,\n                    color: transparentForeground ? ( (transparentForeground.toString())) : undefined\n                }\n            }\n        }];\n}\nlet BreakpointWidget = class BreakpointWidget extends ZoneWidget {\n    constructor(editor, lineNumber, column, context, contextViewService, debugService, themeService, contextKeyService, instantiationService, modelService, codeEditorService, _configurationService, languageFeaturesService, keybindingService) {\n        super(editor, { showFrame: true, showArrow: false, frameWidth: 1, isAccessible: true });\n        this.lineNumber = lineNumber;\n        this.column = column;\n        this.contextViewService = contextViewService;\n        this.debugService = debugService;\n        this.themeService = themeService;\n        this.contextKeyService = contextKeyService;\n        this.instantiationService = instantiationService;\n        this.modelService = modelService;\n        this.codeEditorService = codeEditorService;\n        this._configurationService = _configurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.keybindingService = keybindingService;\n        this.conditionInput = '';\n        this.hitCountInput = '';\n        this.logMessageInput = '';\n        this.toDispose = [];\n        const model = this.editor.getModel();\n        if (model) {\n            const uri = model.uri;\n            const breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber: this.lineNumber, column: this.column, uri });\n            this.breakpoint = breakpoints.length ? breakpoints[0] : undefined;\n        }\n        if (context === undefined) {\n            if (this.breakpoint && !this.breakpoint.condition && !this.breakpoint.hitCondition && this.breakpoint.logMessage) {\n                this.context = 2 ;\n            }\n            else if (this.breakpoint && !this.breakpoint.condition && this.breakpoint.hitCondition) {\n                this.context = 1 ;\n            }\n            else {\n                this.context = 0 ;\n            }\n        }\n        else {\n            this.context = context;\n        }\n        this.toDispose.push(this.debugService.getModel().onDidChangeBreakpoints(e => {\n            if (this.breakpoint && e && e.removed && e.removed.indexOf(this.breakpoint) >= 0) {\n                this.dispose();\n            }\n        }));\n        this.codeEditorService.registerDecorationType('breakpoint-widget', DECORATION_KEY, {});\n        this.create();\n    }\n    get placeholder() {\n        const acceptString = this.keybindingService.lookupKeybinding(AcceptBreakpointWidgetInputAction.ID)?.getLabel() || 'Enter';\n        const closeString = this.keybindingService.lookupKeybinding(CloseBreakpointWidgetCommand.ID)?.getLabel() || 'Escape';\n        switch (this.context) {\n            case 2 :\n                return (\n                     (nls.localize(\n                        'breakpointWidgetLogMessagePlaceholder',\n                        \"Message to log when breakpoint is hit. Expressions within {} are interpolated. '{0}' to accept, '{1}' to cancel.\",\n                        acceptString,\n                        closeString\n                    ))\n                );\n            case 1 :\n                return (\n                     (nls.localize(\n                        'breakpointWidgetHitCountPlaceholder',\n                        \"Break when hit count condition is met. '{0}' to accept, '{1}' to cancel.\",\n                        acceptString,\n                        closeString\n                    ))\n                );\n            default:\n                return (\n                     (nls.localize(\n                        'breakpointWidgetExpressionPlaceholder',\n                        \"Break when expression evaluates to true. '{0}' to accept, '{1}' to cancel.\",\n                        acceptString,\n                        closeString\n                    ))\n                );\n        }\n    }\n    getInputValue(breakpoint) {\n        switch (this.context) {\n            case 2 :\n                return breakpoint && breakpoint.logMessage ? breakpoint.logMessage : this.logMessageInput;\n            case 1 :\n                return breakpoint && breakpoint.hitCondition ? breakpoint.hitCondition : this.hitCountInput;\n            default:\n                return breakpoint && breakpoint.condition ? breakpoint.condition : this.conditionInput;\n        }\n    }\n    rememberInput() {\n        const value = this.input.getModel().getValue();\n        switch (this.context) {\n            case 2 :\n                this.logMessageInput = value;\n                break;\n            case 1 :\n                this.hitCountInput = value;\n                break;\n            default:\n                this.conditionInput = value;\n        }\n    }\n    setInputMode() {\n        if (this.editor.hasModel()) {\n            const languageId = this.context === 2  ? PLAINTEXT_LANGUAGE_ID : this.editor.getModel().getLanguageId();\n            this.input.getModel().setLanguage(languageId);\n        }\n    }\n    show(rangeOrPos) {\n        const lineNum = this.input.getModel().getLineCount();\n        super.show(rangeOrPos, lineNum + 1);\n    }\n    fitHeightToContent() {\n        const lineNum = this.input.getModel().getLineCount();\n        this._relayout(lineNum + 1);\n    }\n    _fillContainer(container) {\n        this.setCssClass('breakpoint-widget');\n        const selectBox = ( (new SelectBox(\n            [{ text: ( (nls.localize('expression', \"Expression\"))) }, { text: ( (nls.localize('hitCount', \"Hit Count\"))) }, { text: ( (nls.localize('logMessage', \"Log Message\"))) }],\n            this.context,\n            this.contextViewService,\n            defaultSelectBoxStyles,\n            { ariaLabel: ( (nls.localize('breakpointType', 'Breakpoint Type'))) }\n        )));\n        this.selectContainer = $('.breakpoint-select-container');\n        selectBox.render(dom.append(container, this.selectContainer));\n        selectBox.onDidSelect(e => {\n            this.rememberInput();\n            this.context = e.index;\n            this.setInputMode();\n            const value = this.getInputValue(this.breakpoint);\n            this.input.getModel().setValue(value);\n            this.input.focus();\n        });\n        this.inputContainer = $('.inputContainer');\n        this.createBreakpointInput(dom.append(container, this.inputContainer));\n        this.input.getModel().setValue(this.getInputValue(this.breakpoint));\n        this.toDispose.push(this.input.getModel().onDidChangeContent(() => {\n            this.fitHeightToContent();\n        }));\n        this.input.setPosition({ lineNumber: 1, column: this.input.getModel().getLineMaxColumn(1) });\n        setTimeout(() => this.input.focus(), 150);\n    }\n    _doLayout(heightInPixel, widthInPixel) {\n        this.heightInPx = heightInPixel;\n        this.input.layout({ height: heightInPixel, width: widthInPixel - 113 });\n        this.centerInputVertically();\n    }\n    _onWidth(widthInPixel) {\n        if (typeof this.heightInPx === 'number') {\n            this._doLayout(this.heightInPx, widthInPixel);\n        }\n    }\n    createBreakpointInput(container) {\n        const scopedContextKeyService = this.contextKeyService.createScoped(container);\n        this.toDispose.push(scopedContextKeyService);\n        const scopedInstatiationService = this.instantiationService.createChild(( (new ServiceCollection(\n            [IContextKeyService, scopedContextKeyService],\n            [IPrivateBreakpointWidgetService, this]\n        ))));\n        const options = this.createEditorOptions();\n        const codeEditorWidgetOptions = getSimpleCodeEditorWidgetOptions();\n        this.input = scopedInstatiationService.createInstance(CodeEditorWidget, container, options, codeEditorWidgetOptions);\n        CONTEXT_IN_BREAKPOINT_WIDGET.bindTo(scopedContextKeyService).set(true);\n        const model = this.modelService.createModel('', null, ( URI.parse(`${DEBUG_SCHEME}:${this.editor.getId()}:breakpointinput`)), true);\n        if (this.editor.hasModel()) {\n            model.setLanguage(this.editor.getModel().getLanguageId());\n        }\n        this.input.setModel(model);\n        this.setInputMode();\n        this.toDispose.push(model);\n        const setDecorations = () => {\n            const value = this.input.getModel().getValue();\n            const decorations = !!value ? [] : createDecorations(this.themeService.getColorTheme(), this.placeholder);\n            this.input.setDecorationsByType('breakpoint-widget', DECORATION_KEY, decorations);\n        };\n        this.input.getModel().onDidChangeContent(() => setDecorations());\n        this.themeService.onDidColorThemeChange(() => setDecorations());\n        this.toDispose.push(this.languageFeaturesService.completionProvider.register({ scheme: DEBUG_SCHEME, hasAccessToAllModels: true }, {\n            _debugDisplayName: 'breakpointWidget',\n            provideCompletionItems: (model, position, _context, token) => {\n                let suggestionsPromise;\n                const underlyingModel = this.editor.getModel();\n                if (underlyingModel && (this.context === 0  || (this.context === 2  && isPositionInCurlyBracketBlock(this.input)))) {\n                    suggestionsPromise = provideSuggestionItems(this.languageFeaturesService.completionProvider, underlyingModel, ( (new Position(this.lineNumber, 1))), ( (new CompletionOptions(\n                        undefined,\n                        ( (new Set())).add(27 )\n                    ))), _context, token).then(suggestions => {\n                        let overwriteBefore = 0;\n                        if (this.context === 0 ) {\n                            overwriteBefore = position.column - 1;\n                        }\n                        else {\n                            const value = this.input.getModel().getValue();\n                            while ((position.column - 2 - overwriteBefore >= 0) && value[position.column - 2 - overwriteBefore] !== '{' && value[position.column - 2 - overwriteBefore] !== ' ') {\n                                overwriteBefore++;\n                            }\n                        }\n                        return {\n                            suggestions: ( (suggestions.items.map(s => {\n                                s.completion.range = Range.fromPositions(position.delta(0, -overwriteBefore), position);\n                                return s.completion;\n                            })))\n                        };\n                    });\n                }\n                else {\n                    suggestionsPromise = Promise.resolve({ suggestions: [] });\n                }\n                return suggestionsPromise;\n            }\n        }));\n        this.toDispose.push(this._configurationService.onDidChangeConfiguration((e) => {\n            if (e.affectsConfiguration('editor.fontSize') || e.affectsConfiguration('editor.lineHeight')) {\n                this.input.updateOptions(this.createEditorOptions());\n                this.centerInputVertically();\n            }\n        }));\n    }\n    createEditorOptions() {\n        const editorConfig = this._configurationService.getValue('editor');\n        const options = getSimpleEditorOptions(this._configurationService);\n        options.fontSize = editorConfig.fontSize;\n        options.fontFamily = editorConfig.fontFamily;\n        options.lineHeight = editorConfig.lineHeight;\n        options.fontLigatures = editorConfig.fontLigatures;\n        options.ariaLabel = this.placeholder;\n        return options;\n    }\n    centerInputVertically() {\n        if (this.container && typeof this.heightInPx === 'number') {\n            const lineHeight = this.input.getOption(65 );\n            const lineNum = this.input.getModel().getLineCount();\n            const newTopMargin = (this.heightInPx - lineNum * lineHeight) / 2;\n            this.inputContainer.style.marginTop = newTopMargin + 'px';\n        }\n    }\n    close(success) {\n        if (success) {\n            let condition = this.breakpoint && this.breakpoint.condition;\n            let hitCondition = this.breakpoint && this.breakpoint.hitCondition;\n            let logMessage = this.breakpoint && this.breakpoint.logMessage;\n            this.rememberInput();\n            if (this.conditionInput || this.context === 0 ) {\n                condition = this.conditionInput;\n            }\n            if (this.hitCountInput || this.context === 1 ) {\n                hitCondition = this.hitCountInput;\n            }\n            if (this.logMessageInput || this.context === 2 ) {\n                logMessage = this.logMessageInput;\n            }\n            if (this.breakpoint) {\n                const data = ( (new Map()));\n                data.set(this.breakpoint.getId(), {\n                    condition,\n                    hitCondition,\n                    logMessage\n                });\n                this.debugService.updateBreakpoints(this.breakpoint.originalUri, data, false).then(undefined, onUnexpectedError);\n            }\n            else {\n                const model = this.editor.getModel();\n                if (model) {\n                    this.debugService.addBreakpoints(model.uri, [{\n                            lineNumber: this.lineNumber,\n                            column: this.column,\n                            enabled: true,\n                            condition,\n                            hitCondition,\n                            logMessage\n                        }]);\n                }\n            }\n        }\n        this.dispose();\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        lifecycle.dispose(this.toDispose);\n        setTimeout(() => this.editor.focus(), 0);\n    }\n};\nBreakpointWidget = ( (__decorate([\n    ( (__param(4, IContextViewService))),\n    ( (__param(5, IDebugService))),\n    ( (__param(6, IThemeService))),\n    ( (__param(7, IContextKeyService))),\n    ( (__param(8, IInstantiationService))),\n    ( (__param(9, IModelService))),\n    ( (__param(10, ICodeEditorService))),\n    ( (__param(11, IConfigurationService))),\n    ( (__param(12, ILanguageFeaturesService))),\n    ( (__param(13, IKeybindingService)))\n], BreakpointWidget)));\nclass AcceptBreakpointWidgetInputAction extends EditorCommand {\n    static { this.ID = 'breakpointWidget.action.acceptInput'; }\n    constructor() {\n        super({\n            id: AcceptBreakpointWidgetInputAction.ID,\n            precondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n            kbOpts: {\n                kbExpr: CONTEXT_IN_BREAKPOINT_WIDGET,\n                primary: 3 ,\n                weight: 100\n            }\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IPrivateBreakpointWidgetService).close(true);\n    }\n}\nclass CloseBreakpointWidgetCommand extends EditorCommand {\n    static { this.ID = 'closeBreakpointWidget'; }\n    constructor() {\n        super({\n            id: CloseBreakpointWidgetCommand.ID,\n            precondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 9 ,\n                secondary: [1024  | 9 ],\n                weight: 100\n            }\n        });\n    }\n    runEditorCommand(accessor, editor, args) {\n        const debugContribution = editor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID);\n        if (debugContribution) {\n            return debugContribution.closeBreakpointWidget();\n        }\n        accessor.get(IPrivateBreakpointWidgetService).close(false);\n    }\n}\nregisterEditorCommand(( (new AcceptBreakpointWidgetInputAction())));\nregisterEditorCommand(( (new CloseBreakpointWidgetCommand())));\nexport { BreakpointWidget };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { isSafari } from 'monaco-editor/esm/vs/base/browser/browser.js';\nimport { BrowserFeatures } from 'monaco-editor/esm/vs/base/browser/canIUse.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardMouseEvent } from 'monaco-editor/esm/vs/base/browser/mouseEvent.js';\nimport { Action, SubmenuAction, Separator } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler, timeout } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { MarkdownString } from 'monaco-editor/esm/vs/base/common/htmlContent.js';\nimport { dispose, disposeIfDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { noBreakWhitespace } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { generateUuid } from 'monaco-editor/esm/vs/base/common/uuid.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { GlyphMarginLane, OverviewRulerLane } from 'monaco-editor/esm/vs/editor/common/model.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, themeColorFromId } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { GutterActionsRegistry } from '../../codeEditor/browser/editorLineNumberMenu.js';\nimport { getBreakpointMessageAndIcon } from './breakpointsView.js';\nimport { BreakpointWidget } from './breakpointWidget.js';\nimport { debugBreakpointHint, allBreakpoints, debugBreakpointUnsupported, breakpoint, debugStackframeFocused, debugStackframe } from './debugIcons.js';\nimport { IDebugService, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, DebuggerString } from '../common/debug.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst $ = dom.$;\nconst breakpointHelperDecoration = {\n    description: 'breakpoint-helper-decoration',\n    glyphMarginClassName: ThemeIcon.asClassName(debugBreakpointHint),\n    glyphMargin: { position: GlyphMarginLane.Right },\n    stickiness: 1\n};\nfunction createBreakpointDecorations(accessor, model, breakpoints, state, breakpointsActivated, showBreakpointsInOverviewRuler) {\n    const result = [];\n    breakpoints.forEach((breakpoint) => {\n        if (breakpoint.lineNumber > model.getLineCount()) {\n            return;\n        }\n        const hasOtherBreakpointsOnLine = ( (breakpoints.some(bp => bp !== breakpoint && bp.lineNumber === breakpoint.lineNumber)));\n        const column = model.getLineFirstNonWhitespaceColumn(breakpoint.lineNumber);\n        const range = model.validateRange(breakpoint.column ? ( (new Range(\n            breakpoint.lineNumber,\n            breakpoint.column,\n            breakpoint.lineNumber,\n            breakpoint.column + 1\n        )))\n            : ( (new Range(breakpoint.lineNumber, column, breakpoint.lineNumber, column + 1)))\n        );\n        result.push({\n            options: getBreakpointDecorationOptions(accessor, model, breakpoint, state, breakpointsActivated, showBreakpointsInOverviewRuler, hasOtherBreakpointsOnLine),\n            range\n        });\n    });\n    return result;\n}\nfunction getBreakpointDecorationOptions(accessor, model, breakpoint, state, breakpointsActivated, showBreakpointsInOverviewRuler, hasOtherBreakpointsOnLine) {\n    const debugService = accessor.get(IDebugService);\n    const languageService = accessor.get(ILanguageService);\n    const { icon, message, showAdapterUnverifiedMessage } = getBreakpointMessageAndIcon(state, breakpointsActivated, breakpoint, undefined);\n    let glyphMarginHoverMessage;\n    let unverifiedMessage;\n    if (showAdapterUnverifiedMessage) {\n        let langId;\n        unverifiedMessage = ( (debugService.getModel().getSessions().map(s => {\n            const dbg = debugService.getAdapterManager().getDebugger(s.configuration.type);\n            const message = dbg?.strings?.[DebuggerString.UnverifiedBreakpoints];\n            if (message) {\n                if (!langId) {\n                    langId = withNullAsUndefined(languageService.guessLanguageIdByFilepathOrFirstLine(breakpoint.uri));\n                }\n                return langId && dbg.interestedInLanguage(langId) ? message : undefined;\n            }\n            return undefined;\n        })))\n            .find(messages => !!messages);\n    }\n    if (message) {\n        glyphMarginHoverMessage = ( (new MarkdownString(undefined, { isTrusted: true, supportThemeIcons: true })));\n        if (breakpoint.condition || breakpoint.hitCondition) {\n            const languageId = model.getLanguageId();\n            glyphMarginHoverMessage.appendCodeblock(languageId, message);\n            if (unverifiedMessage) {\n                glyphMarginHoverMessage.appendMarkdown('$(warning) ' + unverifiedMessage);\n            }\n        }\n        else {\n            glyphMarginHoverMessage.appendText(message);\n            if (unverifiedMessage) {\n                glyphMarginHoverMessage.appendMarkdown('\\n\\n$(warning) ' + unverifiedMessage);\n            }\n        }\n    }\n    else if (unverifiedMessage) {\n        glyphMarginHoverMessage = ( (new MarkdownString(undefined, { isTrusted: true, supportThemeIcons: true }))).appendMarkdown(unverifiedMessage);\n    }\n    let overviewRulerDecoration = null;\n    if (showBreakpointsInOverviewRuler) {\n        overviewRulerDecoration = {\n            color: themeColorFromId(debugIconBreakpointForeground),\n            position: OverviewRulerLane.Left\n        };\n    }\n    const renderInline = breakpoint.column && (hasOtherBreakpointsOnLine || breakpoint.column > model.getLineFirstNonWhitespaceColumn(breakpoint.lineNumber));\n    return {\n        description: 'breakpoint-decoration',\n        glyphMargin: { position: GlyphMarginLane.Right },\n        glyphMarginClassName: ThemeIcon.asClassName(icon),\n        glyphMarginHoverMessage,\n        stickiness: 1 ,\n        before: renderInline ? {\n            content: noBreakWhitespace,\n            inlineClassName: `debug-breakpoint-placeholder`,\n            inlineClassNameAffectsLetterSpacing: true\n        } : undefined,\n        overviewRuler: overviewRulerDecoration,\n        zIndex: 9999\n    };\n}\nasync function requestBreakpointCandidateLocations(model, lineNumbers, session) {\n    if (!session.capabilities.supportsBreakpointLocationsRequest) {\n        return [];\n    }\n    return await Promise.all(( (distinct(lineNumbers, l => l).map(async (lineNumber) => {\n        try {\n            return { lineNumber, positions: await session.breakpointsLocations(model.uri, lineNumber) };\n        }\n        catch {\n            return { lineNumber, positions: [] };\n        }\n    }))));\n}\nfunction createCandidateDecorations(model, breakpointDecorations, lineBreakpoints) {\n    const result = [];\n    for (const { positions, lineNumber } of lineBreakpoints) {\n        if (positions.length === 0) {\n            continue;\n        }\n        const firstColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        const lastColumn = model.getLineLastNonWhitespaceColumn(lineNumber);\n        positions.forEach(p => {\n            const range = ( (new Range(p.lineNumber, p.column, p.lineNumber, p.column + 1)));\n            if ((p.column <= firstColumn && !( (breakpointDecorations.some(\n                bp => bp.range.startColumn > firstColumn && bp.range.startLineNumber === p.lineNumber\n            )))) || p.column > lastColumn) {\n                return;\n            }\n            const breakpointAtPosition = breakpointDecorations.find(bpd => bpd.range.equalsRange(range));\n            if (breakpointAtPosition && breakpointAtPosition.inlineWidget) {\n                return;\n            }\n            result.push({\n                range,\n                options: {\n                    description: 'breakpoint-placeholder-decoration',\n                    stickiness: 1 ,\n                    before: breakpointAtPosition ? undefined : {\n                        content: noBreakWhitespace,\n                        inlineClassName: `debug-breakpoint-placeholder`,\n                        inlineClassNameAffectsLetterSpacing: true\n                    },\n                },\n                breakpoint: breakpointAtPosition ? breakpointAtPosition.breakpoint : undefined\n            });\n        });\n    }\n    return result;\n}\nlet BreakpointEditorContribution = class BreakpointEditorContribution {\n    constructor(editor, debugService, contextMenuService, instantiationService, contextKeyService, dialogService, configurationService, labelService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n        this.dialogService = dialogService;\n        this.configurationService = configurationService;\n        this.labelService = labelService;\n        this.breakpointHintDecoration = null;\n        this.toDispose = [];\n        this.ignoreDecorationsChangedEvent = false;\n        this.ignoreBreakpointsChangeEvent = false;\n        this.breakpointDecorations = [];\n        this.candidateDecorations = [];\n        this.breakpointWidgetVisible = CONTEXT_BREAKPOINT_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this.setDecorationsScheduler = ( (new RunOnceScheduler(() => this.setDecorations(), 30)));\n        this.setDecorationsScheduler.schedule();\n        this.registerListeners();\n    }\n    getContextMenuActionsAtPosition(lineNumber, model) {\n        if (!this.debugService.getAdapterManager().hasEnabledDebuggers()) {\n            return [];\n        }\n        if (!this.debugService.canSetBreakpointsIn(model)) {\n            return [];\n        }\n        const breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber, uri: model.uri });\n        return this.getContextMenuActions(breakpoints, model.uri, lineNumber);\n    }\n    registerListeners() {\n        this.toDispose.push(this.editor.onMouseDown(async (e) => {\n            if (!this.debugService.getAdapterManager().hasEnabledDebuggers()) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!e.target.position\n                || !model\n                || e.target.type !== 2\n                || e.target.detail.isAfterLines\n                || !this.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)\n                    && !e.target.element?.className.includes('breakpoint')) {\n                return;\n            }\n            const canSetBreakpoints = this.debugService.canSetBreakpointsIn(model);\n            const lineNumber = e.target.position.lineNumber;\n            const uri = model.uri;\n            if (e.event.rightButton || (platform.isMacintosh && e.event.leftButton && e.event.ctrlKey)) {\n                return;\n            }\n            else {\n                const breakpoints = this.debugService.getModel().getBreakpoints({ uri, lineNumber });\n                if (breakpoints.length) {\n                    const isShiftPressed = e.event.shiftKey;\n                    const enabled = ( (breakpoints.some(bp => bp.enabled)));\n                    if (isShiftPressed) {\n                        breakpoints.forEach(bp => this.debugService.enableOrDisableBreakpoints(!enabled, bp));\n                    }\n                    else if (!platform.isLinux && ( (breakpoints.some(bp => !!bp.condition || !!bp.logMessage || !!bp.hitCondition)))) {\n                        const logPoint = breakpoints.every(bp => !!bp.logMessage);\n                        const breakpointType = logPoint ? ( (nls.localize('logPoint', \"Logpoint\"))) : ( (nls.localize('breakpoint', \"Breakpoint\")));\n                        const disabledBreakpointDialogMessage = ( (nls.localize(\n                            'breakpointHasConditionDisabled',\n                            \"This {0} has a {1} that will get lost on remove. Consider enabling the {0} instead.\",\n                            breakpointType.toLowerCase(),\n                            logPoint ? ( (nls.localize('message', \"message\"))) : ( (nls.localize('condition', \"condition\")))\n                        )));\n                        const enabledBreakpointDialogMessage = ( (nls.localize(\n                            'breakpointHasConditionEnabled',\n                            \"This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.\",\n                            breakpointType.toLowerCase(),\n                            logPoint ? ( (nls.localize('message', \"message\"))) : ( (nls.localize('condition', \"condition\")))\n                        )));\n                        await this.dialogService.prompt({\n                            type: Severity.Info,\n                            message: enabled ? enabledBreakpointDialogMessage : disabledBreakpointDialogMessage,\n                            buttons: [\n                                {\n                                    label: ( (nls.localize(\n                                        { key: 'removeLogPoint', comment: ['&& denotes a mnemonic'] },\n                                        \"&&Remove {0}\",\n                                        breakpointType\n                                    ))),\n                                    run: () => breakpoints.forEach(bp => this.debugService.removeBreakpoints(bp.getId()))\n                                },\n                                {\n                                    label: ( (nls.localize(\n                                        'disableLogPoint',\n                                        \"{0} {1}\",\n                                        enabled ? ( (nls.localize({ key: 'disable', comment: ['&& denotes a mnemonic'] }, \"&&Disable\"))) : ( (nls.localize({ key: 'enable', comment: ['&& denotes a mnemonic'] }, \"&&Enable\"))),\n                                        breakpointType\n                                    ))),\n                                    run: () => breakpoints.forEach(bp => this.debugService.enableOrDisableBreakpoints(!enabled, bp))\n                                }\n                            ],\n                            cancelButton: true\n                        });\n                    }\n                    else {\n                        if (!enabled) {\n                            breakpoints.forEach(bp => this.debugService.enableOrDisableBreakpoints(!enabled, bp));\n                        }\n                        else {\n                            breakpoints.forEach(bp => this.debugService.removeBreakpoints(bp.getId()));\n                        }\n                    }\n                }\n                else if (canSetBreakpoints) {\n                    this.debugService.addBreakpoints(uri, [{ lineNumber }]);\n                }\n            }\n        }));\n        if (!(BrowserFeatures.pointerEvents && isSafari)) {\n            this.toDispose.push(this.editor.onMouseMove((e) => {\n                if (!this.debugService.getAdapterManager().hasEnabledDebuggers()) {\n                    return;\n                }\n                let showBreakpointHintAtLineNumber = -1;\n                const model = this.editor.getModel();\n                if (model && e.target.position && ((e.target.type === 2  || e.target.type === 3) ) && this.debugService.canSetBreakpointsIn(model) &&\n                    this.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)) {\n                    const data = e.target.detail;\n                    if (!data.isAfterLines) {\n                        showBreakpointHintAtLineNumber = e.target.position.lineNumber;\n                    }\n                }\n                this.ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber);\n            }));\n            this.toDispose.push(this.editor.onMouseLeave(() => {\n                this.ensureBreakpointHintDecoration(-1);\n            }));\n        }\n        this.toDispose.push(this.editor.onDidChangeModel(async () => {\n            this.closeBreakpointWidget();\n            await this.setDecorations();\n        }));\n        this.toDispose.push(this.debugService.getModel().onDidChangeBreakpoints(() => {\n            if (!this.ignoreBreakpointsChangeEvent && !this.setDecorationsScheduler.isScheduled()) {\n                this.setDecorationsScheduler.schedule();\n            }\n        }));\n        this.toDispose.push(this.debugService.onDidChangeState(() => {\n            if (!this.setDecorationsScheduler.isScheduled()) {\n                this.setDecorationsScheduler.schedule();\n            }\n        }));\n        this.toDispose.push(this.editor.onDidChangeModelDecorations(() => this.onModelDecorationsChanged()));\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(async (e) => {\n            if (e.affectsConfiguration('debug.showBreakpointsInOverviewRuler') || e.affectsConfiguration('debug.showInlineBreakpointCandidates')) {\n                await this.setDecorations();\n            }\n        }));\n    }\n    getContextMenuActions(breakpoints, uri, lineNumber, column) {\n        const actions = [];\n        if (breakpoints.length === 1) {\n            const breakpointType = breakpoints[0].logMessage ? ( (nls.localize('logPoint', \"Logpoint\"))) : ( (nls.localize('breakpoint', \"Breakpoint\")));\n            actions.push(( (new Action(\n                'debug.removeBreakpoint',\n                 (nls.localize('removeBreakpoint', \"Remove {0}\", breakpointType)),\n                undefined,\n                true,\n                async () => {\n                    await this.debugService.removeBreakpoints(breakpoints[0].getId());\n                }\n            ))));\n            actions.push(( (new Action(\n                'workbench.debug.action.editBreakpointAction',\n                 (nls.localize('editBreakpoint', \"Edit {0}...\", breakpointType)),\n                undefined,\n                true,\n                () => Promise.resolve(this.showBreakpointWidget(breakpoints[0].lineNumber, breakpoints[0].column))\n            ))));\n            actions.push(( (new Action(\n                `workbench.debug.viewlet.action.toggleBreakpoint`,\n                breakpoints[0].enabled ? ( (nls.localize('disableBreakpoint', \"Disable {0}\", breakpointType))) : ( (nls.localize('enableBreakpoint', \"Enable {0}\", breakpointType))),\n                undefined,\n                true,\n                () => this.debugService.enableOrDisableBreakpoints(!breakpoints[0].enabled, breakpoints[0])\n            ))));\n        }\n        else if (breakpoints.length > 1) {\n            const sorted = breakpoints.slice().sort((first, second) => (first.column && second.column) ? first.column - second.column : 1);\n            actions.push(( (new SubmenuAction(\n                'debug.removeBreakpoints',\n                 (nls.localize('removeBreakpoints', \"Remove Breakpoints\")),\n                 (sorted.map(\n                    bp => ( (new Action('removeInlineBreakpoint', bp.column ? ( (nls.localize(\n                        'removeInlineBreakpointOnColumn',\n                        \"Remove Inline Breakpoint on Column {0}\",\n                        bp.column\n                    ))) : ( (nls.localize('removeLineBreakpoint', \"Remove Line Breakpoint\"))), undefined, true, () => this.debugService.removeBreakpoints(bp.getId()))))\n                ))\n            ))));\n            actions.push(( (new SubmenuAction(\n                'debug.editBreakpoints',\n                 (nls.localize('editBreakpoints', \"Edit Breakpoints\")),\n                 (sorted.map(\n                    bp => ( (new Action('editBreakpoint', bp.column ? ( (nls.localize(\n                        'editInlineBreakpointOnColumn',\n                        \"Edit Inline Breakpoint on Column {0}\",\n                        bp.column\n                    ))) : ( (nls.localize('editLineBreakpoint', \"Edit Line Breakpoint\"))), undefined, true, () => Promise.resolve(this.showBreakpointWidget(bp.lineNumber, bp.column)))))\n                ))\n            ))));\n            actions.push(( (new SubmenuAction(\n                'debug.enableDisableBreakpoints',\n                 (nls.localize('enableDisableBreakpoints', \"Enable/Disable Breakpoints\")),\n                 (sorted.map(bp => ( (new Action(\n                    bp.enabled ? 'disableColumnBreakpoint' : 'enableColumnBreakpoint',\n                    bp.enabled ? (bp.column ? ( (nls.localize(\n                        'disableInlineColumnBreakpoint',\n                        \"Disable Inline Breakpoint on Column {0}\",\n                        bp.column\n                    ))) : ( (nls.localize('disableBreakpointOnLine', \"Disable Line Breakpoint\"))))\n                        : (bp.column ? ( (nls.localize('enableBreakpoints', \"Enable Inline Breakpoint on Column {0}\", bp.column))) : ( (nls.localize('enableBreakpointOnLine', \"Enable Line Breakpoint\")))),\n                    undefined,\n                    true,\n                    () => this.debugService.enableOrDisableBreakpoints(!bp.enabled, bp)\n                )))))\n            ))));\n        }\n        else {\n            actions.push(( (new Action(\n                'addBreakpoint',\n                 (nls.localize('addBreakpoint', \"Add Breakpoint\")),\n                undefined,\n                true,\n                () => this.debugService.addBreakpoints(uri, [{ lineNumber, column }])\n            ))));\n            actions.push(( (new Action(\n                'addConditionalBreakpoint',\n                 (nls.localize('addConditionalBreakpoint', \"Add Conditional Breakpoint...\")),\n                undefined,\n                true,\n                () => Promise.resolve(this.showBreakpointWidget(lineNumber, column, 0 ))\n            ))));\n            actions.push(( (new Action(\n                'addLogPoint',\n                 (nls.localize('addLogPoint', \"Add Logpoint...\")),\n                undefined,\n                true,\n                () => Promise.resolve(this.showBreakpointWidget(lineNumber, column, 2 ))\n            ))));\n        }\n        if (this.debugService.state === 2 ) {\n            actions.push(( (new Separator())));\n            actions.push(( (new Action(\n                'runToLine',\n                 (nls.localize('runToLine', \"Run to Line\")),\n                undefined,\n                true,\n                () => this.debugService.runTo(uri, lineNumber).catch(onUnexpectedError)\n            ))));\n        }\n        return actions;\n    }\n    marginFreeFromNonDebugDecorations(line) {\n        const decorations = this.editor.getLineDecorations(line);\n        if (decorations) {\n            for (const { options } of decorations) {\n                const clz = options.glyphMarginClassName;\n                if (clz && (!clz.includes('codicon-') || clz.includes('codicon-testing-') || clz.includes('codicon-merge-') || clz.includes('codicon-arrow-') || clz.includes('codicon-loading') || clz.includes('codicon-fold'))) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber) {\n        this.editor.changeDecorations((accessor) => {\n            if (this.breakpointHintDecoration) {\n                accessor.removeDecoration(this.breakpointHintDecoration);\n                this.breakpointHintDecoration = null;\n            }\n            if (showBreakpointHintAtLineNumber !== -1) {\n                this.breakpointHintDecoration = accessor.addDecoration({\n                    startLineNumber: showBreakpointHintAtLineNumber,\n                    startColumn: 1,\n                    endLineNumber: showBreakpointHintAtLineNumber,\n                    endColumn: 1\n                }, breakpointHelperDecoration);\n            }\n        });\n    }\n    async setDecorations() {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const setCandidateDecorations = (changeAccessor, desiredCandidatePositions) => {\n            const desiredCandidateDecorations = createCandidateDecorations(model, this.breakpointDecorations, desiredCandidatePositions);\n            const candidateDecorationIds = changeAccessor.deltaDecorations(( (this.candidateDecorations.map(c => c.decorationId))), desiredCandidateDecorations);\n            this.candidateDecorations.forEach(candidate => {\n                candidate.inlineWidget.dispose();\n            });\n            this.candidateDecorations = ( (candidateDecorationIds.map((decorationId, index) => {\n                const candidate = desiredCandidateDecorations[index];\n                const icon = candidate.breakpoint ? getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), candidate.breakpoint, this.labelService).icon : breakpoint.disabled;\n                const contextMenuActions = () => this.getContextMenuActions(candidate.breakpoint ? [candidate.breakpoint] : [], activeCodeEditor.getModel().uri, candidate.range.startLineNumber, candidate.range.startColumn);\n                const inlineWidget = ( (new InlineBreakpointWidget(\n                    activeCodeEditor,\n                    decorationId,\n                    ThemeIcon.asClassName(icon),\n                    candidate.breakpoint,\n                    this.debugService,\n                    this.contextMenuService,\n                    contextMenuActions\n                )));\n                return {\n                    decorationId,\n                    inlineWidget\n                };\n            })));\n        };\n        const activeCodeEditor = this.editor;\n        const model = activeCodeEditor.getModel();\n        const breakpoints = this.debugService.getModel().getBreakpoints({ uri: model.uri });\n        const debugSettings = this.configurationService.getValue('debug');\n        const desiredBreakpointDecorations = this.instantiationService.invokeFunction(accessor => createBreakpointDecorations(accessor, model, breakpoints, this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), debugSettings.showBreakpointsInOverviewRuler));\n        const session = this.debugService.getViewModel().focusedSession;\n        const desiredCandidatePositions = debugSettings.showInlineBreakpointCandidates && session ? requestBreakpointCandidateLocations(this.editor.getModel(), ( (desiredBreakpointDecorations.map(bp => bp.range.startLineNumber))), session) : Promise.resolve([]);\n        const desiredCandidatePositionsRaced = await Promise.race([desiredCandidatePositions, timeout(500).then(() => undefined)]);\n        if (desiredCandidatePositionsRaced === undefined) {\n            desiredCandidatePositions.then(v => activeCodeEditor.changeDecorations(d => setCandidateDecorations(d, v)));\n        }\n        try {\n            this.ignoreDecorationsChangedEvent = true;\n            activeCodeEditor.changeDecorations((changeAccessor) => {\n                const decorationIds = changeAccessor.deltaDecorations(( (this.breakpointDecorations.map(bpd => bpd.decorationId))), desiredBreakpointDecorations);\n                this.breakpointDecorations.forEach(bpd => {\n                    bpd.inlineWidget?.dispose();\n                });\n                this.breakpointDecorations = ( (decorationIds.map((decorationId, index) => {\n                    let inlineWidget = undefined;\n                    const breakpoint = breakpoints[index];\n                    if (desiredBreakpointDecorations[index].options.before) {\n                        const contextMenuActions = () => this.getContextMenuActions([breakpoint], activeCodeEditor.getModel().uri, breakpoint.lineNumber, breakpoint.column);\n                        inlineWidget = ( (new InlineBreakpointWidget(\n                            activeCodeEditor,\n                            decorationId,\n                            desiredBreakpointDecorations[index].options.glyphMarginClassName,\n                            breakpoint,\n                            this.debugService,\n                            this.contextMenuService,\n                            contextMenuActions\n                        )));\n                    }\n                    return {\n                        decorationId,\n                        breakpoint,\n                        range: desiredBreakpointDecorations[index].range,\n                        inlineWidget\n                    };\n                })));\n                if (desiredCandidatePositionsRaced) {\n                    setCandidateDecorations(changeAccessor, desiredCandidatePositionsRaced);\n                }\n            });\n        }\n        finally {\n            this.ignoreDecorationsChangedEvent = false;\n        }\n        for (const d of this.breakpointDecorations) {\n            if (d.inlineWidget) {\n                this.editor.layoutContentWidget(d.inlineWidget);\n            }\n        }\n    }\n    async onModelDecorationsChanged() {\n        if (this.breakpointDecorations.length === 0 || this.ignoreDecorationsChangedEvent || !this.editor.hasModel()) {\n            return;\n        }\n        let somethingChanged = false;\n        const model = this.editor.getModel();\n        this.breakpointDecorations.forEach(breakpointDecoration => {\n            if (somethingChanged) {\n                return;\n            }\n            const newBreakpointRange = model.getDecorationRange(breakpointDecoration.decorationId);\n            if (newBreakpointRange && (!breakpointDecoration.range.equalsRange(newBreakpointRange))) {\n                somethingChanged = true;\n                breakpointDecoration.range = newBreakpointRange;\n            }\n        });\n        if (!somethingChanged) {\n            return;\n        }\n        const data = ( (new Map()));\n        for (let i = 0, len = this.breakpointDecorations.length; i < len; i++) {\n            const breakpointDecoration = this.breakpointDecorations[i];\n            const decorationRange = model.getDecorationRange(breakpointDecoration.decorationId);\n            if (decorationRange) {\n                if (breakpointDecoration.breakpoint) {\n                    data.set(breakpointDecoration.breakpoint.getId(), {\n                        lineNumber: decorationRange.startLineNumber,\n                        column: breakpointDecoration.breakpoint.column ? decorationRange.startColumn : undefined,\n                    });\n                }\n            }\n        }\n        try {\n            this.ignoreBreakpointsChangeEvent = true;\n            await this.debugService.updateBreakpoints(model.uri, data, true);\n        }\n        finally {\n            this.ignoreBreakpointsChangeEvent = false;\n        }\n    }\n    showBreakpointWidget(lineNumber, column, context) {\n        this.breakpointWidget?.dispose();\n        this.breakpointWidget = this.instantiationService.createInstance(BreakpointWidget, this.editor, lineNumber, column, context);\n        this.breakpointWidget.show({ lineNumber, column: 1 });\n        this.breakpointWidgetVisible.set(true);\n    }\n    closeBreakpointWidget() {\n        if (this.breakpointWidget) {\n            this.breakpointWidget.dispose();\n            this.breakpointWidget = undefined;\n            this.breakpointWidgetVisible.reset();\n            this.editor.focus();\n        }\n    }\n    dispose() {\n        this.breakpointWidget?.dispose();\n        this.editor.removeDecorations(( (this.breakpointDecorations.map(bpd => bpd.decorationId))));\n        dispose(this.toDispose);\n    }\n};\nBreakpointEditorContribution = ( (__decorate([\n    ( (__param(1, IDebugService))),\n    ( (__param(2, IContextMenuService))),\n    ( (__param(3, IInstantiationService))),\n    ( (__param(4, IContextKeyService))),\n    ( (__param(5, IDialogService))),\n    ( (__param(6, IConfigurationService))),\n    ( (__param(7, ILabelService)))\n], BreakpointEditorContribution)));\nGutterActionsRegistry.registerGutterActionsGenerator(({ lineNumber, editor, accessor }, result) => {\n    const model = editor.getModel();\n    const debugService = accessor.get(IDebugService);\n    if (!model || !debugService.getAdapterManager().hasEnabledDebuggers() || !debugService.canSetBreakpointsIn(model)) {\n        return;\n    }\n    const breakpointEditorContribution = editor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID);\n    if (!breakpointEditorContribution) {\n        return;\n    }\n    const actions = breakpointEditorContribution.getContextMenuActionsAtPosition(lineNumber, model);\n    for (const action of actions) {\n        result.push(action, '2_debug');\n    }\n});\nclass InlineBreakpointWidget {\n    constructor(editor, decorationId, cssClass, breakpoint, debugService, contextMenuService, getContextMenuActions) {\n        this.editor = editor;\n        this.decorationId = decorationId;\n        this.breakpoint = breakpoint;\n        this.debugService = debugService;\n        this.contextMenuService = contextMenuService;\n        this.getContextMenuActions = getContextMenuActions;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this.toDispose = [];\n        this.range = this.editor.getModel().getDecorationRange(decorationId);\n        this.toDispose.push(this.editor.onDidChangeModelDecorations(() => {\n            const model = this.editor.getModel();\n            const range = model.getDecorationRange(this.decorationId);\n            if (this.range && !this.range.equalsRange(range)) {\n                this.range = range;\n                this.editor.layoutContentWidget(this);\n            }\n        }));\n        this.create(cssClass);\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n    }\n    create(cssClass) {\n        this.domNode = $('.inline-breakpoint-widget');\n        if (cssClass) {\n            this.domNode.classList.add(...cssClass.split(' '));\n        }\n        this.toDispose.push(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, async (e) => {\n            switch (this.breakpoint?.enabled) {\n                case undefined:\n                    await this.debugService.addBreakpoints(this.editor.getModel().uri, [{ lineNumber: this.range.startLineNumber, column: this.range.startColumn }]);\n                    break;\n                case true:\n                    await this.debugService.removeBreakpoints(this.breakpoint.getId());\n                    break;\n                case false:\n                    this.debugService.enableOrDisableBreakpoints(true, this.breakpoint);\n                    break;\n            }\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.domNode, dom.EventType.CONTEXT_MENU, e => {\n            const event = ( (new StandardMouseEvent(e)));\n            const actions = this.getContextMenuActions();\n            this.contextMenuService.showContextMenu({\n                getAnchor: () => event,\n                getActions: () => actions,\n                getActionsContext: () => this.breakpoint,\n                onHide: () => disposeIfDisposable(actions)\n            });\n        }));\n        const updateSize = () => {\n            const lineHeight = this.editor.getOption(65 );\n            this.domNode.style.height = `${lineHeight}px`;\n            this.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n            this.domNode.style.marginLeft = `4px`;\n        };\n        updateSize();\n        this.toDispose.push(this.editor.onDidChangeConfiguration(c => {\n            if (c.hasChanged(51 ) || c.hasChanged(65 )) {\n                updateSize();\n            }\n        }));\n    }\n    getId() {\n        return generateUuid();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        if (!this.range) {\n            return null;\n        }\n        this.domNode.classList.toggle('line-start', this.range.startColumn === 1);\n        return {\n            position: { lineNumber: this.range.startLineNumber, column: this.range.startColumn - 1 },\n            preference: [0 ]\n        };\n    }\n    dispose() {\n        this.editor.removeContentWidget(this);\n        dispose(this.toDispose);\n    }\n}\nInlineBreakpointWidget.__decorator = ( (__decorate([\n    memoize\n], InlineBreakpointWidget.prototype, \"getId\", null)));\nregisterThemingParticipant((theme, collector) => {\n    const debugIconBreakpointColor = theme.getColor(debugIconBreakpointForeground);\n    if (debugIconBreakpointColor) {\n        collector.addRule(`\n\t\t${( ( allBreakpoints.map(b => `.monaco-workbench ${ThemeIcon.asCSSSelector(b.regular)}`))).join(',\\n\t\t')},\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(debugBreakpointUnsupported)},\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(debugBreakpointHint)}:not([class*='codicon-debug-breakpoint']):not([class*='codicon-debug-stackframe']),\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(breakpoint.regular)}${ThemeIcon.asCSSSelector(debugStackframeFocused)}::after,\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(breakpoint.regular)}${ThemeIcon.asCSSSelector(debugStackframe)}::after {\n\t\t\tcolor: ${debugIconBreakpointColor} !important;\n\t\t}\n\t\t`);\n    }\n    const debugIconBreakpointDisabledColor = theme.getColor(debugIconBreakpointDisabledForeground);\n    if (debugIconBreakpointDisabledColor) {\n        collector.addRule(`\n\t\t${( ( allBreakpoints.map(b => `.monaco-workbench ${ThemeIcon.asCSSSelector(b.disabled)}`))).join(',\\n\t\t')} {\n\t\t\tcolor: ${debugIconBreakpointDisabledColor};\n\t\t}\n\t\t`);\n    }\n    const debugIconBreakpointUnverifiedColor = theme.getColor(debugIconBreakpointUnverifiedForeground);\n    if (debugIconBreakpointUnverifiedColor) {\n        collector.addRule(`\n\t\t${( ( allBreakpoints.map(b => `.monaco-workbench ${ThemeIcon.asCSSSelector(b.unverified)}`))).join(',\\n\t\t')} {\n\t\t\tcolor: ${debugIconBreakpointUnverifiedColor};\n\t\t}\n\t\t`);\n    }\n    const debugIconBreakpointCurrentStackframeForegroundColor = theme.getColor(debugIconBreakpointCurrentStackframeForeground);\n    if (debugIconBreakpointCurrentStackframeForegroundColor) {\n        collector.addRule(`\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(debugStackframe)},\n\t\t.monaco-editor .debug-top-stack-frame-column {\n\t\t\tcolor: ${debugIconBreakpointCurrentStackframeForegroundColor} !important;\n\t\t}\n\t\t`);\n    }\n    const debugIconBreakpointStackframeFocusedColor = theme.getColor(debugIconBreakpointStackframeForeground);\n    if (debugIconBreakpointStackframeFocusedColor) {\n        collector.addRule(`\n\t\t.monaco-workbench ${ThemeIcon.asCSSSelector(debugStackframeFocused)} {\n\t\t\tcolor: ${debugIconBreakpointStackframeFocusedColor} !important;\n\t\t}\n\t\t`);\n    }\n});\nconst debugIconBreakpointForeground = registerColor('debugIcon.breakpointForeground', { dark: '#E51400', light: '#E51400', hcDark: '#E51400', hcLight: '#E51400' }, ( (nls.localize('debugIcon.breakpointForeground', 'Icon color for breakpoints.'))));\nconst debugIconBreakpointDisabledForeground = registerColor('debugIcon.breakpointDisabledForeground', { dark: '#848484', light: '#848484', hcDark: '#848484', hcLight: '#848484' }, ( (nls.localize(\n    'debugIcon.breakpointDisabledForeground',\n    'Icon color for disabled breakpoints.'\n))));\nconst debugIconBreakpointUnverifiedForeground = registerColor('debugIcon.breakpointUnverifiedForeground', { dark: '#848484', light: '#848484', hcDark: '#848484', hcLight: '#848484' }, ( (nls.localize(\n    'debugIcon.breakpointUnverifiedForeground',\n    'Icon color for unverified breakpoints.'\n))));\nconst debugIconBreakpointCurrentStackframeForeground = registerColor('debugIcon.breakpointCurrentStackframeForeground', { dark: '#FFCC00', light: '#BE8700', hcDark: '#FFCC00', hcLight: '#BE8700' }, ( (nls.localize(\n    'debugIcon.breakpointCurrentStackframeForeground',\n    'Icon color for the current breakpoint stack frame.'\n))));\nconst debugIconBreakpointStackframeForeground = registerColor('debugIcon.breakpointStackframeForeground', { dark: '#89D185', light: '#89D185', hcDark: '#89D185', hcLight: '#89D185' }, ( (nls.localize(\n    'debugIcon.breakpointStackframeForeground',\n    'Icon color for all breakpoint stack frames.'\n))));\nexport { BreakpointEditorContribution, createBreakpointDecorations, debugIconBreakpointForeground };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor .view-overlays .debug-top-stack-frame-line{background-color:var(--vscode-editor-stackFrameHighlightBackground)}.monaco-editor .view-overlays .debug-focused-stack-frame-line{background-color:var(--vscode-editor-focusedStackFrameHighlightBackground)}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { GlyphMarginLane, OverviewRulerLane } from 'monaco-editor/esm/vs/editor/common/model.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { debugStackframe, debugStackframeFocused } from './debugIcons.js';\nimport { IDebugService } from '../common/debug.js';\nimport './media/callStackEditorContribution.css.js';\nconst topStackFrameColor = registerColor('editor.stackFrameHighlightBackground', { dark: '#ffff0033', light: '#ffff6673', hcDark: '#ffff0033', hcLight: '#ffff6673' }, ( localize(\n    'topStackFrameLineHighlight',\n    'Background color for the highlight of line at the top stack frame position.'\n)));\nconst focusedStackFrameColor = registerColor('editor.focusedStackFrameHighlightBackground', { dark: '#7abd7a4d', light: '#cee7ce73', hcDark: '#7abd7a4d', hcLight: '#cee7ce73' }, ( localize(\n    'focusedStackFrameLineHighlight',\n    'Background color for the highlight of line at focused stack frame position.'\n)));\nconst stickiness = 1 ;\nconst TOP_STACK_FRAME_MARGIN = {\n    description: 'top-stack-frame-margin',\n    glyphMarginClassName: ThemeIcon.asClassName(debugStackframe),\n    glyphMargin: { position: GlyphMarginLane.Right },\n    zIndex: 9999,\n    stickiness,\n    overviewRuler: {\n        position: OverviewRulerLane.Full,\n        color: themeColorFromId(topStackFrameColor)\n    }\n};\nconst FOCUSED_STACK_FRAME_MARGIN = {\n    description: 'focused-stack-frame-margin',\n    glyphMarginClassName: ThemeIcon.asClassName(debugStackframeFocused),\n    glyphMargin: { position: GlyphMarginLane.Right },\n    zIndex: 9999,\n    stickiness,\n    overviewRuler: {\n        position: OverviewRulerLane.Full,\n        color: themeColorFromId(focusedStackFrameColor)\n    }\n};\nconst TOP_STACK_FRAME_DECORATION = {\n    description: 'top-stack-frame-decoration',\n    isWholeLine: true,\n    className: 'debug-top-stack-frame-line',\n    stickiness\n};\nconst FOCUSED_STACK_FRAME_DECORATION = {\n    description: 'focused-stack-frame-decoration',\n    isWholeLine: true,\n    className: 'debug-focused-stack-frame-line',\n    stickiness\n};\nfunction createDecorationsForStackFrame(stackFrame, isFocusedSession, noCharactersBefore) {\n    const result = [];\n    const columnUntilEOLRange = ( new Range(\n        stackFrame.range.startLineNumber,\n        stackFrame.range.startColumn,\n        stackFrame.range.startLineNumber,\n        1073741824\n    ));\n    const range = ( new Range(\n        stackFrame.range.startLineNumber,\n        stackFrame.range.startColumn,\n        stackFrame.range.startLineNumber,\n        stackFrame.range.startColumn + 1\n    ));\n    const topStackFrame = stackFrame.thread.getTopStackFrame();\n    if (stackFrame.getId() === topStackFrame?.getId()) {\n        if (isFocusedSession) {\n            result.push({\n                options: TOP_STACK_FRAME_MARGIN,\n                range\n            });\n        }\n        result.push({\n            options: TOP_STACK_FRAME_DECORATION,\n            range: columnUntilEOLRange\n        });\n        if (stackFrame.range.startColumn > 1) {\n            result.push({\n                options: {\n                    description: 'top-stack-frame-inline-decoration',\n                    before: {\n                        content: '\\uEB8B',\n                        inlineClassName: noCharactersBefore ? 'debug-top-stack-frame-column start-of-line' : 'debug-top-stack-frame-column',\n                        inlineClassNameAffectsLetterSpacing: true\n                    },\n                },\n                range: columnUntilEOLRange\n            });\n        }\n    }\n    else {\n        if (isFocusedSession) {\n            result.push({\n                options: FOCUSED_STACK_FRAME_MARGIN,\n                range\n            });\n        }\n        result.push({\n            options: FOCUSED_STACK_FRAME_DECORATION,\n            range: columnUntilEOLRange\n        });\n    }\n    return result;\n}\nlet CallStackEditorContribution = class CallStackEditorContribution extends Disposable {\n    constructor(editor, debugService, uriIdentityService, logService) {\n        super();\n        this.editor = editor;\n        this.debugService = debugService;\n        this.uriIdentityService = uriIdentityService;\n        this.logService = logService;\n        this.decorations = this.editor.createDecorationsCollection();\n        const setDecorations = () => this.decorations.set(this.createCallStackDecorations());\n        this._register(Event.any(this.debugService.getViewModel().onDidFocusStackFrame, this.debugService.getModel().onDidChangeCallStack)(() => {\n            setDecorations();\n        }));\n        this._register(this.editor.onDidChangeModel(e => {\n            if (e.newModelUrl) {\n                setDecorations();\n            }\n        }));\n        setDecorations();\n    }\n    createCallStackDecorations() {\n        const editor = this.editor;\n        if (!editor.hasModel()) {\n            return [];\n        }\n        const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n        const decorations = [];\n        this.debugService.getModel().getSessions().forEach(s => {\n            const isSessionFocused = s === focusedStackFrame?.thread.session;\n            s.getAllThreads().forEach(t => {\n                if (t.stopped) {\n                    const callStack = t.getCallStack();\n                    const stackFrames = [];\n                    if (callStack.length > 0) {\n                        if (focusedStackFrame && !focusedStackFrame.equals(callStack[0])) {\n                            stackFrames.push(focusedStackFrame);\n                        }\n                        stackFrames.push(callStack[0]);\n                    }\n                    stackFrames.forEach(candidateStackFrame => {\n                        if (candidateStackFrame && this.uriIdentityService.extUri.isEqual(candidateStackFrame.source.uri, editor.getModel()?.uri)) {\n                            if (candidateStackFrame.range.startLineNumber > editor.getModel()?.getLineCount() || candidateStackFrame.range.startLineNumber < 1) {\n                                this.logService.warn(`CallStackEditorContribution: invalid stack frame line number: ${candidateStackFrame.range.startLineNumber}`);\n                                return;\n                            }\n                            const noCharactersBefore = editor.getModel().getLineFirstNonWhitespaceColumn(candidateStackFrame.range.startLineNumber) >= candidateStackFrame.range.startColumn;\n                            decorations.push(...createDecorationsForStackFrame(candidateStackFrame, isSessionFocused, noCharactersBefore));\n                        }\n                    });\n                }\n            });\n        });\n        return distinct(decorations, d => `${d.options.className} ${d.options.glyphMarginClassName} ${d.range.startLineNumber} ${d.range.startColumn}`);\n    }\n    dispose() {\n        super.dispose();\n        this.decorations.clear();\n    }\n};\nCallStackEditorContribution = ( __decorate([\n    ( __param(1, IDebugService)),\n    ( __param(2, IUriIdentityService)),\n    ( __param(3, ILogService))\n], CallStackEditorContribution));\nexport { CallStackEditorContribution, createDecorationsForStackFrame, focusedStackFrameColor, topStackFrameColor };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { HighlightedLabel } from 'monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { InputBox } from 'monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { once } from 'monaco-editor/esm/vs/base/common/functional.js';\nimport { dispose, toDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { defaultInputBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IDebugService } from '../common/debug.js';\nimport { Expression, Variable, ExpressionContainer } from '../common/debugModel.js';\nimport { ReplEvaluationResult } from '../common/replModel.js';\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nconst booleanRegex = /^(true|false)$/i;\nconst stringRegex = /^(['\"]).*\\1$/;\nconst $ = dom.$;\nfunction renderViewTree(container) {\n    const treeContainer = $('.');\n    treeContainer.classList.add('debug-view-content');\n    container.appendChild(treeContainer);\n    return treeContainer;\n}\nfunction renderExpressionValue(expressionOrValue, container, options) {\n    let value = typeof expressionOrValue === 'string' ? expressionOrValue : expressionOrValue.value;\n    container.className = 'value';\n    if (value === null || ((expressionOrValue instanceof Expression || expressionOrValue instanceof Variable || expressionOrValue instanceof ReplEvaluationResult) && !expressionOrValue.available)) {\n        container.classList.add('unavailable');\n        if (value !== Expression.DEFAULT_VALUE) {\n            container.classList.add('error');\n        }\n    }\n    else {\n        if ((expressionOrValue instanceof ExpressionContainer) && options.showChanged && expressionOrValue.valueChanged && value !== Expression.DEFAULT_VALUE) {\n            container.className = 'value changed';\n            expressionOrValue.valueChanged = false;\n        }\n        if (options.colorize && typeof expressionOrValue !== 'string') {\n            if (expressionOrValue.type === 'number' || expressionOrValue.type === 'boolean' || expressionOrValue.type === 'string') {\n                container.classList.add(expressionOrValue.type);\n            }\n            else if (!isNaN(+value)) {\n                container.classList.add('number');\n            }\n            else if (booleanRegex.test(value)) {\n                container.classList.add('boolean');\n            }\n            else if (stringRegex.test(value)) {\n                container.classList.add('string');\n            }\n        }\n    }\n    if (options.maxValueLength && value && value.length > options.maxValueLength) {\n        value = value.substring(0, options.maxValueLength) + '...';\n    }\n    if (!value) {\n        value = '';\n    }\n    if (options.linkDetector) {\n        container.textContent = '';\n        const session = (expressionOrValue instanceof ExpressionContainer) ? expressionOrValue.getSession() : undefined;\n        container.appendChild(options.linkDetector.linkify(value, false, session ? session.root : undefined, true));\n    }\n    else {\n        container.textContent = value;\n    }\n    if (options.showHover) {\n        container.title = value || '';\n    }\n}\nfunction renderVariable(variable, data, showChanged, highlights, linkDetector) {\n    if (variable.available) {\n        let text = variable.name;\n        if (variable.value && typeof variable.name === 'string') {\n            text += ':';\n        }\n        data.label.set(text, highlights, variable.type ? variable.type : variable.name);\n        data.name.classList.toggle('virtual', variable.presentationHint?.kind === 'virtual');\n        data.name.classList.toggle('internal', variable.presentationHint?.visibility === 'internal');\n    }\n    else if (variable.value && typeof variable.name === 'string' && variable.name) {\n        data.label.set(':');\n    }\n    data.expression.classList.toggle('lazy', !!variable.presentationHint?.lazy);\n    renderExpressionValue(variable, data.value, {\n        showChanged,\n        maxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n        showHover: true,\n        colorize: true,\n        linkDetector\n    });\n}\nlet AbstractExpressionsRenderer = class AbstractExpressionsRenderer {\n    constructor(debugService, contextViewService) {\n        this.debugService = debugService;\n        this.contextViewService = contextViewService;\n    }\n    renderTemplate(container) {\n        const expression = dom.append(container, $('.expression'));\n        const name = dom.append(expression, $('span.name'));\n        const lazyButton = dom.append(expression, $('span.lazy-button'));\n        lazyButton.classList.add(...ThemeIcon.asClassNameArray(Codicon.eye));\n        lazyButton.title = ( localize('debug.lazyButton.tooltip', \"Click to expand\"));\n        const value = dom.append(expression, $('span.value'));\n        const label = ( new HighlightedLabel(name));\n        const inputBoxContainer = dom.append(expression, $('.inputBoxContainer'));\n        const templateDisposable = ( new DisposableStore());\n        let actionBar;\n        if (this.renderActionBar) {\n            dom.append(expression, $('.span.actionbar-spacer'));\n            actionBar = templateDisposable.add(( new ActionBar(expression)));\n        }\n        const template = { expression, name, value, label, inputBoxContainer, actionBar, elementDisposable: [], templateDisposable, lazyButton, currentElement: undefined };\n        templateDisposable.add(dom.addDisposableListener(lazyButton, dom.EventType.CLICK, () => {\n            if (template.currentElement) {\n                this.debugService.getViewModel().evaluateLazyExpression(template.currentElement);\n            }\n        }));\n        return template;\n    }\n    renderExpressionElement(element, node, data) {\n        data.currentElement = element;\n        this.renderExpression(node.element, data, createMatches(node.filterData));\n        if (data.actionBar) {\n            this.renderActionBar(data.actionBar, element, data);\n        }\n        const selectedExpression = this.debugService.getViewModel().getSelectedExpression();\n        if (element === selectedExpression?.expression || (element instanceof Variable && element.errorMessage)) {\n            const options = this.getInputBoxOptions(element, !!selectedExpression?.settingWatch);\n            if (options) {\n                data.elementDisposable.push(this.renderInputBox(data.name, data.value, data.inputBoxContainer, options));\n            }\n        }\n    }\n    renderInputBox(nameElement, valueElement, inputBoxContainer, options) {\n        nameElement.style.display = 'none';\n        valueElement.style.display = 'none';\n        inputBoxContainer.style.display = 'initial';\n        dom.clearNode(inputBoxContainer);\n        const inputBox = ( new InputBox(\n            inputBoxContainer,\n            this.contextViewService,\n            { ...options, inputBoxStyles: defaultInputBoxStyles }\n        ));\n        inputBox.value = options.initialValue;\n        inputBox.focus();\n        inputBox.select();\n        const done = once((success, finishEditing) => {\n            nameElement.style.display = '';\n            valueElement.style.display = '';\n            inputBoxContainer.style.display = 'none';\n            const value = inputBox.value;\n            dispose(toDispose);\n            if (finishEditing) {\n                this.debugService.getViewModel().setSelectedExpression(undefined, false);\n                options.onFinish(value, success);\n            }\n        });\n        const toDispose = [\n            inputBox,\n            dom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => {\n                const isEscape = e.equals(9 );\n                const isEnter = e.equals(3 );\n                if (isEscape || isEnter) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    done(isEnter, true);\n                }\n            }),\n            dom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, () => {\n                done(true, true);\n            }),\n            dom.addDisposableListener(inputBox.inputElement, dom.EventType.CLICK, e => {\n                e.preventDefault();\n                e.stopPropagation();\n            })\n        ];\n        return toDisposable(() => {\n            done(false, false);\n        });\n    }\n    disposeElement(node, index, templateData) {\n        dispose(templateData.elementDisposable);\n        templateData.elementDisposable = [];\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.elementDisposable);\n        templateData.templateDisposable.dispose();\n    }\n};\nAbstractExpressionsRenderer = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, IContextViewService))\n], AbstractExpressionsRenderer));\nexport { AbstractExpressionsRenderer, renderExpressionValue, renderVariable, renderViewTree };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-workbench .debug-toolbar{border-radius:4px;display:flex;height:32px;padding-left:7px;position:absolute;z-index:39}.monaco-workbench .debug-toolbar .monaco-action-bar .action-item{margin-right:4px}.monaco-workbench .debug-toolbar .monaco-action-bar .action-item.select-container{margin-right:7px}.monaco-workbench .debug-toolbar .monaco-action-bar .action-item.select-container .monaco-select-box,.monaco-workbench .start-debug-action-item .select-container .monaco-select-box{padding:0 22px 0 6px}.monaco-workbench .debug-toolbar .drag-area{align-items:center;cursor:grab;display:flex;justify-content:center;opacity:.5;width:16px}.monaco-workbench .debug-toolbar .drag-area.dragged{cursor:grabbing}.monaco-workbench .debug-toolbar .monaco-action-bar .action-item .action-label{align-items:center;background-position:50%;background-repeat:no-repeat;background-size:16px;display:flex;justify-content:center;margin-right:0}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { SelectBox } from 'monaco-editor/esm/vs/base/browser/ui/selectBox/selectBox.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IDebugService } from '../common/debug.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { asCssVariable, selectBorder, selectBackground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ADD_CONFIGURATION_ID } from './debugCommands.js';\nimport { BaseActionViewItem, SelectActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';\nimport { debugStart } from './debugIcons.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { defaultSelectBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nconst $ = dom.$;\nlet StartDebugActionViewItem = class StartDebugActionViewItem extends BaseActionViewItem {\n    static { this.SEPARATOR = '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500'; }\n    constructor(context, action, debugService, configurationService, commandService, contextService, contextViewService, keybindingService) {\n        super(context, action);\n        this.context = context;\n        this.debugService = debugService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.contextService = contextService;\n        this.keybindingService = keybindingService;\n        this.debugOptions = [];\n        this.selected = 0;\n        this.providers = [];\n        this.toDispose = [];\n        this.selectBox = ( new SelectBox(\n            [],\n            -1,\n            contextViewService,\n            defaultSelectBoxStyles,\n            { ariaLabel: ( nls.localize('debugLaunchConfigurations', 'Debug Launch Configurations')) }\n        ));\n        this.selectBox.setFocusable(false);\n        this.toDispose.push(this.selectBox);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('launch')) {\n                this.updateOptions();\n            }\n        }));\n        this.toDispose.push(this.debugService.getConfigurationManager().onDidSelectConfiguration(() => {\n            this.updateOptions();\n        }));\n    }\n    render(container) {\n        this.container = container;\n        container.classList.add('start-debug-action-item');\n        this.start = dom.append(container, $(ThemeIcon.asCSSSelector(debugStart)));\n        const keybinding = this.keybindingService.lookupKeybinding(this.action.id)?.getLabel();\n        const keybindingLabel = keybinding ? ` (${keybinding})` : '';\n        this.start.title = this.action.label + keybindingLabel;\n        this.start.setAttribute('role', 'button');\n        this.start.ariaLabel = this.start.title;\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.CLICK, () => {\n            this.start.blur();\n            if (this.debugService.state !== 1 ) {\n                this.actionRunner.run(this.action, this.context);\n            }\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_DOWN, (e) => {\n            if (this.action.enabled && e.button === 0) {\n                this.start.classList.add('active');\n            }\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_UP, () => {\n            this.start.classList.remove('active');\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_OUT, () => {\n            this.start.classList.remove('active');\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(17 )) {\n                this.start.tabIndex = -1;\n                this.selectBox.focus();\n                event.stopPropagation();\n            }\n        }));\n        this.toDispose.push(this.selectBox.onDidSelect(async (e) => {\n            const target = this.debugOptions[e.index];\n            const shouldBeSelected = target.handler ? await target.handler() : false;\n            if (shouldBeSelected) {\n                this.selected = e.index;\n            }\n            else {\n                this.selectBox.select(this.selected);\n            }\n        }));\n        const selectBoxContainer = $('.configuration');\n        this.selectBox.render(dom.append(container, selectBoxContainer));\n        this.toDispose.push(dom.addDisposableListener(selectBoxContainer, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(15 )) {\n                this.selectBox.setFocusable(false);\n                this.start.tabIndex = 0;\n                this.start.focus();\n                event.stopPropagation();\n            }\n        }));\n        this.container.style.border = `1px solid ${asCssVariable(selectBorder)}`;\n        selectBoxContainer.style.borderLeft = `1px solid ${asCssVariable(selectBorder)}`;\n        this.container.style.backgroundColor = asCssVariable(selectBackground);\n        this.debugService.getConfigurationManager().getDynamicProviders().then(providers => {\n            this.providers = providers;\n            if (this.providers.length > 0) {\n                this.updateOptions();\n            }\n        });\n        this.updateOptions();\n    }\n    setActionContext(context) {\n        this.context = context;\n    }\n    isEnabled() {\n        return true;\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this.selectBox.focus();\n        }\n        else {\n            this.start.tabIndex = 0;\n            this.start.focus();\n        }\n    }\n    blur() {\n        this.start.tabIndex = -1;\n        this.selectBox.blur();\n        this.container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this.start.tabIndex = 0;\n        }\n        else {\n            this.start.tabIndex = -1;\n            this.selectBox.setFocusable(false);\n        }\n    }\n    dispose() {\n        this.toDispose = dispose(this.toDispose);\n    }\n    updateOptions() {\n        this.selected = 0;\n        this.debugOptions = [];\n        const manager = this.debugService.getConfigurationManager();\n        const inWorkspace = this.contextService.getWorkbenchState() === 3 ;\n        let lastGroup;\n        const disabledIdxs = [];\n        manager.getAllConfigurations().forEach(({ launch, name, presentation }) => {\n            if (lastGroup !== presentation?.group) {\n                lastGroup = presentation?.group;\n                if (this.debugOptions.length) {\n                    this.debugOptions.push({ label: StartDebugActionViewItem.SEPARATOR, handler: () => Promise.resolve(false) });\n                    disabledIdxs.push(this.debugOptions.length - 1);\n                }\n            }\n            if (name === manager.selectedConfiguration.name && launch === manager.selectedConfiguration.launch) {\n                this.selected = this.debugOptions.length;\n            }\n            const label = inWorkspace ? `${name} (${launch.name})` : name;\n            this.debugOptions.push({\n                label, handler: async () => {\n                    await manager.selectConfiguration(launch, name);\n                    return true;\n                }\n            });\n        });\n        manager.getRecentDynamicConfigurations().slice(0, 3).forEach(({ name, type }) => {\n            if (type === manager.selectedConfiguration.type && manager.selectedConfiguration.name === name) {\n                this.selected = this.debugOptions.length;\n            }\n            this.debugOptions.push({\n                label: name,\n                handler: async () => {\n                    await manager.selectConfiguration(undefined, name, undefined, { type });\n                    return true;\n                }\n            });\n        });\n        if (this.debugOptions.length === 0) {\n            this.debugOptions.push({ label: ( nls.localize('noConfigurations', \"No Configurations\")), handler: async () => false });\n        }\n        this.debugOptions.push({ label: StartDebugActionViewItem.SEPARATOR, handler: () => Promise.resolve(false) });\n        disabledIdxs.push(this.debugOptions.length - 1);\n        this.providers.forEach(p => {\n            this.debugOptions.push({\n                label: `${p.label}...`,\n                handler: async () => {\n                    const picked = await p.pick();\n                    if (picked) {\n                        await manager.selectConfiguration(picked.launch, picked.config.name, picked.config, { type: p.type });\n                        return true;\n                    }\n                    return false;\n                }\n            });\n        });\n        manager.getLaunches().filter(l => !l.hidden).forEach(l => {\n            const label = inWorkspace ? ( nls.localize(\"addConfigTo\", \"Add Config ({0})...\", l.name)) : ( nls.localize('addConfiguration', \"Add Configuration...\"));\n            this.debugOptions.push({\n                label, handler: async () => {\n                    await this.commandService.executeCommand(ADD_CONFIGURATION_ID, ( l.uri.toString()));\n                    return false;\n                }\n            });\n        });\n        this.selectBox.setOptions(( this.debugOptions.map(\n            (data, index) => ({ text: data.label, isDisabled: disabledIdxs.indexOf(index) !== -1 })\n        )), this.selected);\n    }\n};\nStartDebugActionViewItem = ( __decorate([\n    ( __param(2, IDebugService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, ICommandService)),\n    ( __param(5, IWorkspaceContextService)),\n    ( __param(6, IContextViewService)),\n    ( __param(7, IKeybindingService))\n], StartDebugActionViewItem));\nlet FocusSessionActionViewItem = class FocusSessionActionViewItem extends SelectActionViewItem {\n    constructor(action, session, debugService, contextViewService, configurationService) {\n        super(null, action, [], -1, contextViewService, defaultSelectBoxStyles, { ariaLabel: ( nls.localize('debugSession', 'Debug Session')) });\n        this.debugService = debugService;\n        this.configurationService = configurationService;\n        this._register(this.debugService.getViewModel().onDidFocusSession(() => {\n            const session = this.getSelectedSession();\n            if (session) {\n                const index = this.getSessions().indexOf(session);\n                this.select(index);\n            }\n        }));\n        this._register(this.debugService.onDidNewSession(session => {\n            const sessionListeners = [];\n            sessionListeners.push(session.onDidChangeName(() => this.update()));\n            sessionListeners.push(session.onDidEndAdapter(() => dispose(sessionListeners)));\n            this.update();\n        }));\n        this.getSessions().forEach(session => {\n            this._register(session.onDidChangeName(() => this.update()));\n        });\n        this._register(this.debugService.onDidEndSession(() => this.update()));\n        const selectedSession = session ? this.mapFocusedSessionToSelected(session) : undefined;\n        this.update(selectedSession);\n    }\n    getActionContext(_, index) {\n        return this.getSessions()[index];\n    }\n    update(session) {\n        if (!session) {\n            session = this.getSelectedSession();\n        }\n        const sessions = this.getSessions();\n        const names = ( sessions.map(s => {\n            const label = s.getLabel();\n            if (s.parentSession) {\n                return `\\u00A0\\u00A0${label}`;\n            }\n            return label;\n        }));\n        this.setOptions(( names.map(data => ({ text: data }))), session ? sessions.indexOf(session) : undefined);\n    }\n    getSelectedSession() {\n        const session = this.debugService.getViewModel().focusedSession;\n        return session ? this.mapFocusedSessionToSelected(session) : undefined;\n    }\n    getSessions() {\n        const showSubSessions = this.configurationService.getValue('debug').showSubSessionsInToolBar;\n        const sessions = this.debugService.getModel().getSessions();\n        return showSubSessions ? sessions : sessions.filter(s => !s.parentSession);\n    }\n    mapFocusedSessionToSelected(focusedSession) {\n        const showSubSessions = this.configurationService.getValue('debug').showSubSessionsInToolBar;\n        while (focusedSession.parentSession && !showSubSessions) {\n            focusedSession = focusedSession.parentSession;\n        }\n        return focusedSession;\n    }\n};\nFocusSessionActionViewItem = ( __decorate([\n    ( __param(2, IDebugService)),\n    ( __param(3, IContextViewService)),\n    ( __param(4, IConfigurationService))\n], FocusSessionActionViewItem));\nexport { FocusSessionActionViewItem, StartDebugActionViewItem };\n","import { registerColor, foreground, editorInfoForeground, editorWarningForeground, errorForeground, badgeBackground, badgeForeground, listDeemphasizedForeground, toolbarHoverBackground, contrastBorder, inputBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { Color } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { debugStart, debugPause, debugStop, debugDisconnect, debugRestart, debugRestartFrame, debugStepOver, debugStepInto, debugStepOut, debugContinue, debugReverseContinue, debugStepBack } from './debugIcons.js';\nimport { isHighContrast } from 'monaco-editor/esm/vs/platform/theme/common/theme.js';\nconst debugToolBarBackground = registerColor('debugToolBar.background', {\n    dark: '#333333',\n    light: '#F3F3F3',\n    hcDark: '#000000',\n    hcLight: '#FFFFFF'\n}, ( (localize('debugToolBarBackground', \"Debug toolbar background color.\"))));\nconst debugToolBarBorder = registerColor('debugToolBar.border', {\n    dark: null,\n    light: null,\n    hcDark: null,\n    hcLight: null\n}, ( (localize('debugToolBarBorder', \"Debug toolbar border color.\"))));\nconst debugIconStartForeground = registerColor('debugIcon.startForeground', {\n    dark: '#89D185',\n    light: '#388A34',\n    hcDark: '#89D185',\n    hcLight: '#388A34'\n}, ( (localize('debugIcon.startForeground', \"Debug toolbar icon for start debugging.\"))));\nfunction registerColors() {\n    const debugTokenExpressionName = registerColor('debugTokenExpression.name', { dark: '#c586c0', light: '#9b46b0', hcDark: foreground, hcLight: foreground }, 'Foreground color for the token names shown in the debug views (ie. the Variables or Watch view).');\n    const debugTokenExpressionValue = registerColor('debugTokenExpression.value', { dark: '#cccccc99', light: '#6c6c6ccc', hcDark: foreground, hcLight: foreground }, 'Foreground color for the token values shown in the debug views (ie. the Variables or Watch view).');\n    const debugTokenExpressionString = registerColor('debugTokenExpression.string', { dark: '#ce9178', light: '#a31515', hcDark: '#f48771', hcLight: '#a31515' }, 'Foreground color for strings in the debug views (ie. the Variables or Watch view).');\n    const debugTokenExpressionBoolean = registerColor('debugTokenExpression.boolean', { dark: '#4e94ce', light: '#0000ff', hcDark: '#75bdfe', hcLight: '#0000ff' }, 'Foreground color for booleans in the debug views (ie. the Variables or Watch view).');\n    const debugTokenExpressionNumber = registerColor('debugTokenExpression.number', { dark: '#b5cea8', light: '#098658', hcDark: '#89d185', hcLight: '#098658' }, 'Foreground color for numbers in the debug views (ie. the Variables or Watch view).');\n    const debugTokenExpressionError = registerColor('debugTokenExpression.error', { dark: '#f48771', light: '#e51400', hcDark: '#f48771', hcLight: '#e51400' }, 'Foreground color for expression errors in the debug views (ie. the Variables or Watch view) and for error logs shown in the debug console.');\n    const debugViewExceptionLabelForeground = registerColor('debugView.exceptionLabelForeground', { dark: foreground, light: '#FFF', hcDark: foreground, hcLight: foreground }, 'Foreground color for a label shown in the CALL STACK view when the debugger breaks on an exception.');\n    const debugViewExceptionLabelBackground = registerColor('debugView.exceptionLabelBackground', { dark: '#6C2022', light: '#A31515', hcDark: '#6C2022', hcLight: '#A31515' }, 'Background color for a label shown in the CALL STACK view when the debugger breaks on an exception.');\n    const debugViewStateLabelForeground = registerColor('debugView.stateLabelForeground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, 'Foreground color for a label in the CALL STACK view showing the current session\\'s or thread\\'s state.');\n    const debugViewStateLabelBackground = registerColor('debugView.stateLabelBackground', { dark: '#88888844', light: '#88888844', hcDark: '#88888844', hcLight: '#88888844' }, 'Background color for a label in the CALL STACK view showing the current session\\'s or thread\\'s state.');\n    const debugViewValueChangedHighlight = registerColor('debugView.valueChangedHighlight', { dark: '#569CD6', light: '#569CD6', hcDark: '#569CD6', hcLight: '#569CD6' }, 'Color used to highlight value changes in the debug views (ie. in the Variables view).');\n    const debugConsoleInfoForeground = registerColor('debugConsole.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: foreground, hcLight: foreground }, 'Foreground color for info messages in debug REPL console.');\n    const debugConsoleWarningForeground = registerColor('debugConsole.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: '#008000', hcLight: editorWarningForeground }, 'Foreground color for warning messages in debug REPL console.');\n    const debugConsoleErrorForeground = registerColor('debugConsole.errorForeground', { dark: errorForeground, light: errorForeground, hcDark: errorForeground, hcLight: errorForeground }, 'Foreground color for error messages in debug REPL console.');\n    const debugConsoleSourceForeground = registerColor('debugConsole.sourceForeground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, 'Foreground color for source filenames in debug REPL console.');\n    const debugConsoleInputIconForeground = registerColor('debugConsoleInputIcon.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, 'Foreground color for debug console input marker icon.');\n    const debugIconPauseForeground = registerColor('debugIcon.pauseForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.pauseForeground', \"Debug toolbar icon for pause.\"))));\n    const debugIconStopForeground = registerColor('debugIcon.stopForeground', {\n        dark: '#F48771',\n        light: '#A1260D',\n        hcDark: '#F48771',\n        hcLight: '#A1260D'\n    }, ( (localize('debugIcon.stopForeground', \"Debug toolbar icon for stop.\"))));\n    const debugIconDisconnectForeground = registerColor('debugIcon.disconnectForeground', {\n        dark: '#F48771',\n        light: '#A1260D',\n        hcDark: '#F48771',\n        hcLight: '#A1260D'\n    }, ( (localize('debugIcon.disconnectForeground', \"Debug toolbar icon for disconnect.\"))));\n    const debugIconRestartForeground = registerColor('debugIcon.restartForeground', {\n        dark: '#89D185',\n        light: '#388A34',\n        hcDark: '#89D185',\n        hcLight: '#388A34'\n    }, ( (localize('debugIcon.restartForeground', \"Debug toolbar icon for restart.\"))));\n    const debugIconStepOverForeground = registerColor('debugIcon.stepOverForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.stepOverForeground', \"Debug toolbar icon for step over.\"))));\n    const debugIconStepIntoForeground = registerColor('debugIcon.stepIntoForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.stepIntoForeground', \"Debug toolbar icon for step into.\"))));\n    const debugIconStepOutForeground = registerColor('debugIcon.stepOutForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.stepOutForeground', \"Debug toolbar icon for step over.\"))));\n    const debugIconContinueForeground = registerColor('debugIcon.continueForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.continueForeground', \"Debug toolbar icon for continue.\"))));\n    const debugIconStepBackForeground = registerColor('debugIcon.stepBackForeground', {\n        dark: '#75BEFF',\n        light: '#007ACC',\n        hcDark: '#75BEFF',\n        hcLight: '#007ACC'\n    }, ( (localize('debugIcon.stepBackForeground', \"Debug toolbar icon for step back.\"))));\n    registerThemingParticipant((theme, collector) => {\n        const badgeBackgroundColor = theme.getColor(badgeBackground);\n        const badgeForegroundColor = theme.getColor(badgeForeground);\n        const listDeemphasizedForegroundColor = theme.getColor(listDeemphasizedForeground);\n        const debugViewExceptionLabelForegroundColor = theme.getColor(debugViewExceptionLabelForeground);\n        const debugViewExceptionLabelBackgroundColor = theme.getColor(debugViewExceptionLabelBackground);\n        const debugViewStateLabelForegroundColor = theme.getColor(debugViewStateLabelForeground);\n        const debugViewStateLabelBackgroundColor = theme.getColor(debugViewStateLabelBackground);\n        const debugViewValueChangedHighlightColor = theme.getColor(debugViewValueChangedHighlight);\n        const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n        collector.addRule(`\n\t\t\t/* Text colour of the call stack row's filename */\n\t\t\t.debug-pane .debug-call-stack .monaco-list-row:not(.selected) .stack-frame > .file .file-name {\n\t\t\t\tcolor: ${listDeemphasizedForegroundColor}\n\t\t\t}\n\n\t\t\t/* Line & column number \"badge\" for selected call stack row */\n\t\t\t.debug-pane .monaco-list-row.selected .line-number {\n\t\t\t\tbackground-color: ${badgeBackgroundColor};\n\t\t\t\tcolor: ${badgeForegroundColor};\n\t\t\t}\n\n\t\t\t/* Line & column number \"badge\" for unselected call stack row (basically all other rows) */\n\t\t\t.debug-pane .line-number {\n\t\t\t\tbackground-color: ${( ( badgeBackgroundColor.transparent(0.6)))};\n\t\t\t\tcolor: ${( ( badgeForegroundColor.transparent(0.6)))};\n\t\t\t}\n\n\t\t\t/* State \"badge\" displaying the active session's current state.\n\t\t\t* Only visible when there are more active debug sessions/threads running.\n\t\t\t*/\n\t\t\t.debug-pane .debug-call-stack .thread > .state.label,\n\t\t\t.debug-pane .debug-call-stack .session > .state.label {\n\t\t\t\tbackground-color: ${debugViewStateLabelBackgroundColor};\n\t\t\t\tcolor: ${debugViewStateLabelForegroundColor};\n\t\t\t}\n\n\t\t\t/* State \"badge\" displaying the active session's current state.\n\t\t\t* Only visible when there are more active debug sessions/threads running\n\t\t\t* and thread paused due to a thrown exception.\n\t\t\t*/\n\t\t\t.debug-pane .debug-call-stack .thread > .state.label.exception,\n\t\t\t.debug-pane .debug-call-stack .session > .state.label.exception {\n\t\t\t\tbackground-color: ${debugViewExceptionLabelBackgroundColor};\n\t\t\t\tcolor: ${debugViewExceptionLabelForegroundColor};\n\t\t\t}\n\n\t\t\t/* Info \"badge\" shown when the debugger pauses due to a thrown exception. */\n\t\t\t.debug-pane .call-stack-state-message > .label.exception {\n\t\t\t\tbackground-color: ${debugViewExceptionLabelBackgroundColor};\n\t\t\t\tcolor: ${debugViewExceptionLabelForegroundColor};\n\t\t\t}\n\n\t\t\t/* Animation of changed values in Debug viewlet */\n\t\t\t@keyframes debugViewletValueChanged {\n\t\t\t\t0%   { background-color: ${( ( debugViewValueChangedHighlightColor.transparent(0)))} }\n\t\t\t\t5%   { background-color: ${( ( debugViewValueChangedHighlightColor.transparent(0.9)))} }\n\t\t\t\t100% { background-color: ${( ( debugViewValueChangedHighlightColor.transparent(0.3)))} }\n\t\t\t}\n\n\t\t\t.debug-pane .monaco-list-row .expression .value.changed {\n\t\t\t\tbackground-color: ${( ( debugViewValueChangedHighlightColor.transparent(0.3)))};\n\t\t\t\tanimation-name: debugViewletValueChanged;\n\t\t\t\tanimation-duration: 1s;\n\t\t\t\tanimation-fill-mode: forwards;\n\t\t\t}\n\n\t\t\t.monaco-list-row .expression .lazy-button:hover {\n\t\t\t\tbackground-color: ${toolbarHoverBackgroundColor}\n\t\t\t}\n\t\t`);\n        const contrastBorderColor = theme.getColor(contrastBorder);\n        if (contrastBorderColor) {\n            collector.addRule(`\n\t\t\t.debug-pane .line-number {\n\t\t\t\tborder: 1px solid ${contrastBorderColor};\n\t\t\t}\n\t\t\t`);\n        }\n        if (isHighContrast(theme.type)) {\n            collector.addRule(`\n\t\t\t.debug-pane .line-number {\n\t\t\t\tbackground-color: ${badgeBackgroundColor};\n\t\t\t\tcolor: ${badgeForegroundColor};\n\t\t\t}`);\n        }\n        const tokenNameColor = theme.getColor(debugTokenExpressionName);\n        const tokenValueColor = theme.getColor(debugTokenExpressionValue);\n        const tokenStringColor = theme.getColor(debugTokenExpressionString);\n        const tokenBooleanColor = theme.getColor(debugTokenExpressionBoolean);\n        const tokenErrorColor = theme.getColor(debugTokenExpressionError);\n        const tokenNumberColor = theme.getColor(debugTokenExpressionNumber);\n        collector.addRule(`\n\t\t\t.monaco-workbench .monaco-list-row .expression .name {\n\t\t\t\tcolor: ${tokenNameColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-list-row .expression .value,\n\t\t\t.monaco-workbench .debug-hover-widget .value {\n\t\t\t\tcolor: ${tokenValueColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-list-row .expression .value.string,\n\t\t\t.monaco-workbench .debug-hover-widget .value.string {\n\t\t\t\tcolor: ${tokenStringColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-list-row .expression .value.boolean,\n\t\t\t.monaco-workbench .debug-hover-widget .value.boolean {\n\t\t\t\tcolor: ${tokenBooleanColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-list-row .expression .error,\n\t\t\t.monaco-workbench .debug-hover-widget .error,\n\t\t\t.monaco-workbench .debug-pane .debug-variables .scope .error {\n\t\t\t\tcolor: ${tokenErrorColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-list-row .expression .value.number,\n\t\t\t.monaco-workbench .debug-hover-widget .value.number {\n\t\t\t\tcolor: ${tokenNumberColor};\n\t\t\t}\n\t\t`);\n        const debugConsoleInputBorderColor = theme.getColor(inputBorder) || ( (Color.fromHex('#80808060')));\n        const debugConsoleInfoForegroundColor = theme.getColor(debugConsoleInfoForeground);\n        const debugConsoleWarningForegroundColor = theme.getColor(debugConsoleWarningForeground);\n        const debugConsoleErrorForegroundColor = theme.getColor(debugConsoleErrorForeground);\n        const debugConsoleSourceForegroundColor = theme.getColor(debugConsoleSourceForeground);\n        const debugConsoleInputIconForegroundColor = theme.getColor(debugConsoleInputIconForeground);\n        collector.addRule(`\n\t\t\t.repl .repl-input-wrapper {\n\t\t\t\tborder-top: 1px solid ${debugConsoleInputBorderColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .repl .repl-tree .output .expression .value.info {\n\t\t\t\tcolor: ${debugConsoleInfoForegroundColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .repl .repl-tree .output .expression .value.warn {\n\t\t\t\tcolor: ${debugConsoleWarningForegroundColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .repl .repl-tree .output .expression .value.error {\n\t\t\t\tcolor: ${debugConsoleErrorForegroundColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .repl .repl-tree .output .expression .source {\n\t\t\t\tcolor: ${debugConsoleSourceForegroundColor};\n\t\t\t}\n\n\t\t\t.monaco-workbench .repl .repl-tree .monaco-tl-contents .arrow {\n\t\t\t\tcolor: ${debugConsoleInputIconForegroundColor};\n\t\t\t}\n\t\t`);\n        if (!theme.defines(debugConsoleInputIconForeground)) {\n            collector.addRule(`\n\t\t\t\t.monaco-workbench.vs .repl .repl-tree .monaco-tl-contents .arrow {\n\t\t\t\t\topacity: 0.25;\n\t\t\t\t}\n\n\t\t\t\t.monaco-workbench.vs-dark .repl .repl-tree .monaco-tl-contents .arrow {\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t}\n\n\t\t\t\t.monaco-workbench.hc-black .repl .repl-tree .monaco-tl-contents .arrow,\n\t\t\t\t.monaco-workbench.hc-light .repl .repl-tree .monaco-tl-contents .arrow {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\t\t\t`);\n        }\n        const debugIconStartColor = theme.getColor(debugIconStartForeground);\n        if (debugIconStartColor) {\n            collector.addRule(`.monaco-workbench ${ThemeIcon.asCSSSelector(debugStart)} { color: ${debugIconStartColor}; }`);\n        }\n        const debugIconPauseColor = theme.getColor(debugIconPauseForeground);\n        if (debugIconPauseColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugPause)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugPause)} { color: ${debugIconPauseColor}; }`);\n        }\n        const debugIconStopColor = theme.getColor(debugIconStopForeground);\n        if (debugIconStopColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStop)},.monaco-workbench ${ThemeIcon.asCSSSelector(debugStop)} { color: ${debugIconStopColor}; }`);\n        }\n        const debugIconDisconnectColor = theme.getColor(debugIconDisconnectForeground);\n        if (debugIconDisconnectColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugDisconnect)},.monaco-workbench .debug-view-content ${ThemeIcon.asCSSSelector(debugDisconnect)}, .monaco-workbench .debug-toolbar ${ThemeIcon.asCSSSelector(debugDisconnect)} { color: ${debugIconDisconnectColor}; }`);\n        }\n        const debugIconRestartColor = theme.getColor(debugIconRestartForeground);\n        if (debugIconRestartColor) {\n            collector.addRule(`.monaco-workbench ${ThemeIcon.asCSSSelector(debugRestart)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugRestartFrame)}, .monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugRestart)}, .monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugRestartFrame)} { color: ${debugIconRestartColor}; }`);\n        }\n        const debugIconStepOverColor = theme.getColor(debugIconStepOverForeground);\n        if (debugIconStepOverColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepOver)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugStepOver)} { color: ${debugIconStepOverColor}; }`);\n        }\n        const debugIconStepIntoColor = theme.getColor(debugIconStepIntoForeground);\n        if (debugIconStepIntoColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepInto)}, .monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepInto)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugStepInto)} { color: ${debugIconStepIntoColor}; }`);\n        }\n        const debugIconStepOutColor = theme.getColor(debugIconStepOutForeground);\n        if (debugIconStepOutColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepOut)}, .monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepOut)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugStepOut)} { color: ${debugIconStepOutColor}; }`);\n        }\n        const debugIconContinueColor = theme.getColor(debugIconContinueForeground);\n        if (debugIconContinueColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugContinue)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugContinue)}, .monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugReverseContinue)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugReverseContinue)} { color: ${debugIconContinueColor}; }`);\n        }\n        const debugIconStepBackColor = theme.getColor(debugIconStepBackForeground);\n        if (debugIconStepBackColor) {\n            collector.addRule(`.monaco-workbench .part > .title > .title-actions .action-label${ThemeIcon.asCSSSelector(debugStepBack)}, .monaco-workbench ${ThemeIcon.asCSSSelector(debugStepBack)} { color: ${debugIconStepBackColor}; }`);\n        }\n    });\n}\nexport { debugIconStartForeground, debugToolBarBackground, debugToolBarBorder, registerColors };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as browser from 'monaco-editor/esm/vs/base/browser/browser.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardMouseEvent } from 'monaco-editor/esm/vs/base/browser/mouseEvent.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport * as arrays from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport * as errors from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { dispose, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport './media/debugToolBar.css.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { DropdownWithPrimaryActionViewItem } from '../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js';\nimport { createActionViewItem, createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuRegistry, MenuId, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { widgetShadow, widgetBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { Themable, IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { FocusSessionActionViewItem } from './debugActionViewItems.js';\nimport { debugToolBarBackground, debugToolBarBorder } from './debugColors.js';\nimport { DISCONNECT_ID, DISCONNECT_LABEL, STOP_ID, STOP_LABEL, DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, FOCUS_SESSION_ID, CONTINUE_LABEL, CONTINUE_ID, PAUSE_LABEL, PAUSE_ID, STEP_OVER_LABEL, STEP_OVER_ID, STEP_INTO_LABEL, STEP_INTO_ID, STEP_OUT_LABEL, STEP_OUT_ID, RESTART_LABEL, RESTART_SESSION_ID, STEP_BACK_ID, REVERSE_CONTINUE_ID, FOCUS_SESSION_LABEL } from './debugCommands.js';\nimport { debugDisconnect, debugStop, debugGripper, debugContinue, debugPause, debugStepOver, debugStepInto, debugStepOut, debugRestart, debugStepBack, debugReverseContinue } from './debugIcons.js';\nimport { VIEWLET_ID, CONTEXT_DEBUG_STATE, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, IDebugService } from '../common/debug.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nconst DEBUG_TOOLBAR_POSITION_KEY = 'debug.actionswidgetposition';\nconst DEBUG_TOOLBAR_Y_KEY = 'debug.actionswidgety';\nlet DebugToolBar = class DebugToolBar extends Themable {\n    constructor(notificationService, telemetryService, debugService, layoutService, storageService, configurationService, themeService, instantiationService, menuService, contextKeyService) {\n        super(themeService);\n        this.notificationService = notificationService;\n        this.telemetryService = telemetryService;\n        this.debugService = debugService;\n        this.layoutService = layoutService;\n        this.storageService = storageService;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.yCoordinate = 0;\n        this.isVisible = false;\n        this.isBuilt = false;\n        this.stopActionViewItemDisposables = this._register(( new DisposableStore()));\n        this.$el = dom.$('div.debug-toolbar');\n        this.$el.style.top = `${layoutService.offset.top}px`;\n        this.dragArea = dom.append(this.$el, dom.$('div.drag-area' + ThemeIcon.asCSSSelector(debugGripper)));\n        const actionBarContainer = dom.append(this.$el, dom.$('div.action-bar-container'));\n        this.debugToolBarMenu = menuService.createMenu(MenuId.DebugToolBar, contextKeyService);\n        this._register(this.debugToolBarMenu);\n        this.activeActions = [];\n        this.actionBar = this._register(( new ActionBar(actionBarContainer, {\n            orientation: 0 ,\n            actionViewItemProvider: (action) => {\n                if (action.id === FOCUS_SESSION_ID) {\n                    return this.instantiationService.createInstance(FocusSessionActionViewItem, action, undefined);\n                }\n                else if (action.id === STOP_ID || action.id === DISCONNECT_ID) {\n                    this.stopActionViewItemDisposables.clear();\n                    const item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action, this.stopActionViewItemDisposables, accessor));\n                    if (item) {\n                        return item;\n                    }\n                }\n                return createActionViewItem(this.instantiationService, action);\n            }\n        })));\n        this.updateScheduler = this._register(( new RunOnceScheduler(() => {\n            const state = this.debugService.state;\n            const toolBarLocation = this.configurationService.getValue('debug').toolBarLocation;\n            if (state === 0  ||\n                toolBarLocation === 'docked' ||\n                toolBarLocation === 'hidden' ||\n                this.debugService.getModel().getSessions().every(s => s.suppressDebugToolbar) ||\n                (state === 1  && this.debugService.initializingOptions?.suppressDebugToolbar)) {\n                return this.hide();\n            }\n            const actions = [];\n            createAndFillInActionBarActions(this.debugToolBarMenu, { shouldForwardArgs: true }, actions);\n            if (!arrays.equals(actions, this.activeActions, (first, second) => first.id === second.id && first.enabled === second.enabled)) {\n                this.actionBar.clear();\n                this.actionBar.push(actions, { icon: true, label: false });\n                this.activeActions = actions;\n            }\n            this.show();\n        }, 20)));\n        this.updateStyles();\n        this.registerListeners();\n        this.hide();\n    }\n    registerListeners() {\n        this._register(this.debugService.onDidChangeState(() => this.updateScheduler.schedule()));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('debug.toolBarLocation')) {\n                this.updateScheduler.schedule();\n            }\n        }));\n        this._register(this.debugToolBarMenu.onDidChange(() => this.updateScheduler.schedule()));\n        this._register(this.actionBar.actionRunner.onDidRun((e) => {\n            if (e.error && !errors.isCancellationError(e.error)) {\n                this.notificationService.error(e.error);\n            }\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'debugActionsWidget' });\n        }));\n        this._register(dom.addDisposableListener(window, dom.EventType.RESIZE, () => this.setCoordinates()));\n        this._register(dom.addDisposableGenericMouseUpListener(this.dragArea, (event) => {\n            const mouseClickEvent = ( new StandardMouseEvent(event));\n            if (mouseClickEvent.detail === 2) {\n                const widgetWidth = this.$el.clientWidth;\n                this.setCoordinates(0.5 * window.innerWidth - 0.5 * widgetWidth, 0);\n                this.storePosition();\n            }\n        }));\n        this._register(dom.addDisposableGenericMouseDownListener(this.dragArea, (event) => {\n            this.dragArea.classList.add('dragged');\n            const mouseMoveListener = dom.addDisposableGenericMouseMoveListener(window, (e) => {\n                const mouseMoveEvent = ( new StandardMouseEvent(e));\n                mouseMoveEvent.preventDefault();\n                this.setCoordinates(mouseMoveEvent.posx - 14, mouseMoveEvent.posy - (this.layoutService.offset.top));\n            });\n            const mouseUpListener = dom.addDisposableGenericMouseUpListener(window, (e) => {\n                this.storePosition();\n                this.dragArea.classList.remove('dragged');\n                mouseMoveListener.dispose();\n                mouseUpListener.dispose();\n            });\n        }));\n        this._register(this.layoutService.onDidChangePartVisibility(() => this.setYCoordinate()));\n        this._register(browser.PixelRatio.onDidChange(() => this.setYCoordinate()));\n    }\n    storePosition() {\n        const left = dom.getComputedStyle(this.$el).left;\n        if (left) {\n            const position = parseFloat(left) / window.innerWidth;\n            this.storageService.store(DEBUG_TOOLBAR_POSITION_KEY, position, 0 , 1 );\n        }\n    }\n    updateStyles() {\n        super.updateStyles();\n        if (this.$el) {\n            this.$el.style.backgroundColor = this.getColor(debugToolBarBackground) || '';\n            const widgetShadowColor = this.getColor(widgetShadow);\n            this.$el.style.boxShadow = widgetShadowColor ? `0 0 8px 2px ${widgetShadowColor}` : '';\n            const contrastBorderColor = this.getColor(widgetBorder);\n            const borderColor = this.getColor(debugToolBarBorder);\n            if (contrastBorderColor) {\n                this.$el.style.border = `1px solid ${contrastBorderColor}`;\n            }\n            else {\n                this.$el.style.border = borderColor ? `solid ${borderColor}` : 'none';\n                this.$el.style.border = '1px 0';\n            }\n        }\n    }\n    setYCoordinate(y = this.yCoordinate) {\n        const titlebarOffset = this.layoutService.offset.top;\n        this.$el.style.top = `${titlebarOffset + y}px`;\n        this.yCoordinate = y;\n    }\n    setCoordinates(x, y) {\n        if (!this.isVisible) {\n            return;\n        }\n        const widgetWidth = this.$el.clientWidth;\n        if (x === undefined) {\n            const positionPercentage = this.storageService.get(DEBUG_TOOLBAR_POSITION_KEY, 0 );\n            x = positionPercentage !== undefined ? parseFloat(positionPercentage) * window.innerWidth : (0.5 * window.innerWidth - 0.5 * widgetWidth);\n        }\n        x = Math.max(0, Math.min(x, window.innerWidth - widgetWidth));\n        this.$el.style.left = `${x}px`;\n        if (y === undefined) {\n            y = this.storageService.getNumber(DEBUG_TOOLBAR_Y_KEY, 0 , 0);\n        }\n        const titleAreaHeight = 35;\n        if ((y < titleAreaHeight / 2) || (y > titleAreaHeight + titleAreaHeight / 2)) {\n            const moveToTop = y < titleAreaHeight;\n            this.setYCoordinate(moveToTop ? 0 : titleAreaHeight);\n            this.storageService.store(DEBUG_TOOLBAR_Y_KEY, moveToTop ? 0 : 2 * titleAreaHeight, 0 , 1 );\n        }\n    }\n    show() {\n        if (this.isVisible) {\n            this.setCoordinates();\n            return;\n        }\n        if (!this.isBuilt) {\n            this.isBuilt = true;\n            this.layoutService.container.appendChild(this.$el);\n        }\n        this.isVisible = true;\n        dom.show(this.$el);\n        this.setCoordinates();\n    }\n    hide() {\n        this.isVisible = false;\n        dom.hide(this.$el);\n    }\n    dispose() {\n        super.dispose();\n        this.$el?.remove();\n    }\n};\nDebugToolBar = ( __decorate([\n    ( __param(0, INotificationService)),\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IWorkbenchLayoutService)),\n    ( __param(4, IStorageService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IThemeService)),\n    ( __param(7, IInstantiationService)),\n    ( __param(8, IMenuService)),\n    ( __param(9, IContextKeyService))\n], DebugToolBar));\nfunction createDisconnectMenuItemAction(action, disposables, accessor) {\n    const menuService = accessor.get(IMenuService);\n    const contextKeyService = accessor.get(IContextKeyService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const contextMenuService = accessor.get(IContextMenuService);\n    const menu = menuService.createMenu(MenuId.DebugToolBarStop, contextKeyService);\n    const secondary = [];\n    createAndFillInActionBarActions(menu, { shouldForwardArgs: true }, secondary);\n    if (!secondary.length) {\n        return undefined;\n    }\n    const dropdownAction = disposables.add(( new Action('notebook.moreRunActions', ( localize('notebook.moreRunActionsLabel', \"More...\")), 'codicon-chevron-down', true)));\n    const item = instantiationService.createInstance(DropdownWithPrimaryActionViewItem, action, dropdownAction, secondary, 'debug-stop-actions', contextMenuService, {});\n    return item;\n}\nconst debugViewTitleItems = [];\nconst registerDebugToolBarItem = (id, title, order, icon, when, precondition, alt) => {\n    MenuRegistry.appendMenuItem(MenuId.DebugToolBar, {\n        group: 'navigation',\n        when,\n        order,\n        command: {\n            id,\n            title,\n            icon,\n            precondition\n        },\n        alt\n    });\n    debugViewTitleItems.push(MenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n        group: 'navigation',\n        when: ( ContextKeyExpr.and(when, ( ContextKeyExpr.equals('viewContainer', VIEWLET_ID)), ( CONTEXT_DEBUG_STATE.notEqualsTo('inactive')), ( ContextKeyExpr.equals('config.debug.toolBarLocation', 'docked')))),\n        order,\n        command: {\n            id,\n            title,\n            icon,\n            precondition\n        }\n    }));\n};\nMenuRegistry.onDidChangeMenu(e => {\n    if (( e.has(MenuId.DebugToolBar))) {\n        dispose(debugViewTitleItems);\n        const items = MenuRegistry.getMenuItems(MenuId.DebugToolBar);\n        for (const i of items) {\n            debugViewTitleItems.push(MenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n                ...i,\n                when: ( ContextKeyExpr.and(i.when, ( ContextKeyExpr.equals('viewContainer', VIEWLET_ID)), ( CONTEXT_DEBUG_STATE.notEqualsTo('inactive')), ( ContextKeyExpr.equals('config.debug.toolBarLocation', 'docked'))))\n            }));\n        }\n    }\n});\nregisterDebugToolBarItem(CONTINUE_ID, CONTINUE_LABEL, 10, debugContinue, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(PAUSE_ID, PAUSE_LABEL, 10, debugPause, ( CONTEXT_DEBUG_STATE.notEqualsTo('stopped')), ( CONTEXT_DEBUG_STATE.isEqualTo('running')));\nregisterDebugToolBarItem(STOP_ID, STOP_LABEL, 70, debugStop, ( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), undefined, { id: DISCONNECT_ID, title: DISCONNECT_LABEL, icon: debugDisconnect, precondition: ( ContextKeyExpr.and(( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)), });\nregisterDebugToolBarItem(DISCONNECT_ID, DISCONNECT_LABEL, 70, debugDisconnect, CONTEXT_FOCUSED_SESSION_IS_ATTACH, undefined, { id: STOP_ID, title: STOP_LABEL, icon: debugStop, precondition: ( ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)), });\nregisterDebugToolBarItem(STEP_OVER_ID, STEP_OVER_LABEL, 20, debugStepOver, undefined, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(STEP_INTO_ID, STEP_INTO_LABEL, 30, debugStepInto, undefined, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(STEP_OUT_ID, STEP_OUT_LABEL, 40, debugStepOut, undefined, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(RESTART_SESSION_ID, RESTART_LABEL, 60, debugRestart);\nregisterDebugToolBarItem(STEP_BACK_ID, ( localize('stepBackDebug', \"Step Back\")), 50, debugStepBack, CONTEXT_STEP_BACK_SUPPORTED, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(REVERSE_CONTINUE_ID, ( localize('reverseContinue', \"Reverse\")), 55, debugReverseContinue, CONTEXT_STEP_BACK_SUPPORTED, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugToolBarItem(FOCUS_SESSION_ID, FOCUS_SESSION_LABEL, 100, undefined, CONTEXT_MULTI_SESSION_DEBUG);\nMenuRegistry.appendMenuItem(MenuId.DebugToolBarStop, {\n    group: 'navigation',\n    when: ( ContextKeyExpr.and(( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)),\n    order: 0,\n    command: {\n        id: DISCONNECT_ID,\n        title: DISCONNECT_LABEL,\n        icon: debugDisconnect\n    }\n});\nMenuRegistry.appendMenuItem(MenuId.DebugToolBarStop, {\n    group: 'navigation',\n    when: ( ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)),\n    order: 0,\n    command: {\n        id: STOP_ID,\n        title: STOP_LABEL,\n        icon: debugStop\n    }\n});\nMenuRegistry.appendMenuItem(MenuId.DebugToolBarStop, {\n    group: 'navigation',\n    when: ( ContextKeyExpr.or(( ContextKeyExpr.and(( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)), ( ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED)))),\n    order: 0,\n    command: {\n        id: DISCONNECT_AND_SUSPEND_ID,\n        title: DISCONNECT_AND_SUSPEND_LABEL,\n        icon: debugDisconnect\n    }\n});\nexport { DebugToolBar, createDisconnectMenuItemAction };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { HighlightedLabel } from 'monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { DisposableStore, dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { posix } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { commonSuffixLength } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { MenuEntryActionViewItem, SubmenuEntryActionViewItem, createAndFillInContextMenuActions, createAndFillInActionBarActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuItemAction, SubmenuItemAction, MenuId, registerAction2, MenuRegistry, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { WorkbenchCompressibleAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { asCssVariable, textLinkForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { renderViewTree } from './baseDebugView.js';\nimport { STOP_ID, DISCONNECT_ID, PAUSE_LABEL, PAUSE_ID, CONTINUE_LABEL, CONTINUE_ID, STEP_OVER_LABEL, STEP_OVER_ID, STEP_INTO_LABEL, STEP_INTO_ID, STEP_OUT_LABEL, STEP_OUT_ID, RESTART_LABEL, RESTART_SESSION_ID, STOP_LABEL, DISCONNECT_LABEL } from './debugCommands.js';\nimport { callstackViewSession, debugRestartFrame, debugPause, debugContinue, debugStepOver, debugStepInto, debugStepOut, debugRestart, debugStop, debugDisconnect } from './debugIcons.js';\nimport { createDisconnectMenuItemAction } from './debugToolBar.js';\nimport { CALLSTACK_VIEW_ID, CONTEXT_DEBUG_STATE, getStateLabel, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_CALLSTACK_ITEM_STOPPED, CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD, IDebugService, CONTEXT_STACK_FRAME_SUPPORTS_RESTART } from '../common/debug.js';\nimport { Thread, StackFrame, ThreadAndSessionIds } from '../common/debugModel.js';\nimport { isSessionAttach } from '../common/debugUtils.js';\nconst $ = dom.$;\nfunction assignSessionContext(element, context) {\n    context.sessionId = element.getId();\n    return context;\n}\nfunction assignThreadContext(element, context) {\n    context.threadId = element.getId();\n    assignSessionContext(element.session, context);\n    return context;\n}\nfunction assignStackFrameContext(element, context) {\n    context.frameId = element.getId();\n    context.frameName = element.name;\n    context.frameLocation = { range: element.range, source: element.source.raw };\n    assignThreadContext(element.thread, context);\n    return context;\n}\nfunction getContext(element) {\n    if (element instanceof StackFrame) {\n        return assignStackFrameContext(element, {});\n    }\n    else if (element instanceof Thread) {\n        return assignThreadContext(element, {});\n    }\n    else if (isDebugSession(element)) {\n        return assignSessionContext(element, {});\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getContextForContributedActions(element) {\n    if (element instanceof StackFrame) {\n        if (element.source.inMemory) {\n            return element.source.raw.path || element.source.reference || element.source.name;\n        }\n        return ( element.source.uri.toString());\n    }\n    if (element instanceof Thread) {\n        return element.threadId;\n    }\n    if (isDebugSession(element)) {\n        return element.getId();\n    }\n    return '';\n}\nfunction getSpecificSourceName(stackFrame) {\n    let callStack = stackFrame.thread.getStaleCallStack();\n    callStack = callStack.length > 0 ? callStack : stackFrame.thread.getCallStack();\n    const otherSources = ( callStack.map(sf => sf.source)).filter(s => s !== stackFrame.source);\n    let suffixLength = 0;\n    otherSources.forEach(s => {\n        if (s.name === stackFrame.source.name) {\n            suffixLength = Math.max(suffixLength, commonSuffixLength(stackFrame.source.uri.path, s.uri.path));\n        }\n    });\n    if (suffixLength === 0) {\n        return stackFrame.source.name;\n    }\n    const from = Math.max(0, stackFrame.source.uri.path.lastIndexOf(posix.sep, stackFrame.source.uri.path.length - suffixLength - 1));\n    return (from > 0 ? '...' : '') + stackFrame.source.uri.path.substring(from);\n}\nasync function expandTo(session, tree) {\n    if (session.parentSession) {\n        await expandTo(session.parentSession, tree);\n    }\n    await tree.expand(session);\n}\nlet CallStackView = class CallStackView extends ViewPane {\n    constructor(options, contextMenuService, debugService, keybindingService, instantiationService, viewDescriptorService, configurationService, contextKeyService, openerService, themeService, telemetryService, menuService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.options = options;\n        this.debugService = debugService;\n        this.menuService = menuService;\n        this.needsRefresh = false;\n        this.ignoreSelectionChangedEvent = false;\n        this.ignoreFocusStackFrameEvent = false;\n        this.autoExpandedSessions = ( new Set());\n        this.selectionNeedsUpdate = false;\n        this.onCallStackChangeScheduler = this._register(( new RunOnceScheduler(async () => {\n            const sessions = this.debugService.getModel().getSessions();\n            if (sessions.length === 0) {\n                this.autoExpandedSessions.clear();\n            }\n            const thread = sessions.length === 1 && sessions[0].getAllThreads().length === 1 ? sessions[0].getAllThreads()[0] : undefined;\n            const stoppedDetails = sessions.length === 1 ? sessions[0].getStoppedDetails() : undefined;\n            if (stoppedDetails && (thread || typeof stoppedDetails.threadId !== 'number')) {\n                this.stateMessageLabel.textContent = stoppedDescription(stoppedDetails);\n                this.stateMessageLabel.title = stoppedText(stoppedDetails);\n                this.stateMessageLabel.classList.toggle('exception', stoppedDetails.reason === 'exception');\n                this.stateMessage.hidden = false;\n            }\n            else if (sessions.length === 1 && sessions[0].state === 3 ) {\n                this.stateMessageLabel.textContent = ( localize({ key: 'running', comment: ['indicates state'] }, \"Running\"));\n                this.stateMessageLabel.title = sessions[0].getLabel();\n                this.stateMessageLabel.classList.remove('exception');\n                this.stateMessage.hidden = false;\n            }\n            else {\n                this.stateMessage.hidden = true;\n            }\n            this.updateActions();\n            this.needsRefresh = false;\n            this.dataSource.deemphasizedStackFramesToShow = [];\n            await this.tree.updateChildren();\n            try {\n                const toExpand = ( new Set());\n                sessions.forEach(s => {\n                    if (s.parentSession && !( this.autoExpandedSessions.has(s.parentSession))) {\n                        toExpand.add(s.parentSession);\n                    }\n                });\n                for (const session of toExpand) {\n                    await expandTo(session, this.tree);\n                    this.autoExpandedSessions.add(session);\n                }\n            }\n            catch (e) {\n            }\n            if (this.selectionNeedsUpdate) {\n                this.selectionNeedsUpdate = false;\n                await this.updateTreeSelection();\n            }\n        }, 50)));\n    }\n    renderHeaderTitle(container) {\n        super.renderHeaderTitle(container, this.options.title);\n        this.stateMessage = dom.append(container, $('span.call-stack-state-message'));\n        this.stateMessage.hidden = true;\n        this.stateMessageLabel = dom.append(this.stateMessage, $('span.label'));\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.element.classList.add('debug-pane');\n        container.classList.add('debug-call-stack');\n        const treeContainer = renderViewTree(container);\n        this.dataSource = ( new CallStackDataSource(this.debugService));\n        this.tree = this.instantiationService.createInstance(WorkbenchCompressibleAsyncDataTree, 'CallStackView', treeContainer, ( new CallStackDelegate()), ( new CallStackCompressionDelegate(this.debugService)), [\n            this.instantiationService.createInstance(SessionsRenderer),\n            this.instantiationService.createInstance(ThreadsRenderer),\n            this.instantiationService.createInstance(StackFramesRenderer),\n            ( new ErrorsRenderer()),\n            ( new LoadMoreRenderer()),\n            ( new ShowMoreRenderer())\n        ], this.dataSource, {\n            accessibilityProvider: ( new CallStackAccessibilityProvider()),\n            compressionEnabled: true,\n            autoExpandSingleChildren: true,\n            identityProvider: {\n                getId: (element) => {\n                    if (typeof element === 'string') {\n                        return element;\n                    }\n                    if (element instanceof Array) {\n                        return `showMore ${element[0].getId()}`;\n                    }\n                    return element.getId();\n                }\n            },\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: (e) => {\n                    if (isDebugSession(e)) {\n                        return e.getLabel();\n                    }\n                    if (e instanceof Thread) {\n                        return `${e.name} ${e.stateLabel}`;\n                    }\n                    if (e instanceof StackFrame || typeof e === 'string') {\n                        return e;\n                    }\n                    if (e instanceof ThreadAndSessionIds) {\n                        return LoadMoreRenderer.LABEL;\n                    }\n                    return ( localize('showMoreStackFrames2', \"Show More Stack Frames\"));\n                },\n                getCompressedNodeKeyboardNavigationLabel: (e) => {\n                    const firstItem = e[0];\n                    if (isDebugSession(firstItem)) {\n                        return firstItem.getLabel();\n                    }\n                    return '';\n                }\n            },\n            expandOnlyOnTwistieClick: true,\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        this.tree.setInput(this.debugService.getModel());\n        this._register(this.tree.onDidOpen(async (e) => {\n            if (this.ignoreSelectionChangedEvent) {\n                return;\n            }\n            const focusStackFrame = (stackFrame, thread, session, options = {}) => {\n                this.ignoreFocusStackFrameEvent = true;\n                try {\n                    this.debugService.focusStackFrame(stackFrame, thread, session, { ...options, ...{ explicit: true } });\n                }\n                finally {\n                    this.ignoreFocusStackFrameEvent = false;\n                }\n            };\n            const element = e.element;\n            if (element instanceof StackFrame) {\n                const opts = {\n                    preserveFocus: e.editorOptions.preserveFocus,\n                    sideBySide: e.sideBySide,\n                    pinned: e.editorOptions.pinned\n                };\n                focusStackFrame(element, element.thread, element.thread.session, opts);\n            }\n            if (element instanceof Thread) {\n                focusStackFrame(undefined, element, element.session);\n            }\n            if (isDebugSession(element)) {\n                focusStackFrame(undefined, undefined, element);\n            }\n            if (element instanceof ThreadAndSessionIds) {\n                const session = this.debugService.getModel().getSession(element.sessionId);\n                const thread = session && session.getThread(element.threadId);\n                if (thread) {\n                    const totalFrames = thread.stoppedDetails?.totalFrames;\n                    const remainingFramesCount = typeof totalFrames === 'number' ? (totalFrames - thread.getCallStack().length) : undefined;\n                    await thread.fetchCallStack(remainingFramesCount);\n                    await this.tree.updateChildren();\n                }\n            }\n            if (element instanceof Array) {\n                this.dataSource.deemphasizedStackFramesToShow.push(...element);\n                this.tree.updateChildren();\n            }\n        }));\n        this._register(this.debugService.getModel().onDidChangeCallStack(() => {\n            if (!this.isBodyVisible()) {\n                this.needsRefresh = true;\n                return;\n            }\n            if (!this.onCallStackChangeScheduler.isScheduled()) {\n                this.onCallStackChangeScheduler.schedule();\n            }\n        }));\n        const onFocusChange = Event.any(this.debugService.getViewModel().onDidFocusStackFrame, this.debugService.getViewModel().onDidFocusSession);\n        this._register(onFocusChange(async () => {\n            if (this.ignoreFocusStackFrameEvent) {\n                return;\n            }\n            if (!this.isBodyVisible()) {\n                this.needsRefresh = true;\n                return;\n            }\n            if (this.onCallStackChangeScheduler.isScheduled()) {\n                this.selectionNeedsUpdate = true;\n                return;\n            }\n            await this.updateTreeSelection();\n        }));\n        this._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n        if (this.debugService.state === 2 ) {\n            this.onCallStackChangeScheduler.schedule(0);\n        }\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible && this.needsRefresh) {\n                this.onCallStackChangeScheduler.schedule();\n            }\n        }));\n        this._register(this.debugService.onDidNewSession(s => {\n            const sessionListeners = [];\n            sessionListeners.push(s.onDidChangeName(() => {\n                if (this.tree.hasNode(s)) {\n                    this.tree.rerender(s);\n                }\n            }));\n            sessionListeners.push(s.onDidEndAdapter(() => dispose(sessionListeners)));\n            if (s.parentSession) {\n                this.autoExpandedSessions.delete(s.parentSession);\n            }\n        }));\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.tree.layout(height, width);\n    }\n    focus() {\n        this.tree.domFocus();\n    }\n    collapseAll() {\n        this.tree.collapseAll();\n    }\n    async updateTreeSelection() {\n        if (!this.tree || !this.tree.getInput()) {\n            return;\n        }\n        const updateSelectionAndReveal = (element) => {\n            this.ignoreSelectionChangedEvent = true;\n            try {\n                this.tree.setSelection([element]);\n                if (this.tree.getRelativeTop(element) === null) {\n                    this.tree.reveal(element, 0.5);\n                }\n                else {\n                    this.tree.reveal(element);\n                }\n            }\n            catch (e) { }\n            finally {\n                this.ignoreSelectionChangedEvent = false;\n            }\n        };\n        const thread = this.debugService.getViewModel().focusedThread;\n        const session = this.debugService.getViewModel().focusedSession;\n        const stackFrame = this.debugService.getViewModel().focusedStackFrame;\n        if (!thread) {\n            if (!session) {\n                this.tree.setSelection([]);\n            }\n            else {\n                updateSelectionAndReveal(session);\n            }\n        }\n        else {\n            try {\n                await expandTo(thread.session, this.tree);\n            }\n            catch (e) { }\n            try {\n                await this.tree.expand(thread);\n            }\n            catch (e) { }\n            const toReveal = stackFrame || session;\n            if (toReveal) {\n                updateSelectionAndReveal(toReveal);\n            }\n        }\n    }\n    onContextMenu(e) {\n        const element = e.element;\n        let overlay = [];\n        if (isDebugSession(element)) {\n            overlay = getSessionContextOverlay(element);\n        }\n        else if (element instanceof Thread) {\n            overlay = getThreadContextOverlay(element);\n        }\n        else if (element instanceof StackFrame) {\n            overlay = getStackFrameContextOverlay(element);\n        }\n        const primary = [];\n        const secondary = [];\n        const result = { primary, secondary };\n        const contextKeyService = this.contextKeyService.createOverlay(overlay);\n        const menu = this.menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService);\n        createAndFillInContextMenuActions(menu, { arg: getContextForContributedActions(element), shouldForwardArgs: true }, result, 'inline');\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => e.anchor,\n            getActions: () => result.secondary,\n            getActionsContext: () => getContext(element)\n        });\n    }\n};\nCallStackView = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IViewDescriptorService)),\n    ( __param(6, IConfigurationService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, IOpenerService)),\n    ( __param(9, IThemeService)),\n    ( __param(10, ITelemetryService)),\n    ( __param(11, IMenuService))\n], CallStackView));\nfunction getSessionContextOverlay(session) {\n    return [\n        [CONTEXT_CALLSTACK_ITEM_TYPE.key, 'session'],\n        [CONTEXT_CALLSTACK_SESSION_IS_ATTACH.key, isSessionAttach(session)],\n        [CONTEXT_CALLSTACK_ITEM_STOPPED.key, session.state === 2 ],\n        [CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD.key, session.getAllThreads().length === 1],\n    ];\n}\nlet SessionsRenderer = class SessionsRenderer {\n    static { this.ID = 'session'; }\n    constructor(instantiationService, contextKeyService, menuService) {\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.menuService = menuService;\n    }\n    get templateId() {\n        return SessionsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const session = dom.append(container, $('.session'));\n        dom.append(session, $(ThemeIcon.asCSSSelector(callstackViewSession)));\n        const name = dom.append(session, $('.name'));\n        const stateLabel = dom.append(session, $('span.state.label.monaco-count-badge.long'));\n        const label = ( new HighlightedLabel(name));\n        const templateDisposable = ( new DisposableStore());\n        const stopActionViewItemDisposables = templateDisposable.add(( new DisposableStore()));\n        const actionBar = templateDisposable.add(( new ActionBar(session, {\n            actionViewItemProvider: action => {\n                if ((action.id === STOP_ID || action.id === DISCONNECT_ID) && action instanceof MenuItemAction) {\n                    stopActionViewItemDisposables.clear();\n                    const item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action, stopActionViewItemDisposables, accessor));\n                    if (item) {\n                        return item;\n                    }\n                }\n                if (action instanceof MenuItemAction) {\n                    return this.instantiationService.createInstance(MenuEntryActionViewItem, action, undefined);\n                }\n                else if (action instanceof SubmenuItemAction) {\n                    return this.instantiationService.createInstance(SubmenuEntryActionViewItem, action, undefined);\n                }\n                return undefined;\n            }\n        })));\n        const elementDisposable = templateDisposable.add(( new DisposableStore()));\n        return { session, name, stateLabel, label, actionBar, elementDisposable, templateDisposable };\n    }\n    renderElement(element, _, data) {\n        this.doRenderElement(element.element, createMatches(element.filterData), data);\n    }\n    renderCompressedElements(node, _index, templateData) {\n        const lastElement = node.element.elements[node.element.elements.length - 1];\n        const matches = createMatches(node.filterData);\n        this.doRenderElement(lastElement, matches, templateData);\n    }\n    doRenderElement(session, matches, data) {\n        data.session.title = ( localize({ key: 'session', comment: ['Session is a noun'] }, \"Session\"));\n        data.label.set(session.getLabel(), matches);\n        const stoppedDetails = session.getStoppedDetails();\n        const thread = session.getAllThreads().find(t => t.stopped);\n        const contextKeyService = this.contextKeyService.createOverlay(getSessionContextOverlay(session));\n        const menu = data.elementDisposable.add(this.menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService));\n        const setupActionBar = () => {\n            data.actionBar.clear();\n            const primary = [];\n            const secondary = [];\n            const result = { primary, secondary };\n            createAndFillInActionBarActions(menu, { arg: getContextForContributedActions(session), shouldForwardArgs: true }, result, 'inline');\n            data.actionBar.push(primary, { icon: true, label: false });\n            data.actionBar.context = getContext(session);\n        };\n        data.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n        setupActionBar();\n        data.stateLabel.style.display = '';\n        if (stoppedDetails) {\n            data.stateLabel.textContent = stoppedDescription(stoppedDetails);\n            data.session.title = `${session.getLabel()}: ${stoppedText(stoppedDetails)}`;\n            data.stateLabel.classList.toggle('exception', stoppedDetails.reason === 'exception');\n        }\n        else if (thread && thread.stoppedDetails) {\n            data.stateLabel.textContent = stoppedDescription(thread.stoppedDetails);\n            data.session.title = `${session.getLabel()}: ${stoppedText(thread.stoppedDetails)}`;\n            data.stateLabel.classList.toggle('exception', thread.stoppedDetails.reason === 'exception');\n        }\n        else {\n            data.stateLabel.textContent = ( localize({ key: 'running', comment: ['indicates state'] }, \"Running\"));\n            data.stateLabel.classList.remove('exception');\n        }\n    }\n    disposeTemplate(templateData) {\n        templateData.templateDisposable.dispose();\n    }\n    disposeElement(_element, _, templateData) {\n        templateData.elementDisposable.clear();\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        templateData.elementDisposable.clear();\n    }\n};\nSessionsRenderer = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, IContextKeyService)),\n    ( __param(2, IMenuService))\n], SessionsRenderer));\nfunction getThreadContextOverlay(thread) {\n    return [\n        [CONTEXT_CALLSTACK_ITEM_TYPE.key, 'thread'],\n        [CONTEXT_CALLSTACK_ITEM_STOPPED.key, thread.stopped]\n    ];\n}\nlet ThreadsRenderer = class ThreadsRenderer {\n    static { this.ID = 'thread'; }\n    constructor(contextKeyService, menuService) {\n        this.contextKeyService = contextKeyService;\n        this.menuService = menuService;\n    }\n    get templateId() {\n        return ThreadsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const thread = dom.append(container, $('.thread'));\n        const name = dom.append(thread, $('.name'));\n        const stateLabel = dom.append(thread, $('span.state.label.monaco-count-badge.long'));\n        const label = ( new HighlightedLabel(name));\n        const templateDisposable = ( new DisposableStore());\n        const actionBar = templateDisposable.add(( new ActionBar(thread)));\n        const elementDisposable = templateDisposable.add(( new DisposableStore()));\n        return { thread, name, stateLabel, label, actionBar, elementDisposable, templateDisposable };\n    }\n    renderElement(element, _index, data) {\n        const thread = element.element;\n        data.thread.title = thread.name;\n        data.label.set(thread.name, createMatches(element.filterData));\n        data.stateLabel.textContent = thread.stateLabel;\n        data.stateLabel.classList.toggle('exception', thread.stoppedDetails?.reason === 'exception');\n        const contextKeyService = this.contextKeyService.createOverlay(getThreadContextOverlay(thread));\n        const menu = data.elementDisposable.add(this.menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService));\n        const setupActionBar = () => {\n            data.actionBar.clear();\n            const primary = [];\n            const secondary = [];\n            const result = { primary, secondary };\n            createAndFillInActionBarActions(menu, { arg: getContextForContributedActions(thread), shouldForwardArgs: true }, result, 'inline');\n            data.actionBar.push(primary, { icon: true, label: false });\n            data.actionBar.context = getContext(thread);\n        };\n        data.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n        setupActionBar();\n    }\n    renderCompressedElements(_node, _index, _templateData, _height) {\n        throw new Error('Method not implemented.');\n    }\n    disposeElement(_element, _index, templateData) {\n        templateData.elementDisposable.clear();\n    }\n    disposeTemplate(templateData) {\n        templateData.templateDisposable.dispose();\n    }\n};\nThreadsRenderer = ( __decorate([\n    ( __param(0, IContextKeyService)),\n    ( __param(1, IMenuService))\n], ThreadsRenderer));\nfunction getStackFrameContextOverlay(stackFrame) {\n    return [\n        [CONTEXT_CALLSTACK_ITEM_TYPE.key, 'stackFrame'],\n        [CONTEXT_STACK_FRAME_SUPPORTS_RESTART.key, stackFrame.canRestart]\n    ];\n}\nlet StackFramesRenderer = class StackFramesRenderer {\n    static { this.ID = 'stackFrame'; }\n    constructor(labelService, notificationService) {\n        this.labelService = labelService;\n        this.notificationService = notificationService;\n    }\n    get templateId() {\n        return StackFramesRenderer.ID;\n    }\n    renderTemplate(container) {\n        const stackFrame = dom.append(container, $('.stack-frame'));\n        const labelDiv = dom.append(stackFrame, $('span.label.expression'));\n        const file = dom.append(stackFrame, $('.file'));\n        const fileName = dom.append(file, $('span.file-name'));\n        const wrapper = dom.append(file, $('span.line-number-wrapper'));\n        const lineNumber = dom.append(wrapper, $('span.line-number.monaco-count-badge'));\n        const label = ( new HighlightedLabel(labelDiv));\n        const templateDisposable = ( new DisposableStore());\n        const actionBar = templateDisposable.add(( new ActionBar(stackFrame)));\n        return { file, fileName, label, lineNumber, stackFrame, actionBar, templateDisposable };\n    }\n    renderElement(element, index, data) {\n        const stackFrame = element.element;\n        data.stackFrame.classList.toggle('disabled', !stackFrame.source || !stackFrame.source.available || isDeemphasized(stackFrame));\n        data.stackFrame.classList.toggle('label', stackFrame.presentationHint === 'label');\n        data.stackFrame.classList.toggle('subtle', stackFrame.presentationHint === 'subtle');\n        const hasActions = !!stackFrame.thread.session.capabilities.supportsRestartFrame && stackFrame.presentationHint !== 'label' && stackFrame.presentationHint !== 'subtle' && stackFrame.canRestart;\n        data.stackFrame.classList.toggle('has-actions', hasActions);\n        data.file.title = stackFrame.source.inMemory ? stackFrame.source.uri.path : this.labelService.getUriLabel(stackFrame.source.uri);\n        if (stackFrame.source.raw.origin) {\n            data.file.title += `\\n${stackFrame.source.raw.origin}`;\n        }\n        data.label.set(stackFrame.name, createMatches(element.filterData), stackFrame.name);\n        data.fileName.textContent = getSpecificSourceName(stackFrame);\n        if (stackFrame.range.startLineNumber !== undefined) {\n            data.lineNumber.textContent = `${stackFrame.range.startLineNumber}`;\n            if (stackFrame.range.startColumn) {\n                data.lineNumber.textContent += `:${stackFrame.range.startColumn}`;\n            }\n            data.lineNumber.classList.remove('unavailable');\n        }\n        else {\n            data.lineNumber.classList.add('unavailable');\n        }\n        data.actionBar.clear();\n        if (hasActions) {\n            const action = ( new Action('debug.callStack.restartFrame', ( localize('restartFrame', \"Restart Frame\")), ThemeIcon.asClassName(debugRestartFrame), true, async () => {\n                try {\n                    await stackFrame.restart();\n                }\n                catch (e) {\n                    this.notificationService.error(e);\n                }\n            }));\n            data.actionBar.push(action, { icon: true, label: false });\n        }\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Method not implemented.');\n    }\n    disposeTemplate(templateData) {\n        templateData.actionBar.dispose();\n    }\n};\nStackFramesRenderer = ( __decorate([\n    ( __param(0, ILabelService)),\n    ( __param(1, INotificationService))\n], StackFramesRenderer));\nclass ErrorsRenderer {\n    static { this.ID = 'error'; }\n    get templateId() {\n        return ErrorsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const label = dom.append(container, $('.error'));\n        return { label };\n    }\n    renderElement(element, index, data) {\n        const error = element.element;\n        data.label.textContent = error;\n        data.label.title = error;\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Method not implemented.');\n    }\n    disposeTemplate(templateData) {\n    }\n}\nclass LoadMoreRenderer {\n    static { this.ID = 'loadMore'; }\n    static { this.LABEL = ( localize('loadAllStackFrames', \"Load More Stack Frames\")); }\n    constructor() { }\n    get templateId() {\n        return LoadMoreRenderer.ID;\n    }\n    renderTemplate(container) {\n        const label = dom.append(container, $('.load-all'));\n        label.style.color = asCssVariable(textLinkForeground);\n        return { label };\n    }\n    renderElement(element, index, data) {\n        data.label.textContent = LoadMoreRenderer.LABEL;\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Method not implemented.');\n    }\n    disposeTemplate(templateData) {\n    }\n}\nclass ShowMoreRenderer {\n    static { this.ID = 'showMore'; }\n    constructor() { }\n    get templateId() {\n        return ShowMoreRenderer.ID;\n    }\n    renderTemplate(container) {\n        const label = dom.append(container, $('.show-more'));\n        label.style.color = asCssVariable(textLinkForeground);\n        return { label };\n    }\n    renderElement(element, index, data) {\n        const stackFrames = element.element;\n        if (stackFrames.every(sf => !!(sf.source && sf.source.origin && sf.source.origin === stackFrames[0].source.origin))) {\n            data.label.textContent = ( localize(\n                'showMoreAndOrigin',\n                \"Show {0} More: {1}\",\n                stackFrames.length,\n                stackFrames[0].source.origin\n            ));\n        }\n        else {\n            data.label.textContent = ( localize('showMoreStackFrames', \"Show {0} More Stack Frames\", stackFrames.length));\n        }\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Method not implemented.');\n    }\n    disposeTemplate(templateData) {\n    }\n}\nclass CallStackDelegate {\n    getHeight(element) {\n        if (element instanceof StackFrame && element.presentationHint === 'label') {\n            return 16;\n        }\n        if (element instanceof ThreadAndSessionIds || element instanceof Array) {\n            return 16;\n        }\n        return 22;\n    }\n    getTemplateId(element) {\n        if (isDebugSession(element)) {\n            return SessionsRenderer.ID;\n        }\n        if (element instanceof Thread) {\n            return ThreadsRenderer.ID;\n        }\n        if (element instanceof StackFrame) {\n            return StackFramesRenderer.ID;\n        }\n        if (typeof element === 'string') {\n            return ErrorsRenderer.ID;\n        }\n        if (element instanceof ThreadAndSessionIds) {\n            return LoadMoreRenderer.ID;\n        }\n        return ShowMoreRenderer.ID;\n    }\n}\nfunction stoppedText(stoppedDetails) {\n    return stoppedDetails.text ?? stoppedDescription(stoppedDetails);\n}\nfunction stoppedDescription(stoppedDetails) {\n    return stoppedDetails.description ||\n        (stoppedDetails.reason ? ( localize(\n        { key: 'pausedOn', comment: ['indicates reason for program being paused'] },\n        \"Paused on {0}\",\n        stoppedDetails.reason\n    )) : ( localize('paused', \"Paused\")));\n}\nfunction isDebugModel(obj) {\n    return typeof obj.getSessions === 'function';\n}\nfunction isDebugSession(obj) {\n    return obj && typeof obj.getAllThreads === 'function';\n}\nfunction isDeemphasized(frame) {\n    return frame.source.presentationHint === 'deemphasize' || frame.presentationHint === 'deemphasize';\n}\nclass CallStackDataSource {\n    constructor(debugService) {\n        this.debugService = debugService;\n        this.deemphasizedStackFramesToShow = [];\n    }\n    hasChildren(element) {\n        if (isDebugSession(element)) {\n            const threads = element.getAllThreads();\n            return (threads.length > 1) || (threads.length === 1 && threads[0].stopped) || !!(this.debugService.getModel().getSessions().find(s => s.parentSession === element));\n        }\n        return isDebugModel(element) || (element instanceof Thread && element.stopped);\n    }\n    async getChildren(element) {\n        if (isDebugModel(element)) {\n            const sessions = element.getSessions();\n            if (sessions.length === 0) {\n                return Promise.resolve([]);\n            }\n            if (sessions.length > 1 || this.debugService.getViewModel().isMultiSessionView()) {\n                return Promise.resolve(sessions.filter(s => !s.parentSession));\n            }\n            const threads = sessions[0].getAllThreads();\n            return threads.length === 1 ? this.getThreadChildren(threads[0]) : Promise.resolve(threads);\n        }\n        else if (isDebugSession(element)) {\n            const childSessions = this.debugService.getModel().getSessions().filter(s => s.parentSession === element);\n            const threads = element.getAllThreads();\n            if (threads.length === 1) {\n                const children = await this.getThreadChildren(threads[0]);\n                return children.concat(childSessions);\n            }\n            return Promise.resolve(threads.concat(childSessions));\n        }\n        else {\n            return this.getThreadChildren(element);\n        }\n    }\n    getThreadChildren(thread) {\n        return this.getThreadCallstack(thread).then(children => {\n            const result = [];\n            children.forEach((child, index) => {\n                if (child instanceof StackFrame && child.source && isDeemphasized(child)) {\n                    if (this.deemphasizedStackFramesToShow.indexOf(child) === -1) {\n                        if (result.length) {\n                            const last = result[result.length - 1];\n                            if (last instanceof Array) {\n                                last.push(child);\n                                return;\n                            }\n                        }\n                        const nextChild = index < children.length - 1 ? children[index + 1] : undefined;\n                        if (nextChild instanceof StackFrame && nextChild.source && isDeemphasized(nextChild)) {\n                            result.push([child]);\n                            return;\n                        }\n                    }\n                }\n                result.push(child);\n            });\n            return result;\n        });\n    }\n    async getThreadCallstack(thread) {\n        let callStack = thread.getCallStack();\n        if (!callStack || !callStack.length) {\n            await thread.fetchCallStack();\n            callStack = thread.getCallStack();\n        }\n        if (callStack.length === 1 && thread.session.capabilities.supportsDelayedStackTraceLoading && thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > 1) {\n            callStack = callStack.concat(thread.getStaleCallStack().slice(1));\n        }\n        if (thread.stoppedDetails && thread.stoppedDetails.framesErrorMessage) {\n            callStack = callStack.concat([thread.stoppedDetails.framesErrorMessage]);\n        }\n        if (!thread.reachedEndOfCallStack && thread.stoppedDetails) {\n            callStack = callStack.concat([( new ThreadAndSessionIds(thread.session.getId(), thread.threadId))]);\n        }\n        return callStack;\n    }\n}\nclass CallStackAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( localize(\n            { comment: ['Debug is a noun in this context, not a verb.'], key: 'callStackAriaLabel' },\n            \"Debug Call Stack\"\n        ));\n    }\n    getWidgetRole() {\n        return 'treegrid';\n    }\n    getRole(_element) {\n        return 'row';\n    }\n    getAriaLabel(element) {\n        if (element instanceof Thread) {\n            return ( localize(\n                { key: 'threadAriaLabel', comment: ['Placeholders stand for the thread name and the thread state.For example \"Thread 1\" and \"Stopped'] },\n                \"Thread {0} {1}\",\n                element.name,\n                element.stateLabel\n            ));\n        }\n        if (element instanceof StackFrame) {\n            return ( localize(\n                'stackFrameAriaLabel',\n                \"Stack Frame {0}, line {1}, {2}\",\n                element.name,\n                element.range.startLineNumber,\n                getSpecificSourceName(element)\n            ));\n        }\n        if (isDebugSession(element)) {\n            const thread = element.getAllThreads().find(t => t.stopped);\n            const state = thread ? thread.stateLabel : ( localize({ key: 'running', comment: ['indicates state'] }, \"Running\"));\n            return ( localize(\n                { key: 'sessionLabel', comment: ['Placeholders stand for the session name and the session state. For example \"Launch Program\" and \"Running\"'] },\n                \"Session {0} {1}\",\n                element.getLabel(),\n                state\n            ));\n        }\n        if (typeof element === 'string') {\n            return element;\n        }\n        if (element instanceof Array) {\n            return ( localize('showMoreStackFrames', \"Show {0} More Stack Frames\", element.length));\n        }\n        return LoadMoreRenderer.LABEL;\n    }\n}\nclass CallStackCompressionDelegate {\n    constructor(debugService) {\n        this.debugService = debugService;\n    }\n    isIncompressible(stat) {\n        if (isDebugSession(stat)) {\n            if (stat.compact) {\n                return false;\n            }\n            const sessions = this.debugService.getModel().getSessions();\n            if (( sessions.some(s => s.parentSession === stat && s.compact))) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    }\n}\nregisterAction2(class Collapse extends ViewAction {\n    constructor() {\n        super({\n            id: 'callStack.collapse',\n            viewId: CALLSTACK_VIEW_ID,\n            title: ( localize('collapse', \"Collapse All\")),\n            f1: false,\n            icon: Codicon.collapseAll,\n            precondition: ( CONTEXT_DEBUG_STATE.isEqualTo(getStateLabel(2 ))),\n            menu: {\n                id: MenuId.ViewTitle,\n                order: 10,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', CALLSTACK_VIEW_ID))\n            }\n        });\n    }\n    runInView(_accessor, view) {\n        view.collapseAll();\n    }\n});\nfunction registerCallStackInlineMenuItem(id, title, icon, when, order, precondition) {\n    MenuRegistry.appendMenuItem(MenuId.DebugCallStackContext, {\n        group: 'inline',\n        order,\n        when,\n        command: { id, title, icon, precondition }\n    });\n}\nconst threadOrSessionWithOneThread = ( ContextKeyExpr.or(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD))));\nregisterCallStackInlineMenuItem(PAUSE_ID, PAUSE_LABEL, debugPause, ( ContextKeyExpr.and(threadOrSessionWithOneThread, ( CONTEXT_CALLSTACK_ITEM_STOPPED.toNegated()))), 10);\nregisterCallStackInlineMenuItem(CONTINUE_ID, CONTINUE_LABEL, debugContinue, ( ContextKeyExpr.and(threadOrSessionWithOneThread, CONTEXT_CALLSTACK_ITEM_STOPPED)), 10);\nregisterCallStackInlineMenuItem(STEP_OVER_ID, STEP_OVER_LABEL, debugStepOver, threadOrSessionWithOneThread, 20, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(STEP_INTO_ID, STEP_INTO_LABEL, debugStepInto, threadOrSessionWithOneThread, 30, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(STEP_OUT_ID, STEP_OUT_LABEL, debugStepOut, threadOrSessionWithOneThread, 40, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(RESTART_SESSION_ID, RESTART_LABEL, debugRestart, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), 50);\nregisterCallStackInlineMenuItem(STOP_ID, STOP_LABEL, debugStop, ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_SESSION_IS_ATTACH.toNegated()), ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')))), 60);\nregisterCallStackInlineMenuItem(DISCONNECT_ID, DISCONNECT_LABEL, debugDisconnect, ( ContextKeyExpr.and(CONTEXT_CALLSTACK_SESSION_IS_ATTACH, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')))), 60);\nexport { CallStackView, getContext, getContextForContributedActions, getSpecificSourceName };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { PickerQuickAccessProvider } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, SELECT_AND_START_ID } from './debugCommands.js';\nimport { REPL_VIEW_ID, IDebugService } from '../common/debug.js';\nlet DebugConsoleQuickAccess = class DebugConsoleQuickAccess extends PickerQuickAccessProvider {\n    constructor(_debugService, _viewsService, _commandService) {\n        super(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, { canAcceptInBackground: true });\n        this._debugService = _debugService;\n        this._viewsService = _viewsService;\n        this._commandService = _commandService;\n    }\n    _getPicks(filter, disposables, token) {\n        const debugConsolePicks = [];\n        this._debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl()).forEach((session, index) => {\n            const pick = this._createPick(session, index, filter);\n            if (pick) {\n                debugConsolePicks.push(pick);\n            }\n        });\n        if (debugConsolePicks.length > 0) {\n            debugConsolePicks.push({ type: 'separator' });\n        }\n        const createTerminalLabel = ( localize(\"workbench.action.debug.startDebug\", \"Start a New Debug Session\"));\n        debugConsolePicks.push({\n            label: `$(plus) ${createTerminalLabel}`,\n            ariaLabel: createTerminalLabel,\n            accept: () => this._commandService.executeCommand(SELECT_AND_START_ID)\n        });\n        return debugConsolePicks;\n    }\n    _createPick(session, sessionIndex, filter) {\n        const label = session.name;\n        const highlights = matchesFuzzy(filter, label, true);\n        if (highlights) {\n            return {\n                label,\n                highlights: { label: highlights },\n                accept: (keyMod, event) => {\n                    this._debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n                    if (!this._viewsService.isViewVisible(REPL_VIEW_ID)) {\n                        this._viewsService.openView(REPL_VIEW_ID, true);\n                    }\n                }\n            };\n        }\n        return undefined;\n    }\n};\nDebugConsoleQuickAccess = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, IViewsService)),\n    ( __param(2, ICommandService))\n], DebugConsoleQuickAccess));\nexport { DebugConsoleQuickAccess };\n","import { getDomNodePagePosition } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { KeyChord } from 'monaco-editor/esm/vs/base/common/keyCodes.js';\nimport { EditorAction2, EditorAction, registerEditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { MessageController } from 'monaco-editor/esm/vs/editor/contrib/message/browser/messageController.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { MenuId, Action2, registerAction2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { PanelFocusContext } from '../../../common/contextkeys.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { openBreakpointSource } from './breakpointsView.js';\nimport { CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_DEBUGGERS_AVAILABLE, IDebugService, REPL_VIEW_ID, WATCH_VIEW_ID, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, BREAKPOINT_EDITOR_CONTRIBUTION_ID, EDITOR_CONTRIBUTION_ID, CONTEXT_EXCEPTION_WIDGET_VISIBLE } from '../common/debug.js';\nimport { getEvaluatableExpressionAtPosition } from '../common/debugUtils.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nclass ToggleBreakpointAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.toggleBreakpoint',\n            label: ( nls.localize('toggleBreakpointAction', \"Debug: Toggle Breakpoint\")),\n            alias: 'Debug: Toggle Breakpoint',\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 67 ,\n                weight: 100\n            },\n            menuOpts: {\n                when: CONTEXT_DEBUGGERS_AVAILABLE,\n                title: ( nls.localize(\n                    { key: 'miToggleBreakpoint', comment: ['&& denotes a mnemonic'] },\n                    \"Toggle &&Breakpoint\"\n                )),\n                menuId: MenuId.MenubarDebugMenu,\n                group: '4_new_breakpoint',\n                order: 1\n            }\n        });\n    }\n    async run(accessor, editor) {\n        if (editor.hasModel()) {\n            const debugService = accessor.get(IDebugService);\n            const modelUri = editor.getModel().uri;\n            const canSet = debugService.canSetBreakpointsIn(editor.getModel());\n            const lineNumbers = [...( new Set(( editor.getSelections().map(s => s.getPosition().lineNumber))))];\n            await Promise.all(( lineNumbers.map(async (line) => {\n                const bps = debugService.getModel().getBreakpoints({ lineNumber: line, uri: modelUri });\n                if (bps.length) {\n                    await Promise.all(( bps.map(bp => debugService.removeBreakpoints(bp.getId()))));\n                }\n                else if (canSet) {\n                    await debugService.addBreakpoints(modelUri, [{ lineNumber: line }]);\n                }\n            })));\n        }\n    }\n}\nclass ConditionalBreakpointAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.conditionalBreakpoint',\n            label: ( nls.localize(\n                'conditionalBreakpointEditorAction',\n                \"Debug: Add Conditional Breakpoint...\"\n            )),\n            alias: 'Debug: Add Conditional Breakpoint...',\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            menuOpts: {\n                menuId: MenuId.MenubarNewBreakpointMenu,\n                title: ( nls.localize(\n                    { key: 'miConditionalBreakpoint', comment: ['&& denotes a mnemonic'] },\n                    \"&&Conditional Breakpoint...\"\n                )),\n                group: '1_breakpoints',\n                order: 1,\n                when: CONTEXT_DEBUGGERS_AVAILABLE\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const position = editor.getPosition();\n        if (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n            editor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(position.lineNumber, undefined, 0 );\n        }\n    }\n}\nclass LogPointAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.addLogPoint',\n            label: ( nls.localize('logPointEditorAction', \"Debug: Add Logpoint...\")),\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            alias: 'Debug: Add Logpoint...',\n            menuOpts: [\n                {\n                    menuId: MenuId.MenubarNewBreakpointMenu,\n                    title: ( nls.localize({ key: 'miLogPoint', comment: ['&& denotes a mnemonic'] }, \"&&Logpoint...\")),\n                    group: '1_breakpoints',\n                    order: 4,\n                    when: CONTEXT_DEBUGGERS_AVAILABLE,\n                }\n            ]\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const position = editor.getPosition();\n        if (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n            editor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(position.lineNumber, position.column, 2 );\n        }\n    }\n}\nclass EditBreakpointAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.editBreakpoint',\n            label: ( nls.localize('EditBreakpointEditorAction', \"Debug: Edit Breakpoint\")),\n            alias: 'Debug: Edit Existing Breakpoint',\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE,\n            menuOpts: {\n                menuId: MenuId.MenubarNewBreakpointMenu,\n                title: ( nls.localize(\n                    { key: 'miEditBreakpoint', comment: ['&& denotes a mnemonic'] },\n                    \"&&Edit Breakpoint\"\n                )),\n                group: '1_breakpoints',\n                order: 1,\n                when: CONTEXT_DEBUGGERS_AVAILABLE\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const position = editor.getPosition();\n        const debugModel = debugService.getModel();\n        if (!(editor.hasModel() && position)) {\n            return;\n        }\n        const lineBreakpoints = debugModel.getBreakpoints({ lineNumber: position.lineNumber });\n        if (lineBreakpoints.length === 0) {\n            return;\n        }\n        const breakpointDistances = ( lineBreakpoints.map(b => {\n            if (!b.column) {\n                return position.column;\n            }\n            return Math.abs(b.column - position.column);\n        }));\n        const closestBreakpointIndex = breakpointDistances.indexOf(Math.min(...breakpointDistances));\n        const closestBreakpoint = lineBreakpoints[closestBreakpointIndex];\n        editor.getContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(closestBreakpoint.lineNumber, closestBreakpoint.column);\n    }\n}\nclass OpenDisassemblyViewAction extends EditorAction2 {\n    static { this.ID = 'editor.debug.action.openDisassemblyView'; }\n    constructor() {\n        super({\n            id: OpenDisassemblyViewAction.ID,\n            title: {\n                value: ( nls.localize('openDisassemblyView', \"Open Disassembly View\")),\n                original: 'Open Disassembly View',\n                mnemonicTitle: ( nls.localize(\n                    { key: 'miDisassemblyView', comment: ['&& denotes a mnemonic'] },\n                    \"&&DisassemblyView\"\n                ))\n            },\n            precondition: CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE,\n            menu: [\n                {\n                    id: MenuId.EditorContext,\n                    group: 'debug',\n                    order: 5,\n                    when: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, ( PanelFocusContext.toNegated()), ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')), EditorContextKeys.editorTextFocus, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST))\n                },\n                {\n                    id: MenuId.DebugCallStackContext,\n                    group: 'z_commands',\n                    order: 50,\n                    when: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')), ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame')), CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED))\n                },\n                {\n                    id: MenuId.CommandPalette,\n                    when: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')), CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED))\n                }\n            ]\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        if (editor.hasModel()) {\n            const editorService = accessor.get(IEditorService);\n            editorService.openEditor(DisassemblyViewInput.instance, { pinned: true });\n        }\n    }\n}\nclass ToggleDisassemblyViewSourceCodeAction extends Action2 {\n    static { this.ID = 'debug.action.toggleDisassemblyViewSourceCode'; }\n    static { this.configID = 'debug.disassemblyView.showSourceCode'; }\n    constructor() {\n        super({\n            id: ToggleDisassemblyViewSourceCodeAction.ID,\n            title: {\n                value: ( nls.localize(\n                    'toggleDisassemblyViewSourceCode',\n                    \"Toggle Source Code in Disassembly View\"\n                )),\n                original: 'Toggle Source Code in Disassembly View',\n                mnemonicTitle: ( nls.localize(\n                    { key: 'mitogglesource', comment: ['&& denotes a mnemonic'] },\n                    \"&&ToggleSource\"\n                ))\n            },\n            f1: true,\n        });\n    }\n    run(accessor, editor, ...args) {\n        const configService = accessor.get(IConfigurationService);\n        if (configService) {\n            const value = configService.getValue('debug').disassemblyView.showSourceCode;\n            configService.updateValue(ToggleDisassemblyViewSourceCodeAction.configID, !value);\n        }\n    }\n}\nclass RunToCursorAction extends EditorAction {\n    static { this.ID = 'editor.debug.action.runToCursor'; }\n    static { this.LABEL = ( nls.localize('runToCursor', \"Run to Cursor\")); }\n    constructor() {\n        super({\n            id: RunToCursorAction.ID,\n            label: RunToCursorAction.LABEL,\n            alias: 'Debug: Run to Cursor',\n            precondition: ( ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, ( PanelFocusContext.toNegated()), EditorContextKeys.editorTextFocus)),\n            contextMenuOpts: {\n                group: 'debug',\n                order: 2,\n                when: CONTEXT_IN_DEBUG_MODE\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const position = editor.getPosition();\n        if (!(editor.hasModel() && position)) {\n            return;\n        }\n        const uri = editor.getModel().uri;\n        const debugService = accessor.get(IDebugService);\n        const viewModel = debugService.getViewModel();\n        const uriIdentityService = accessor.get(IUriIdentityService);\n        let column = undefined;\n        const focusedStackFrame = viewModel.focusedStackFrame;\n        if (focusedStackFrame && uriIdentityService.extUri.isEqual(focusedStackFrame.source.uri, uri) && focusedStackFrame.range.startLineNumber === position.lineNumber) {\n            column = position.column;\n        }\n        await debugService.runTo(uri, position.lineNumber, column);\n    }\n}\nclass SelectionToReplAction extends EditorAction {\n    static { this.ID = 'editor.debug.action.selectionToRepl'; }\n    static { this.LABEL = ( nls.localize('evaluateInDebugConsole', \"Evaluate in Debug Console\")); }\n    constructor() {\n        super({\n            id: SelectionToReplAction.ID,\n            label: SelectionToReplAction.LABEL,\n            alias: 'Debug: Evaluate in Console',\n            precondition: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus)),\n            contextMenuOpts: {\n                group: 'debug',\n                order: 0\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const viewsService = accessor.get(IViewsService);\n        const viewModel = debugService.getViewModel();\n        const session = viewModel.focusedSession;\n        if (!editor.hasModel() || !session) {\n            return;\n        }\n        const selection = editor.getSelection();\n        let text;\n        if (selection.isEmpty()) {\n            text = editor.getModel().getLineContent(selection.selectionStartLineNumber).trim();\n        }\n        else {\n            text = editor.getModel().getValueInRange(selection);\n        }\n        await session.addReplExpression(viewModel.focusedStackFrame, text);\n        await viewsService.openView(REPL_VIEW_ID, false);\n    }\n}\nclass SelectionToWatchExpressionsAction extends EditorAction {\n    static { this.ID = 'editor.debug.action.selectionToWatch'; }\n    static { this.LABEL = ( nls.localize('addToWatch', \"Add to Watch\")); }\n    constructor() {\n        super({\n            id: SelectionToWatchExpressionsAction.ID,\n            label: SelectionToWatchExpressionsAction.LABEL,\n            alias: 'Debug: Add to Watch',\n            precondition: ( ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus)),\n            contextMenuOpts: {\n                group: 'debug',\n                order: 1\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const viewsService = accessor.get(IViewsService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        if (!editor.hasModel()) {\n            return;\n        }\n        let expression = undefined;\n        const model = editor.getModel();\n        const selection = editor.getSelection();\n        if (!selection.isEmpty()) {\n            expression = model.getValueInRange(selection);\n        }\n        else {\n            const position = editor.getPosition();\n            const evaluatableExpression = await getEvaluatableExpressionAtPosition(languageFeaturesService, model, position);\n            if (!evaluatableExpression) {\n                return;\n            }\n            expression = evaluatableExpression.matchingExpression;\n        }\n        if (!expression) {\n            return;\n        }\n        await viewsService.openView(WATCH_VIEW_ID);\n        debugService.addWatchExpression(expression);\n    }\n}\nclass ShowDebugHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.showDebugHover',\n            label: ( nls.localize('showDebugHover', \"Debug: Show Hover\")),\n            alias: 'Debug: Show Hover',\n            precondition: CONTEXT_IN_DEBUG_MODE,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048  | 41 , 2048  | 39 ),\n                weight: 100\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const position = editor.getPosition();\n        if (!position || !editor.hasModel()) {\n            return;\n        }\n        return editor.getContribution(EDITOR_CONTRIBUTION_ID)?.showHover(position, true);\n    }\n}\nconst NO_TARGETS_MESSAGE = ( nls.localize(\n    'editor.debug.action.stepIntoTargets.notAvailable',\n    \"Step targets are not available here\"\n));\nclass StepIntoTargetsAction extends EditorAction {\n    static { this.ID = 'editor.debug.action.stepIntoTargets'; }\n    static { this.LABEL = ( nls.localize(\n        { key: 'stepIntoTargets', comment: ['Step Into Targets lets the user step into an exact function he or she is interested in.'] },\n        \"Step Into Target\"\n    )); }\n    constructor() {\n        super({\n            id: StepIntoTargetsAction.ID,\n            label: StepIntoTargetsAction.LABEL,\n            alias: 'Debug: Step Into Target',\n            precondition: ( ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')), EditorContextKeys.editorTextFocus)),\n            contextMenuOpts: {\n                group: 'debug',\n                order: 1.5\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const uriIdentityService = accessor.get(IUriIdentityService);\n        const session = debugService.getViewModel().focusedSession;\n        const frame = debugService.getViewModel().focusedStackFrame;\n        const selection = editor.getSelection();\n        const targetPosition = selection?.getPosition() || (frame && { lineNumber: frame.range.startLineNumber, column: frame.range.startColumn });\n        if (!session || !frame || !editor.hasModel() || !uriIdentityService.extUri.isEqual(editor.getModel().uri, frame.source.uri)) {\n            if (targetPosition) {\n                MessageController.get(editor)?.showMessage(NO_TARGETS_MESSAGE, targetPosition);\n            }\n            return;\n        }\n        const targets = await session.stepInTargets(frame.frameId);\n        if (!targets?.length) {\n            MessageController.get(editor)?.showMessage(NO_TARGETS_MESSAGE, targetPosition);\n            return;\n        }\n        if (selection) {\n            const positionalTargets = [];\n            for (const target of targets) {\n                if (target.line) {\n                    positionalTargets.push({\n                        start: ( new Position(target.line, target.column || 1)),\n                        end: target.endLine ? ( new Position(target.endLine, target.endColumn || 1)) : undefined,\n                        target\n                    });\n                }\n            }\n            positionalTargets.sort((a, b) => b.start.lineNumber - a.start.lineNumber || b.start.column - a.start.column);\n            const needle = selection.getPosition();\n            const best = positionalTargets.find(t => t.end && needle.isBefore(t.end) && t.start.isBeforeOrEqual(needle)) || positionalTargets.find(t => t.end === undefined && t.start.isBeforeOrEqual(needle));\n            if (best) {\n                session.stepIn(frame.thread.threadId, best.target.id);\n                return;\n            }\n        }\n        editor.revealLineInCenterIfOutsideViewport(frame.range.startLineNumber);\n        const cursorCoords = editor.getScrolledVisiblePosition(targetPosition);\n        const editorCoords = getDomNodePagePosition(editor.getDomNode());\n        const x = editorCoords.left + cursorCoords.left;\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n        contextMenuService.showContextMenu({\n            getAnchor: () => ({ x, y }),\n            getActions: () => {\n                return ( targets.map(t => ( new Action(\n                    `stepIntoTarget:${t.id}`,\n                    t.label,\n                    undefined,\n                    true,\n                    () => session.stepIn(frame.thread.threadId, t.id)\n                ))));\n            }\n        });\n    }\n}\nclass GoToBreakpointAction extends EditorAction {\n    constructor(isNext, opts) {\n        super(opts);\n        this.isNext = isNext;\n    }\n    async run(accessor, editor) {\n        const debugService = accessor.get(IDebugService);\n        const editorService = accessor.get(IEditorService);\n        const uriIdentityService = accessor.get(IUriIdentityService);\n        if (editor.hasModel()) {\n            const currentUri = editor.getModel().uri;\n            const currentLine = editor.getPosition().lineNumber;\n            const allEnabledBreakpoints = debugService.getModel().getBreakpoints({ enabledOnly: true });\n            let moveBreakpoint = this.isNext\n                ? allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber > currentLine).shift()\n                : allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber < currentLine).pop();\n            if (!moveBreakpoint) {\n                moveBreakpoint =\n                    this.isNext\n                        ? allEnabledBreakpoints.filter(bp => ( bp.uri.toString()) > ( currentUri.toString())).shift()\n                        : allEnabledBreakpoints.filter(bp => ( bp.uri.toString()) < ( currentUri.toString())).pop();\n            }\n            if (!moveBreakpoint && allEnabledBreakpoints.length) {\n                moveBreakpoint = this.isNext ? allEnabledBreakpoints[0] : allEnabledBreakpoints[allEnabledBreakpoints.length - 1];\n            }\n            if (moveBreakpoint) {\n                return openBreakpointSource(moveBreakpoint, false, true, false, debugService, editorService);\n            }\n        }\n    }\n}\nclass GoToNextBreakpointAction extends GoToBreakpointAction {\n    constructor() {\n        super(true, {\n            id: 'editor.debug.action.goToNextBreakpoint',\n            label: ( nls.localize('goToNextBreakpoint', \"Debug: Go to Next Breakpoint\")),\n            alias: 'Debug: Go to Next Breakpoint',\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE\n        });\n    }\n}\nclass GoToPreviousBreakpointAction extends GoToBreakpointAction {\n    constructor() {\n        super(false, {\n            id: 'editor.debug.action.goToPreviousBreakpoint',\n            label: ( nls.localize('goToPreviousBreakpoint', \"Debug: Go to Previous Breakpoint\")),\n            alias: 'Debug: Go to Previous Breakpoint',\n            precondition: CONTEXT_DEBUGGERS_AVAILABLE\n        });\n    }\n}\nclass CloseExceptionWidgetAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.debug.action.closeExceptionWidget',\n            label: ( nls.localize('closeExceptionWidget', \"Close Exception Widget\")),\n            alias: 'Close Exception Widget',\n            precondition: CONTEXT_EXCEPTION_WIDGET_VISIBLE,\n            kbOpts: {\n                primary: 9 ,\n                weight: 100\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        const contribution = editor.getContribution(EDITOR_CONTRIBUTION_ID);\n        contribution?.closeExceptionWidget();\n    }\n}\nregisterAction2(OpenDisassemblyViewAction);\nregisterAction2(ToggleDisassemblyViewSourceCodeAction);\nregisterEditorAction(ToggleBreakpointAction);\nregisterEditorAction(ConditionalBreakpointAction);\nregisterEditorAction(LogPointAction);\nregisterEditorAction(EditBreakpointAction);\nregisterEditorAction(RunToCursorAction);\nregisterEditorAction(StepIntoTargetsAction);\nregisterEditorAction(SelectionToReplAction);\nregisterEditorAction(SelectionToWatchExpressionsAction);\nregisterEditorAction(ShowDebugHoverAction);\nregisterEditorAction(GoToNextBreakpointAction);\nregisterEditorAction(GoToPreviousBreakpointAction);\nregisterEditorAction(CloseExceptionWidgetAction);\nexport { RunToCursorAction, SelectionToReplAction, SelectionToWatchExpressionsAction };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ITunnelService } from '../../../../platform/tunnel/common/tunnel.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nconst CONTROL_CODES = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\nconst WEB_LINK_REGEX = ( new RegExp(\n    '(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' + CONTROL_CODES + '\"]{2,}[^\\\\s' + CONTROL_CODES + '\"\\')}\\\\],:;.!?]',\n    'ug'\n));\nconst WIN_ABSOLUTE_PATH = /(?:[a-zA-Z]:(?:(?:\\\\|\\/)[\\w\\.-]*)+)/;\nconst WIN_RELATIVE_PATH = /(?:(?:\\~|\\.)(?:(?:\\\\|\\/)[\\w\\.-]*)+)/;\nconst WIN_PATH = ( new RegExp(`(${WIN_ABSOLUTE_PATH.source}|${WIN_RELATIVE_PATH.source})`));\nconst POSIX_PATH = /((?:\\~|\\.)?(?:\\/[\\w\\.-]*)+)/;\nconst LINE_COLUMN = /(?:\\:([\\d]+))?(?:\\:([\\d]+))?/;\nconst PATH_LINK_REGEX = ( new RegExp(\n    `${platform.isWindows ? WIN_PATH.source : POSIX_PATH.source}${LINE_COLUMN.source}`,\n    'g'\n));\nconst LINE_COLUMN_REGEX = /:([\\d]+)(?::([\\d]+))?$/;\nconst MAX_LENGTH = 2000;\nlet LinkDetector = class LinkDetector {\n    constructor(editorService, fileService, openerService, pathService, tunnelService, environmentService, configurationService) {\n        this.editorService = editorService;\n        this.fileService = fileService;\n        this.openerService = openerService;\n        this.pathService = pathService;\n        this.tunnelService = tunnelService;\n        this.environmentService = environmentService;\n        this.configurationService = configurationService;\n    }\n    linkify(text, splitLines, workspaceFolder, includeFulltext) {\n        if (splitLines) {\n            const lines = text.split('\\n');\n            for (let i = 0; i < lines.length - 1; i++) {\n                lines[i] = lines[i] + '\\n';\n            }\n            if (!lines[lines.length - 1]) {\n                lines.pop();\n            }\n            const elements = ( lines.map(line => this.linkify(line, false, workspaceFolder, includeFulltext)));\n            if (elements.length === 1) {\n                return elements[0];\n            }\n            const container = document.createElement('span');\n            elements.forEach(e => container.appendChild(e));\n            return container;\n        }\n        const container = document.createElement('span');\n        for (const part of this.detectLinks(text)) {\n            try {\n                switch (part.kind) {\n                    case 'text':\n                        container.appendChild(document.createTextNode(part.value));\n                        break;\n                    case 'web':\n                        container.appendChild(this.createWebLink(includeFulltext ? text : undefined, part.value));\n                        break;\n                    case 'path': {\n                        const path = part.captures[0];\n                        const lineNumber = part.captures[1] ? Number(part.captures[1]) : 0;\n                        const columnNumber = part.captures[2] ? Number(part.captures[2]) : 0;\n                        container.appendChild(this.createPathLink(includeFulltext ? text : undefined, part.value, path, lineNumber, columnNumber, workspaceFolder));\n                        break;\n                    }\n                }\n            }\n            catch (e) {\n                container.appendChild(document.createTextNode(part.value));\n            }\n        }\n        return container;\n    }\n    createWebLink(fulltext, url) {\n        const link = this.createLink(url);\n        let uri = ( URI.parse(url));\n        const lineCol = LINE_COLUMN_REGEX.exec(uri.path);\n        if (lineCol) {\n            uri = uri.with({\n                path: uri.path.slice(0, lineCol.index),\n                fragment: `L${lineCol[0].slice(1)}`\n            });\n        }\n        this.decorateLink(link, uri, fulltext, async () => {\n            if (uri.scheme === Schemas.file) {\n                const fsPath = uri.fsPath;\n                const path$1 = await this.pathService.path;\n                const fileUrl = path.normalize(((path$1.sep === path.posix.sep) && platform.isWindows) ? fsPath.replace(/\\\\/g, path.posix.sep) : fsPath);\n                const fileUri = ( URI.parse(fileUrl));\n                const exists = await this.fileService.exists(fileUri);\n                if (!exists) {\n                    return;\n                }\n                await this.editorService.openEditor({\n                    resource: fileUri,\n                    options: {\n                        pinned: true,\n                        selection: lineCol ? { startLineNumber: +lineCol[1], startColumn: +lineCol[2] } : undefined,\n                    },\n                });\n                return;\n            }\n            this.openerService.open(url, { allowTunneling: (!!this.environmentService.remoteAuthority && this.configurationService.getValue('remote.forwardOnOpen')) });\n        });\n        return link;\n    }\n    createPathLink(fulltext, text, path$1, lineNumber, columnNumber, workspaceFolder) {\n        if (path$1[0] === '/' && path$1[1] === '/') {\n            return document.createTextNode(text);\n        }\n        const options = { selection: { startLineNumber: lineNumber, startColumn: columnNumber } };\n        if (path$1[0] === '.') {\n            if (!workspaceFolder) {\n                return document.createTextNode(text);\n            }\n            const uri = workspaceFolder.toResource(path$1);\n            const link = this.createLink(text);\n            this.decorateLink(link, uri, fulltext, (preserveFocus) => this.editorService.openEditor({ resource: uri, options: { ...options, preserveFocus } }));\n            return link;\n        }\n        if (path$1[0] === '~') {\n            const userHome = this.pathService.resolvedUserHome;\n            if (userHome) {\n                path$1 = path.join(userHome.fsPath, path$1.substring(1));\n            }\n        }\n        const link = this.createLink(text);\n        link.tabIndex = 0;\n        const uri = URI.file(path.normalize(path$1));\n        this.fileService.stat(uri).then(stat => {\n            if (stat.isDirectory) {\n                return;\n            }\n            this.decorateLink(link, uri, fulltext, (preserveFocus) => this.editorService.openEditor({ resource: uri, options: { ...options, preserveFocus } }));\n        }).catch(() => {\n        });\n        return link;\n    }\n    createLink(text) {\n        const link = document.createElement('a');\n        link.textContent = text;\n        return link;\n    }\n    decorateLink(link, uri, fulltext, onClick) {\n        link.classList.add('link');\n        const followLink = this.tunnelService.canTunnel(uri) ? ( localize('followForwardedLink', \"follow link using forwarded port\")) : ( localize('followLink', \"follow link\"));\n        link.title = fulltext\n            ? (platform.isMacintosh ? ( localize('fileLinkWithPathMac', \"Cmd + click to {0}\\n{1}\", followLink, fulltext)) : ( localize('fileLinkWithPath', \"Ctrl + click to {0}\\n{1}\", followLink, fulltext)))\n            : (platform.isMacintosh ? ( localize('fileLinkMac', \"Cmd + click to {0}\", followLink)) : ( localize('fileLink', \"Ctrl + click to {0}\", followLink)));\n        link.onmousemove = (event) => { link.classList.toggle('pointer', platform.isMacintosh ? event.metaKey : event.ctrlKey); };\n        link.onmouseleave = () => link.classList.remove('pointer');\n        link.onclick = (event) => {\n            const selection = window.getSelection();\n            if (!selection || selection.type === 'Range') {\n                return;\n            }\n            if (!(platform.isMacintosh ? event.metaKey : event.ctrlKey)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            onClick(false);\n        };\n        link.onkeydown = e => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.keyCode === 3  || event.keyCode === 10 ) {\n                event.preventDefault();\n                event.stopPropagation();\n                onClick(event.keyCode === 10 );\n            }\n        };\n    }\n    detectLinks(text) {\n        if (text.length > MAX_LENGTH) {\n            return [{ kind: 'text', value: text, captures: [] }];\n        }\n        const regexes = [WEB_LINK_REGEX, PATH_LINK_REGEX];\n        const kinds = ['web', 'path'];\n        const result = [];\n        const splitOne = (text, regexIndex) => {\n            if (regexIndex >= regexes.length) {\n                result.push({ value: text, kind: 'text', captures: [] });\n                return;\n            }\n            const regex = regexes[regexIndex];\n            let currentIndex = 0;\n            let match;\n            regex.lastIndex = 0;\n            while ((match = regex.exec(text)) !== null) {\n                const stringBeforeMatch = text.substring(currentIndex, match.index);\n                if (stringBeforeMatch) {\n                    splitOne(stringBeforeMatch, regexIndex + 1);\n                }\n                const value = match[0];\n                result.push({\n                    value: value,\n                    kind: kinds[regexIndex],\n                    captures: match.slice(1)\n                });\n                currentIndex = match.index + value.length;\n            }\n            const stringAfterMatches = text.substring(currentIndex);\n            if (stringAfterMatches) {\n                splitOne(stringAfterMatches, regexIndex + 1);\n            }\n        };\n        splitOne(text, 0);\n        return result;\n    }\n};\nLinkDetector = ( __decorate([\n    ( __param(0, IEditorService)),\n    ( __param(1, IFileService)),\n    ( __param(2, IOpenerService)),\n    ( __param(3, IPathService)),\n    ( __param(4, ITunnelService)),\n    ( __param(5, IWorkbenchEnvironmentService)),\n    ( __param(6, IConfigurationService))\n], LinkDetector));\nexport { LinkDetector };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { HighlightedLabel } from 'monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { timeout, RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { withUndefinedAsNull } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createAndFillInContextMenuActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuId, registerAction2, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { CommandsRegistry, ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { WorkbenchAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { INotificationService, Severity } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { AbstractExpressionsRenderer, renderVariable, renderViewTree } from './baseDebugView.js';\nimport { LinkDetector } from './linkDetector.js';\nimport { IDebugService, VARIABLES_VIEW_ID, CONTEXT_VARIABLES_FOCUSED, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED } from '../common/debug.js';\nimport { getUriForDebugMemory, Variable, Expression, ErrorScope, Scope, StackFrame } from '../common/debugModel.js';\nimport { IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nconst $ = dom.$;\nlet forgetScopes = true;\nlet variableInternalContext;\nlet dataBreakpointInfoResponse;\nlet VariablesView = class VariablesView extends ViewPane {\n    constructor(options, contextMenuService, debugService, keybindingService, configurationService, instantiationService, viewDescriptorService, contextKeyService, openerService, themeService, telemetryService, menuService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.debugService = debugService;\n        this.menuService = menuService;\n        this.needsRefresh = false;\n        this.savedViewState = ( new Map());\n        this.autoExpandedScopes = ( new Set());\n        this.updateTreeScheduler = ( new RunOnceScheduler(async () => {\n            const stackFrame = this.debugService.getViewModel().focusedStackFrame;\n            this.needsRefresh = false;\n            const input = this.tree.getInput();\n            if (input) {\n                this.savedViewState.set(input.getId(), this.tree.getViewState());\n            }\n            if (!stackFrame) {\n                await this.tree.setInput(null);\n                return;\n            }\n            const viewState = this.savedViewState.get(stackFrame.getId());\n            await this.tree.setInput(stackFrame, viewState);\n            const scopes = await stackFrame.getScopes();\n            const toExpand = scopes.find(s => !s.expensive);\n            if (toExpand && this.tree.hasNode(toExpand)) {\n                this.autoExpandedScopes.add(toExpand.getId());\n                await this.tree.expand(toExpand);\n            }\n        }, 400));\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.element.classList.add('debug-pane');\n        container.classList.add('debug-variables');\n        const treeContainer = renderViewTree(container);\n        const linkeDetector = this.instantiationService.createInstance(LinkDetector);\n        this.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'VariablesView', treeContainer, ( new VariablesDelegate()), [this.instantiationService.createInstance(VariablesRenderer, linkeDetector), ( new ScopesRenderer()), ( new ScopeErrorRenderer())], ( new VariablesDataSource()), {\n            accessibilityProvider: ( new VariablesAccessibilityProvider()),\n            identityProvider: { getId: (element) => element.getId() },\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e) => e.name },\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        this.tree.setInput(withUndefinedAsNull(this.debugService.getViewModel().focusedStackFrame));\n        CONTEXT_VARIABLES_FOCUSED.bindTo(this.tree.contextKeyService);\n        this._register(this.debugService.getViewModel().onDidFocusStackFrame(sf => {\n            if (!this.isBodyVisible()) {\n                this.needsRefresh = true;\n                return;\n            }\n            const timeout = sf.explicit ? 0 : undefined;\n            this.updateTreeScheduler.schedule(timeout);\n        }));\n        this._register(this.debugService.getViewModel().onWillUpdateViews(() => {\n            const stackFrame = this.debugService.getViewModel().focusedStackFrame;\n            if (stackFrame && forgetScopes) {\n                stackFrame.forgetScopes();\n            }\n            forgetScopes = true;\n            this.tree.updateChildren();\n        }));\n        this._register(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n        this._register(this.tree.onContextMenu(async (e) => await this.onContextMenu(e)));\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible && this.needsRefresh) {\n                this.updateTreeScheduler.schedule();\n            }\n        }));\n        let horizontalScrolling;\n        this._register(this.debugService.getViewModel().onDidSelectExpression(e => {\n            const variable = e?.expression;\n            if (variable instanceof Variable && !e?.settingWatch) {\n                horizontalScrolling = this.tree.options.horizontalScrolling;\n                if (horizontalScrolling) {\n                    this.tree.updateOptions({ horizontalScrolling: false });\n                }\n                this.tree.rerender(variable);\n            }\n            else if (!e && horizontalScrolling !== undefined) {\n                this.tree.updateOptions({ horizontalScrolling: horizontalScrolling });\n                horizontalScrolling = undefined;\n            }\n        }));\n        this._register(this.debugService.getViewModel().onDidEvaluateLazyExpression(async (e) => {\n            if (e instanceof Variable && this.tree.hasNode(e)) {\n                await this.tree.updateChildren(e, false, true);\n                await this.tree.expand(e);\n            }\n        }));\n        this._register(this.debugService.onDidEndSession(() => {\n            this.savedViewState.clear();\n            this.autoExpandedScopes.clear();\n        }));\n    }\n    layoutBody(width, height) {\n        super.layoutBody(height, width);\n        this.tree.layout(width, height);\n    }\n    focus() {\n        this.tree.domFocus();\n    }\n    collapseAll() {\n        this.tree.collapseAll();\n    }\n    onMouseDblClick(e) {\n        const session = this.debugService.getViewModel().focusedSession;\n        if (session && e.element instanceof Variable && session.capabilities.supportsSetVariable && !e.element.presentationHint?.attributes?.includes('readOnly') && !e.element.presentationHint?.lazy) {\n            this.debugService.getViewModel().setSelectedExpression(e.element, false);\n        }\n    }\n    async onContextMenu(e) {\n        const variable = e.element;\n        if (!(variable instanceof Variable) || !variable.value) {\n            return;\n        }\n        const toDispose = ( new DisposableStore());\n        try {\n            const contextKeyService = await getContextForVariableMenuWithDataAccess(this.contextKeyService, variable);\n            const menu = toDispose.add(this.menuService.createMenu(MenuId.DebugVariablesContext, contextKeyService));\n            const context = getVariablesContext(variable);\n            const secondary = [];\n            createAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary: [], secondary }, 'inline');\n            this.contextMenuService.showContextMenu({\n                getAnchor: () => e.anchor,\n                getActions: () => secondary\n            });\n        }\n        finally {\n            toDispose.dispose();\n        }\n    }\n};\nVariablesView = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, IViewDescriptorService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, IOpenerService)),\n    ( __param(9, IThemeService)),\n    ( __param(10, ITelemetryService)),\n    ( __param(11, IMenuService))\n], VariablesView));\nconst getVariablesContext = (variable) => ({\n    sessionId: variable.getSession()?.getId(),\n    container: variable.parent instanceof Expression\n        ? { expression: variable.parent.name }\n        : variable.parent.toDebugProtocolObject(),\n    variable: variable.toDebugProtocolObject()\n});\nasync function getContextForVariableMenuWithDataAccess(parentContext, variable) {\n    const session = variable.getSession();\n    if (!session || !session.capabilities.supportsDataBreakpoints) {\n        return getContextForVariableMenu(parentContext, variable);\n    }\n    const contextKeys = [];\n    dataBreakpointInfoResponse = await session.dataBreakpointInfo(variable.name, variable.parent.reference);\n    const dataBreakpointId = dataBreakpointInfoResponse?.dataId;\n    const dataBreakpointAccessTypes = dataBreakpointInfoResponse?.accessTypes;\n    if (!dataBreakpointAccessTypes) {\n        contextKeys.push([CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED.key, !!dataBreakpointId]);\n    }\n    else {\n        for (const accessType of dataBreakpointAccessTypes) {\n            switch (accessType) {\n                case 'read':\n                    contextKeys.push([CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED.key, !!dataBreakpointId]);\n                    break;\n                case 'write':\n                    contextKeys.push([CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED.key, !!dataBreakpointId]);\n                    break;\n                case 'readWrite':\n                    contextKeys.push([CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED.key, !!dataBreakpointId]);\n                    break;\n            }\n        }\n    }\n    return getContextForVariableMenu(parentContext, variable, contextKeys);\n}\nfunction getContextForVariableMenu(parentContext, variable, additionalContext = []) {\n    const session = variable.getSession();\n    const contextKeys = [\n        [CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT.key, variable.variableMenuContext || ''],\n        [CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT.key, !!variable.evaluateName],\n        [CONTEXT_CAN_VIEW_MEMORY.key, !!session?.capabilities.supportsReadMemoryRequest && variable.memoryReference !== undefined],\n        [CONTEXT_VARIABLE_IS_READONLY.key, !!variable.presentationHint?.attributes?.includes('readOnly') || variable.presentationHint?.lazy],\n        ...additionalContext,\n    ];\n    variableInternalContext = variable;\n    return parentContext.createOverlay(contextKeys);\n}\nfunction isStackFrame(obj) {\n    return obj instanceof StackFrame;\n}\nclass VariablesDataSource {\n    hasChildren(element) {\n        if (!element) {\n            return false;\n        }\n        if (isStackFrame(element)) {\n            return true;\n        }\n        return element.hasChildren;\n    }\n    getChildren(element) {\n        if (isStackFrame(element)) {\n            return element.getScopes();\n        }\n        return element.getChildren();\n    }\n}\nclass VariablesDelegate {\n    getHeight(element) {\n        return 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof ErrorScope) {\n            return ScopeErrorRenderer.ID;\n        }\n        if (element instanceof Scope) {\n            return ScopesRenderer.ID;\n        }\n        return VariablesRenderer.ID;\n    }\n}\nclass ScopesRenderer {\n    static { this.ID = 'scope'; }\n    get templateId() {\n        return ScopesRenderer.ID;\n    }\n    renderTemplate(container) {\n        const name = dom.append(container, $('.scope'));\n        const label = ( new HighlightedLabel(name));\n        return { name, label };\n    }\n    renderElement(element, index, templateData) {\n        templateData.label.set(element.element.name, createMatches(element.filterData));\n    }\n    disposeTemplate(templateData) {\n    }\n}\nclass ScopeErrorRenderer {\n    static { this.ID = 'scopeError'; }\n    get templateId() {\n        return ScopeErrorRenderer.ID;\n    }\n    renderTemplate(container) {\n        const wrapper = dom.append(container, $('.scope'));\n        const error = dom.append(wrapper, $('.error'));\n        return { error };\n    }\n    renderElement(element, index, templateData) {\n        templateData.error.innerText = element.element.name;\n    }\n    disposeTemplate() {\n    }\n}\nlet VariablesRenderer = class VariablesRenderer extends AbstractExpressionsRenderer {\n    static { this.ID = 'variable'; }\n    constructor(linkDetector, menuService, contextKeyService, debugService, contextViewService) {\n        super(debugService, contextViewService);\n        this.linkDetector = linkDetector;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n    }\n    get templateId() {\n        return VariablesRenderer.ID;\n    }\n    renderExpression(expression, data, highlights) {\n        renderVariable(expression, data, true, highlights, this.linkDetector);\n    }\n    renderElement(node, index, data) {\n        super.renderExpressionElement(node.element, node, data);\n    }\n    getInputBoxOptions(expression) {\n        const variable = expression;\n        return {\n            initialValue: expression.value,\n            ariaLabel: ( localize('variableValueAriaLabel', \"Type new variable value\")),\n            validationOptions: {\n                validation: () => variable.errorMessage ? ({ content: variable.errorMessage }) : null\n            },\n            onFinish: (value, success) => {\n                variable.errorMessage = undefined;\n                const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n                if (success && variable.value !== value && focusedStackFrame) {\n                    variable.setVariable(value, focusedStackFrame)\n                        .then(() => {\n                        forgetScopes = false;\n                        this.debugService.getViewModel().updateViews();\n                    });\n                }\n            }\n        };\n    }\n    renderActionBar(actionBar, expression) {\n        const variable = expression;\n        const contextKeyService = getContextForVariableMenu(this.contextKeyService, variable);\n        const menu = this.menuService.createMenu(MenuId.DebugVariablesContext, contextKeyService);\n        const primary = [];\n        const context = getVariablesContext(variable);\n        createAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary, secondary: [] }, 'inline');\n        actionBar.clear();\n        actionBar.context = context;\n        actionBar.push(primary, { icon: true, label: false });\n    }\n};\nVariablesRenderer = ( __decorate([\n    ( __param(1, IMenuService)),\n    ( __param(2, IContextKeyService)),\n    ( __param(3, IDebugService)),\n    ( __param(4, IContextViewService))\n], VariablesRenderer));\nclass VariablesAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( localize('variablesAriaTreeLabel', \"Debug Variables\"));\n    }\n    getAriaLabel(element) {\n        if (element instanceof Scope) {\n            return ( localize('variableScopeAriaLabel', \"Scope {0}\", element.name));\n        }\n        if (element instanceof Variable) {\n            return ( localize(\n                { key: 'variableAriaLabel', comment: ['Placeholders are variable name and variable value respectivly. They should not be translated.'] },\n                \"{0}, value {1}\",\n                element.name,\n                element.value\n            ));\n        }\n        return null;\n    }\n}\nconst SET_VARIABLE_ID = 'debug.setVariable';\nCommandsRegistry.registerCommand({\n    id: SET_VARIABLE_ID,\n    handler: (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        debugService.getViewModel().setSelectedExpression(variableInternalContext, false);\n    }\n});\nconst COPY_VALUE_ID = 'workbench.debug.viewlet.action.copyValue';\nCommandsRegistry.registerCommand({\n    id: COPY_VALUE_ID,\n    handler: async (accessor, arg, ctx) => {\n        const debugService = accessor.get(IDebugService);\n        const clipboardService = accessor.get(IClipboardService);\n        let elementContext = '';\n        let elements;\n        if (arg instanceof Variable || arg instanceof Expression) {\n            elementContext = 'watch';\n            elements = ctx ? ctx : [];\n        }\n        else {\n            elementContext = 'variables';\n            elements = variableInternalContext ? [variableInternalContext] : [];\n        }\n        const stackFrame = debugService.getViewModel().focusedStackFrame;\n        const session = debugService.getViewModel().focusedSession;\n        if (!stackFrame || !session || elements.length === 0) {\n            return;\n        }\n        const evalContext = session.capabilities.supportsClipboardContext ? 'clipboard' : elementContext;\n        const toEvaluate = ( elements.map(\n            element => element instanceof Variable ? (element.evaluateName || element.value) : element.name\n        ));\n        try {\n            const evaluations = await Promise.all(( toEvaluate.map(expr => session.evaluate(expr, stackFrame.frameId, evalContext))));\n            const result = ( coalesce(evaluations).map(evaluation => evaluation.body.result));\n            if (result.length) {\n                clipboardService.writeText(result.join('\\n'));\n            }\n        }\n        catch (e) {\n            const result = ( elements.map(element => element.value));\n            clipboardService.writeText(result.join('\\n'));\n        }\n    }\n});\nconst VIEW_MEMORY_ID = 'workbench.debug.viewlet.action.viewMemory';\nconst HEX_EDITOR_EXTENSION_ID = 'ms-vscode.hexeditor';\nconst HEX_EDITOR_EDITOR_ID = 'hexEditor.hexedit';\nCommandsRegistry.registerCommand({\n    id: VIEW_MEMORY_ID,\n    handler: async (accessor, arg, ctx) => {\n        const debugService = accessor.get(IDebugService);\n        let sessionId;\n        let memoryReference;\n        if ('sessionId' in arg) {\n            if (!arg.sessionId || !arg.variable.memoryReference) {\n                return;\n            }\n            sessionId = arg.sessionId;\n            memoryReference = arg.variable.memoryReference;\n        }\n        else {\n            if (!arg.memoryReference) {\n                return;\n            }\n            const focused = debugService.getViewModel().focusedSession;\n            if (!focused) {\n                return;\n            }\n            sessionId = focused.getId();\n            memoryReference = arg.memoryReference;\n        }\n        const commandService = accessor.get(ICommandService);\n        const editorService = accessor.get(IEditorService);\n        const notifications = accessor.get(INotificationService);\n        const progressService = accessor.get(IProgressService);\n        const extensionService = accessor.get(IExtensionService);\n        const telemetryService = accessor.get(ITelemetryService);\n        const ext = await extensionService.getExtension(HEX_EDITOR_EXTENSION_ID);\n        if (ext || (await tryInstallHexEditor(notifications, progressService, extensionService, commandService))) {\n            telemetryService.publicLog('debug/didViewMemory', {\n                debugType: debugService.getModel().getSession(sessionId)?.configuration.type,\n            });\n            await editorService.openEditor({\n                resource: getUriForDebugMemory(sessionId, memoryReference),\n                options: {\n                    revealIfOpened: true,\n                    override: HEX_EDITOR_EDITOR_ID,\n                },\n            }, SIDE_GROUP);\n        }\n    }\n});\nfunction tryInstallHexEditor(notifications, progressService, extensionService, commandService) {\n    return ( new Promise(resolve => {\n        let installing = false;\n        const handle = notifications.prompt(Severity.Info, ( localize(\n            \"viewMemory.prompt\",\n            \"Inspecting binary data requires the Hex Editor extension. Would you like to install it now?\"\n        )), [\n            {\n                label: ( localize(\"cancel\", \"Cancel\")),\n                run: () => resolve(false),\n            },\n            {\n                label: ( localize(\"install\", \"Install\")),\n                run: async () => {\n                    installing = true;\n                    try {\n                        await progressService.withProgress({\n                            location: 15 ,\n                            title: ( localize(\"viewMemory.install.progress\", \"Installing the Hex Editor...\")),\n                        }, async () => {\n                            await commandService.executeCommand('workbench.extensions.installExtension', HEX_EDITOR_EXTENSION_ID);\n                            while (!(await extensionService.getExtension(HEX_EDITOR_EXTENSION_ID))) {\n                                await timeout(30);\n                            }\n                        });\n                        resolve(true);\n                    }\n                    catch (e) {\n                        notifications.error(e);\n                        resolve(false);\n                    }\n                }\n            },\n        ], { sticky: true });\n        handle.onDidClose(e => {\n            if (!installing) {\n                resolve(false);\n            }\n        });\n    }));\n}\nconst BREAK_WHEN_VALUE_CHANGES_ID = 'debug.breakWhenValueChanges';\nCommandsRegistry.registerCommand({\n    id: BREAK_WHEN_VALUE_CHANGES_ID,\n    handler: async (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        if (dataBreakpointInfoResponse) {\n            await debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'write');\n        }\n    }\n});\nconst BREAK_WHEN_VALUE_IS_ACCESSED_ID = 'debug.breakWhenValueIsAccessed';\nCommandsRegistry.registerCommand({\n    id: BREAK_WHEN_VALUE_IS_ACCESSED_ID,\n    handler: async (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        if (dataBreakpointInfoResponse) {\n            await debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'readWrite');\n        }\n    }\n});\nconst BREAK_WHEN_VALUE_IS_READ_ID = 'debug.breakWhenValueIsRead';\nCommandsRegistry.registerCommand({\n    id: BREAK_WHEN_VALUE_IS_READ_ID,\n    handler: async (accessor) => {\n        const debugService = accessor.get(IDebugService);\n        if (dataBreakpointInfoResponse) {\n            await debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'read');\n        }\n    }\n});\nconst COPY_EVALUATE_PATH_ID = 'debug.copyEvaluatePath';\nCommandsRegistry.registerCommand({\n    id: COPY_EVALUATE_PATH_ID,\n    handler: async (accessor, context) => {\n        const clipboardService = accessor.get(IClipboardService);\n        await clipboardService.writeText(context.variable.evaluateName);\n    }\n});\nconst ADD_TO_WATCH_ID = 'debug.addToWatchExpressions';\nCommandsRegistry.registerCommand({\n    id: ADD_TO_WATCH_ID,\n    handler: async (accessor, context) => {\n        const debugService = accessor.get(IDebugService);\n        debugService.addWatchExpression(context.variable.evaluateName);\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'variables.collapse',\n            viewId: VARIABLES_VIEW_ID,\n            title: ( localize('collapse', \"Collapse All\")),\n            f1: false,\n            icon: Codicon.collapseAll,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', VARIABLES_VIEW_ID))\n            }\n        });\n    }\n    runInView(_accessor, view) {\n        view.collapseAll();\n    }\n});\nexport { ADD_TO_WATCH_ID, BREAK_WHEN_VALUE_CHANGES_ID, BREAK_WHEN_VALUE_IS_ACCESSED_ID, BREAK_WHEN_VALUE_IS_READ_ID, COPY_EVALUATE_PATH_ID, COPY_VALUE_ID, SET_VARIABLE_ID, VIEW_MEMORY_ID, VariablesRenderer, VariablesView };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { DomScrollableElement } from 'monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js';\nimport { coalesce } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport * as lifecycle from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { clamp } from 'monaco-editor/esm/vs/base/common/numbers.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { ModelDecorationOptions } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { WorkbenchAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { editorHoverBackground, asCssVariable, editorHoverBorder, editorHoverForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { renderExpressionValue } from './baseDebugView.js';\nimport { LinkDetector } from './linkDetector.js';\nimport { VariablesRenderer } from './variablesView.js';\nimport { IDebugService } from '../common/debug.js';\nimport { Variable, Expression } from '../common/debugModel.js';\nimport { getEvaluatableExpressionAtPosition } from '../common/debugUtils.js';\nconst $ = dom.$;\nasync function doFindExpression(container, namesToFind) {\n    if (!container) {\n        return null;\n    }\n    const children = await container.getChildren();\n    const filtered = children.filter(v => namesToFind[0] === v.name);\n    if (filtered.length !== 1) {\n        return null;\n    }\n    if (namesToFind.length === 1) {\n        return filtered[0];\n    }\n    else {\n        return doFindExpression(filtered[0], namesToFind.slice(1));\n    }\n}\nasync function findExpressionInStackFrame(stackFrame, namesToFind) {\n    const scopes = await stackFrame.getScopes();\n    const nonExpensive = scopes.filter(s => !s.expensive);\n    const expressions = coalesce(await Promise.all(( nonExpensive.map(scope => doFindExpression(scope, namesToFind)))));\n    return expressions.length > 0 && expressions.every(e => e.value === expressions[0].value) ? expressions[0] : undefined;\n}\nlet DebugHoverWidget = class DebugHoverWidget {\n    static { this.ID = 'debug.hoverWidget'; }\n    constructor(editor, debugService, instantiationService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.instantiationService = instantiationService;\n        this.allowEditorOverflow = true;\n        this.highlightDecorations = this.editor.createDecorationsCollection();\n        this.isUpdatingTree = false;\n        this.toDispose = [];\n        this._isVisible = false;\n        this.showAtPosition = null;\n        this.positionPreference = [1 , 2 ];\n        this.debugHoverComputer = this.instantiationService.createInstance(DebugHoverComputer, this.editor);\n    }\n    create() {\n        this.domNode = $('.debug-hover-widget');\n        this.complexValueContainer = dom.append(this.domNode, $('.complex-value'));\n        this.complexValueTitle = dom.append(this.complexValueContainer, $('.title'));\n        this.treeContainer = dom.append(this.complexValueContainer, $('.debug-hover-tree'));\n        this.treeContainer.setAttribute('role', 'tree');\n        const tip = dom.append(this.complexValueContainer, $('.tip'));\n        tip.textContent = ( nls.localize(\n            { key: 'quickTip', comment: ['\"switch to editor language hover\" means to show the programming language hover widget instead of the debug hover'] },\n            'Hold {0} key to switch to editor language hover',\n            isMacintosh ? 'Option' : 'Alt'\n        ));\n        const dataSource = ( new DebugHoverDataSource());\n        const linkeDetector = this.instantiationService.createInstance(LinkDetector);\n        this.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'DebugHover', this.treeContainer, ( new DebugHoverDelegate()), [this.instantiationService.createInstance(VariablesRenderer, linkeDetector)], dataSource, {\n            accessibilityProvider: ( new DebugHoverAccessibilityProvider()),\n            mouseSupport: false,\n            horizontalScrolling: true,\n            useShadows: false,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e) => e.name },\n            overrideStyles: {\n                listBackground: editorHoverBackground\n            }\n        });\n        this.valueContainer = $('.value');\n        this.valueContainer.tabIndex = 0;\n        this.valueContainer.setAttribute('role', 'tooltip');\n        this.scrollbar = ( new DomScrollableElement(this.valueContainer, { horizontal: 2  }));\n        this.domNode.appendChild(this.scrollbar.getDomNode());\n        this.toDispose.push(this.scrollbar);\n        this.editor.applyFontInfo(this.domNode);\n        this.domNode.style.backgroundColor = asCssVariable(editorHoverBackground);\n        this.domNode.style.border = `1px solid ${asCssVariable(editorHoverBorder)}`;\n        this.domNode.style.color = asCssVariable(editorHoverForeground);\n        this.toDispose.push(this.tree.onDidChangeContentHeight(() => {\n            if (!this.isUpdatingTree) {\n                this.layoutTreeAndContainer();\n            }\n        }));\n        this.toDispose.push(this.tree.onDidChangeContentWidth(() => {\n            if (!this.isUpdatingTree) {\n                this.layoutTreeAndContainer();\n            }\n        }));\n        this.registerListeners();\n        this.editor.addContentWidget(this);\n    }\n    registerListeners() {\n        this.toDispose.push(dom.addStandardDisposableListener(this.domNode, 'keydown', (e) => {\n            if (e.equals(9 )) {\n                this.hide();\n            }\n        }));\n        this.toDispose.push(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(49 )) {\n                this.editor.applyFontInfo(this.domNode);\n            }\n        }));\n        this.toDispose.push(this.debugService.getViewModel().onDidEvaluateLazyExpression(async (e) => {\n            if (e instanceof Variable && this.tree.hasNode(e)) {\n                await this.tree.updateChildren(e, false, true);\n                await this.tree.expand(e);\n            }\n        }));\n    }\n    isHovered() {\n        return !!this.domNode?.matches(':hover');\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    willBeVisible() {\n        return !!this.showCancellationSource;\n    }\n    getId() {\n        return DebugHoverWidget.ID;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    async showAt(position, focus) {\n        this.showCancellationSource?.cancel();\n        const cancellationSource = this.showCancellationSource = ( new CancellationTokenSource());\n        const session = this.debugService.getViewModel().focusedSession;\n        if (!session || !this.editor.hasModel()) {\n            this.hide();\n            return 1 ;\n        }\n        const result = await this.debugHoverComputer.compute(position, cancellationSource.token);\n        if (cancellationSource.token.isCancellationRequested) {\n            this.hide();\n            return 2 ;\n        }\n        if (!result.range) {\n            this.hide();\n            return 1 ;\n        }\n        if (this.isVisible() && !result.rangeChanged) {\n            return 0 ;\n        }\n        const expression = await this.debugHoverComputer.evaluate(session);\n        if (cancellationSource.token.isCancellationRequested) {\n            this.hide();\n            return 2 ;\n        }\n        if (!expression || (expression instanceof Expression && !expression.available)) {\n            this.hide();\n            return 1 ;\n        }\n        this.highlightDecorations.set([{\n                range: result.range,\n                options: DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS\n            }]);\n        return this.doShow(result.range.getStartPosition(), expression, focus);\n    }\n    static { this._HOVER_HIGHLIGHT_DECORATION_OPTIONS = ModelDecorationOptions.register({\n        description: 'bdebug-hover-highlight',\n        className: 'hoverHighlight'\n    }); }\n    async doShow(position, expression, focus, forceValueHover = false) {\n        if (!this.domNode) {\n            this.create();\n        }\n        this.showAtPosition = position;\n        this._isVisible = true;\n        if (!expression.hasChildren || forceValueHover) {\n            this.complexValueContainer.hidden = true;\n            this.valueContainer.hidden = false;\n            renderExpressionValue(expression, this.valueContainer, {\n                showChanged: false,\n                colorize: true\n            });\n            this.valueContainer.title = '';\n            this.editor.layoutContentWidget(this);\n            this.scrollbar.scanDomNode();\n            if (focus) {\n                this.editor.render();\n                this.valueContainer.focus();\n            }\n            return undefined;\n        }\n        this.valueContainer.hidden = true;\n        this.expressionToRender = expression;\n        this.complexValueTitle.textContent = expression.value;\n        this.complexValueTitle.title = expression.value;\n        this.editor.layoutContentWidget(this);\n        this.tree.scrollTop = 0;\n        this.tree.scrollLeft = 0;\n        this.complexValueContainer.hidden = false;\n        if (focus) {\n            this.editor.render();\n            this.tree.domFocus();\n        }\n    }\n    layoutTreeAndContainer() {\n        this.layoutTree();\n        this.editor.layoutContentWidget(this);\n    }\n    layoutTree() {\n        const scrollBarHeight = 10;\n        const treeHeight = Math.min(Math.max(266, this.editor.getLayoutInfo().height * 0.55), this.tree.contentHeight + scrollBarHeight);\n        const realTreeWidth = this.tree.contentWidth;\n        const treeWidth = clamp(realTreeWidth, 400, 550);\n        this.tree.layout(treeHeight, treeWidth);\n        this.treeContainer.style.height = `${treeHeight}px`;\n        this.scrollbar.scanDomNode();\n    }\n    beforeRender() {\n        if (this.expressionToRender) {\n            const expression = this.expressionToRender;\n            this.expressionToRender = undefined;\n            this.isUpdatingTree = true;\n            this.tree.setInput(expression).finally(() => {\n                this.isUpdatingTree = false;\n            });\n        }\n        return null;\n    }\n    afterRender(positionPreference) {\n        if (positionPreference) {\n            this.positionPreference = [positionPreference];\n        }\n    }\n    hide() {\n        if (this.showCancellationSource) {\n            this.showCancellationSource.cancel();\n            this.showCancellationSource = undefined;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        if (dom.isAncestor(document.activeElement, this.domNode)) {\n            this.editor.focus();\n        }\n        this._isVisible = false;\n        this.highlightDecorations.clear();\n        this.editor.layoutContentWidget(this);\n        this.positionPreference = [1 , 2 ];\n    }\n    getPosition() {\n        return this._isVisible ? {\n            position: this.showAtPosition,\n            preference: this.positionPreference\n        } : null;\n    }\n    dispose() {\n        this.toDispose = lifecycle.dispose(this.toDispose);\n    }\n};\nDebugHoverWidget = ( __decorate([\n    ( __param(1, IDebugService)),\n    ( __param(2, IInstantiationService))\n], DebugHoverWidget));\nclass DebugHoverAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( nls.localize('treeAriaLabel', \"Debug Hover\"));\n    }\n    getAriaLabel(element) {\n        return ( nls.localize(\n            { key: 'variableAriaLabel', comment: ['Do not translate placeholders. Placeholders are name and value of a variable.'] },\n            \"{0}, value {1}, variables, debug\",\n            element.name,\n            element.value\n        ));\n    }\n}\nclass DebugHoverDataSource {\n    hasChildren(element) {\n        return element.hasChildren;\n    }\n    getChildren(element) {\n        return element.getChildren();\n    }\n}\nclass DebugHoverDelegate {\n    getHeight(element) {\n        return 18;\n    }\n    getTemplateId(element) {\n        return VariablesRenderer.ID;\n    }\n}\nlet DebugHoverComputer = class DebugHoverComputer {\n    constructor(editor, debugService, languageFeaturesService, logService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.logService = logService;\n    }\n    async compute(position, token) {\n        const session = this.debugService.getViewModel().focusedSession;\n        if (!session || !this.editor.hasModel()) {\n            return { rangeChanged: false };\n        }\n        const model = this.editor.getModel();\n        const result = await getEvaluatableExpressionAtPosition(this.languageFeaturesService, model, position, token);\n        if (!result) {\n            return { rangeChanged: false };\n        }\n        const { range, matchingExpression } = result;\n        const rangeChanged = this._currentRange ?\n            !this._currentRange.equalsRange(range) :\n            true;\n        this._currentExpression = matchingExpression;\n        this._currentRange = Range.lift(range);\n        return { rangeChanged, range: this._currentRange };\n    }\n    async evaluate(session) {\n        if (!this._currentExpression) {\n            this.logService.error('No expression to evaluate');\n            return;\n        }\n        if (session.capabilities.supportsEvaluateForHovers) {\n            const expression = ( new Expression(this._currentExpression));\n            await expression.evaluate(session, this.debugService.getViewModel().focusedStackFrame, 'hover');\n            return expression;\n        }\n        else {\n            const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n            if (focusedStackFrame) {\n                return await findExpressionInStackFrame(focusedStackFrame, coalesce(( this._currentExpression.split('.').map(word => word.trim()))));\n            }\n        }\n        return undefined;\n    }\n};\nDebugHoverComputer = ( __decorate([\n    ( __param(1, IDebugService)),\n    ( __param(2, ILanguageFeaturesService)),\n    ( __param(3, ILogService))\n], DebugHoverComputer));\nexport { DebugHoverWidget, findExpressionInStackFrame };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-editor .zone-widget.exception-widget-container{overflow:hidden}.monaco-editor .zone-widget .zone-widget-container.exception-widget{padding:6px 10px;user-select:text;-webkit-user-select:text;white-space:pre-wrap}.monaco-editor .zone-widget .zone-widget-container.exception-widget .title{display:flex}.monaco-editor .zone-widget .zone-widget-container.exception-widget .title .label{align-items:center;display:flex;font-weight:700}.monaco-editor .zone-widget .zone-widget-container.exception-widget .title .actions{flex:1}.monaco-editor .zone-widget .zone-widget-container.exception-widget .description,.monaco-editor .zone-widget .zone-widget-container.exception-widget .stack-trace{font-family:var(--monaco-monospace-font)}.monaco-editor .zone-widget .zone-widget-container.exception-widget .stack-trace{margin-top:.5em}.monaco-editor .zone-widget .zone-widget-container.exception-widget .stack-trace a{cursor:pointer;text-decoration:underline}.monaco-workbench.mac .zone-widget .zone-widget-container.exception-widget{font-size:11px}.monaco-workbench.linux .zone-widget .zone-widget-container.exception-widget,.monaco-workbench.windows .zone-widget .zone-widget-container.exception-widget{font-size:13px}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/exceptionWidget.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ZoneWidget } from 'monaco-editor/esm/vs/editor/contrib/zoneWidget/browser/zoneWidget.js';\nimport { EDITOR_CONTRIBUTION_ID } from '../common/debug.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { LinkDetector } from './linkDetector.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { widgetClose } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst $ = dom.$;\nconst debugExceptionWidgetBorder = registerColor('debugExceptionWidget.border', { dark: '#a31515', light: '#a31515', hcDark: '#a31515', hcLight: '#a31515' }, ( nls.localize('debugExceptionWidgetBorder', 'Exception widget border color.')));\nconst debugExceptionWidgetBackground = registerColor('debugExceptionWidget.background', { dark: '#420b0d', light: '#f1dfde', hcDark: '#420b0d', hcLight: '#f1dfde' }, ( nls.localize('debugExceptionWidgetBackground', 'Exception widget background color.')));\nlet ExceptionWidget = class ExceptionWidget extends ZoneWidget {\n    constructor(editor, exceptionInfo, debugSession, themeService, instantiationService) {\n        super(editor, { showFrame: true, showArrow: true, isAccessible: true, frameWidth: 1, className: 'exception-widget-container' });\n        this.exceptionInfo = exceptionInfo;\n        this.debugSession = debugSession;\n        this.instantiationService = instantiationService;\n        this.applyTheme(themeService.getColorTheme());\n        this._disposables.add(themeService.onDidColorThemeChange(this.applyTheme.bind(this)));\n        this.create();\n        const onDidLayoutChangeScheduler = ( new RunOnceScheduler(() => this._doLayout(undefined, undefined), 50));\n        this._disposables.add(this.editor.onDidLayoutChange(() => onDidLayoutChangeScheduler.schedule()));\n        this._disposables.add(onDidLayoutChangeScheduler);\n    }\n    applyTheme(theme) {\n        this.backgroundColor = theme.getColor(debugExceptionWidgetBackground);\n        const frameColor = theme.getColor(debugExceptionWidgetBorder);\n        this.style({\n            arrowColor: frameColor,\n            frameColor: frameColor\n        });\n    }\n    _applyStyles() {\n        if (this.container) {\n            this.container.style.backgroundColor = this.backgroundColor ? ( this.backgroundColor.toString()) : '';\n        }\n        super._applyStyles();\n    }\n    _fillContainer(container) {\n        this.setCssClass('exception-widget');\n        const fontInfo = this.editor.getOption(49 );\n        container.style.fontSize = `${fontInfo.fontSize}px`;\n        container.style.lineHeight = `${fontInfo.lineHeight}px`;\n        container.tabIndex = 0;\n        const title = $('.title');\n        const label = $('.label');\n        dom.append(title, label);\n        const actions = $('.actions');\n        dom.append(title, actions);\n        label.textContent = this.exceptionInfo.id ? ( nls.localize(\n            'exceptionThrownWithId',\n            'Exception has occurred: {0}',\n            this.exceptionInfo.id\n        )) : ( nls.localize('exceptionThrown', 'Exception has occurred.'));\n        let ariaLabel = label.textContent;\n        const actionBar = ( new ActionBar(actions));\n        actionBar.push(( new Action('editor.closeExceptionWidget', ( nls.localize('close', \"Close\")), ThemeIcon.asClassName(widgetClose), true, async () => {\n            const contribution = this.editor.getContribution(EDITOR_CONTRIBUTION_ID);\n            contribution?.closeExceptionWidget();\n        })), { label: false, icon: true });\n        dom.append(container, title);\n        if (this.exceptionInfo.description) {\n            const description = $('.description');\n            description.textContent = this.exceptionInfo.description;\n            ariaLabel += ', ' + this.exceptionInfo.description;\n            dom.append(container, description);\n        }\n        if (this.exceptionInfo.details && this.exceptionInfo.details.stackTrace) {\n            const stackTrace = $('.stack-trace');\n            const linkDetector = this.instantiationService.createInstance(LinkDetector);\n            const linkedStackTrace = linkDetector.linkify(this.exceptionInfo.details.stackTrace, true, this.debugSession ? this.debugSession.root : undefined);\n            stackTrace.appendChild(linkedStackTrace);\n            dom.append(container, stackTrace);\n            ariaLabel += ', ' + this.exceptionInfo.details.stackTrace;\n        }\n        container.setAttribute('aria-label', ariaLabel);\n    }\n    _doLayout(_heightInPixel, _widthInPixel) {\n        this.container.style.height = 'initial';\n        const lineHeight = this.editor.getOption(65 );\n        const arrowHeight = Math.round(lineHeight / 3);\n        const computedLinesNumber = Math.ceil((this.container.offsetHeight + arrowHeight) / lineHeight);\n        this._relayout(computedLinesNumber);\n    }\n    focus() {\n        this.container?.focus();\n    }\n    hasFocus() {\n        return dom.isAncestor(document.activeElement, this.container);\n    }\n};\nExceptionWidget = ( __decorate([\n    ( __param(3, IThemeService)),\n    ( __param(4, IInstantiationService))\n], ExceptionWidget));\nexport { ExceptionWidget };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { addDisposableListener } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { DomEmitter } from 'monaco-editor/esm/vs/base/browser/event.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { flatten, distinct } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { onUnexpectedExternalError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { visit } from 'monaco-editor/esm/vs/base/common/json.js';\nimport { setProperty } from '../../../../base/common/jsonEdit.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport * as strings from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { CoreEditingCommands } from 'monaco-editor/esm/vs/editor/browser/coreCommands.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { DEFAULT_WORD_REGEXP } from 'monaco-editor/esm/vs/editor/common/core/wordHelper.js';\nimport { InjectedTextCursorStops } from 'monaco-editor/esm/vs/editor/common/model.js';\nimport { ILanguageFeatureDebounceService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { ModesHoverController } from 'monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { DebugHoverWidget } from './debugHover.js';\nimport { ExceptionWidget } from './exceptionWidget.js';\nimport { CONTEXT_EXCEPTION_WIDGET_VISIBLE, IDebugService } from '../common/debug.js';\nimport { Expression } from '../common/debugModel.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nconst MAX_NUM_INLINE_VALUES = 100;\nconst MAX_INLINE_DECORATOR_LENGTH = 150;\nconst MAX_TOKENIZATION_LINE_LEN = 500;\nconst DEAFULT_INLINE_DEBOUNCE_DELAY = 200;\nregisterColor('editor.inlineValuesForeground', {\n    dark: '#ffffff80',\n    light: '#00000080',\n    hcDark: '#ffffff80',\n    hcLight: '#00000080'\n}, ( nls.localize('editor.inlineValuesForeground', \"Color for the debug inline value text.\")));\nregisterColor('editor.inlineValuesBackground', {\n    dark: '#ffc80033',\n    light: '#ffc80033',\n    hcDark: '#ffc80033',\n    hcLight: '#ffc80033'\n}, ( nls.localize(\n    'editor.inlineValuesBackground',\n    \"Color for the debug inline value background.\"\n)));\nclass InlineSegment {\n    constructor(column, text) {\n        this.column = column;\n        this.text = text;\n    }\n}\nfunction createInlineValueDecoration(lineNumber, contentText, column = 1073741824 ) {\n    if (contentText.length > MAX_INLINE_DECORATOR_LENGTH) {\n        contentText = contentText.substring(0, MAX_INLINE_DECORATOR_LENGTH) + '...';\n    }\n    return [\n        {\n            range: {\n                startLineNumber: lineNumber,\n                endLineNumber: lineNumber,\n                startColumn: column,\n                endColumn: column\n            },\n            options: {\n                description: 'debug-inline-value-decoration-spacer',\n                after: {\n                    content: strings.noBreakWhitespace,\n                    cursorStops: InjectedTextCursorStops.None\n                },\n                showIfCollapsed: true,\n            }\n        },\n        {\n            range: {\n                startLineNumber: lineNumber,\n                endLineNumber: lineNumber,\n                startColumn: column,\n                endColumn: column\n            },\n            options: {\n                description: 'debug-inline-value-decoration',\n                after: {\n                    content: replaceWsWithNoBreakWs(contentText),\n                    inlineClassName: 'debug-inline-value',\n                    inlineClassNameAffectsLetterSpacing: true,\n                    cursorStops: InjectedTextCursorStops.None\n                },\n                showIfCollapsed: true,\n            }\n        },\n    ];\n}\nfunction replaceWsWithNoBreakWs(str) {\n    return str.replace(/[ \\t]/g, strings.noBreakWhitespace);\n}\nfunction createInlineValueDecorationsInsideRange(expressions, range, model, wordToLineNumbersMap) {\n    const nameValueMap = ( new Map());\n    for (const expr of expressions) {\n        nameValueMap.set(expr.name, expr.value);\n        if (nameValueMap.size >= MAX_NUM_INLINE_VALUES) {\n            break;\n        }\n    }\n    const lineToNamesMap = ( new Map());\n    nameValueMap.forEach((_value, name) => {\n        const lineNumbers = wordToLineNumbersMap.get(name);\n        if (lineNumbers) {\n            for (const lineNumber of lineNumbers) {\n                if (range.containsPosition(( new Position(lineNumber, 0)))) {\n                    if (!( lineToNamesMap.has(lineNumber))) {\n                        lineToNamesMap.set(lineNumber, []);\n                    }\n                    if (lineToNamesMap.get(lineNumber).indexOf(name) === -1) {\n                        lineToNamesMap.get(lineNumber).push(name);\n                    }\n                }\n            }\n        }\n    });\n    const decorations = [];\n    lineToNamesMap.forEach((names, line) => {\n        const contentText = ( names.sort((first, second) => {\n            const content = model.getLineContent(line);\n            return content.indexOf(first) - content.indexOf(second);\n        }).map(name => `${name} = ${nameValueMap.get(name)}`)).join(', ');\n        decorations.push(...createInlineValueDecoration(line, contentText));\n    });\n    return decorations;\n}\nfunction getWordToLineNumbersMap(model) {\n    const result = ( new Map());\n    if (!model) {\n        return result;\n    }\n    for (let lineNumber = 1, len = model.getLineCount(); lineNumber <= len; ++lineNumber) {\n        const lineContent = model.getLineContent(lineNumber);\n        if (lineContent.length > MAX_TOKENIZATION_LINE_LEN) {\n            continue;\n        }\n        model.tokenization.forceTokenization(lineNumber);\n        const lineTokens = model.tokenization.getLineTokens(lineNumber);\n        for (let tokenIndex = 0, tokenCount = lineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n            const tokenType = lineTokens.getStandardTokenType(tokenIndex);\n            if (tokenType === 0 ) {\n                DEFAULT_WORD_REGEXP.lastIndex = 0;\n                const tokenStartOffset = lineTokens.getStartOffset(tokenIndex);\n                const tokenEndOffset = lineTokens.getEndOffset(tokenIndex);\n                const tokenStr = lineContent.substring(tokenStartOffset, tokenEndOffset);\n                const wordMatch = DEFAULT_WORD_REGEXP.exec(tokenStr);\n                if (wordMatch) {\n                    const word = wordMatch[0];\n                    if (!( result.has(word))) {\n                        result.set(word, []);\n                    }\n                    result.get(word).push(lineNumber);\n                }\n            }\n        }\n    }\n    return result;\n}\nlet DebugEditorContribution = class DebugEditorContribution {\n    constructor(editor, debugService, instantiationService, commandService, configurationService, hostService, uriIdentityService, contextKeyService, languageFeaturesService, featureDebounceService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.instantiationService = instantiationService;\n        this.commandService = commandService;\n        this.configurationService = configurationService;\n        this.hostService = hostService;\n        this.uriIdentityService = uriIdentityService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.hoverPosition = null;\n        this.mouseDown = false;\n        this.gutterIsHovered = false;\n        this.altPressed = false;\n        this.oldDecorations = this.editor.createDecorationsCollection();\n        this._wordToLineNumbersMap = undefined;\n        this.debounceInfo = featureDebounceService.for(languageFeaturesService.inlineValuesProvider, 'InlineValues', { min: DEAFULT_INLINE_DEBOUNCE_DELAY });\n        this.hoverWidget = this.instantiationService.createInstance(DebugHoverWidget, this.editor);\n        this.toDispose = [];\n        this.registerListeners();\n        this.exceptionWidgetVisible = CONTEXT_EXCEPTION_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this.toggleExceptionWidget();\n    }\n    registerListeners() {\n        this.toDispose.push(this.debugService.getViewModel().onDidFocusStackFrame(e => this.onFocusStackFrame(e.stackFrame)));\n        this.toDispose.push(this.editor.onMouseDown((e) => this.onEditorMouseDown(e)));\n        this.toDispose.push(this.editor.onMouseUp(() => this.mouseDown = false));\n        this.toDispose.push(this.editor.onMouseMove((e) => this.onEditorMouseMove(e)));\n        this.toDispose.push(this.editor.onMouseLeave((e) => {\n            const hoverDomNode = this.hoverWidget.getDomNode();\n            if (!hoverDomNode) {\n                return;\n            }\n            const rect = hoverDomNode.getBoundingClientRect();\n            if (e.event.posx < rect.left || e.event.posx > rect.right || e.event.posy < rect.top || e.event.posy > rect.bottom) {\n                this.hideHoverWidget();\n            }\n        }));\n        this.toDispose.push(this.editor.onKeyDown((e) => this.onKeyDown(e)));\n        this.toDispose.push(this.editor.onDidChangeModelContent(() => {\n            this._wordToLineNumbersMap = undefined;\n            this.updateInlineValuesScheduler.schedule();\n        }));\n        this.toDispose.push(this.debugService.getViewModel().onWillUpdateViews(() => this.updateInlineValuesScheduler.schedule()));\n        this.toDispose.push(this.debugService.getViewModel().onDidEvaluateLazyExpression(() => this.updateInlineValuesScheduler.schedule()));\n        this.toDispose.push(this.editor.onDidChangeModel(async () => {\n            this.updateHoverConfiguration();\n            this.toggleExceptionWidget();\n            this.hideHoverWidget();\n            this._wordToLineNumbersMap = undefined;\n            const stackFrame = this.debugService.getViewModel().focusedStackFrame;\n            await this.updateInlineValueDecorations(stackFrame);\n        }));\n        this.toDispose.push(this.editor.onDidScrollChange(() => {\n            this.hideHoverWidget();\n            const model = this.editor.getModel();\n            if (model && ( this.languageFeaturesService.inlineValuesProvider.has(model))) {\n                this.updateInlineValuesScheduler.schedule();\n            }\n        }));\n        this.toDispose.push(this.debugService.onDidChangeState((state) => {\n            if (state !== 2 ) {\n                this.toggleExceptionWidget();\n            }\n        }));\n    }\n    get wordToLineNumbersMap() {\n        if (!this._wordToLineNumbersMap) {\n            this._wordToLineNumbersMap = getWordToLineNumbersMap(this.editor.getModel());\n        }\n        return this._wordToLineNumbersMap;\n    }\n    updateHoverConfiguration() {\n        const stackFrame = this.debugService.getViewModel().focusedStackFrame;\n        const model = this.editor.getModel();\n        if (model) {\n            this.applyHoverConfiguration(model, stackFrame);\n        }\n    }\n    applyHoverConfiguration(model, stackFrame) {\n        if (stackFrame && this.uriIdentityService.extUri.isEqual(model.uri, stackFrame.source.uri)) {\n            if (this.altListener) {\n                this.altListener.dispose();\n            }\n            this.altListener = addDisposableListener(document, 'keydown', keydownEvent => {\n                const standardKeyboardEvent = ( new StandardKeyboardEvent(keydownEvent));\n                if (standardKeyboardEvent.keyCode === 6 ) {\n                    this.altPressed = true;\n                    const debugHoverWasVisible = this.hoverWidget.isVisible();\n                    this.hoverWidget.hide();\n                    this.enableEditorHover();\n                    if (debugHoverWasVisible && this.hoverPosition) {\n                        this.showEditorHover(this.hoverPosition, false);\n                    }\n                    const onKeyUp = ( new DomEmitter(document, 'keyup'));\n                    const listener = Event.any(this.hostService.onDidChangeFocus, onKeyUp.event)(keyupEvent => {\n                        let standardKeyboardEvent = undefined;\n                        if (keyupEvent instanceof KeyboardEvent) {\n                            standardKeyboardEvent = ( new StandardKeyboardEvent(keyupEvent));\n                        }\n                        if (!standardKeyboardEvent || standardKeyboardEvent.keyCode === 6 ) {\n                            this.altPressed = false;\n                            this.editor.updateOptions({ hover: { enabled: false } });\n                            listener.dispose();\n                            onKeyUp.dispose();\n                        }\n                    });\n                }\n            });\n            this.editor.updateOptions({ hover: { enabled: false } });\n        }\n        else {\n            this.altListener?.dispose();\n            this.enableEditorHover();\n        }\n    }\n    enableEditorHover() {\n        if (this.editor.hasModel()) {\n            const model = this.editor.getModel();\n            const overrides = {\n                resource: model.uri,\n                overrideIdentifier: model.getLanguageId()\n            };\n            const defaultConfiguration = this.configurationService.getValue('editor.hover', overrides);\n            this.editor.updateOptions({\n                hover: {\n                    enabled: defaultConfiguration.enabled,\n                    delay: defaultConfiguration.delay,\n                    sticky: defaultConfiguration.sticky\n                }\n            });\n        }\n    }\n    async showHover(position, focus) {\n        const sf = this.debugService.getViewModel().focusedStackFrame;\n        const model = this.editor.getModel();\n        if (sf && model && this.uriIdentityService.extUri.isEqual(sf.source.uri, model.uri)) {\n            const result = await this.hoverWidget.showAt(position, focus);\n            if (result === 1 ) {\n                this.showEditorHover(position, focus);\n            }\n        }\n        else {\n            this.showEditorHover(position, focus);\n        }\n    }\n    showEditorHover(position, focus) {\n        const hoverController = this.editor.getContribution(ModesHoverController.ID);\n        const range = ( new Range(position.lineNumber, position.column, position.lineNumber, position.column));\n        hoverController?.showContentHover(range, 1 , 0 , focus);\n    }\n    async onFocusStackFrame(sf) {\n        const model = this.editor.getModel();\n        if (model) {\n            this.applyHoverConfiguration(model, sf);\n            if (sf && this.uriIdentityService.extUri.isEqual(sf.source.uri, model.uri)) {\n                await this.toggleExceptionWidget();\n            }\n            else {\n                this.hideHoverWidget();\n            }\n        }\n        await this.updateInlineValueDecorations(sf);\n    }\n    get showHoverScheduler() {\n        const hoverOption = this.editor.getOption(59 );\n        const scheduler = ( new RunOnceScheduler(() => {\n            if (this.hoverPosition && !this.altPressed) {\n                this.showHover(this.hoverPosition, false);\n            }\n        }, hoverOption.delay * 2));\n        this.toDispose.push(scheduler);\n        return scheduler;\n    }\n    get hideHoverScheduler() {\n        const scheduler = ( new RunOnceScheduler(() => {\n            if (!this.hoverWidget.isHovered()) {\n                this.hoverWidget.hide();\n            }\n        }, 0));\n        this.toDispose.push(scheduler);\n        return scheduler;\n    }\n    hideHoverWidget() {\n        if (!this.hideHoverScheduler.isScheduled() && this.hoverWidget.willBeVisible()) {\n            this.hideHoverScheduler.schedule();\n        }\n        this.showHoverScheduler.cancel();\n    }\n    onEditorMouseDown(mouseEvent) {\n        this.mouseDown = true;\n        if (mouseEvent.target.type === 9  && mouseEvent.target.detail === DebugHoverWidget.ID) {\n            return;\n        }\n        this.hideHoverWidget();\n    }\n    onEditorMouseMove(mouseEvent) {\n        if (this.debugService.state !== 2 ) {\n            return;\n        }\n        const target = mouseEvent.target;\n        const stopKey = platform.isMacintosh ? 'metaKey' : 'ctrlKey';\n        if (!this.altPressed) {\n            if (target.type === 2 ) {\n                this.editor.updateOptions({ hover: { enabled: true } });\n                this.gutterIsHovered = true;\n            }\n            else if (this.gutterIsHovered) {\n                this.gutterIsHovered = false;\n                this.updateHoverConfiguration();\n            }\n        }\n        if (target.type === 9  && target.detail === DebugHoverWidget.ID && !mouseEvent.event[stopKey]) {\n            return;\n        }\n        if (target.type === 6 ) {\n            if (target.position && !Position.equals(target.position, this.hoverPosition)) {\n                this.hoverPosition = target.position;\n                this.hideHoverScheduler.cancel();\n                this.showHoverScheduler.schedule();\n            }\n        }\n        else if (!this.mouseDown) {\n            this.hideHoverWidget();\n        }\n    }\n    onKeyDown(e) {\n        const stopKey = platform.isMacintosh ? 57  : 5 ;\n        if (e.keyCode !== stopKey) {\n            this.hideHoverWidget();\n        }\n    }\n    async toggleExceptionWidget() {\n        const model = this.editor.getModel();\n        const focusedSf = this.debugService.getViewModel().focusedStackFrame;\n        const callStack = focusedSf ? focusedSf.thread.getCallStack() : null;\n        if (!model || !focusedSf || !callStack || callStack.length === 0) {\n            this.closeExceptionWidget();\n            return;\n        }\n        const exceptionSf = callStack.find(sf => !!(sf && sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize'));\n        if (!exceptionSf || exceptionSf !== focusedSf) {\n            this.closeExceptionWidget();\n            return;\n        }\n        const sameUri = this.uriIdentityService.extUri.isEqual(exceptionSf.source.uri, model.uri);\n        if (this.exceptionWidget && !sameUri) {\n            this.closeExceptionWidget();\n        }\n        else if (sameUri) {\n            const exceptionInfo = await focusedSf.thread.exceptionInfo;\n            if (exceptionInfo) {\n                this.showExceptionWidget(exceptionInfo, this.debugService.getViewModel().focusedSession, exceptionSf.range.startLineNumber, exceptionSf.range.startColumn);\n            }\n        }\n    }\n    showExceptionWidget(exceptionInfo, debugSession, lineNumber, column) {\n        if (this.exceptionWidget) {\n            this.exceptionWidget.dispose();\n        }\n        this.exceptionWidget = this.instantiationService.createInstance(ExceptionWidget, this.editor, exceptionInfo, debugSession);\n        this.exceptionWidget.show({ lineNumber, column }, 0);\n        this.exceptionWidget.focus();\n        this.editor.revealRangeInCenter({\n            startLineNumber: lineNumber,\n            startColumn: column,\n            endLineNumber: lineNumber,\n            endColumn: column,\n        });\n        this.exceptionWidgetVisible.set(true);\n    }\n    closeExceptionWidget() {\n        if (this.exceptionWidget) {\n            const shouldFocusEditor = this.exceptionWidget.hasFocus();\n            this.exceptionWidget.dispose();\n            this.exceptionWidget = undefined;\n            this.exceptionWidgetVisible.set(false);\n            if (shouldFocusEditor) {\n                this.editor.focus();\n            }\n        }\n    }\n    async addLaunchConfiguration() {\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        let configurationsArrayPosition;\n        let lastProperty;\n        const getConfigurationPosition = () => {\n            let depthInArray = 0;\n            visit(model.getValue(), {\n                onObjectProperty: (property) => {\n                    lastProperty = property;\n                },\n                onArrayBegin: (offset) => {\n                    if (lastProperty === 'configurations' && depthInArray === 0) {\n                        configurationsArrayPosition = model.getPositionAt(offset + 1);\n                    }\n                    depthInArray++;\n                },\n                onArrayEnd: () => {\n                    depthInArray--;\n                }\n            });\n        };\n        getConfigurationPosition();\n        if (!configurationsArrayPosition) {\n            const { tabSize, insertSpaces } = model.getOptions();\n            const eol = model.getEOL();\n            const edit = (basename(model.uri.fsPath) === 'launch.json') ?\n                setProperty(model.getValue(), ['configurations'], [], { tabSize, insertSpaces, eol })[0] :\n                setProperty(model.getValue(), ['launch'], { 'configurations': [] }, { tabSize, insertSpaces, eol })[0];\n            const startPosition = model.getPositionAt(edit.offset);\n            const lineNumber = startPosition.lineNumber;\n            const range = ( new Range(\n                lineNumber,\n                startPosition.column,\n                lineNumber,\n                model.getLineMaxColumn(lineNumber)\n            ));\n            model.pushEditOperations(null, [EditOperation.replace(range, edit.content)], () => null);\n            getConfigurationPosition();\n        }\n        if (!configurationsArrayPosition) {\n            return;\n        }\n        this.editor.focus();\n        const insertLine = (position) => {\n            if (model.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n                this.editor.setPosition(position);\n                CoreEditingCommands.LineBreakInsert.runEditorCommand(null, this.editor, null);\n            }\n            this.editor.setPosition(position);\n            return this.commandService.executeCommand('editor.action.insertLineAfter');\n        };\n        await insertLine(configurationsArrayPosition);\n        await this.commandService.executeCommand('editor.action.triggerSuggest');\n    }\n    get removeInlineValuesScheduler() {\n        return ( new RunOnceScheduler(() => {\n            this.oldDecorations.clear();\n        }, 100));\n    }\n    get updateInlineValuesScheduler() {\n        const model = this.editor.getModel();\n        return ( new RunOnceScheduler(\n            async () => await this.updateInlineValueDecorations(this.debugService.getViewModel().focusedStackFrame),\n            model ? this.debounceInfo.get(model) : DEAFULT_INLINE_DEBOUNCE_DELAY\n        ));\n    }\n    async updateInlineValueDecorations(stackFrame) {\n        const var_value_format = '{0} = {1}';\n        const separator = ', ';\n        const model = this.editor.getModel();\n        const inlineValuesSetting = this.configurationService.getValue('debug').inlineValues;\n        const inlineValuesTurnedOn = inlineValuesSetting === true || inlineValuesSetting === 'on' || (inlineValuesSetting === 'auto' && model && ( this.languageFeaturesService.inlineValuesProvider.has(model)));\n        if (!inlineValuesTurnedOn || !model || !stackFrame || ( model.uri.toString()) !== ( stackFrame.source.uri.toString())) {\n            if (!this.removeInlineValuesScheduler.isScheduled()) {\n                this.removeInlineValuesScheduler.schedule();\n            }\n            return;\n        }\n        this.removeInlineValuesScheduler.cancel();\n        let allDecorations;\n        if (( this.languageFeaturesService.inlineValuesProvider.has(model))) {\n            const findVariable = async (_key, caseSensitiveLookup) => {\n                const scopes = await stackFrame.getMostSpecificScopes(stackFrame.range);\n                const key = caseSensitiveLookup ? _key : _key.toLowerCase();\n                for (const scope of scopes) {\n                    const variables = await scope.getChildren();\n                    const found = variables.find(v => caseSensitiveLookup ? (v.name === key) : (v.name.toLowerCase() === key));\n                    if (found) {\n                        return found.value;\n                    }\n                }\n                return undefined;\n            };\n            const ctx = {\n                frameId: stackFrame.frameId,\n                stoppedLocation: ( new Range(\n                    stackFrame.range.startLineNumber,\n                    stackFrame.range.startColumn + 1,\n                    stackFrame.range.endLineNumber,\n                    stackFrame.range.endColumn + 1\n                ))\n            };\n            const token = ( new CancellationTokenSource()).token;\n            const ranges = this.editor.getVisibleRangesPlusViewportAboveBelow();\n            const providers = this.languageFeaturesService.inlineValuesProvider.ordered(model).reverse();\n            allDecorations = [];\n            const lineDecorations = ( new Map());\n            const promises = flatten(( providers.map(provider => ( ranges.map(\n                range => Promise.resolve(provider.provideInlineValues(model, range, ctx, token)).then(async (result) => {\n                    if (result) {\n                        for (const iv of result) {\n                            let text = undefined;\n                            switch (iv.type) {\n                                case 'text':\n                                    text = iv.text;\n                                    break;\n                                case 'variable': {\n                                    let va = iv.variableName;\n                                    if (!va) {\n                                        const lineContent = model.getLineContent(iv.range.startLineNumber);\n                                        va = lineContent.substring(iv.range.startColumn - 1, iv.range.endColumn - 1);\n                                    }\n                                    const value = await findVariable(va, iv.caseSensitiveLookup);\n                                    if (value) {\n                                        text = strings.format(var_value_format, va, value);\n                                    }\n                                    break;\n                                }\n                                case 'expression': {\n                                    let expr = iv.expression;\n                                    if (!expr) {\n                                        const lineContent = model.getLineContent(iv.range.startLineNumber);\n                                        expr = lineContent.substring(iv.range.startColumn - 1, iv.range.endColumn - 1);\n                                    }\n                                    if (expr) {\n                                        const expression = ( new Expression(expr));\n                                        await expression.evaluate(stackFrame.thread.session, stackFrame, 'watch', true);\n                                        if (expression.available) {\n                                            text = strings.format(var_value_format, expr, expression.value);\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n                            if (text) {\n                                const line = iv.range.startLineNumber;\n                                let lineSegments = lineDecorations.get(line);\n                                if (!lineSegments) {\n                                    lineSegments = [];\n                                    lineDecorations.set(line, lineSegments);\n                                }\n                                if (!( lineSegments.some(iv => iv.text === text))) {\n                                    lineSegments.push(( new InlineSegment(iv.range.startColumn, text)));\n                                }\n                            }\n                        }\n                    }\n                }, err => {\n                    onUnexpectedExternalError(err);\n                })\n            )))));\n            const startTime = Date.now();\n            await Promise.all(promises);\n            this.updateInlineValuesScheduler.delay = this.debounceInfo.update(model, Date.now() - startTime);\n            lineDecorations.forEach((segments, line) => {\n                if (segments.length > 0) {\n                    segments = segments.sort((a, b) => a.column - b.column);\n                    const text = ( segments.map(s => s.text)).join(separator);\n                    allDecorations.push(...createInlineValueDecoration(line, text));\n                }\n            });\n        }\n        else {\n            const scopes = await stackFrame.getMostSpecificScopes(stackFrame.range);\n            const decorationsPerScope = await Promise.all(( scopes.map(async (scope) => {\n                const variables = await scope.getChildren();\n                let range = ( new Range(0, 0, stackFrame.range.startLineNumber, stackFrame.range.startColumn));\n                if (scope.range) {\n                    range = range.setStartPosition(scope.range.startLineNumber, scope.range.startColumn);\n                }\n                return createInlineValueDecorationsInsideRange(variables, range, model, this.wordToLineNumbersMap);\n            })));\n            allDecorations = distinct(decorationsPerScope.reduce((previous, current) => previous.concat(current), []),\n            decoration => `${decoration.range.startLineNumber}:${decoration?.options.after?.content}`);\n        }\n        this.oldDecorations.set(allDecorations);\n    }\n    dispose() {\n        if (this.hoverWidget) {\n            this.hoverWidget.dispose();\n        }\n        if (this.configurationWidget) {\n            this.configurationWidget.dispose();\n        }\n        this.toDispose = dispose(this.toDispose);\n        this.oldDecorations.clear();\n    }\n};\nDebugEditorContribution.__decorator = ( __decorate([\n    memoize\n], DebugEditorContribution.prototype, \"showHoverScheduler\", null));\nDebugEditorContribution.__decorator = ( __decorate([\n    memoize\n], DebugEditorContribution.prototype, \"hideHoverScheduler\", null));\nDebugEditorContribution.__decorator = ( __decorate([\n    memoize\n], DebugEditorContribution.prototype, \"removeInlineValuesScheduler\", null));\nDebugEditorContribution.__decorator = ( __decorate([\n    memoize\n], DebugEditorContribution.prototype, \"updateInlineValuesScheduler\", null));\nDebugEditorContribution = ( __decorate([\n    ( __param(1, IDebugService)),\n    ( __param(2, IInstantiationService)),\n    ( __param(3, ICommandService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IHostService)),\n    ( __param(6, IUriIdentityService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, ILanguageFeaturesService)),\n    ( __param(9, ILanguageFeatureDebounceService))\n], DebugEditorContribution));\nexport { DebugEditorContribution };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { VIEWLET_ID, IDebugService } from '../common/debug.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { NotificationPriority } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nlet DebugProgressContribution = class DebugProgressContribution {\n    constructor(debugService, progressService, viewsService) {\n        this.toDispose = [];\n        let progressListener;\n        const listenOnProgress = (session) => {\n            if (progressListener) {\n                progressListener.dispose();\n                progressListener = undefined;\n            }\n            if (session) {\n                progressListener = session.onDidProgressStart(async (progressStartEvent) => {\n                    const promise = ( new Promise(r => {\n                        const listener = Event.any(Event.filter(session.onDidProgressEnd, e => e.body.progressId === progressStartEvent.body.progressId), session.onDidEndAdapter)(() => {\n                            listener.dispose();\n                            r();\n                        });\n                    }));\n                    if (viewsService.isViewContainerVisible(VIEWLET_ID)) {\n                        progressService.withProgress({ location: VIEWLET_ID }, () => promise);\n                    }\n                    const source = debugService.getAdapterManager().getDebuggerLabel(session.configuration.type);\n                    progressService.withProgress({\n                        location: 15 ,\n                        title: progressStartEvent.body.title,\n                        cancellable: progressStartEvent.body.cancellable,\n                        priority: NotificationPriority.SILENT,\n                        source,\n                        delay: 500\n                    }, progressStep => {\n                        let total = 0;\n                        const reportProgress = (progress) => {\n                            let increment = undefined;\n                            if (typeof progress.percentage === 'number') {\n                                increment = progress.percentage - total;\n                                total += increment;\n                            }\n                            progressStep.report({\n                                message: progress.message,\n                                increment,\n                                total: typeof increment === 'number' ? 100 : undefined,\n                            });\n                        };\n                        if (progressStartEvent.body.message) {\n                            reportProgress(progressStartEvent.body);\n                        }\n                        const progressUpdateListener = session.onDidProgressUpdate(e => {\n                            if (e.body.progressId === progressStartEvent.body.progressId) {\n                                reportProgress(e.body);\n                            }\n                        });\n                        return promise.then(() => progressUpdateListener.dispose());\n                    }, () => session.cancel(progressStartEvent.body.progressId));\n                });\n            }\n        };\n        this.toDispose.push(debugService.getViewModel().onDidFocusSession(listenOnProgress));\n        listenOnProgress(debugService.getViewModel().focusedSession);\n        this.toDispose.push(debugService.onWillNewSession(session => {\n            if (!progressListener) {\n                listenOnProgress(session);\n            }\n        }));\n    }\n    dispose() {\n        dispose(this.toDispose);\n    }\n};\nDebugProgressContribution = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, IProgressService)),\n    ( __param(2, IViewsService))\n], DebugProgressContribution));\nexport { DebugProgressContribution };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { PickerQuickAccessProvider, TriggerAction } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IDebugService } from '../common/debug.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { DEBUG_QUICK_ACCESS_PREFIX, ADD_CONFIGURATION_ID } from './debugCommands.js';\nimport { debugConfigure, debugRemoveConfig } from './debugIcons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nlet StartDebugQuickAccessProvider = class StartDebugQuickAccessProvider extends PickerQuickAccessProvider {\n    constructor(debugService, contextService, commandService, notificationService) {\n        super(DEBUG_QUICK_ACCESS_PREFIX, {\n            noResultsPick: {\n                label: ( localize('noDebugResults', \"No matching launch configurations\"))\n            }\n        });\n        this.debugService = debugService;\n        this.contextService = contextService;\n        this.commandService = commandService;\n        this.notificationService = notificationService;\n    }\n    async _getPicks(filter) {\n        const picks = [];\n        if (!this.debugService.getAdapterManager().hasEnabledDebuggers()) {\n            return [];\n        }\n        picks.push({ type: 'separator', label: 'launch.json' });\n        const configManager = this.debugService.getConfigurationManager();\n        let lastGroup;\n        for (const config of configManager.getAllConfigurations()) {\n            const highlights = matchesFuzzy(filter, config.name, true);\n            if (highlights) {\n                if (lastGroup !== config.presentation?.group) {\n                    picks.push({ type: 'separator' });\n                    lastGroup = config.presentation?.group;\n                }\n                picks.push({\n                    label: config.name,\n                    description: this.contextService.getWorkbenchState() === 3  ? config.launch.name : '',\n                    highlights: { label: highlights },\n                    buttons: [{\n                            iconClass: ThemeIcon.asClassName(debugConfigure),\n                            tooltip: ( localize('customizeLaunchConfig', \"Configure Launch Configuration\"))\n                        }],\n                    trigger: () => {\n                        config.launch.openConfigFile({ preserveFocus: false });\n                        return TriggerAction.CLOSE_PICKER;\n                    },\n                    accept: async () => {\n                        await configManager.selectConfiguration(config.launch, config.name);\n                        try {\n                            await this.debugService.startDebugging(config.launch, undefined, { startedByUser: true });\n                        }\n                        catch (error) {\n                            this.notificationService.error(error);\n                        }\n                    }\n                });\n            }\n        }\n        const dynamicProviders = await configManager.getDynamicProviders();\n        if (dynamicProviders.length > 0) {\n            picks.push({\n                type: 'separator', label: ( localize({\n                    key: 'contributed',\n                    comment: ['contributed is lower case because it looks better like that in UI. Nothing preceeds it. It is a name of the grouping of debug configurations.']\n                }, \"contributed\"))\n            });\n        }\n        configManager.getRecentDynamicConfigurations().forEach(({ name, type }) => {\n            const highlights = matchesFuzzy(filter, name, true);\n            if (highlights) {\n                picks.push({\n                    label: name,\n                    highlights: { label: highlights },\n                    buttons: [{\n                            iconClass: ThemeIcon.asClassName(debugRemoveConfig),\n                            tooltip: ( localize('removeLaunchConfig', \"Remove Launch Configuration\"))\n                        }],\n                    trigger: () => {\n                        configManager.removeRecentDynamicConfigurations(name, type);\n                        return TriggerAction.CLOSE_PICKER;\n                    },\n                    accept: async () => {\n                        await configManager.selectConfiguration(undefined, name, undefined, { type });\n                        try {\n                            const { launch, getConfig } = configManager.selectedConfiguration;\n                            const config = await getConfig();\n                            await this.debugService.startDebugging(launch, config, { startedByUser: true });\n                        }\n                        catch (error) {\n                            this.notificationService.error(error);\n                        }\n                    }\n                });\n            }\n        });\n        dynamicProviders.forEach(provider => {\n            picks.push({\n                label: `$(folder) ${provider.label}...`,\n                ariaLabel: ( localize(\n                    { key: 'providerAriaLabel', comment: ['Placeholder stands for the provider label. For example \"NodeJS\".'] },\n                    \"{0} contributed configurations\",\n                    provider.label\n                )),\n                accept: async () => {\n                    const pick = await provider.pick();\n                    if (pick) {\n                        await configManager.selectConfiguration(pick.launch, pick.config.name, pick.config, { type: provider.type });\n                        this.debugService.startDebugging(pick.launch, pick.config, { startedByUser: true });\n                    }\n                }\n            });\n        });\n        const visibleLaunches = configManager.getLaunches().filter(launch => !launch.hidden);\n        if (visibleLaunches.length > 0) {\n            picks.push({ type: 'separator', label: ( localize('configure', \"configure\")) });\n        }\n        for (const launch of visibleLaunches) {\n            const label = this.contextService.getWorkbenchState() === 3  ?\n                ( localize(\"addConfigTo\", \"Add Config ({0})...\", launch.name)) :\n                ( localize('addConfiguration', \"Add Configuration...\"));\n            picks.push({\n                label,\n                description: this.contextService.getWorkbenchState() === 3  ? launch.name : '',\n                highlights: { label: withNullAsUndefined(matchesFuzzy(filter, label, true)) },\n                accept: () => this.commandService.executeCommand(ADD_CONFIGURATION_ID, ( launch.uri.toString()))\n            });\n        }\n        return picks;\n    }\n};\nStartDebugQuickAccessProvider = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, IWorkspaceContextService)),\n    ( __param(2, ICommandService)),\n    ( __param(3, INotificationService))\n], StartDebugQuickAccessProvider));\nexport { StartDebugQuickAccessProvider };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".debug-pane,.debug-view-content{height:100%}.monaco-workbench .debug-action.notification:after{background-color:#c63;border:1px solid #fff;border-radius:10px;content:\\\"\\\";height:6px;position:absolute;right:6px;top:10px;width:6px}.monaco-workbench .part>.title>.title-actions .start-debug-action-item{align-items:center;display:flex;flex-shrink:1;line-height:20px}.monaco-workbench.mac .part>.title>.title-actions .start-debug-action-item{border-radius:4px}.monaco-workbench .part>.title>.title-actions .start-debug-action-item .codicon{flex-shrink:0;line-height:inherit}.monaco-workbench .part>.title>.title-actions .start-debug-action-item .codicon-debug-start{height:21px;padding-left:2px;width:18px}.monaco-workbench .monaco-action-bar .start-debug-action-item .configuration .monaco-select-box{border:none;cursor:pointer;line-height:inherit;margin-top:0;min-width:90px;padding-bottom:0;padding-top:0}.monaco-workbench.safari .monaco-action-bar .start-debug-action-item .configuration .monaco-select-box{margin-bottom:0}.monaco-workbench .monaco-action-bar .start-debug-action-item .configuration.disabled .monaco-select-box{cursor:auto;font-style:italic;opacity:.7}.debug-pane .line-number{padding-left:4px;padding-right:4px}.debug-pane .disabled{cursor:auto;opacity:.65}.debug-pane .monaco-list:focus .monaco-list-row.selected .load-all,.debug-pane .monaco-list:focus .monaco-list-row.selected .state.label,.debug-pane .monaco-list:focus .monaco-list-row.selected.focused .state.label{color:inherit}.debug-pane .call-stack-state-message{flex:1;margin:0 10px;overflow:hidden;text-align:right;text-overflow:ellipsis;white-space:nowrap}.debug-pane .call-stack-state-message>.label{border-radius:3px;font-size:9px;padding:1px 2px}.debug-pane .debug-call-stack .session,.debug-pane .debug-call-stack .thread{align-items:center;display:flex}.debug-pane .debug-call-stack .session>.name,.debug-pane .debug-call-stack .thread>.name{flex:1;overflow:hidden;text-overflow:ellipsis}.debug-pane .debug-call-stack .session>.state.label,.debug-pane .debug-call-stack .thread>.state.label{align-self:center;font-size:.8em;margin:0 10px;overflow:hidden;text-overflow:ellipsis;text-transform:uppercase}.debug-pane .debug-call-stack .monaco-list-row:hover .stack-frame.has-actions .file .line-number,.debug-pane .debug-call-stack .monaco-list-row:hover .state.label{display:none}.debug-pane .monaco-list-row .monaco-action-bar{display:none;flex-shrink:0;margin-right:6px}.debug-pane .monaco-list-row.focused .monaco-action-bar,.debug-pane .monaco-list-row:hover .monaco-action-bar{display:initial}.debug-pane .monaco-list-row .monaco-action-bar .action-label{padding:2px}.debug-pane .session .codicon{line-height:22px;margin-right:2px}.debug-pane .debug-call-stack .stack-frame{display:flex;overflow:hidden;padding-right:.8em;text-overflow:ellipsis}.debug-pane .debug-call-stack .stack-frame.label{font-style:italic;text-align:center}.debug-pane .debug-call-stack .stack-frame .label{flex:1;flex-shrink:0;min-width:fit-content}.debug-pane .debug-call-stack .stack-frame.subtle{font-style:italic}.debug-pane .debug-call-stack .stack-frame.label>.file{display:none}.debug-pane .debug-call-stack .stack-frame>.file{display:flex;flex-wrap:wrap;justify-content:flex-end;overflow:hidden}.debug-pane .debug-call-stack .stack-frame>.file>.line-number.unavailable{display:none}.debug-pane .debug-call-stack .stack-frame>.file>.file-name{margin-right:.8em;overflow:hidden;text-overflow:ellipsis}.debug-pane .debug-call-stack .stack-frame>.file:not(:first-child){margin-left:.8em}.debug-pane .debug-call-stack .load-all{text-align:center}.debug-pane .debug-call-stack .show-more{opacity:.5;text-align:center}.debug-pane .debug-call-stack .error{font-style:italic;overflow:hidden;text-overflow:ellipsis}.debug-pane .scope{font-size:11px;font-weight:700}.debug-pane .monaco-list-row .expression .actionbar-spacer{flex-grow:1}.debug-pane .monaco-list-row .expression .value{overflow:hidden;text-overflow:ellipsis;white-space:pre}.debug-pane .monaco-list-row .expression .value.changed{border-radius:4px}.debug-pane .monaco-inputbox{line-height:normal;width:100%}.debug-pane .inputBoxContainer{box-sizing:border-box;flex-grow:1}.debug-pane .debug-watch .monaco-inputbox{font-family:var(--monaco-monospace-font)}.debug-pane .monaco-inputbox>.ibwrapper{height:19px}.debug-pane .monaco-inputbox>.ibwrapper>.input{color:initial;padding:0}.debug-pane .watch-expression{display:flex}.debug-pane .watch-expression .expression{flex:1}.debug-pane .debug-variables .scope .error{font-family:var(--monaco-monospace-font);font-style:italic;font-weight:400;overflow:hidden;text-overflow:ellipsis}.debug-pane .monaco-list-row{line-height:22px}.debug-pane .debug-breakpoints .monaco-list-row .breakpoint{padding-left:2px}.debug-pane .debug-breakpoints .breakpoint.exception{padding-left:21px}.debug-pane .debug-breakpoints .breakpoint{align-items:center;display:flex;flex:1;padding-right:.8em}.debug-pane .debug-breakpoints .breakpoint input{flex-shrink:0}.debug-pane .debug-breakpoints .breakpoint>.codicon{align-items:center;display:flex;height:19px;justify-content:center;min-width:19px;width:19px}.debug-pane .debug-breakpoints .breakpoint>.access-type,.debug-pane .debug-breakpoints .breakpoint>.condition,.debug-pane .debug-breakpoints .breakpoint>.file-path{flex:1;margin-left:.9em;opacity:.7;overflow:hidden;text-overflow:ellipsis}.debug-pane .debug-breakpoints .breakpoint .name{overflow:hidden;text-overflow:ellipsis}.debug-pane .pane-header .breakpoint-warning{margin-left:3px}.debug-pane .pane-header .breakpoint-warning .monaco-icon-label .codicon{align-items:center;display:flex}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { RawContextKey, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { CONTEXT_DEBUGGERS_AVAILABLE, IDebugService } from '../common/debug.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ViewContentGroups, Extensions, IViewDescriptorService } from '../../../common/views.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { DEBUG_START_COMMAND_ID, SELECT_AND_START_ID } from './debugCommands.js';\nconst debugStartLanguageKey = 'debugStartLanguage';\nconst CONTEXT_DEBUG_START_LANGUAGE = ( (new RawContextKey(debugStartLanguageKey, undefined)));\nconst CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR = ( (new RawContextKey('debuggerInterestedInActiveEditor', false)));\nlet WelcomeView = class WelcomeView extends ViewPane {\n    static { this.ID = 'workbench.debug.welcome'; }\n    static { this.LABEL = ( (localize('run', \"Run\"))); }\n    constructor(options, themeService, keybindingService, contextMenuService, configurationService, contextKeyService, debugService, editorService, instantiationService, viewDescriptorService, openerService, storageSevice, telemetryService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.debugService = debugService;\n        this.editorService = editorService;\n        this.debugStartLanguageContext = CONTEXT_DEBUG_START_LANGUAGE.bindTo(contextKeyService);\n        this.debuggerInterestedContext = CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR.bindTo(contextKeyService);\n        const lastSetLanguage = storageSevice.get(debugStartLanguageKey, 1 );\n        this.debugStartLanguageContext.set(lastSetLanguage);\n        const setContextKey = () => {\n            const editorControl = this.editorService.activeTextEditorControl;\n            if (isCodeEditor(editorControl)) {\n                const model = editorControl.getModel();\n                const language = model ? model.getLanguageId() : undefined;\n                if (language && this.debugService.getAdapterManager().someDebuggerInterestedInLanguage(language)) {\n                    this.debugStartLanguageContext.set(language);\n                    this.debuggerInterestedContext.set(true);\n                    storageSevice.store(debugStartLanguageKey, language, 1 , 1 );\n                    return;\n                }\n            }\n            this.debuggerInterestedContext.set(false);\n        };\n        const disposables = ( (new DisposableStore()));\n        this._register(disposables);\n        this._register(editorService.onDidActiveEditorChange(() => {\n            disposables.clear();\n            const editorControl = this.editorService.activeTextEditorControl;\n            if (isCodeEditor(editorControl)) {\n                disposables.add(editorControl.onDidChangeModelLanguage(setContextKey));\n            }\n            setContextKey();\n        }));\n        this._register(this.debugService.getAdapterManager().onDidRegisterDebugger(setContextKey));\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible) {\n                setContextKey();\n            }\n        }));\n        setContextKey();\n        const debugKeybinding = this.keybindingService.lookupKeybinding(DEBUG_START_COMMAND_ID);\n        debugKeybindingLabel = debugKeybinding ? ` (${debugKeybinding.getLabel()})` : '';\n    }\n    shouldShowWelcome() {\n        return true;\n    }\n};\nWelcomeView = ( (__decorate([\n    ( (__param(1, IThemeService))),\n    ( (__param(2, IKeybindingService))),\n    ( (__param(3, IContextMenuService))),\n    ( (__param(4, IConfigurationService))),\n    ( (__param(5, IContextKeyService))),\n    ( (__param(6, IDebugService))),\n    ( (__param(7, IEditorService))),\n    ( (__param(8, IInstantiationService))),\n    ( (__param(9, IViewDescriptorService))),\n    ( (__param(10, IOpenerService))),\n    ( (__param(11, IStorageService))),\n    ( (__param(12, ITelemetryService)))\n], WelcomeView)));\nconst viewsRegistry = ( (Registry.as(Extensions.ViewsRegistry)));\nlet debugKeybindingLabel = '';\n( (viewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n    content: `[${( ( localize('runAndDebugAction', \"Run and Debug\")))}${debugKeybindingLabel}](command:${DEBUG_START_COMMAND_ID})`,\n    when: CONTEXT_DEBUGGERS_AVAILABLE,\n    group: ViewContentGroups.Debug,\n    order: 1\n})));\n( (viewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n    content: `[${( ( localize('detectThenRunAndDebug', \"Show all automatic debug configurations\")))}](command:${SELECT_AND_START_ID}).`,\n    when: CONTEXT_DEBUGGERS_AVAILABLE,\n    group: ViewContentGroups.Debug,\n    order: 10\n})));\nexport { WelcomeView };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { DisposableStore, dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport './media/debugViewlet.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { createActionViewItem } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { registerAction2, Action2 } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { ViewsSubMenu, ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { IViewsService, IViewDescriptorService } from '../../../common/views.js';\nimport { StartDebugActionViewItem, FocusSessionActionViewItem } from './debugActionViewItems.js';\nimport { DEBUG_START_COMMAND_ID, FOCUS_SESSION_ID, STOP_ID, DISCONNECT_ID } from './debugCommands.js';\nimport { createDisconnectMenuItemAction } from './debugToolBar.js';\nimport { WelcomeView } from './welcomeView.js';\nimport { REPL_VIEW_ID, VIEWLET_ID, CONTEXT_DEBUG_UX_KEY, BREAKPOINTS_VIEW_ID, IDebugService } from '../common/debug.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nlet DebugViewPaneContainer = class DebugViewPaneContainer extends ViewPaneContainer {\n    constructor(layoutService, telemetryService, progressService, debugService, instantiationService, contextService, storageService, themeService, contextMenuService, extensionService, configurationService, contextViewService, contextKeyService, viewDescriptorService) {\n        super(VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }, instantiationService, configurationService, layoutService, contextMenuService, telemetryService, extensionService, themeService, storageService, contextService, viewDescriptorService);\n        this.progressService = progressService;\n        this.debugService = debugService;\n        this.contextViewService = contextViewService;\n        this.contextKeyService = contextKeyService;\n        this.paneListeners = ( new Map());\n        this.stopActionViewItemDisposables = this._register(( new DisposableStore()));\n        this._register(this.debugService.onDidChangeState(state => this.onDebugServiceStateChange(state)));\n        this._register(this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(( new Set([CONTEXT_DEBUG_UX_KEY])))) {\n                this.updateTitleArea();\n            }\n        }));\n        this._register(this.contextService.onDidChangeWorkbenchState(() => this.updateTitleArea()));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('debug.toolBarLocation')) {\n                this.updateTitleArea();\n            }\n        }));\n    }\n    create(parent) {\n        super.create(parent);\n        parent.classList.add('debug-viewlet');\n    }\n    focus() {\n        super.focus();\n        if (this.startDebugActionViewItem) {\n            this.startDebugActionViewItem.focus();\n        }\n        else {\n            this.focusView(WelcomeView.ID);\n        }\n    }\n    getActionViewItem(action) {\n        if (action.id === DEBUG_START_COMMAND_ID) {\n            this.startDebugActionViewItem = this.instantiationService.createInstance(StartDebugActionViewItem, null, action);\n            return this.startDebugActionViewItem;\n        }\n        if (action.id === FOCUS_SESSION_ID) {\n            return ( new FocusSessionActionViewItem(\n                action,\n                undefined,\n                this.debugService,\n                this.contextViewService,\n                this.configurationService\n            ));\n        }\n        if (action.id === STOP_ID || action.id === DISCONNECT_ID) {\n            this.stopActionViewItemDisposables.clear();\n            const item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action, this.stopActionViewItemDisposables, accessor));\n            if (item) {\n                return item;\n            }\n        }\n        return createActionViewItem(this.instantiationService, action);\n    }\n    focusView(id) {\n        const view = this.getView(id);\n        if (view) {\n            view.focus();\n        }\n    }\n    onDebugServiceStateChange(state) {\n        if (this.progressResolve) {\n            this.progressResolve();\n            this.progressResolve = undefined;\n        }\n        if (state === 1 ) {\n            this.progressService.withProgress({ location: VIEWLET_ID, }, _progress => {\n                return ( new Promise(resolve => this.progressResolve = resolve));\n            });\n        }\n    }\n    addPanes(panes) {\n        super.addPanes(panes);\n        for (const { pane: pane } of panes) {\n            if (pane.id === BREAKPOINTS_VIEW_ID) {\n                this.breakpointView = pane;\n                this.updateBreakpointsMaxSize();\n            }\n            else {\n                this.paneListeners.set(pane.id, pane.onDidChange(() => this.updateBreakpointsMaxSize()));\n            }\n        }\n    }\n    removePanes(panes) {\n        super.removePanes(panes);\n        for (const pane of panes) {\n            dispose(this.paneListeners.get(pane.id));\n            this.paneListeners.delete(pane.id);\n        }\n    }\n    updateBreakpointsMaxSize() {\n        if (this.breakpointView) {\n            const allOtherCollapsed = this.panes.every(view => !view.isExpanded() || view === this.breakpointView);\n            this.breakpointView.maximumBodySize = allOtherCollapsed ? Number.POSITIVE_INFINITY : this.breakpointView.minimumBodySize;\n        }\n    }\n};\nDebugViewPaneContainer = ( __decorate([\n    ( __param(0, IWorkbenchLayoutService)),\n    ( __param(1, ITelemetryService)),\n    ( __param(2, IProgressService)),\n    ( __param(3, IDebugService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IWorkspaceContextService)),\n    ( __param(6, IStorageService)),\n    ( __param(7, IThemeService)),\n    ( __param(8, IContextMenuService)),\n    ( __param(9, IExtensionService)),\n    ( __param(10, IConfigurationService)),\n    ( __param(11, IContextViewService)),\n    ( __param(12, IContextKeyService)),\n    ( __param(13, IViewDescriptorService))\n], DebugViewPaneContainer));\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'debug.toggleReplIgnoreFocus',\n            title: ( nls.localize('debugPanel', \"Debug Console\")),\n            toggled: ( ContextKeyExpr.has(`view.${REPL_VIEW_ID}.visible`)),\n            menu: [{\n                    id: ViewsSubMenu,\n                    group: '3_toggleRepl',\n                    order: 30,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('viewContainer', VIEWLET_ID))))\n                }]\n        });\n    }\n    async run(accessor) {\n        const viewsService = accessor.get(IViewsService);\n        if (viewsService.isViewVisible(REPL_VIEW_ID)) {\n            viewsService.closeView(REPL_VIEW_ID);\n        }\n        else {\n            await viewsService.openView(REPL_VIEW_ID);\n        }\n    }\n});\nexport { DebugViewPaneContainer };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { PixelRatio } from 'monaco-editor/esm/vs/base/browser/browser.js';\nimport { append, $, addStandardDisposableListener } from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { BareFontInfo } from 'monaco-editor/esm/vs/editor/common/config/fontInfo.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { WorkbenchTable } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { editorBackground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { DISASSEMBLY_VIEW_ID, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, IDebugService } from '../common/debug.js';\nimport { breakpoint, debugBreakpointHint, debugStackframe, debugStackframeFocused } from './debugIcons.js';\nimport { StringBuilder } from 'monaco-editor/esm/vs/editor/common/core/stringBuilder.js';\nimport { dispose, Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { topStackFrameColor, focusedStackFrameColor } from './callStackEditorContribution.js';\nimport { InstructionBreakpoint } from '../common/debugModel.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { getUriFromSource } from '../common/debugSource.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { isUri } from '../common/debugUtils.js';\nimport { isAbsolute } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { applyFontInfo } from 'monaco-editor/esm/vs/editor/browser/config/domFontInfo.js';\nimport { binarySearch2 } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nconst disassemblyNotAvailable = {\n    allowBreakpoint: false,\n    isBreakpointSet: false,\n    isBreakpointEnabled: false,\n    instruction: {\n        address: '-1',\n        instruction: ( (localize('instructionNotAvailable', \"Disassembly not available.\")))\n    },\n    instructionAddress: BigInt(-1)\n};\nlet DisassemblyView = class DisassemblyView extends EditorPane {\n    static { this.NUM_INSTRUCTIONS_TO_LOAD = 50; }\n    constructor(telemetryService, themeService, storageService, _configurationService, _instantiationService, _debugService) {\n        super(DISASSEMBLY_VIEW_ID, telemetryService, themeService, storageService);\n        this._configurationService = _configurationService;\n        this._instantiationService = _instantiationService;\n        this._debugService = _debugService;\n        this._instructionBpList = [];\n        this._enableSourceCodeRender = true;\n        this._loadingLock = false;\n        this._disassembledInstructions = undefined;\n        this._onDidChangeStackFrame = ( (new Emitter()));\n        this._previousDebuggingState = _debugService.state;\n        this._fontInfo = BareFontInfo.createFromRawSettings(_configurationService.getValue('editor'), PixelRatio.value);\n        this._register(_configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor')) {\n                this._fontInfo = BareFontInfo.createFromRawSettings(_configurationService.getValue('editor'), PixelRatio.value);\n            }\n            if (e.affectsConfiguration('debug')) {\n                const newValue = this._configurationService.getValue('debug').disassemblyView.showSourceCode;\n                if (this._enableSourceCodeRender !== newValue) {\n                    this._enableSourceCodeRender = newValue;\n                    this.reloadDisassembly(undefined);\n                }\n                else {\n                    this._disassembledInstructions?.rerender();\n                }\n            }\n        }));\n    }\n    get fontInfo() { return this._fontInfo; }\n    get currentInstructionAddresses() {\n        return (\n             (( (( (this._debugService.getModel().getSessions(false).\n                map(session => session.getAllThreads()))).\n                reduce((prev, curr) => prev.concat(curr), []).\n                map(thread => thread.getTopStackFrame()))).\n                map(frame => frame?.instructionPointerReference))\n        );\n    }\n    get focusedCurrentInstructionAddress() {\n        return this._debugService.getViewModel().focusedStackFrame?.thread.getTopStackFrame()?.instructionPointerReference;\n    }\n    get focusedInstructionAddress() {\n        return this._debugService.getViewModel().focusedStackFrame?.instructionPointerReference;\n    }\n    get isSourceCodeRender() { return this._enableSourceCodeRender; }\n    get debugSession() {\n        return this._debugService.getViewModel().focusedSession;\n    }\n    get onDidChangeStackFrame() { return this._onDidChangeStackFrame.event; }\n    createEditor(parent) {\n        this._enableSourceCodeRender = this._configurationService.getValue('debug').disassemblyView.showSourceCode;\n        const lineHeight = this.fontInfo.lineHeight;\n        const thisOM = this;\n        const delegate = new class {\n            constructor() {\n                this.headerRowHeight = 0;\n            }\n            getHeight(row) {\n                if (thisOM.isSourceCodeRender && row.instruction.location?.path && row.instruction.line) {\n                    if (row.instruction.endLine) {\n                        return lineHeight * (row.instruction.endLine - row.instruction.line + 2);\n                    }\n                    else {\n                        return lineHeight * 2;\n                    }\n                }\n                return lineHeight;\n            }\n        };\n        const instructionRenderer = this._register(this._instantiationService.createInstance(InstructionRenderer, this));\n        this._disassembledInstructions = this._register(this._instantiationService.createInstance(WorkbenchTable, 'DisassemblyView', parent, delegate, [\n            {\n                label: '',\n                tooltip: '',\n                weight: 0,\n                minimumWidth: this.fontInfo.lineHeight,\n                maximumWidth: this.fontInfo.lineHeight,\n                templateId: BreakpointRenderer.TEMPLATE_ID,\n                project(row) { return row; }\n            },\n            {\n                label: ( (localize('disassemblyTableColumnLabel', \"instructions\"))),\n                tooltip: '',\n                weight: 0.3,\n                templateId: InstructionRenderer.TEMPLATE_ID,\n                project(row) { return row; }\n            },\n        ], [\n            this._instantiationService.createInstance(BreakpointRenderer, this),\n            instructionRenderer,\n        ], {\n            identityProvider: { getId: (e) => e.instruction.address },\n            horizontalScrolling: false,\n            overrideStyles: {\n                listBackground: editorBackground\n            },\n            multipleSelectionSupport: false,\n            setRowLineHeight: false,\n            openOnSingleClick: false,\n            accessibilityProvider: ( (new AccessibilityProvider())),\n            mouseSupport: false\n        }));\n        this.reloadDisassembly();\n        this._register(this._disassembledInstructions.onDidScroll(e => {\n            if (this._loadingLock) {\n                return;\n            }\n            if (e.oldScrollTop > e.scrollTop && e.scrollTop < e.height) {\n                this._loadingLock = true;\n                const topElement = Math.floor(e.scrollTop / this.fontInfo.lineHeight) + DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD;\n                this.scrollUp_LoadDisassembledInstructions(DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD).then((success) => {\n                    if (success) {\n                        this._disassembledInstructions.reveal(topElement, 0);\n                    }\n                    this._loadingLock = false;\n                });\n            }\n            else if (e.oldScrollTop < e.scrollTop && e.scrollTop + e.height > e.scrollHeight - e.height) {\n                this._loadingLock = true;\n                this.scrollDown_LoadDisassembledInstructions(DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD).then(() => { this._loadingLock = false; });\n            }\n        }));\n        this._register(this._debugService.getViewModel().onDidFocusStackFrame((stackFrame) => {\n            if (this._disassembledInstructions) {\n                this.goToAddress();\n                this._onDidChangeStackFrame.fire();\n            }\n        }));\n        this._register(this._debugService.getModel().onDidChangeBreakpoints(bpEvent => {\n            if (bpEvent && this._disassembledInstructions) {\n                let changed = false;\n                bpEvent.added?.forEach((bp) => {\n                    if (bp instanceof InstructionBreakpoint) {\n                        const index = this.getIndexFromAddress(bp.instructionReference);\n                        if (index >= 0) {\n                            this._disassembledInstructions.row(index).isBreakpointSet = true;\n                            this._disassembledInstructions.row(index).isBreakpointEnabled = bp.enabled;\n                            changed = true;\n                        }\n                    }\n                });\n                bpEvent.removed?.forEach((bp) => {\n                    if (bp instanceof InstructionBreakpoint) {\n                        const index = this.getIndexFromAddress(bp.instructionReference);\n                        if (index >= 0) {\n                            this._disassembledInstructions.row(index).isBreakpointSet = false;\n                            changed = true;\n                        }\n                    }\n                });\n                bpEvent.changed?.forEach((bp) => {\n                    if (bp instanceof InstructionBreakpoint) {\n                        const index = this.getIndexFromAddress(bp.instructionReference);\n                        if (index >= 0) {\n                            if (this._disassembledInstructions.row(index).isBreakpointEnabled !== bp.enabled) {\n                                this._disassembledInstructions.row(index).isBreakpointEnabled = bp.enabled;\n                                changed = true;\n                            }\n                        }\n                    }\n                });\n                this._instructionBpList = this._debugService.getModel().getInstructionBreakpoints();\n                if (changed) {\n                    this._onDidChangeStackFrame.fire();\n                }\n            }\n        }));\n        this._register(this._debugService.onDidChangeState(e => {\n            if (((e === 3  || e === 2) ) &&\n                ((this._previousDebuggingState !== 3  && this._previousDebuggingState !== 2) )) {\n                this._disassembledInstructions?.splice(0, this._disassembledInstructions.length, [disassemblyNotAvailable]);\n                this._enableSourceCodeRender = this._configurationService.getValue('debug').disassemblyView.showSourceCode;\n            }\n            this._previousDebuggingState = e;\n        }));\n    }\n    layout(dimension) {\n        this._disassembledInstructions?.layout(dimension.height);\n    }\n    goToAddress(address, focus) {\n        if (!this._disassembledInstructions) {\n            return;\n        }\n        if (!address) {\n            address = this.focusedInstructionAddress;\n        }\n        if (!address) {\n            return;\n        }\n        const index = this.getIndexFromAddress(address);\n        if (index >= 0) {\n            this._disassembledInstructions.reveal(index);\n            if (focus) {\n                this._disassembledInstructions.domFocus();\n                this._disassembledInstructions.setFocus([index]);\n            }\n        }\n        else if (this._debugService.state === 2 ) {\n            this.reloadDisassembly(address);\n        }\n    }\n    async scrollUp_LoadDisassembledInstructions(instructionCount) {\n        if (this._disassembledInstructions && this._disassembledInstructions.length > 0) {\n            const address = this._disassembledInstructions?.row(0).instruction.address;\n            return this.loadDisassembledInstructions(address, -instructionCount, instructionCount);\n        }\n        return false;\n    }\n    async scrollDown_LoadDisassembledInstructions(instructionCount) {\n        if (this._disassembledInstructions && this._disassembledInstructions.length > 0) {\n            const address = this._disassembledInstructions?.row(this._disassembledInstructions?.length - 1).instruction.address;\n            return this.loadDisassembledInstructions(address, 1, instructionCount);\n        }\n        return false;\n    }\n    async loadDisassembledInstructions(address, instructionOffset, instructionCount) {\n        if (!address || address === '-1') {\n            address = this.focusedInstructionAddress;\n        }\n        if (!address) {\n            return false;\n        }\n        const session = this.debugSession;\n        const resultEntries = await session?.disassemble(address, 0, instructionOffset, instructionCount);\n        if (session && resultEntries && this._disassembledInstructions) {\n            const newEntries = [];\n            let lastLocation;\n            let lastLine;\n            for (let i = 0; i < resultEntries.length; i++) {\n                const found = this._instructionBpList.find(p => p.instructionReference === resultEntries[i].address);\n                const instruction = resultEntries[i];\n                if (instruction.location) {\n                    lastLocation = instruction.location;\n                    lastLine = undefined;\n                }\n                if (instruction.line) {\n                    const currentLine = {\n                        startLineNumber: instruction.line,\n                        startColumn: instruction.column ?? 0,\n                        endLineNumber: instruction.endLine ?? instruction.line,\n                        endColumn: instruction.endColumn ?? 0,\n                    };\n                    if (!Range.equalsRange(currentLine, lastLine ?? null)) {\n                        lastLine = currentLine;\n                        instruction.location = lastLocation;\n                    }\n                }\n                newEntries.push({ allowBreakpoint: true, isBreakpointSet: found !== undefined, isBreakpointEnabled: !!found?.enabled, instruction: instruction });\n            }\n            const specialEntriesToRemove = this._disassembledInstructions.length === 1 ? 1 : 0;\n            if (instructionOffset >= 0) {\n                this._disassembledInstructions.splice(this._disassembledInstructions.length, specialEntriesToRemove, newEntries);\n            }\n            else {\n                this._disassembledInstructions.splice(0, specialEntriesToRemove, newEntries);\n            }\n            return true;\n        }\n        return false;\n    }\n    getIndexFromAddress(instructionAddress) {\n        const disassembledInstructions = this._disassembledInstructions;\n        if (disassembledInstructions && disassembledInstructions.length > 0) {\n            const address = BigInt(instructionAddress);\n            if (address) {\n                return binarySearch2(disassembledInstructions.length, index => {\n                    const row = disassembledInstructions.row(index);\n                    this.ensureAddressParsed(row);\n                    if (row.instructionAddress > address) {\n                        return 1;\n                    }\n                    else if (row.instructionAddress < address) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n            }\n        }\n        return -1;\n    }\n    ensureAddressParsed(entry) {\n        if (entry.instructionAddress !== undefined) {\n            return;\n        }\n        else {\n            entry.instructionAddress = BigInt(entry.instruction.address);\n        }\n    }\n    reloadDisassembly(targetAddress) {\n        if (this._disassembledInstructions) {\n            this._loadingLock = true;\n            this._disassembledInstructions.splice(0, this._disassembledInstructions.length, [disassemblyNotAvailable]);\n            this._instructionBpList = this._debugService.getModel().getInstructionBreakpoints();\n            this.loadDisassembledInstructions(targetAddress, -DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 4, DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 8).then(() => {\n                if (this._disassembledInstructions.length > 0) {\n                    const targetIndex = Math.floor(this._disassembledInstructions.length / 2);\n                    this._disassembledInstructions.reveal(targetIndex, 0.5);\n                    this._disassembledInstructions.domFocus();\n                    this._disassembledInstructions.setFocus([targetIndex]);\n                }\n                this._loadingLock = false;\n            });\n        }\n    }\n};\nDisassemblyView = ( (__decorate([\n    ( (__param(0, ITelemetryService))),\n    ( (__param(1, IThemeService))),\n    ( (__param(2, IStorageService))),\n    ( (__param(3, IConfigurationService))),\n    ( (__param(4, IInstantiationService))),\n    ( (__param(5, IDebugService)))\n], DisassemblyView)));\nlet BreakpointRenderer = class BreakpointRenderer {\n    static { this.TEMPLATE_ID = 'breakpoint'; }\n    constructor(_disassemblyView, _debugService) {\n        this._disassemblyView = _disassemblyView;\n        this._debugService = _debugService;\n        this.templateId = BreakpointRenderer.TEMPLATE_ID;\n        this._breakpointIcon = 'codicon-' + breakpoint.regular.id;\n        this._breakpointDisabledIcon = 'codicon-' + breakpoint.disabled.id;\n        this._breakpointHintIcon = 'codicon-' + debugBreakpointHint.id;\n        this._debugStackframe = 'codicon-' + debugStackframe.id;\n        this._debugStackframeFocused = 'codicon-' + debugStackframeFocused.id;\n    }\n    renderTemplate(container) {\n        container.style.alignSelf = 'flex-end';\n        const icon = append(container, $('.disassembly-view'));\n        icon.classList.add('codicon');\n        icon.style.display = 'flex';\n        icon.style.alignItems = 'center';\n        icon.style.justifyContent = 'center';\n        icon.style.height = this._disassemblyView.fontInfo.lineHeight + 'px';\n        const currentElement = { element: undefined };\n        const disposables = [\n            this._disassemblyView.onDidChangeStackFrame(() => this.rerenderDebugStackframe(icon, currentElement.element)),\n            addStandardDisposableListener(container, 'mouseover', () => {\n                if (currentElement.element?.allowBreakpoint) {\n                    icon.classList.add(this._breakpointHintIcon);\n                }\n            }),\n            addStandardDisposableListener(container, 'mouseout', () => {\n                if (currentElement.element?.allowBreakpoint) {\n                    icon.classList.remove(this._breakpointHintIcon);\n                }\n            }),\n            addStandardDisposableListener(container, 'click', () => {\n                if (currentElement.element?.allowBreakpoint) {\n                    icon.classList.add(this._breakpointHintIcon);\n                    if (currentElement.element.isBreakpointSet) {\n                        this._debugService.removeInstructionBreakpoints(currentElement.element.instruction.address);\n                    }\n                    else if (currentElement.element.allowBreakpoint && !currentElement.element.isBreakpointSet) {\n                        this._debugService.addInstructionBreakpoint(currentElement.element.instruction.address, 0);\n                    }\n                }\n            })\n        ];\n        return { currentElement, icon, disposables };\n    }\n    renderElement(element, index, templateData, height) {\n        templateData.currentElement.element = element;\n        this.rerenderDebugStackframe(templateData.icon, element);\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.disposables);\n        templateData.disposables = [];\n    }\n    rerenderDebugStackframe(icon, element) {\n        if (element?.instruction.address === this._disassemblyView.focusedCurrentInstructionAddress) {\n            icon.classList.add(this._debugStackframe);\n        }\n        else if (element?.instruction.address === this._disassemblyView.focusedInstructionAddress) {\n            icon.classList.add(this._debugStackframeFocused);\n        }\n        else {\n            icon.classList.remove(this._debugStackframe);\n            icon.classList.remove(this._debugStackframeFocused);\n        }\n        icon.classList.remove(this._breakpointHintIcon);\n        if (element?.isBreakpointSet) {\n            if (element.isBreakpointEnabled) {\n                icon.classList.add(this._breakpointIcon);\n                icon.classList.remove(this._breakpointDisabledIcon);\n            }\n            else {\n                icon.classList.remove(this._breakpointIcon);\n                icon.classList.add(this._breakpointDisabledIcon);\n            }\n        }\n        else {\n            icon.classList.remove(this._breakpointIcon);\n            icon.classList.remove(this._breakpointDisabledIcon);\n        }\n    }\n};\nBreakpointRenderer = ( (__decorate([\n    ( (__param(1, IDebugService)))\n], BreakpointRenderer)));\nlet InstructionRenderer = class InstructionRenderer extends Disposable {\n    static { this.TEMPLATE_ID = 'instruction'; }\n    static { this.INSTRUCTION_ADDR_MIN_LENGTH = 25; }\n    static { this.INSTRUCTION_BYTES_MIN_LENGTH = 30; }\n    constructor(_disassemblyView, themeService, editorService, textModelService, uriService, logService) {\n        super();\n        this._disassemblyView = _disassemblyView;\n        this.editorService = editorService;\n        this.textModelService = textModelService;\n        this.uriService = uriService;\n        this.logService = logService;\n        this.templateId = InstructionRenderer.TEMPLATE_ID;\n        this._topStackFrameColor = themeService.getColorTheme().getColor(topStackFrameColor);\n        this._focusedStackFrameColor = themeService.getColorTheme().getColor(focusedStackFrameColor);\n        this._register(themeService.onDidColorThemeChange(e => {\n            this._topStackFrameColor = e.getColor(topStackFrameColor);\n            this._focusedStackFrameColor = e.getColor(focusedStackFrameColor);\n        }));\n    }\n    renderTemplate(container) {\n        const sourcecode = append(container, $('.sourcecode'));\n        const instruction = append(container, $('.instruction'));\n        this.applyFontInfo(sourcecode);\n        this.applyFontInfo(instruction);\n        const currentElement = { element: undefined };\n        const cellDisposable = [];\n        const disposables = [\n            this._disassemblyView.onDidChangeStackFrame(() => this.rerenderBackground(instruction, sourcecode, currentElement.element)),\n            addStandardDisposableListener(sourcecode, 'dblclick', () => this.openSourceCode(currentElement.element?.instruction)),\n        ];\n        return { currentElement, instruction, sourcecode, cellDisposable, disposables };\n    }\n    renderElement(element, index, templateData, height) {\n        this.renderElementInner(element, index, templateData, height);\n    }\n    async renderElementInner(element, index, templateData, height) {\n        templateData.currentElement.element = element;\n        const instruction = element.instruction;\n        templateData.sourcecode.innerText = '';\n        const sb = ( (new StringBuilder(1000)));\n        if (this._disassemblyView.isSourceCodeRender && instruction.location?.path && instruction.line) {\n            const sourceURI = this.getUriFromSource(instruction);\n            if (sourceURI) {\n                let textModel = undefined;\n                const sourceSB = ( (new StringBuilder(10000)));\n                const ref = await this.textModelService.createModelReference(sourceURI);\n                textModel = ref.object.textEditorModel;\n                templateData.cellDisposable.push(ref);\n                if (textModel && templateData.currentElement.element === element) {\n                    let lineNumber = instruction.line;\n                    while (lineNumber && lineNumber >= 1 && lineNumber <= textModel.getLineCount()) {\n                        const lineContent = textModel.getLineContent(lineNumber);\n                        sourceSB.appendString(`  ${lineNumber}: `);\n                        sourceSB.appendString(lineContent + '\\n');\n                        if (instruction.endLine && lineNumber < instruction.endLine) {\n                            lineNumber++;\n                            continue;\n                        }\n                        break;\n                    }\n                    templateData.sourcecode.innerText = sourceSB.build();\n                }\n            }\n        }\n        let spacesToAppend = 10;\n        if (instruction.address !== '-1') {\n            sb.appendString(instruction.address);\n            if (instruction.address.length < InstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH) {\n                spacesToAppend = InstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH - instruction.address.length;\n            }\n            for (let i = 0; i < spacesToAppend; i++) {\n                sb.appendString(' ');\n            }\n        }\n        if (instruction.instructionBytes) {\n            sb.appendString(instruction.instructionBytes);\n            spacesToAppend = 10;\n            if (instruction.instructionBytes.length < InstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH) {\n                spacesToAppend = InstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH - instruction.instructionBytes.length;\n            }\n            for (let i = 0; i < spacesToAppend; i++) {\n                sb.appendString(' ');\n            }\n        }\n        sb.appendString(instruction.instruction);\n        templateData.instruction.innerText = sb.build();\n        this.rerenderBackground(templateData.instruction, templateData.sourcecode, element);\n    }\n    disposeElement(element, index, templateData, height) {\n        dispose(templateData.cellDisposable);\n        templateData.cellDisposable = [];\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.disposables);\n        templateData.disposables = [];\n    }\n    rerenderBackground(instruction, sourceCode, element) {\n        if (element && this._disassemblyView.currentInstructionAddresses.includes(element.instruction.address)) {\n            instruction.style.background = this._topStackFrameColor?.toString() || 'transparent';\n        }\n        else if (element?.instruction.address === this._disassemblyView.focusedInstructionAddress) {\n            instruction.style.background = this._focusedStackFrameColor?.toString() || 'transparent';\n        }\n        else {\n            instruction.style.background = 'transparent';\n        }\n    }\n    openSourceCode(instruction) {\n        if (instruction) {\n            const sourceURI = this.getUriFromSource(instruction);\n            const selection = instruction.endLine ? {\n                startLineNumber: instruction.line,\n                endLineNumber: instruction.endLine,\n                startColumn: instruction.column || 1,\n                endColumn: instruction.endColumn || 1073741824 ,\n            } : {\n                startLineNumber: instruction.line,\n                endLineNumber: instruction.line,\n                startColumn: instruction.column || 1,\n                endColumn: instruction.endColumn || 1073741824 ,\n            };\n            this.editorService.openEditor({\n                resource: sourceURI,\n                description: ( (localize('editorOpenedFromDisassemblyDescription', \"from disassembly\"))),\n                options: {\n                    preserveFocus: false,\n                    selection: selection,\n                    revealIfOpened: true,\n                    selectionRevealType: 1 ,\n                    pinned: false,\n                }\n            });\n        }\n    }\n    getUriFromSource(instruction) {\n        const path = instruction.location.path;\n        if (path && isUri(path)) {\n            return this.uriService.asCanonicalUri(( (URI.parse(path))));\n        }\n        if (path && isAbsolute(path)) {\n            return this.uriService.asCanonicalUri(URI.file(path));\n        }\n        return getUriFromSource(instruction.location, instruction.location.path, this._disassemblyView.debugSession.getId(), this.uriService, this.logService);\n    }\n    applyFontInfo(element) {\n        applyFontInfo(element, this._disassemblyView.fontInfo);\n        element.style.whiteSpace = 'pre';\n    }\n};\nInstructionRenderer = ( (__decorate([\n    ( (__param(1, IThemeService))),\n    ( (__param(2, IEditorService))),\n    ( (__param(3, ITextModelService))),\n    ( (__param(4, IUriIdentityService))),\n    ( (__param(5, ILogService)))\n], InstructionRenderer)));\nclass AccessibilityProvider {\n    getWidgetAriaLabel() {\n        return (\n             (localize('disassemblyView', \"Disassembly View\"))\n        );\n    }\n    getAriaLabel(element) {\n        let label = '';\n        const instruction = element.instruction;\n        if (instruction.address !== '-1') {\n            label += `${( ( localize('instructionAddress', \"Address\")))}: ${instruction.address}`;\n        }\n        if (instruction.instructionBytes) {\n            label += `, ${( ( localize('instructionBytes', \"Bytes\")))}: ${instruction.instructionBytes}`;\n        }\n        label += `, ${( ( localize(`instructionText`, \"Instruction\")))}: ${instruction.instruction}`;\n        return label;\n    }\n}\nlet DisassemblyViewContribution = class DisassemblyViewContribution {\n    constructor(editorService, debugService, contextKeyService) {\n        contextKeyService.bufferChangeEvents(() => {\n            this._languageSupportsDisassemleRequest = CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST.bindTo(contextKeyService);\n        });\n        const onDidActiveEditorChangeListener = () => {\n            if (this._onDidChangeModelLanguage) {\n                this._onDidChangeModelLanguage.dispose();\n                this._onDidChangeModelLanguage = undefined;\n            }\n            const activeTextEditorControl = editorService.activeTextEditorControl;\n            if (isCodeEditor(activeTextEditorControl)) {\n                const language = activeTextEditorControl.getModel()?.getLanguageId();\n                this._languageSupportsDisassemleRequest?.set(!!language && debugService.getAdapterManager().someDebuggerInterestedInLanguage(language));\n                this._onDidChangeModelLanguage = activeTextEditorControl.onDidChangeModelLanguage(e => {\n                    this._languageSupportsDisassemleRequest?.set(debugService.getAdapterManager().someDebuggerInterestedInLanguage(e.newLanguage));\n                });\n            }\n            else {\n                this._languageSupportsDisassemleRequest?.set(false);\n            }\n        };\n        onDidActiveEditorChangeListener();\n        this._onDidActiveEditorChangeListener = editorService.onDidActiveEditorChange(onDidActiveEditorChangeListener);\n    }\n    dispose() {\n        this._onDidActiveEditorChangeListener.dispose();\n        this._onDidChangeModelLanguage?.dispose();\n    }\n};\nDisassemblyViewContribution = ( (__decorate([\n    ( (__param(0, IEditorService))),\n    ( (__param(1, IDebugService))),\n    ( (__param(2, IContextKeyService)))\n], DisassemblyViewContribution)));\nexport { DisassemblyView, DisassemblyViewContribution };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { getMimeTypes } from 'monaco-editor/esm/vs/editor/common/services/languagesAssociations.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { DEBUG_SCHEME, IDebugService } from './debug.js';\nimport { Source } from './debugSource.js';\nimport { IEditorWorkerService } from 'monaco-editor/esm/vs/editor/common/services/editorWorker.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { CancellationTokenSource } from 'monaco-editor/esm/vs/base/common/cancellation.js';\nimport { PLAINTEXT_LANGUAGE_ID } from 'monaco-editor/esm/vs/editor/common/languages/modesRegistry.js';\nimport { ErrorNoTelemetry } from 'monaco-editor/esm/vs/base/common/errors.js';\nlet DebugContentProvider = class DebugContentProvider {\n    constructor(textModelResolverService, debugService, modelService, languageService, editorWorkerService) {\n        this.debugService = debugService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.editorWorkerService = editorWorkerService;\n        this.pendingUpdates = ( new Map());\n        textModelResolverService.registerTextModelContentProvider(DEBUG_SCHEME, this);\n        DebugContentProvider.INSTANCE = this;\n    }\n    dispose() {\n        this.pendingUpdates.forEach(cancellationSource => cancellationSource.dispose());\n    }\n    provideTextContent(resource) {\n        return this.createOrUpdateContentModel(resource, true);\n    }\n    static refreshDebugContent(resource) {\n        DebugContentProvider.INSTANCE?.createOrUpdateContentModel(resource, false);\n    }\n    createOrUpdateContentModel(resource, createIfNotExists) {\n        const model = this.modelService.getModel(resource);\n        if (!model && !createIfNotExists) {\n            return null;\n        }\n        let session;\n        if (resource.query) {\n            const data = Source.getEncodedDebugData(resource);\n            session = this.debugService.getModel().getSession(data.sessionId);\n        }\n        if (!session) {\n            session = this.debugService.getViewModel().focusedSession;\n        }\n        if (!session) {\n            return Promise.reject(( new ErrorNoTelemetry(( localize('unable', \"Unable to resolve the resource without a debug session\")))));\n        }\n        const createErrModel = (errMsg) => {\n            this.debugService.sourceIsNotAvailable(resource);\n            const languageSelection = this.languageService.createById(PLAINTEXT_LANGUAGE_ID);\n            const message = errMsg\n                ? ( localize(\n                'canNotResolveSourceWithError',\n                \"Could not load source '{0}': {1}.\",\n                resource.path,\n                errMsg\n            ))\n                : ( localize('canNotResolveSource', \"Could not load source '{0}'.\", resource.path));\n            return this.modelService.createModel(message, languageSelection, resource);\n        };\n        return session.loadSource(resource).then(response => {\n            if (response && response.body) {\n                if (model) {\n                    const newContent = response.body.content;\n                    const cancellationSource = this.pendingUpdates.get(model.id);\n                    cancellationSource?.cancel();\n                    const myToken = ( new CancellationTokenSource());\n                    this.pendingUpdates.set(model.id, myToken);\n                    return this.editorWorkerService.computeMoreMinimalEdits(model.uri, [{ text: newContent, range: model.getFullModelRange() }]).then(edits => {\n                        this.pendingUpdates.delete(model.id);\n                        if (!myToken.token.isCancellationRequested && edits && edits.length > 0) {\n                            model.applyEdits(( edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text))));\n                        }\n                        return model;\n                    });\n                }\n                else {\n                    const mime = response.body.mimeType || getMimeTypes(resource)[0];\n                    const languageSelection = this.languageService.createByMimeType(mime);\n                    return this.modelService.createModel(response.body.content, languageSelection, resource);\n                }\n            }\n            return createErrModel();\n        }, (err) => createErrModel(err.message));\n    }\n};\nDebugContentProvider = ( __decorate([\n    ( __param(0, ITextModelService)),\n    ( __param(1, IDebugService)),\n    ( __param(2, IModelService)),\n    ( __param(3, ILanguageService)),\n    ( __param(4, IEditorWorkerService))\n], DebugContentProvider));\nexport { DebugContentProvider };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { isAbsolute, normalize, posix } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { renderViewTree } from './baseDebugView.js';\nimport { CONTEXT_LOADED_SCRIPTS_ITEM_TYPE, IDebugService } from '../common/debug.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { normalizeDriveLetter, tildify } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { ltrim } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { ResourceLabels } from '../../../browser/labels.js';\nimport { FileKind } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { WorkbenchCompressibleObjectTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { DebugContentProvider } from '../common/debugContentProvider.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { TreeFindMode } from 'monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js';\nconst NEW_STYLE_COMPRESS = true;\nconst URI_SCHEMA_PATTERN = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\nclass BaseTreeItem {\n    constructor(_parent, _label, isIncompressible = false) {\n        this._parent = _parent;\n        this._label = _label;\n        this.isIncompressible = isIncompressible;\n        this._children = ( new Map());\n        this._showedMoreThanOne = false;\n    }\n    updateLabel(label) {\n        this._label = label;\n    }\n    isLeaf() {\n        return this._children.size === 0;\n    }\n    getSession() {\n        if (this._parent) {\n            return this._parent.getSession();\n        }\n        return undefined;\n    }\n    setSource(session, source) {\n        this._source = source;\n        this._children.clear();\n        if (source.raw && source.raw.sources) {\n            for (const src of source.raw.sources) {\n                if (src.name && src.path) {\n                    const s = ( new BaseTreeItem(this, src.name));\n                    this._children.set(src.path, s);\n                    const ss = session.getSource(src);\n                    s.setSource(session, ss);\n                }\n            }\n        }\n    }\n    createIfNeeded(key, factory) {\n        let child = this._children.get(key);\n        if (!child) {\n            child = factory(this, key);\n            this._children.set(key, child);\n        }\n        return child;\n    }\n    getChild(key) {\n        return this._children.get(key);\n    }\n    remove(key) {\n        this._children.delete(key);\n    }\n    removeFromParent() {\n        if (this._parent) {\n            this._parent.remove(this._label);\n            if (this._parent._children.size === 0) {\n                this._parent.removeFromParent();\n            }\n        }\n    }\n    getTemplateId() {\n        return 'id';\n    }\n    getId() {\n        const parent = this.getParent();\n        return parent ? `${parent.getId()}/${this.getInternalId()}` : this.getInternalId();\n    }\n    getInternalId() {\n        return this._label;\n    }\n    getParent() {\n        if (this._parent) {\n            if (this._parent.isSkipped()) {\n                return this._parent.getParent();\n            }\n            return this._parent;\n        }\n        return undefined;\n    }\n    isSkipped() {\n        if (this._parent) {\n            if (this._parent.oneChild()) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    hasChildren() {\n        const child = this.oneChild();\n        if (child) {\n            return child.hasChildren();\n        }\n        return this._children.size > 0;\n    }\n    getChildren() {\n        const child = this.oneChild();\n        if (child) {\n            return child.getChildren();\n        }\n        const array = [];\n        for (const child of ( this._children.values())) {\n            array.push(child);\n        }\n        return array.sort((a, b) => this.compare(a, b));\n    }\n    getLabel(separateRootFolder = true) {\n        const child = this.oneChild();\n        if (child) {\n            const sep = (this instanceof RootFolderTreeItem && separateRootFolder) ? ' • ' : posix.sep;\n            return `${this._label}${sep}${child.getLabel()}`;\n        }\n        return this._label;\n    }\n    getHoverLabel() {\n        if (this._source && this._parent && this._parent._source) {\n            return this._source.raw.path || this._source.raw.name;\n        }\n        const label = this.getLabel(false);\n        const parent = this.getParent();\n        if (parent) {\n            const hover = parent.getHoverLabel();\n            if (hover) {\n                return `${hover}/${label}`;\n            }\n        }\n        return label;\n    }\n    getSource() {\n        const child = this.oneChild();\n        if (child) {\n            return child.getSource();\n        }\n        return this._source;\n    }\n    compare(a, b) {\n        if (a._label && b._label) {\n            return a._label.localeCompare(b._label);\n        }\n        return 0;\n    }\n    oneChild() {\n        if (!this._source && !this._showedMoreThanOne && this.skipOneChild()) {\n            if (this._children.size === 1) {\n                return ( this._children.values()).next().value;\n            }\n            if (this._children.size > 1) {\n                this._showedMoreThanOne = true;\n            }\n        }\n        return undefined;\n    }\n    skipOneChild() {\n        {\n            return this instanceof RootTreeItem;\n        }\n    }\n}\nclass RootFolderTreeItem extends BaseTreeItem {\n    constructor(parent, folder) {\n        super(parent, folder.name, true);\n        this.folder = folder;\n    }\n}\nclass RootTreeItem extends BaseTreeItem {\n    constructor(_pathService, _contextService, _labelService) {\n        super(undefined, 'Root');\n        this._pathService = _pathService;\n        this._contextService = _contextService;\n        this._labelService = _labelService;\n    }\n    add(session) {\n        return this.createIfNeeded(session.getId(), () => ( new SessionTreeItem(this._labelService, this, session, this._pathService, this._contextService)));\n    }\n    find(session) {\n        return this.getChild(session.getId());\n    }\n}\nclass SessionTreeItem extends BaseTreeItem {\n    static { this.URL_REGEXP = /^(https?:\\/\\/[^/]+)(\\/.*)$/; }\n    constructor(labelService, parent, session, _pathService, rootProvider) {\n        super(parent, session.getLabel(), true);\n        this._pathService = _pathService;\n        this.rootProvider = rootProvider;\n        this._map = ( new Map());\n        this._labelService = labelService;\n        this._session = session;\n    }\n    getInternalId() {\n        return this._session.getId();\n    }\n    getSession() {\n        return this._session;\n    }\n    getHoverLabel() {\n        return undefined;\n    }\n    hasChildren() {\n        return true;\n    }\n    compare(a, b) {\n        const acat = this.category(a);\n        const bcat = this.category(b);\n        if (acat !== bcat) {\n            return acat - bcat;\n        }\n        return super.compare(a, b);\n    }\n    category(item) {\n        if (item instanceof RootFolderTreeItem) {\n            return item.folder.index;\n        }\n        const l = item.getLabel();\n        if (l && /^<.+>$/.test(l)) {\n            return 1000;\n        }\n        return 999;\n    }\n    async addPath(source) {\n        let folder;\n        let url;\n        let path = source.raw.path;\n        if (!path) {\n            return;\n        }\n        if (this._labelService && URI_SCHEMA_PATTERN.test(path)) {\n            path = this._labelService.getUriLabel(( URI.parse(path)));\n        }\n        const match = SessionTreeItem.URL_REGEXP.exec(path);\n        if (match && match.length === 3) {\n            url = match[1];\n            path = decodeURI(match[2]);\n        }\n        else {\n            if (isAbsolute(path)) {\n                const resource = URI.file(path);\n                folder = this.rootProvider ? this.rootProvider.getWorkspaceFolder(resource) : null;\n                if (folder) {\n                    path = normalize(ltrim(resource.path.substring(folder.uri.path.length), posix.sep));\n                    const hasMultipleRoots = this.rootProvider.getWorkspace().folders.length > 1;\n                    if (hasMultipleRoots) {\n                        path = posix.sep + path;\n                    }\n                    else {\n                        folder = null;\n                    }\n                }\n                else {\n                    path = normalize(path);\n                    if (isWindows) {\n                        path = normalizeDriveLetter(path);\n                    }\n                    else {\n                        path = tildify(path, (await this._pathService.userHome()).fsPath);\n                    }\n                }\n            }\n        }\n        let leaf = this;\n        path.split(/[\\/\\\\]/).forEach((segment, i) => {\n            if (i === 0 && folder) {\n                const f = folder;\n                leaf = leaf.createIfNeeded(folder.name, parent => ( new RootFolderTreeItem(parent, f)));\n            }\n            else if (i === 0 && url) {\n                leaf = leaf.createIfNeeded(url, parent => ( new BaseTreeItem(parent, url)));\n            }\n            else {\n                leaf = leaf.createIfNeeded(segment, parent => ( new BaseTreeItem(parent, segment)));\n            }\n        });\n        leaf.setSource(this._session, source);\n        if (source.raw.path) {\n            this._map.set(source.raw.path, leaf);\n        }\n    }\n    removePath(source) {\n        if (source.raw.path) {\n            const leaf = this._map.get(source.raw.path);\n            if (leaf) {\n                leaf.removeFromParent();\n                return true;\n            }\n        }\n        return false;\n    }\n}\nfunction asTreeElement(item, viewState) {\n    const children = item.getChildren();\n    const collapsed = viewState ? !( viewState.expanded.has(item.getId())) : !(item instanceof SessionTreeItem);\n    return {\n        element: item,\n        collapsed,\n        collapsible: item.hasChildren(),\n        children: ( children.map(i => asTreeElement(i, viewState)))\n    };\n}\nlet LoadedScriptsView = class LoadedScriptsView extends ViewPane {\n    constructor(options, contextMenuService, keybindingService, instantiationService, viewDescriptorService, configurationService, editorService, contextKeyService, contextService, debugService, labelService, pathService, openerService, themeService, telemetryService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.editorService = editorService;\n        this.contextService = contextService;\n        this.debugService = debugService;\n        this.labelService = labelService;\n        this.pathService = pathService;\n        this.treeNeedsRefreshOnVisible = false;\n        this.loadedScriptsItemType = CONTEXT_LOADED_SCRIPTS_ITEM_TYPE.bindTo(contextKeyService);\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.element.classList.add('debug-pane');\n        container.classList.add('debug-loaded-scripts');\n        container.classList.add('show-file-icons');\n        this.treeContainer = renderViewTree(container);\n        this.filter = ( new LoadedScriptsFilter());\n        const root = ( new RootTreeItem(this.pathService, this.contextService, this.labelService));\n        this.treeLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n        this._register(this.treeLabels);\n        this.tree = this.instantiationService.createInstance(WorkbenchCompressibleObjectTree, 'LoadedScriptsView', this.treeContainer, ( new LoadedScriptsDelegate()), [( new LoadedScriptsRenderer(this.treeLabels))], {\n            compressionEnabled: NEW_STYLE_COMPRESS,\n            collapseByDefault: true,\n            hideTwistiesOfChildlessElements: true,\n            identityProvider: {\n                getId: (element) => element.getId()\n            },\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: (element) => {\n                    return element.getLabel();\n                },\n                getCompressedNodeKeyboardNavigationLabel: (elements) => {\n                    return ( elements.map(e => e.getLabel())).join('/');\n                }\n            },\n            filter: this.filter,\n            accessibilityProvider: ( new LoadedSciptsAccessibilityProvider()),\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        const updateView = (viewState) => this.tree.setChildren(null, asTreeElement(root, viewState).children);\n        updateView();\n        this.changeScheduler = ( new RunOnceScheduler(() => {\n            this.treeNeedsRefreshOnVisible = false;\n            if (this.tree) {\n                updateView();\n            }\n        }, 300));\n        this._register(this.changeScheduler);\n        this._register(this.tree.onDidOpen(e => {\n            if (e.element instanceof BaseTreeItem) {\n                const source = e.element.getSource();\n                if (source && source.available) {\n                    const nullRange = { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 };\n                    source.openInEditor(this.editorService, nullRange, e.editorOptions.preserveFocus, e.sideBySide, e.editorOptions.pinned);\n                }\n            }\n        }));\n        this._register(this.tree.onDidChangeFocus(() => {\n            const focus = this.tree.getFocus();\n            if (focus instanceof SessionTreeItem) {\n                this.loadedScriptsItemType.set('session');\n            }\n            else {\n                this.loadedScriptsItemType.reset();\n            }\n        }));\n        const scheduleRefreshOnVisible = () => {\n            if (this.isBodyVisible()) {\n                this.changeScheduler.schedule();\n            }\n            else {\n                this.treeNeedsRefreshOnVisible = true;\n            }\n        };\n        const addSourcePathsToSession = async (session) => {\n            if (session.capabilities.supportsLoadedSourcesRequest) {\n                const sessionNode = root.add(session);\n                const paths = await session.getLoadedSources();\n                for (const path of paths) {\n                    await sessionNode.addPath(path);\n                }\n                scheduleRefreshOnVisible();\n            }\n        };\n        const registerSessionListeners = (session) => {\n            this._register(session.onDidChangeName(async () => {\n                const sessionRoot = root.find(session);\n                if (sessionRoot) {\n                    sessionRoot.updateLabel(session.getLabel());\n                    scheduleRefreshOnVisible();\n                }\n            }));\n            this._register(session.onDidLoadedSource(async (event) => {\n                let sessionRoot;\n                switch (event.reason) {\n                    case 'new':\n                    case 'changed':\n                        sessionRoot = root.add(session);\n                        await sessionRoot.addPath(event.source);\n                        scheduleRefreshOnVisible();\n                        if (event.reason === 'changed') {\n                            DebugContentProvider.refreshDebugContent(event.source.uri);\n                        }\n                        break;\n                    case 'removed':\n                        sessionRoot = root.find(session);\n                        if (sessionRoot && sessionRoot.removePath(event.source)) {\n                            scheduleRefreshOnVisible();\n                        }\n                        break;\n                    default:\n                        this.filter.setFilter(event.source.name);\n                        this.tree.refilter();\n                        break;\n                }\n            }));\n        };\n        this._register(this.debugService.onDidNewSession(registerSessionListeners));\n        this.debugService.getModel().getSessions().forEach(registerSessionListeners);\n        this._register(this.debugService.onDidEndSession(session => {\n            root.remove(session.getId());\n            this.changeScheduler.schedule();\n        }));\n        this.changeScheduler.schedule(0);\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible && this.treeNeedsRefreshOnVisible) {\n                this.changeScheduler.schedule();\n            }\n        }));\n        let viewState;\n        this._register(this.tree.onDidChangeFindPattern(pattern => {\n            if (this.tree.findMode === TreeFindMode.Highlight) {\n                return;\n            }\n            if (!viewState && pattern) {\n                const expanded = ( new Set());\n                const visit = (node) => {\n                    if (node.element && !node.collapsed) {\n                        expanded.add(node.element.getId());\n                    }\n                    for (const child of node.children) {\n                        visit(child);\n                    }\n                };\n                visit(this.tree.getNode());\n                viewState = { expanded };\n                this.tree.expandAll();\n            }\n            else if (!pattern && viewState) {\n                this.tree.setFocus([]);\n                updateView(viewState);\n                viewState = undefined;\n            }\n        }));\n        this.debugService.getModel().getSessions().forEach(session => addSourcePathsToSession(session));\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.tree.layout(height, width);\n    }\n    dispose() {\n        dispose(this.tree);\n        dispose(this.treeLabels);\n        super.dispose();\n    }\n};\nLoadedScriptsView = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IKeybindingService)),\n    ( __param(3, IInstantiationService)),\n    ( __param(4, IViewDescriptorService)),\n    ( __param(5, IConfigurationService)),\n    ( __param(6, IEditorService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, IWorkspaceContextService)),\n    ( __param(9, IDebugService)),\n    ( __param(10, ILabelService)),\n    ( __param(11, IPathService)),\n    ( __param(12, IOpenerService)),\n    ( __param(13, IThemeService)),\n    ( __param(14, ITelemetryService))\n], LoadedScriptsView));\nclass LoadedScriptsDelegate {\n    getHeight(element) {\n        return 22;\n    }\n    getTemplateId(element) {\n        return LoadedScriptsRenderer.ID;\n    }\n}\nclass LoadedScriptsRenderer {\n    static { this.ID = 'lsrenderer'; }\n    constructor(labels) {\n        this.labels = labels;\n    }\n    get templateId() {\n        return LoadedScriptsRenderer.ID;\n    }\n    renderTemplate(container) {\n        const label = this.labels.create(container, { supportHighlights: true });\n        return { label };\n    }\n    renderElement(node, index, data) {\n        const element = node.element;\n        const label = element.getLabel();\n        this.render(element, label, data, node.filterData);\n    }\n    renderCompressedElements(node, index, data, height) {\n        const element = node.element.elements[node.element.elements.length - 1];\n        const labels = ( node.element.elements.map(e => e.getLabel()));\n        this.render(element, labels, data, node.filterData);\n    }\n    render(element, labels, data, filterData) {\n        const label = {\n            name: labels\n        };\n        const options = {\n            title: element.getHoverLabel()\n        };\n        if (element instanceof RootFolderTreeItem) {\n            options.fileKind = FileKind.ROOT_FOLDER;\n        }\n        else if (element instanceof SessionTreeItem) {\n            options.title = ( nls.localize('loadedScriptsSession', \"Debug Session\"));\n            options.hideIcon = true;\n        }\n        else if (element instanceof BaseTreeItem) {\n            const src = element.getSource();\n            if (src && src.uri) {\n                label.resource = src.uri;\n                options.fileKind = FileKind.FILE;\n            }\n            else {\n                options.fileKind = FileKind.FOLDER;\n            }\n        }\n        options.matches = createMatches(filterData);\n        data.label.setResource(label, options);\n    }\n    disposeTemplate(templateData) {\n        templateData.label.dispose();\n    }\n}\nclass LoadedSciptsAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( nls.localize(\n            { comment: ['Debug is a noun in this context, not a verb.'], key: 'loadedScriptsAriaLabel' },\n            \"Debug Loaded Scripts\"\n        ));\n    }\n    getAriaLabel(element) {\n        if (element instanceof RootFolderTreeItem) {\n            return ( nls.localize(\n                'loadedScriptsRootFolderAriaLabel',\n                \"Workspace folder {0}, loaded script, debug\",\n                element.getLabel()\n            ));\n        }\n        if (element instanceof SessionTreeItem) {\n            return ( nls.localize(\n                'loadedScriptsSessionAriaLabel',\n                \"Session {0}, loaded script, debug\",\n                element.getLabel()\n            ));\n        }\n        if (element.hasChildren()) {\n            return ( nls.localize(\n                'loadedScriptsFolderAriaLabel',\n                \"Folder {0}, loaded script, debug\",\n                element.getLabel()\n            ));\n        }\n        else {\n            return ( nls.localize(\n                'loadedScriptsSourceAriaLabel',\n                \"{0}, loaded script, debug\",\n                element.getLabel()\n            ));\n        }\n    }\n}\nclass LoadedScriptsFilter {\n    setFilter(filterText) {\n        this.filterText = filterText;\n    }\n    filter(element, parentVisibility) {\n        if (!this.filterText) {\n            return 1 ;\n        }\n        if (element.isLeaf()) {\n            const name = element.getLabel();\n            if (name.indexOf(this.filterText) >= 0) {\n                return 1 ;\n            }\n            return 0 ;\n        }\n        return 2 ;\n    }\n}\nexport { LoadedScriptsView };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-workbench .repl{box-sizing:border-box;height:100%;overflow:hidden}.monaco-workbench .repl .repl-tree .monaco-tl-contents{user-select:text;-webkit-user-select:text;white-space:pre}.monaco-workbench .repl .repl-tree .monaco-tl-contents .expression{font-family:var(--vscode-repl-font-family);font-size:var(--vscode-repl-font-size);line-height:var(--vscode-repl-line-height)}.monaco-workbench .repl .repl-tree .monaco-tl-contents .expression .lazy-button{cursor:pointer}.monaco-workbench .repl .repl-tree .monaco-tl-twistie{background-position-y:calc(100% - var(--vscode-repl-font-size-for-twistie))}.monaco-workbench .repl .repl-tree.word-wrap .monaco-tl-contents{word-wrap:break-word;white-space:pre-wrap;word-break:break-all}.monaco-workbench .repl .repl-tree.word-wrap .monaco-tl-contents .expression.nested-variable{white-space:pre}.monaco-workbench .repl .repl-tree .monaco-tl-twistie,.monaco-workbench .repl .repl-tree .monaco-tl-twistie.collapsible+.monaco-tl-contents{cursor:pointer}.monaco-workbench .repl .repl-tree .output.expression.value-and-source{display:flex}.monaco-workbench .repl .repl-tree .output.expression.value-and-source .count-badge-wrapper,.monaco-workbench .repl .repl-tree .output.expression.value-and-source .value{margin-right:4px}.monaco-workbench .repl .repl-tree .output.expression.value-and-source .count-badge-wrapper .monaco-count-badge{min-height:16px;word-break:keep-all}.monaco-workbench .repl .repl-tree .monaco-tl-contents .arrow{left:2px;position:absolute}.monaco-workbench .repl .repl-tree .output.expression.value-and-source .source{cursor:pointer;direction:rtl;margin-left:auto;margin-right:8px;max-width:400px;overflow:hidden;text-align:right;text-decoration:underline;text-overflow:ellipsis;white-space:nowrap}.monaco-workbench .repl .repl-tree .evaluation-result.expression>.value,.monaco-workbench .repl .repl-tree .output.expression>.value{margin-left:0}.monaco-workbench .repl .repl-tree .output.expression .name:not(:empty){margin-right:6px}.monaco-workbench .repl .repl-input-wrapper{align-items:center;display:flex}.monaco-workbench .repl .repl-input-wrapper .suggest-status-bar .monaco-action-bar.right{display:none}.monaco-workbench .repl .repl-input-wrapper .repl-input-chevron{display:flex;flex-shrink:0;font-weight:600;height:100%;justify-content:center;padding:0 6px 0 8px;width:16px}.monaco-workbench .repl .repl-tree .output.expression>.ignore{font-style:italic}.monaco-workbench .repl .repl-tree .output.expression .code-bold{font-weight:700}.monaco-workbench .repl .repl-tree .output.expression .code-italic{font-style:italic}.monaco-workbench .repl .repl-tree .output.expression .code-underline{text-decoration:underline;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-double-underline{text-decoration:underline;text-decoration-style:double}.monaco-workbench .repl .repl-tree .output.expression .code-strike-through{text-decoration:line-through;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-overline{text-decoration:overline;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-underline.code-strike-through{text-decoration:overline underline line-through;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-underline{text-decoration:overline underline;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-strike-through{text-decoration:overline line-through;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-underline.code-strike-through{text-decoration:underline line-through;text-decoration-style:solid}.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-double-underline.code-strike-through{text-decoration:overline underline line-through;text-decoration-style:double}.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-double-underline{text-decoration:overline underline;text-decoration-style:double}.monaco-workbench .repl .repl-tree .output.expression .code-double-underline.code-strike-through{text-decoration:underline line-through;text-decoration-style:double}.monaco-workbench .repl .repl-tree .output.expression .code-dim{opacity:.4}.monaco-workbench .repl .repl-tree .output.expression .code-hidden{opacity:0}.monaco-workbench .repl .repl-tree .output.expression .code-blink{animation:code-blink-key 1s cubic-bezier(1,0,0,1) infinite alternate}.monaco-workbench .repl .repl-tree .output.expression .code-rapid-blink{animation:code-blink-key .3s cubic-bezier(1,0,0,1) infinite alternate}@keyframes code-blink-key{to{opacity:.4}}.monaco-workbench .repl .repl-tree .output.expression .code-subscript{font-size:smaller;line-height:normal;vertical-align:sub}.monaco-workbench .repl .repl-tree .output.expression .code-superscript{font-size:smaller;line-height:normal;vertical-align:super}\";\nn(css,{});\nexport { css, css as default };\n","import { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { splitGlobAware } from 'monaco-editor/esm/vs/base/common/glob.js';\nimport { ReplEvaluationInput, ReplEvaluationResult } from '../common/replModel.js';\nimport { Variable } from '../common/debugModel.js';\nclass ReplFilter {\n    constructor() {\n        this._parsedQueries = [];\n    }\n    static { this.matchQuery = matchesFuzzy; }\n    set filterQuery(query) {\n        this._parsedQueries = [];\n        query = query.trim();\n        if (query && query !== '') {\n            const filters = ( splitGlobAware(query, ',').map(s => s.trim())).filter(s => !!s.length);\n            for (const f of filters) {\n                if (f.startsWith('!')) {\n                    this._parsedQueries.push({ type: 'exclude', query: f.slice(1) });\n                }\n                else {\n                    this._parsedQueries.push({ type: 'include', query: f });\n                }\n            }\n        }\n    }\n    filter(element, parentVisibility) {\n        if (element instanceof ReplEvaluationInput || element instanceof ReplEvaluationResult || element instanceof Variable) {\n            return 1 ;\n        }\n        let includeQueryPresent = false;\n        let includeQueryMatched = false;\n        const text = ( element.toString(true));\n        for (const { type, query } of this._parsedQueries) {\n            if (type === 'exclude' && ReplFilter.matchQuery(query, text)) {\n                return false;\n            }\n            else if (type === 'include') {\n                includeQueryPresent = true;\n                if (ReplFilter.matchQuery(query, text)) {\n                    includeQueryMatched = true;\n                }\n            }\n        }\n        return includeQueryPresent ? includeQueryMatched : ((typeof parentVisibility !== 'undefined' ? parentVisibility : 1) );\n    }\n}\nexport { ReplFilter };\n","import { Color, RGBA } from 'monaco-editor/esm/vs/base/common/color.js';\nimport { ansiColorIdentifiers } from '../../terminal/common/terminalColorRegistry.js';\nfunction handleANSIOutput(text, linkDetector, themeService, workspaceFolder) {\n    const root = document.createElement('span');\n    const textLength = text.length;\n    let styleNames = [];\n    let customFgColor;\n    let customBgColor;\n    let customUnderlineColor;\n    let colorsInverted = false;\n    let currentPos = 0;\n    let buffer = '';\n    while (currentPos < textLength) {\n        let sequenceFound = false;\n        if (text.charCodeAt(currentPos) === 27 && text.charAt(currentPos + 1) === '[') {\n            const startPos = currentPos;\n            currentPos += 2;\n            let ansiSequence = '';\n            while (currentPos < textLength) {\n                const char = text.charAt(currentPos);\n                ansiSequence += char;\n                currentPos++;\n                if (char.match(/^[ABCDHIJKfhmpsu]$/)) {\n                    sequenceFound = true;\n                    break;\n                }\n            }\n            if (sequenceFound) {\n                appendStylizedStringToContainer(root, buffer, styleNames, linkDetector, workspaceFolder, customFgColor, customBgColor, customUnderlineColor);\n                buffer = '';\n                if (ansiSequence.match(/^(?:[34][0-8]|9[0-7]|10[0-7]|[0-9]|2[1-5,7-9]|[34]9|5[8,9]|1[0-9])(?:;[349][0-7]|10[0-7]|[013]|[245]|[34]9)?(?:;[012]?[0-9]?[0-9])*;?m$/)) {\n                    const styleCodes = ( ansiSequence.slice(0, -1)\n                        .split(';')\n                        .filter(elem => elem !== '')\n                        .map(elem => parseInt(elem, 10)));\n                    if (styleCodes[0] === 38 || styleCodes[0] === 48 || styleCodes[0] === 58) {\n                        const colorType = (styleCodes[0] === 38) ? 'foreground' : ((styleCodes[0] === 48) ? 'background' : 'underline');\n                        if (styleCodes[1] === 5) {\n                            set8BitColor(styleCodes, colorType);\n                        }\n                        else if (styleCodes[1] === 2) {\n                            set24BitColor(styleCodes, colorType);\n                        }\n                    }\n                    else {\n                        setBasicFormatters(styleCodes);\n                    }\n                }\n            }\n            else {\n                currentPos = startPos;\n            }\n        }\n        if (sequenceFound === false) {\n            buffer += text.charAt(currentPos);\n            currentPos++;\n        }\n    }\n    if (buffer) {\n        appendStylizedStringToContainer(root, buffer, styleNames, linkDetector, workspaceFolder, customFgColor, customBgColor, customUnderlineColor);\n    }\n    return root;\n    function changeColor(colorType, color) {\n        if (colorType === 'foreground') {\n            customFgColor = color;\n        }\n        else if (colorType === 'background') {\n            customBgColor = color;\n        }\n        else if (colorType === 'underline') {\n            customUnderlineColor = color;\n        }\n        styleNames = styleNames.filter(style => style !== `code-${colorType}-colored`);\n        if (color !== undefined) {\n            styleNames.push(`code-${colorType}-colored`);\n        }\n    }\n    function reverseForegroundAndBackgroundColors() {\n        const oldFgColor = customFgColor;\n        changeColor('foreground', customBgColor);\n        changeColor('background', oldFgColor);\n    }\n    function setBasicFormatters(styleCodes) {\n        for (const code of styleCodes) {\n            switch (code) {\n                case 0: {\n                    styleNames = [];\n                    customFgColor = undefined;\n                    customBgColor = undefined;\n                    break;\n                }\n                case 1: {\n                    styleNames = styleNames.filter(style => style !== `code-bold`);\n                    styleNames.push('code-bold');\n                    break;\n                }\n                case 2: {\n                    styleNames = styleNames.filter(style => style !== `code-dim`);\n                    styleNames.push('code-dim');\n                    break;\n                }\n                case 3: {\n                    styleNames = styleNames.filter(style => style !== `code-italic`);\n                    styleNames.push('code-italic');\n                    break;\n                }\n                case 4: {\n                    styleNames = styleNames.filter(style => (style !== `code-underline` && style !== `code-double-underline`));\n                    styleNames.push('code-underline');\n                    break;\n                }\n                case 5: {\n                    styleNames = styleNames.filter(style => style !== `code-blink`);\n                    styleNames.push('code-blink');\n                    break;\n                }\n                case 6: {\n                    styleNames = styleNames.filter(style => style !== `code-rapid-blink`);\n                    styleNames.push('code-rapid-blink');\n                    break;\n                }\n                case 7: {\n                    if (!colorsInverted) {\n                        colorsInverted = true;\n                        reverseForegroundAndBackgroundColors();\n                    }\n                    break;\n                }\n                case 8: {\n                    styleNames = styleNames.filter(style => style !== `code-hidden`);\n                    styleNames.push('code-hidden');\n                    break;\n                }\n                case 9: {\n                    styleNames = styleNames.filter(style => style !== `code-strike-through`);\n                    styleNames.push('code-strike-through');\n                    break;\n                }\n                case 10: {\n                    styleNames = styleNames.filter(style => !style.startsWith('code-font'));\n                    break;\n                }\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20: {\n                    styleNames = styleNames.filter(style => !style.startsWith('code-font'));\n                    styleNames.push(`code-font-${code - 10}`);\n                    break;\n                }\n                case 21: {\n                    styleNames = styleNames.filter(style => (style !== `code-underline` && style !== `code-double-underline`));\n                    styleNames.push('code-double-underline');\n                    break;\n                }\n                case 22: {\n                    styleNames = styleNames.filter(style => (style !== `code-bold` && style !== `code-dim`));\n                    break;\n                }\n                case 23: {\n                    styleNames = styleNames.filter(style => (style !== `code-italic` && style !== `code-font-10`));\n                    break;\n                }\n                case 24: {\n                    styleNames = styleNames.filter(style => (style !== `code-underline` && style !== `code-double-underline`));\n                    break;\n                }\n                case 25: {\n                    styleNames = styleNames.filter(style => (style !== `code-blink` && style !== `code-rapid-blink`));\n                    break;\n                }\n                case 27: {\n                    if (colorsInverted) {\n                        colorsInverted = false;\n                        reverseForegroundAndBackgroundColors();\n                    }\n                    break;\n                }\n                case 28: {\n                    styleNames = styleNames.filter(style => style !== `code-hidden`);\n                    break;\n                }\n                case 29: {\n                    styleNames = styleNames.filter(style => style !== `code-strike-through`);\n                    break;\n                }\n                case 53: {\n                    styleNames = styleNames.filter(style => style !== `code-overline`);\n                    styleNames.push('code-overline');\n                    break;\n                }\n                case 55: {\n                    styleNames = styleNames.filter(style => style !== `code-overline`);\n                    break;\n                }\n                case 39: {\n                    changeColor('foreground', undefined);\n                    break;\n                }\n                case 49: {\n                    changeColor('background', undefined);\n                    break;\n                }\n                case 59: {\n                    changeColor('underline', undefined);\n                    break;\n                }\n                case 73: {\n                    styleNames = styleNames.filter(style => (style !== `code-superscript` && style !== `code-subscript`));\n                    styleNames.push('code-superscript');\n                    break;\n                }\n                case 74: {\n                    styleNames = styleNames.filter(style => (style !== `code-superscript` && style !== `code-subscript`));\n                    styleNames.push('code-subscript');\n                    break;\n                }\n                case 75: {\n                    styleNames = styleNames.filter(style => (style !== `code-superscript` && style !== `code-subscript`));\n                    break;\n                }\n                default: {\n                    setBasicColor(code);\n                    break;\n                }\n            }\n        }\n    }\n    function set24BitColor(styleCodes, colorType) {\n        if (styleCodes.length >= 5 &&\n            styleCodes[2] >= 0 && styleCodes[2] <= 255 &&\n            styleCodes[3] >= 0 && styleCodes[3] <= 255 &&\n            styleCodes[4] >= 0 && styleCodes[4] <= 255) {\n            const customColor = ( new RGBA(styleCodes[2], styleCodes[3], styleCodes[4]));\n            changeColor(colorType, customColor);\n        }\n    }\n    function set8BitColor(styleCodes, colorType) {\n        let colorNumber = styleCodes[2];\n        const color = calcANSI8bitColor(colorNumber);\n        if (color) {\n            changeColor(colorType, color);\n        }\n        else if (colorNumber >= 0 && colorNumber <= 15) {\n            if (colorType === 'underline') {\n                const theme = themeService.getColorTheme();\n                const colorName = ansiColorIdentifiers[colorNumber];\n                const color = theme.getColor(colorName);\n                if (color) {\n                    changeColor(colorType, color.rgba);\n                }\n                return;\n            }\n            colorNumber += 30;\n            if (colorNumber >= 38) {\n                colorNumber += 52;\n            }\n            if (colorType === 'background') {\n                colorNumber += 10;\n            }\n            setBasicColor(colorNumber);\n        }\n    }\n    function setBasicColor(styleCode) {\n        const theme = themeService.getColorTheme();\n        let colorType;\n        let colorIndex;\n        if (styleCode >= 30 && styleCode <= 37) {\n            colorIndex = styleCode - 30;\n            colorType = 'foreground';\n        }\n        else if (styleCode >= 90 && styleCode <= 97) {\n            colorIndex = (styleCode - 90) + 8;\n            colorType = 'foreground';\n        }\n        else if (styleCode >= 40 && styleCode <= 47) {\n            colorIndex = styleCode - 40;\n            colorType = 'background';\n        }\n        else if (styleCode >= 100 && styleCode <= 107) {\n            colorIndex = (styleCode - 100) + 8;\n            colorType = 'background';\n        }\n        if (colorIndex !== undefined && colorType) {\n            const colorName = ansiColorIdentifiers[colorIndex];\n            const color = theme.getColor(colorName);\n            if (color) {\n                changeColor(colorType, color.rgba);\n            }\n        }\n    }\n}\nfunction appendStylizedStringToContainer(root, stringContent, cssClasses, linkDetector, workspaceFolder, customTextColor, customBackgroundColor, customUnderlineColor) {\n    if (!root || !stringContent) {\n        return;\n    }\n    const container = linkDetector.linkify(stringContent, true, workspaceFolder);\n    container.className = cssClasses.join(' ');\n    if (customTextColor) {\n        container.style.color =\n            Color.Format.CSS.formatRGB(( new Color(customTextColor)));\n    }\n    if (customBackgroundColor) {\n        container.style.backgroundColor =\n            Color.Format.CSS.formatRGB(( new Color(customBackgroundColor)));\n    }\n    if (customUnderlineColor) {\n        container.style.textDecorationColor =\n            Color.Format.CSS.formatRGB(( new Color(customUnderlineColor)));\n    }\n    root.appendChild(container);\n}\nfunction calcANSI8bitColor(colorNumber) {\n    if (colorNumber % 1 !== 0) {\n        return;\n    }\n    if (colorNumber >= 16 && colorNumber <= 231) {\n        colorNumber -= 16;\n        let blue = colorNumber % 6;\n        colorNumber = (colorNumber - blue) / 6;\n        let green = colorNumber % 6;\n        colorNumber = (colorNumber - green) / 6;\n        let red = colorNumber;\n        const convFactor = 255 / 5;\n        blue = Math.round(blue * convFactor);\n        green = Math.round(green * convFactor);\n        red = Math.round(red * convFactor);\n        return ( new RGBA(red, green, blue));\n    }\n    else if (colorNumber >= 232 && colorNumber <= 255) {\n        colorNumber -= 232;\n        const colorLevel = Math.round(colorNumber / 23 * 255);\n        return ( new RGBA(colorLevel, colorLevel, colorLevel));\n    }\n    else {\n        return;\n    }\n}\nexport { appendStylizedStringToContainer, calcANSI8bitColor, handleANSIOutput };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { CountBadge } from 'monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js';\nimport { HighlightedLabel } from 'monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { CachedListVirtualDelegate } from 'monaco-editor/esm/vs/base/browser/ui/list/list.js';\nimport { createMatches } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { dispose } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { defaultCountBadgeStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { renderExpressionValue, AbstractExpressionsRenderer, renderVariable } from './baseDebugView.js';\nimport { handleANSIOutput } from './debugANSIHandling.js';\nimport { debugConsoleEvaluationInput } from './debugIcons.js';\nimport { IDebugService } from '../common/debug.js';\nimport { Variable } from '../common/debugModel.js';\nimport { ReplVariableElement, ReplEvaluationResult, ReplOutputElement, ReplEvaluationInput, ReplGroup, RawObjectReplElement } from '../common/replModel.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nconst $ = dom.$;\nclass ReplEvaluationInputsRenderer {\n    static { this.ID = 'replEvaluationInput'; }\n    get templateId() {\n        return ReplEvaluationInputsRenderer.ID;\n    }\n    renderTemplate(container) {\n        dom.append(container, $('span.arrow' + ThemeIcon.asCSSSelector(debugConsoleEvaluationInput)));\n        const input = dom.append(container, $('.expression'));\n        const label = ( new HighlightedLabel(input));\n        return { label };\n    }\n    renderElement(element, index, templateData) {\n        const evaluation = element.element;\n        templateData.label.set(evaluation.value, createMatches(element.filterData));\n    }\n    disposeTemplate(templateData) {\n    }\n}\nlet ReplGroupRenderer = class ReplGroupRenderer {\n    static { this.ID = 'replGroup'; }\n    constructor(linkDetector, themeService) {\n        this.linkDetector = linkDetector;\n        this.themeService = themeService;\n    }\n    get templateId() {\n        return ReplGroupRenderer.ID;\n    }\n    renderTemplate(container) {\n        const label = dom.append(container, $('.expression'));\n        return { label };\n    }\n    renderElement(element, _index, templateData) {\n        const replGroup = element.element;\n        dom.clearNode(templateData.label);\n        const result = handleANSIOutput(replGroup.name, this.linkDetector, this.themeService, undefined);\n        templateData.label.appendChild(result);\n    }\n    disposeTemplate(_templateData) {\n    }\n};\nReplGroupRenderer = ( __decorate([\n    ( __param(1, IThemeService))\n], ReplGroupRenderer));\nclass ReplEvaluationResultsRenderer {\n    static { this.ID = 'replEvaluationResult'; }\n    get templateId() {\n        return ReplEvaluationResultsRenderer.ID;\n    }\n    constructor(linkDetector) {\n        this.linkDetector = linkDetector;\n    }\n    renderTemplate(container) {\n        const output = dom.append(container, $('.evaluation-result.expression'));\n        const value = dom.append(output, $('span.value'));\n        return { value };\n    }\n    renderElement(element, index, templateData) {\n        const expression = element.element;\n        renderExpressionValue(expression, templateData.value, {\n            showHover: false,\n            colorize: true,\n            linkDetector: this.linkDetector\n        });\n    }\n    disposeTemplate(templateData) {\n    }\n}\nlet ReplOutputElementRenderer = class ReplOutputElementRenderer {\n    static { this.ID = 'outputReplElement'; }\n    constructor(linkDetector, editorService, labelService, themeService) {\n        this.linkDetector = linkDetector;\n        this.editorService = editorService;\n        this.labelService = labelService;\n        this.themeService = themeService;\n    }\n    get templateId() {\n        return ReplOutputElementRenderer.ID;\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        container.classList.add('output');\n        const expression = dom.append(container, $('.output.expression.value-and-source'));\n        data.container = container;\n        data.countContainer = dom.append(expression, $('.count-badge-wrapper'));\n        data.count = ( new CountBadge(data.countContainer, {}, defaultCountBadgeStyles));\n        data.value = dom.append(expression, $('span.value'));\n        data.source = dom.append(expression, $('.source'));\n        data.toDispose = [];\n        data.toDispose.push(dom.addDisposableListener(data.source, 'click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n            const source = data.getReplElementSource();\n            if (source) {\n                source.source.openInEditor(this.editorService, {\n                    startLineNumber: source.lineNumber,\n                    startColumn: source.column,\n                    endLineNumber: source.lineNumber,\n                    endColumn: source.column\n                });\n            }\n        }));\n        return data;\n    }\n    renderElement({ element }, index, templateData) {\n        this.setElementCount(element, templateData);\n        templateData.elementListener = element.onDidChangeCount(() => this.setElementCount(element, templateData));\n        dom.clearNode(templateData.value);\n        templateData.value.className = 'value';\n        templateData.value.appendChild(handleANSIOutput(element.value, this.linkDetector, this.themeService, element.session.root));\n        templateData.value.classList.add((element.severity === Severity.Warning) ? 'warn' : (element.severity === Severity.Error) ? 'error' : (element.severity === Severity.Ignore) ? 'ignore' : 'info');\n        templateData.source.textContent = element.sourceData ? `${basename(element.sourceData.source.name)}:${element.sourceData.lineNumber}` : '';\n        templateData.source.title = element.sourceData ? `${this.labelService.getUriLabel(element.sourceData.source.uri)}:${element.sourceData.lineNumber}` : '';\n        templateData.getReplElementSource = () => element.sourceData;\n    }\n    setElementCount(element, templateData) {\n        if (element.count >= 2) {\n            templateData.count.setCount(element.count);\n            templateData.countContainer.hidden = false;\n        }\n        else {\n            templateData.countContainer.hidden = true;\n        }\n    }\n    disposeTemplate(templateData) {\n        dispose(templateData.toDispose);\n    }\n    disposeElement(_element, _index, templateData) {\n        templateData.elementListener.dispose();\n    }\n};\nReplOutputElementRenderer = ( __decorate([\n    ( __param(1, IEditorService)),\n    ( __param(2, ILabelService)),\n    ( __param(3, IThemeService))\n], ReplOutputElementRenderer));\nlet ReplVariablesRenderer = class ReplVariablesRenderer extends AbstractExpressionsRenderer {\n    static { this.ID = 'replVariable'; }\n    get templateId() {\n        return ReplVariablesRenderer.ID;\n    }\n    constructor(linkDetector, debugService, contextViewService) {\n        super(debugService, contextViewService);\n        this.linkDetector = linkDetector;\n    }\n    renderElement(node, _index, data) {\n        const element = node.element;\n        super.renderExpressionElement(element instanceof ReplVariableElement ? element.expression : element, node, data);\n    }\n    renderExpression(expression, data, highlights) {\n        const isReplVariable = expression instanceof ReplVariableElement;\n        if (isReplVariable || !expression.name) {\n            data.label.set('');\n            renderExpressionValue(isReplVariable ? expression.expression : expression, data.value, { showHover: false, colorize: true, linkDetector: this.linkDetector });\n            data.expression.classList.remove('nested-variable');\n        }\n        else {\n            renderVariable(expression, data, true, highlights, this.linkDetector);\n            data.expression.classList.toggle('nested-variable', isNestedVariable(expression));\n        }\n    }\n    getInputBoxOptions(expression) {\n        return undefined;\n    }\n};\nReplVariablesRenderer = ( __decorate([\n    ( __param(1, IDebugService)),\n    ( __param(2, IContextViewService))\n], ReplVariablesRenderer));\nclass ReplRawObjectsRenderer {\n    static { this.ID = 'rawObject'; }\n    constructor(linkDetector) {\n        this.linkDetector = linkDetector;\n    }\n    get templateId() {\n        return ReplRawObjectsRenderer.ID;\n    }\n    renderTemplate(container) {\n        container.classList.add('output');\n        const expression = dom.append(container, $('.output.expression'));\n        const name = dom.append(expression, $('span.name'));\n        const label = ( new HighlightedLabel(name));\n        const value = dom.append(expression, $('span.value'));\n        return { container, expression, name, label, value };\n    }\n    renderElement(node, index, templateData) {\n        const element = node.element;\n        templateData.label.set(element.name ? `${element.name}:` : '', createMatches(node.filterData));\n        if (element.name) {\n            templateData.name.textContent = `${element.name}:`;\n        }\n        else {\n            templateData.name.textContent = '';\n        }\n        renderExpressionValue(element.value, templateData.value, {\n            showHover: false,\n            linkDetector: this.linkDetector\n        });\n    }\n    disposeTemplate(templateData) {\n    }\n}\nfunction isNestedVariable(element) {\n    return element instanceof Variable && (element.parent instanceof ReplEvaluationResult || element.parent instanceof Variable);\n}\nclass ReplDelegate extends CachedListVirtualDelegate {\n    constructor(configurationService, replOptions) {\n        super();\n        this.configurationService = configurationService;\n        this.replOptions = replOptions;\n    }\n    getHeight(element) {\n        const config = this.configurationService.getValue('debug');\n        if (!config.console.wordWrap) {\n            return this.estimateHeight(element, true);\n        }\n        return super.getHeight(element);\n    }\n    estimateHeight(element, ignoreValueLength = false) {\n        const lineHeight = this.replOptions.replConfiguration.lineHeight;\n        const countNumberOfLines = (str) => str.match(/\\n/g)?.length ?? 0;\n        const hasValue = (e) => typeof e.value === 'string';\n        if (hasValue(element) && !isNestedVariable(element)) {\n            const value = element.value;\n            const valueRows = countNumberOfLines(value)\n                + (ignoreValueLength ? 0 : Math.floor(value.length / 70))\n                + (element instanceof ReplOutputElement ? 0 : 1);\n            return Math.max(valueRows, 1) * lineHeight;\n        }\n        return lineHeight;\n    }\n    getTemplateId(element) {\n        if (element instanceof Variable || element instanceof ReplVariableElement) {\n            return ReplVariablesRenderer.ID;\n        }\n        if (element instanceof ReplEvaluationResult) {\n            return ReplEvaluationResultsRenderer.ID;\n        }\n        if (element instanceof ReplEvaluationInput) {\n            return ReplEvaluationInputsRenderer.ID;\n        }\n        if (element instanceof ReplOutputElement) {\n            return ReplOutputElementRenderer.ID;\n        }\n        if (element instanceof ReplGroup) {\n            return ReplGroupRenderer.ID;\n        }\n        return ReplRawObjectsRenderer.ID;\n    }\n    hasDynamicHeight(element) {\n        if (isNestedVariable(element)) {\n            return false;\n        }\n        return ( element.toString()).length > 0;\n    }\n}\nfunction isDebugSession(obj) {\n    return typeof obj.getReplElements === 'function';\n}\nclass ReplDataSource {\n    hasChildren(element) {\n        if (isDebugSession(element)) {\n            return true;\n        }\n        return !!element.hasChildren;\n    }\n    getChildren(element) {\n        if (isDebugSession(element)) {\n            return Promise.resolve(element.getReplElements());\n        }\n        return Promise.resolve(element.getChildren());\n    }\n}\nclass ReplAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( localize('debugConsole', \"Debug Console\"));\n    }\n    getAriaLabel(element) {\n        if (element instanceof Variable) {\n            return ( localize(\n                'replVariableAriaLabel',\n                \"Variable {0}, value {1}\",\n                element.name,\n                element.value\n            ));\n        }\n        if (element instanceof ReplOutputElement || element instanceof ReplEvaluationInput || element instanceof ReplEvaluationResult) {\n            return element.value + (element instanceof ReplOutputElement && element.count > 1 ? ( localize(\n                { key: 'occurred', comment: ['Front will the value of the debug console element. Placeholder will be replaced by a number which represents occurrance count.'] },\n                \", occurred {0} times\",\n                element.count\n            )) : '');\n        }\n        if (element instanceof RawObjectReplElement) {\n            return ( localize(\n                'replRawObjectAriaLabel',\n                \"Debug console variable {0}, value {1}\",\n                element.name,\n                element.value\n            ));\n        }\n        if (element instanceof ReplGroup) {\n            return ( localize('replGroup', \"Debug console group {0}\", element.name));\n        }\n        return '';\n    }\n}\nexport { ReplAccessibilityProvider, ReplDataSource, ReplDelegate, ReplEvaluationInputsRenderer, ReplEvaluationResultsRenderer, ReplGroupRenderer, ReplOutputElementRenderer, ReplRawObjectsRenderer, ReplVariablesRenderer };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport * as aria from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from 'monaco-editor/esm/vs/base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { memoize } from 'monaco-editor/esm/vs/base/common/decorators.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { HistoryNavigator } from 'monaco-editor/esm/vs/base/common/history.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { removeAnsiEscapeCodes } from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport './media/repl.css.js';\nimport { isCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { registerEditorAction, EditorAction } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js';\nimport { EDITOR_FONT_DEFAULTS } from 'monaco-editor/esm/vs/editor/common/config/editorOptions.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { EditorContextKeys } from 'monaco-editor/esm/vs/editor/common/editorContextKeys.js';\nimport { CompletionItemKinds } from 'monaco-editor/esm/vs/editor/common/languages.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ITextResourcePropertiesService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { SuggestController } from 'monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { createAndFillInContextMenuActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuId, registerAction2, Action2, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService, ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { registerAndCreateHistoryNavigationContext } from 'monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { WorkbenchAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { resolveColorValue, editorForeground } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { FilterViewPane, ViewAction } from '../../../browser/parts/views/viewPane.js';\nimport { IViewsService, IViewDescriptorService } from '../../../common/views.js';\nimport { getSimpleEditorOptions, getSimpleCodeEditorWidgetOptions } from '../../codeEditor/browser/simpleEditorOptions.js';\nimport { FocusSessionActionViewItem } from './debugActionViewItems.js';\nimport { debugConsoleEvaluationPrompt, debugConsoleClearAll } from './debugIcons.js';\nimport { LinkDetector } from './linkDetector.js';\nimport { ReplFilter } from './replFilter.js';\nimport { ReplDelegate, ReplVariablesRenderer, ReplOutputElementRenderer, ReplEvaluationInputsRenderer, ReplGroupRenderer, ReplEvaluationResultsRenderer, ReplRawObjectsRenderer, ReplDataSource, ReplAccessibilityProvider } from './replViewer.js';\nimport { DEBUG_SCHEME, CONTEXT_MULTI_SESSION_REPL, CONTEXT_IN_DEBUG_REPL, REPL_VIEW_ID, IDebugService, CONTEXT_DEBUG_STATE, getStateLabel } from '../common/debug.js';\nimport { Variable } from '../common/debugModel.js';\nimport { ReplEvaluationResult, ReplGroup } from '../common/replModel.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { registerNavigableContainer } from '../../../browser/actions/widgetNavigationCommands.js';\nconst $ = dom.$;\nconst HISTORY_STORAGE_KEY = 'debug.repl.history';\nconst FILTER_HISTORY_STORAGE_KEY = 'debug.repl.filterHistory';\nconst FILTER_VALUE_STORAGE_KEY = 'debug.repl.filterValue';\nconst DECORATION_KEY = 'replinputdecoration';\nfunction revealLastElement(tree) {\n    tree.scrollTop = tree.scrollHeight - tree.renderHeight;\n}\nconst sessionsToIgnore = ( (new Set()));\nconst identityProvider = { getId: (element) => element.getId() };\nlet Repl = class Repl extends FilterViewPane {\n    static { this.REFRESH_DELAY = 50; }\n    static { this.URI = ( URI.parse(`${DEBUG_SCHEME}:replinput`)); }\n    constructor(options, debugService, instantiationService, storageService, themeService, modelService, contextKeyService, codeEditorService, viewDescriptorService, contextMenuService, configurationService, textResourcePropertiesService, editorService, keybindingService, openerService, telemetryService, menuService, languageFeaturesService, logService) {\n        const filterText = storageService.get(FILTER_VALUE_STORAGE_KEY, 1 , '');\n        super({\n            ...options,\n            filterOptions: {\n                placeholder: ( (localize(\n                    { key: 'workbench.debug.filter.placeholder', comment: ['Text in the brackets after e.g. is not localizable'] },\n                    \"Filter (e.g. text, !exclude)\"\n                ))),\n                text: filterText,\n                history: JSON.parse(storageService.get(FILTER_HISTORY_STORAGE_KEY, 1 , '[]')),\n            }\n        }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.debugService = debugService;\n        this.storageService = storageService;\n        this.modelService = modelService;\n        this.textResourcePropertiesService = textResourcePropertiesService;\n        this.editorService = editorService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.logService = logService;\n        this.previousTreeScrollHeight = 0;\n        this.replInputLineCount = 1;\n        this.modelChangeListener = Disposable.None;\n        this.menu = menuService.createMenu(MenuId.DebugConsoleContext, contextKeyService);\n        this._register(this.menu);\n        this.history = ( (new HistoryNavigator(\n            JSON.parse(this.storageService.get(HISTORY_STORAGE_KEY, 1 , '[]')),\n            50\n        )));\n        this.filter = ( (new ReplFilter()));\n        this.filter.filterQuery = filterText;\n        this.multiSessionRepl = CONTEXT_MULTI_SESSION_REPL.bindTo(contextKeyService);\n        this.replOptions = this._register(this.instantiationService.createInstance(ReplOptions, this.id, () => this.getBackgroundColor()));\n        this._register(this.replOptions.onDidChange(() => this.onDidStyleChange()));\n        codeEditorService.registerDecorationType('repl-decoration', DECORATION_KEY, {});\n        this.multiSessionRepl.set(this.isMultiSessionView);\n        this.registerListeners();\n    }\n    registerListeners() {\n        if (this.debugService.getViewModel().focusedSession) {\n            this.onDidFocusSession(this.debugService.getViewModel().focusedSession);\n        }\n        this._register(this.debugService.getViewModel().onDidFocusSession(async (session) => this.onDidFocusSession(session)));\n        this._register(this.debugService.getViewModel().onDidEvaluateLazyExpression(async (e) => {\n            if (e instanceof Variable && this.tree?.hasNode(e)) {\n                await this.tree.updateChildren(e, false, true);\n                await this.tree.expand(e);\n            }\n        }));\n        this._register(this.debugService.onWillNewSession(async (newSession) => {\n            const input = this.tree?.getInput();\n            if (!input || input.state === 0 ) {\n                await this.selectSession(newSession);\n            }\n            this.multiSessionRepl.set(this.isMultiSessionView);\n        }));\n        this._register(this.debugService.onDidEndSession(async (session) => {\n            await Promise.resolve();\n            this.multiSessionRepl.set(this.isMultiSessionView);\n        }));\n        this._register(this.themeService.onDidColorThemeChange(() => {\n            this.refreshReplElements(false);\n            if (this.isVisible()) {\n                this.updateInputDecoration();\n            }\n        }));\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible) {\n                if (!this.model) {\n                    this.model = this.modelService.getModel(Repl.URI) || this.modelService.createModel('', null, Repl.URI, true);\n                }\n                this.setMode();\n                this.replInput.setModel(this.model);\n                this.updateInputDecoration();\n                this.refreshReplElements(true);\n            }\n        }));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('debug.console.wordWrap') && this.tree) {\n                this.tree.dispose();\n                this.treeContainer.innerText = '';\n                dom.clearNode(this.treeContainer);\n                this.createReplTree();\n            }\n            if (e.affectsConfiguration('debug.console.acceptSuggestionOnEnter')) {\n                const config = this.configurationService.getValue('debug');\n                this.replInput.updateOptions({\n                    acceptSuggestionOnEnter: config.console.acceptSuggestionOnEnter === 'on' ? 'on' : 'off'\n                });\n            }\n        }));\n        this._register(this.editorService.onDidActiveEditorChange(() => {\n            this.setMode();\n        }));\n        this._register(this.filterWidget.onDidChangeFilterText(() => {\n            this.filter.filterQuery = this.filterWidget.getFilterText();\n            if (this.tree) {\n                this.tree.refilter();\n                revealLastElement(this.tree);\n            }\n        }));\n    }\n    async onDidFocusSession(session) {\n        if (session) {\n            sessionsToIgnore.delete(session);\n            this.completionItemProvider?.dispose();\n            if (session.capabilities.supportsCompletionsRequest) {\n                this.completionItemProvider = this.languageFeaturesService.completionProvider.register({ scheme: DEBUG_SCHEME, pattern: '**/replinput', hasAccessToAllModels: true }, {\n                    _debugDisplayName: 'debugConsole',\n                    triggerCharacters: session.capabilities.completionTriggerCharacters || ['.'],\n                    provideCompletionItems: async (_, position, _context, token) => {\n                        this.setHistoryNavigationEnablement(false);\n                        const model = this.replInput.getModel();\n                        if (model) {\n                            const word = model.getWordAtPosition(position);\n                            const overwriteBefore = word ? word.word.length : 0;\n                            const text = model.getValue();\n                            const focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n                            const frameId = focusedStackFrame ? focusedStackFrame.frameId : undefined;\n                            const response = await session.completions(frameId, focusedStackFrame?.thread.threadId || 0, text, position, overwriteBefore, token);\n                            const suggestions = [];\n                            const computeRange = (length) => Range.fromPositions(position.delta(0, -length), position);\n                            if (response && response.body && response.body.targets) {\n                                response.body.targets.forEach(item => {\n                                    if (item && item.label) {\n                                        let insertTextRules = undefined;\n                                        let insertText = item.text || item.label;\n                                        if (typeof item.selectionStart === 'number') {\n                                            insertTextRules = 4 ;\n                                            const selectionLength = typeof item.selectionLength === 'number' ? item.selectionLength : 0;\n                                            const placeholder = selectionLength > 0 ? '${1:' + insertText.substring(item.selectionStart, item.selectionStart + selectionLength) + '}$0' : '$0';\n                                            insertText = insertText.substring(0, item.selectionStart) + placeholder + insertText.substring(item.selectionStart + selectionLength);\n                                        }\n                                        suggestions.push({\n                                            label: item.label,\n                                            insertText,\n                                            detail: item.detail,\n                                            kind: CompletionItemKinds.fromString(item.type || 'property'),\n                                            filterText: (item.start && item.length) ? text.substring(item.start, item.start + item.length).concat(item.label) : undefined,\n                                            range: computeRange(item.length || overwriteBefore),\n                                            sortText: item.sortText,\n                                            insertTextRules\n                                        });\n                                    }\n                                });\n                            }\n                            if (this.configurationService.getValue('debug').console.historySuggestions) {\n                                const history = this.history.getHistory();\n                                const idxLength = String(history.length).length;\n                                history.forEach((h, i) => suggestions.push({\n                                    label: h,\n                                    insertText: h,\n                                    kind: 18 ,\n                                    range: computeRange(h.length),\n                                    sortText: 'ZZZ' + String(history.length - i).padStart(idxLength, '0')\n                                }));\n                            }\n                            return { suggestions };\n                        }\n                        return Promise.resolve({ suggestions: [] });\n                    }\n                });\n            }\n        }\n        await this.selectSession();\n    }\n    getFilterStats() {\n        return {\n            total: this.tree?.getNode().children.length ?? 0,\n            filtered: this.tree?.getNode().children.filter(c => c.visible).length ?? 0\n        };\n    }\n    get isReadonly() {\n        const session = this.tree?.getInput();\n        if (session && session.state !== 0 ) {\n            return false;\n        }\n        return true;\n    }\n    showPreviousValue() {\n        if (!this.isReadonly) {\n            this.navigateHistory(true);\n        }\n    }\n    showNextValue() {\n        if (!this.isReadonly) {\n            this.navigateHistory(false);\n        }\n    }\n    focusFilter() {\n        this.filterWidget.focus();\n    }\n    setMode() {\n        if (!this.isVisible()) {\n            return;\n        }\n        const activeEditorControl = this.editorService.activeTextEditorControl;\n        if (isCodeEditor(activeEditorControl)) {\n            this.modelChangeListener.dispose();\n            this.modelChangeListener = activeEditorControl.onDidChangeModelLanguage(() => this.setMode());\n            if (this.model && activeEditorControl.hasModel()) {\n                this.model.setLanguage(activeEditorControl.getModel().getLanguageId());\n            }\n        }\n    }\n    onDidStyleChange() {\n        if (this.styleElement) {\n            this.replInput.updateOptions({\n                fontSize: this.replOptions.replConfiguration.fontSize,\n                lineHeight: this.replOptions.replConfiguration.lineHeight,\n                fontFamily: this.replOptions.replConfiguration.fontFamily === 'default' ? EDITOR_FONT_DEFAULTS.fontFamily : this.replOptions.replConfiguration.fontFamily\n            });\n            const replInputLineHeight = this.replInput.getOption(65 );\n            this.styleElement.textContent = `\n\t\t\t\t.repl .repl-input-wrapper .repl-input-chevron {\n\t\t\t\t\tline-height: ${replInputLineHeight}px\n\t\t\t\t}\n\n\t\t\t\t.repl .repl-input-wrapper .monaco-editor .lines-content {\n\t\t\t\t\tbackground-color: ${this.replOptions.replConfiguration.backgroundColor};\n\t\t\t\t}\n\t\t\t`;\n            const cssFontFamily = this.replOptions.replConfiguration.fontFamily === 'default' ? 'var(--monaco-monospace-font)' : this.replOptions.replConfiguration.fontFamily;\n            this.container.style.setProperty(`--vscode-repl-font-family`, cssFontFamily);\n            this.container.style.setProperty(`--vscode-repl-font-size`, `${this.replOptions.replConfiguration.fontSize}px`);\n            this.container.style.setProperty(`--vscode-repl-font-size-for-twistie`, `${this.replOptions.replConfiguration.fontSizeForTwistie}px`);\n            this.container.style.setProperty(`--vscode-repl-line-height`, this.replOptions.replConfiguration.cssLineHeight);\n            this.tree?.rerender();\n            if (this.bodyContentDimension) {\n                this.layoutBodyContent(this.bodyContentDimension.height, this.bodyContentDimension.width);\n            }\n        }\n    }\n    navigateHistory(previous) {\n        const historyInput = (previous ?\n            (this.history.previous() ?? this.history.first()) : this.history.next())\n            ?? '';\n        this.replInput.setValue(historyInput);\n        aria.status(historyInput);\n        this.replInput.setPosition({ lineNumber: 1, column: historyInput.length + 1 });\n        this.setHistoryNavigationEnablement(true);\n    }\n    async selectSession(session) {\n        const treeInput = this.tree?.getInput();\n        if (!session) {\n            const focusedSession = this.debugService.getViewModel().focusedSession;\n            if (focusedSession) {\n                session = focusedSession;\n            }\n            else if (!treeInput || ( (sessionsToIgnore.has(treeInput)))) {\n                session = this.debugService.getModel().getSessions(true).find(s => !( (sessionsToIgnore.has(s))));\n            }\n        }\n        if (session) {\n            this.replElementsChangeListener?.dispose();\n            this.replElementsChangeListener = session.onDidChangeReplElements(() => {\n                this.refreshReplElements(session.getReplElements().length === 0);\n            });\n            if (this.tree && treeInput !== session) {\n                try {\n                    await this.tree.setInput(session);\n                }\n                catch (err) {\n                    this.logService.error(err);\n                }\n                revealLastElement(this.tree);\n            }\n        }\n        this.replInput?.updateOptions({ readOnly: this.isReadonly });\n        this.updateInputDecoration();\n    }\n    async clearRepl() {\n        const session = this.tree?.getInput();\n        if (session) {\n            session.removeReplExpressions();\n            if (session.state === 0 ) {\n                sessionsToIgnore.add(session);\n                await this.selectSession();\n                this.multiSessionRepl.set(this.isMultiSessionView);\n            }\n        }\n        this.replInput.focus();\n    }\n    acceptReplInput() {\n        const session = this.tree?.getInput();\n        if (session && !this.isReadonly) {\n            session.addReplExpression(this.debugService.getViewModel().focusedStackFrame, this.replInput.getValue());\n            revealLastElement(this.tree);\n            this.history.add(this.replInput.getValue());\n            this.replInput.setValue('');\n            const shouldRelayout = this.replInputLineCount > 1;\n            this.replInputLineCount = 1;\n            if (shouldRelayout && this.bodyContentDimension) {\n                this.layoutBodyContent(this.bodyContentDimension.height, this.bodyContentDimension.width);\n            }\n        }\n    }\n    getVisibleContent() {\n        let text = '';\n        if (this.model && this.tree) {\n            const lineDelimiter = this.textResourcePropertiesService.getEOL(this.model.uri);\n            const traverseAndAppend = (node) => {\n                node.children.forEach(child => {\n                    if (child.visible) {\n                        text += ( (child.element.toString())).trimRight() + lineDelimiter;\n                        if (!child.collapsed && child.children.length) {\n                            traverseAndAppend(child);\n                        }\n                    }\n                });\n            };\n            traverseAndAppend(this.tree.getNode());\n        }\n        return removeAnsiEscapeCodes(text);\n    }\n    layoutBodyContent(height, width) {\n        this.bodyContentDimension = new dom.Dimension(width, height);\n        const replInputHeight = Math.min(this.replInput.getContentHeight(), height);\n        if (this.tree) {\n            const lastElementVisible = this.tree.scrollTop + this.tree.renderHeight >= this.tree.scrollHeight;\n            const treeHeight = height - replInputHeight;\n            this.tree.getHTMLElement().style.height = `${treeHeight}px`;\n            this.tree.layout(treeHeight, width);\n            if (lastElementVisible) {\n                revealLastElement(this.tree);\n            }\n        }\n        this.replInputContainer.style.height = `${replInputHeight}px`;\n        this.replInput.layout({ width: width - 30, height: replInputHeight });\n    }\n    collapseAll() {\n        this.tree?.collapseAll();\n    }\n    getReplInput() {\n        return this.replInput;\n    }\n    focus() {\n        setTimeout(() => this.replInput.focus(), 0);\n    }\n    getActionViewItem(action) {\n        if (action.id === selectReplCommandId) {\n            const session = (this.tree ? this.tree.getInput() : undefined) ?? this.debugService.getViewModel().focusedSession;\n            return this.instantiationService.createInstance(SelectReplActionViewItem, action, session);\n        }\n        return super.getActionViewItem(action);\n    }\n    get isMultiSessionView() {\n        return this.debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl() && !( (sessionsToIgnore.has(s)))).length > 1;\n    }\n    get refreshScheduler() {\n        const autoExpanded = ( (new Set()));\n        return (\n             (new RunOnceScheduler(async () => {\n                if (!this.tree) {\n                    return;\n                }\n                if (!this.tree.getInput()) {\n                    return;\n                }\n                await this.tree.updateChildren(undefined, true, false, { diffIdentityProvider: identityProvider });\n                const session = this.tree.getInput();\n                if (session) {\n                    const autoExpandElements = async (elements) => {\n                        for (const element of elements) {\n                            if (element instanceof ReplGroup) {\n                                if (element.autoExpand && !( (autoExpanded.has(element.getId())))) {\n                                    autoExpanded.add(element.getId());\n                                    await this.tree.expand(element);\n                                }\n                                if (!this.tree.isCollapsed(element)) {\n                                    await autoExpandElements(element.getChildren());\n                                }\n                            }\n                        }\n                    };\n                    await autoExpandElements(session.getReplElements());\n                }\n                const { total, filtered } = this.getFilterStats();\n                this.filterWidget.updateBadge(total === filtered || total === 0 ? undefined : ( (localize('showing filtered repl lines', \"Showing {0} of {1}\", filtered, total))));\n            }, Repl.REFRESH_DELAY))\n        );\n    }\n    render() {\n        super.render();\n        this._register(registerNavigableContainer({\n            focusNotifiers: [this, this.filterWidget],\n            focusNextWidget: () => {\n                if (this.filterWidget.hasFocus()) {\n                    this.tree?.domFocus();\n                }\n                else if (this.tree?.getHTMLElement() === document.activeElement) {\n                    this.focus();\n                }\n            },\n            focusPreviousWidget: () => {\n                if (this.replInput.hasTextFocus()) {\n                    this.tree?.domFocus();\n                }\n                else if (this.tree?.getHTMLElement() === document.activeElement) {\n                    this.focusFilter();\n                }\n            }\n        }));\n    }\n    renderBody(parent) {\n        super.renderBody(parent);\n        this.container = dom.append(parent, $('.repl'));\n        this.treeContainer = dom.append(this.container, $(`.repl-tree.${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`));\n        this.createReplInput(this.container);\n        this.createReplTree();\n    }\n    createReplTree() {\n        this.replDelegate = ( (new ReplDelegate(this.configurationService, this.replOptions)));\n        const wordWrap = this.configurationService.getValue('debug').console.wordWrap;\n        this.treeContainer.classList.toggle('word-wrap', wordWrap);\n        const linkDetector = this.instantiationService.createInstance(LinkDetector);\n        const tree = this.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'DebugRepl', this.treeContainer, this.replDelegate, [\n            this.instantiationService.createInstance(ReplVariablesRenderer, linkDetector),\n            this.instantiationService.createInstance(ReplOutputElementRenderer, linkDetector),\n            ( (new ReplEvaluationInputsRenderer())),\n            this.instantiationService.createInstance(ReplGroupRenderer, linkDetector),\n            ( (new ReplEvaluationResultsRenderer(linkDetector))),\n            ( (new ReplRawObjectsRenderer(linkDetector))),\n        ],\n        (\n        (new ReplDataSource())), {\n            filter: this.filter,\n            accessibilityProvider: ( (new ReplAccessibilityProvider())),\n            identityProvider,\n            mouseSupport: false,\n            findWidgetEnabled: false,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e) => ( (e.toString(true))) },\n            horizontalScrolling: !wordWrap,\n            setRowLineHeight: false,\n            supportDynamicHeights: wordWrap,\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        this._register(tree.onDidChangeContentHeight(() => {\n            if (tree.scrollHeight !== this.previousTreeScrollHeight) {\n                const lastElementWasVisible = tree.scrollTop + tree.renderHeight >= this.previousTreeScrollHeight - 2;\n                if (lastElementWasVisible) {\n                    setTimeout(() => {\n                        revealLastElement(tree);\n                    }, 0);\n                }\n            }\n            this.previousTreeScrollHeight = tree.scrollHeight;\n        }));\n        this._register(tree.onContextMenu(e => this.onContextMenu(e)));\n        let lastSelectedString;\n        this._register(tree.onMouseClick(() => {\n            const selection = window.getSelection();\n            if (!selection || selection.type !== 'Range' || lastSelectedString === ( (selection.toString()))) {\n                this.replInput.focus();\n            }\n            lastSelectedString = selection ? ( (selection.toString())) : '';\n        }));\n        this.selectSession();\n        this.styleElement = dom.createStyleSheet(this.container);\n        this.onDidStyleChange();\n    }\n    createReplInput(container) {\n        this.replInputContainer = dom.append(container, $('.repl-input-wrapper'));\n        dom.append(this.replInputContainer, $('.repl-input-chevron' + ThemeIcon.asCSSSelector(debugConsoleEvaluationPrompt)));\n        const { historyNavigationBackwardsEnablement, historyNavigationForwardsEnablement } = this._register(registerAndCreateHistoryNavigationContext(this.scopedContextKeyService, this));\n        this.setHistoryNavigationEnablement = enabled => {\n            historyNavigationBackwardsEnablement.set(enabled);\n            historyNavigationForwardsEnablement.set(enabled);\n        };\n        CONTEXT_IN_DEBUG_REPL.bindTo(this.scopedContextKeyService).set(true);\n        this.scopedInstantiationService = this.instantiationService.createChild(( (new ServiceCollection([IContextKeyService, this.scopedContextKeyService]))));\n        const options = getSimpleEditorOptions(this.configurationService);\n        options.readOnly = true;\n        options.suggest = { showStatusBar: true };\n        const config = this.configurationService.getValue('debug');\n        options.acceptSuggestionOnEnter = config.console.acceptSuggestionOnEnter === 'on' ? 'on' : 'off';\n        options.ariaLabel = ( (localize('debugConsole', \"Debug Console\")));\n        this.replInput = this.scopedInstantiationService.createInstance(CodeEditorWidget, this.replInputContainer, options, getSimpleCodeEditorWidgetOptions());\n        this._register(this.replInput.onDidChangeModelContent(() => {\n            const model = this.replInput.getModel();\n            this.setHistoryNavigationEnablement(!!model && model.getValue() === '');\n            const lineCount = model ? Math.min(10, model.getLineCount()) : 1;\n            if (lineCount !== this.replInputLineCount) {\n                this.replInputLineCount = lineCount;\n                if (this.bodyContentDimension) {\n                    this.layoutBodyContent(this.bodyContentDimension.height, this.bodyContentDimension.width);\n                }\n            }\n        }));\n        this._register(this.replInput.onDidFocusEditorText(() => this.updateInputDecoration()));\n        this._register(this.replInput.onDidBlurEditorText(() => this.updateInputDecoration()));\n        this._register(dom.addStandardDisposableListener(this.replInputContainer, dom.EventType.FOCUS, () => this.replInputContainer.classList.add('synthetic-focus')));\n        this._register(dom.addStandardDisposableListener(this.replInputContainer, dom.EventType.BLUR, () => this.replInputContainer.classList.remove('synthetic-focus')));\n    }\n    onContextMenu(e) {\n        const actions = [];\n        createAndFillInContextMenuActions(this.menu, { arg: e.element, shouldForwardArgs: false }, actions);\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => e.anchor,\n            getActions: () => actions,\n            getActionsContext: () => e.element\n        });\n    }\n    refreshReplElements(noDelay) {\n        if (this.tree && this.isVisible()) {\n            if (this.refreshScheduler.isScheduled()) {\n                return;\n            }\n            this.refreshScheduler.schedule(noDelay ? 0 : undefined);\n        }\n    }\n    updateInputDecoration() {\n        if (!this.replInput) {\n            return;\n        }\n        const decorations = [];\n        if (this.isReadonly && this.replInput.hasTextFocus() && !this.replInput.getValue()) {\n            const transparentForeground = resolveColorValue(editorForeground, this.themeService.getColorTheme())?.transparent(0.4);\n            decorations.push({\n                range: {\n                    startLineNumber: 0,\n                    endLineNumber: 0,\n                    startColumn: 0,\n                    endColumn: 1\n                },\n                renderOptions: {\n                    after: {\n                        contentText: ( (localize('startDebugFirst', \"Please start a debug session to evaluate expressions\"))),\n                        color: transparentForeground ? ( (transparentForeground.toString())) : undefined\n                    }\n                }\n            });\n        }\n        this.replInput.setDecorationsByType('repl-decoration', DECORATION_KEY, decorations);\n    }\n    saveState() {\n        const replHistory = this.history.getHistory();\n        if (replHistory.length) {\n            this.storageService.store(HISTORY_STORAGE_KEY, JSON.stringify(replHistory), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(HISTORY_STORAGE_KEY, 1 );\n        }\n        const filterHistory = this.filterWidget.getHistory();\n        if (filterHistory.length) {\n            this.storageService.store(FILTER_HISTORY_STORAGE_KEY, JSON.stringify(filterHistory), 1 , 1 );\n        }\n        else {\n            this.storageService.remove(FILTER_HISTORY_STORAGE_KEY, 1 );\n        }\n        const filterValue = this.filterWidget.getFilterText();\n        if (filterValue) {\n            this.storageService.store(FILTER_VALUE_STORAGE_KEY, filterValue, 1 , 1 );\n        }\n        else {\n            this.storageService.remove(FILTER_VALUE_STORAGE_KEY, 1 );\n        }\n        super.saveState();\n    }\n    dispose() {\n        this.replInput?.dispose();\n        this.replElementsChangeListener?.dispose();\n        this.refreshScheduler.dispose();\n        this.modelChangeListener.dispose();\n        super.dispose();\n    }\n};\nRepl.__decorator = ( (__decorate([\n    memoize\n], Repl.prototype, \"refreshScheduler\", null)));\nRepl = ( (__decorate([\n    ( (__param(1, IDebugService))),\n    ( (__param(2, IInstantiationService))),\n    ( (__param(3, IStorageService))),\n    ( (__param(4, IThemeService))),\n    ( (__param(5, IModelService))),\n    ( (__param(6, IContextKeyService))),\n    ( (__param(7, ICodeEditorService))),\n    ( (__param(8, IViewDescriptorService))),\n    ( (__param(9, IContextMenuService))),\n    ( (__param(10, IConfigurationService))),\n    ( (__param(11, ITextResourcePropertiesService))),\n    ( (__param(12, IEditorService))),\n    ( (__param(13, IKeybindingService))),\n    ( (__param(14, IOpenerService))),\n    ( (__param(15, ITelemetryService))),\n    ( (__param(16, IMenuService))),\n    ( (__param(17, ILanguageFeaturesService))),\n    ( (__param(18, ILogService)))\n], Repl)));\nlet ReplOptions = class ReplOptions extends Disposable {\n    static { this.lineHeightEm = 1.4; }\n    get replConfiguration() {\n        return this._replConfig;\n    }\n    constructor(viewId, backgroundColorDelegate, configurationService, themeService, viewDescriptorService) {\n        super();\n        this.backgroundColorDelegate = backgroundColorDelegate;\n        this.configurationService = configurationService;\n        this.themeService = themeService;\n        this.viewDescriptorService = viewDescriptorService;\n        this._onDidChange = this._register(( (new Emitter())));\n        this.onDidChange = this._onDidChange.event;\n        this._register(this.themeService.onDidColorThemeChange(e => this.update()));\n        this._register(this.viewDescriptorService.onDidChangeLocation(e => {\n            if (( (e.views.some(v => v.id === viewId)))) {\n                this.update();\n            }\n        }));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('debug.console.lineHeight') || e.affectsConfiguration('debug.console.fontSize') || e.affectsConfiguration('debug.console.fontFamily')) {\n                this.update();\n            }\n        }));\n        this.update();\n    }\n    update() {\n        const debugConsole = this.configurationService.getValue('debug').console;\n        this._replConfig = {\n            fontSize: debugConsole.fontSize,\n            fontFamily: debugConsole.fontFamily,\n            lineHeight: debugConsole.lineHeight ? debugConsole.lineHeight : ReplOptions.lineHeightEm * debugConsole.fontSize,\n            cssLineHeight: debugConsole.lineHeight ? `${debugConsole.lineHeight}px` : `${ReplOptions.lineHeightEm}em`,\n            backgroundColor: this.themeService.getColorTheme().getColor(this.backgroundColorDelegate()),\n            fontSizeForTwistie: debugConsole.fontSize * ReplOptions.lineHeightEm / 2 - 8\n        };\n        this._onDidChange.fire();\n    }\n};\nReplOptions = ( (__decorate([\n    ( (__param(2, IConfigurationService))),\n    ( (__param(3, IThemeService))),\n    ( (__param(4, IViewDescriptorService)))\n], ReplOptions)));\nclass AcceptReplInputAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'repl.action.acceptInput',\n            label: ( (localize(\n                { key: 'actions.repl.acceptInput', comment: ['Apply input from the debug console input box'] },\n                \"REPL Accept Input\"\n            ))),\n            alias: 'REPL Accept Input',\n            precondition: CONTEXT_IN_DEBUG_REPL,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 3 ,\n                weight: 100\n            }\n        });\n    }\n    run(accessor, editor) {\n        SuggestController.get(editor)?.cancelSuggestWidget();\n        const repl = getReplView(accessor.get(IViewsService));\n        repl?.acceptReplInput();\n    }\n}\nclass FilterReplAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'repl.action.filter',\n            label: ( (localize('repl.action.filter', \"REPL Focus Content to Filter\"))),\n            alias: 'REPL Filter',\n            precondition: CONTEXT_IN_DEBUG_REPL,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048  | 36 ,\n                weight: 100\n            }\n        });\n    }\n    run(accessor, editor) {\n        const repl = getReplView(accessor.get(IViewsService));\n        repl?.focusFilter();\n    }\n}\nclass ReplCopyAllAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'repl.action.copyAll',\n            label: ( (localize('actions.repl.copyAll', \"Debug: Console Copy All\"))),\n            alias: 'Debug Console Copy All',\n            precondition: CONTEXT_IN_DEBUG_REPL,\n        });\n    }\n    run(accessor, editor) {\n        const clipboardService = accessor.get(IClipboardService);\n        const repl = getReplView(accessor.get(IViewsService));\n        if (repl) {\n            return clipboardService.writeText(repl.getVisibleContent());\n        }\n    }\n}\nregisterEditorAction(AcceptReplInputAction);\nregisterEditorAction(ReplCopyAllAction);\nregisterEditorAction(FilterReplAction);\nclass SelectReplActionViewItem extends FocusSessionActionViewItem {\n    getSessions() {\n        return this.debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl() && !( (sessionsToIgnore.has(s))));\n    }\n    mapFocusedSessionToSelected(focusedSession) {\n        while (focusedSession.parentSession && !focusedSession.hasSeparateRepl()) {\n            focusedSession = focusedSession.parentSession;\n        }\n        return focusedSession;\n    }\n}\nfunction getReplView(viewsService) {\n    return viewsService.getActiveViewWithId(REPL_VIEW_ID) ?? undefined;\n}\nconst selectReplCommandId = 'workbench.action.debug.selectRepl';\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: selectReplCommandId,\n            viewId: REPL_VIEW_ID,\n            title: ( (localize('selectRepl', \"Select Debug Console\"))),\n            f1: false,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( (ContextKeyExpr.and(\n                     (ContextKeyExpr.equals('view', REPL_VIEW_ID)),\n                    CONTEXT_MULTI_SESSION_REPL\n                ))),\n                order: 20\n            }\n        });\n    }\n    async runInView(accessor, view, session) {\n        const debugService = accessor.get(IDebugService);\n        if (session && session.state !== 0  && session !== debugService.getViewModel().focusedSession) {\n            if (session.state !== 2 ) {\n                const stopppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === 2 );\n                if (stopppedChildSession) {\n                    session = stopppedChildSession;\n                }\n            }\n            await debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n        }\n        await view.selectSession(session);\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'workbench.debug.panel.action.clearReplAction',\n            viewId: REPL_VIEW_ID,\n            title: { value: ( (localize('clearRepl', \"Clear Console\"))), original: 'Clear Console' },\n            f1: true,\n            icon: debugConsoleClearAll,\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    when: ( (ContextKeyExpr.equals('view', REPL_VIEW_ID))),\n                    order: 30\n                }, {\n                    id: MenuId.DebugConsoleContext,\n                    group: 'z_commands',\n                    order: 20\n                }]\n        });\n    }\n    runInView(_accessor, view) {\n        view.clearRepl();\n        aria.status(( (localize('debugConsoleCleared', \"Debug console was cleared\"))));\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'debug.collapseRepl',\n            title: ( (localize('collapse', \"Collapse All\"))),\n            viewId: REPL_VIEW_ID,\n            menu: {\n                id: MenuId.DebugConsoleContext,\n                group: 'z_commands',\n                order: 10\n            }\n        });\n    }\n    runInView(_accessor, view) {\n        view.collapseAll();\n        view.focus();\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'debug.replPaste',\n            title: ( (localize('paste', \"Paste\"))),\n            viewId: REPL_VIEW_ID,\n            precondition: ( (CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(0 )))),\n            menu: {\n                id: MenuId.DebugConsoleContext,\n                group: '2_cutcopypaste',\n                order: 30\n            }\n        });\n    }\n    async runInView(accessor, view) {\n        const clipboardService = accessor.get(IClipboardService);\n        const clipboardText = await clipboardService.readText();\n        if (clipboardText) {\n            const replInput = view.getReplInput();\n            replInput.setValue(replInput.getValue().concat(clipboardText));\n            view.focus();\n            const model = replInput.getModel();\n            const lineNumber = model ? model.getLineCount() : 0;\n            const column = model?.getLineMaxColumn(lineNumber);\n            if (typeof lineNumber === 'number' && typeof column === 'number') {\n                replInput.setPosition({ lineNumber, column });\n            }\n        }\n    }\n});\nregisterAction2(class extends ViewAction {\n    constructor() {\n        super({\n            id: 'workbench.debug.action.copyAll',\n            title: ( (localize('copyAll', \"Copy All\"))),\n            viewId: REPL_VIEW_ID,\n            menu: {\n                id: MenuId.DebugConsoleContext,\n                group: '2_cutcopypaste',\n                order: 20\n            }\n        });\n    }\n    async runInView(accessor, view) {\n        const clipboardService = accessor.get(IClipboardService);\n        await clipboardService.writeText(view.getVisibleContent());\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'debug.replCopy',\n            title: ( (localize('copy', \"Copy\"))),\n            menu: {\n                id: MenuId.DebugConsoleContext,\n                group: '2_cutcopypaste',\n                order: 10\n            }\n        });\n    }\n    async run(accessor, element) {\n        const clipboardService = accessor.get(IClipboardService);\n        const debugService = accessor.get(IDebugService);\n        const nativeSelection = window.getSelection();\n        const selectedText = nativeSelection?.toString();\n        if (selectedText && selectedText.length > 0) {\n            return clipboardService.writeText(selectedText);\n        }\n        else if (element) {\n            return clipboardService.writeText((await this.tryEvaluateAndCopy(debugService, element)) || ( (element.toString())));\n        }\n    }\n    async tryEvaluateAndCopy(debugService, element) {\n        if (!(element instanceof ReplEvaluationResult)) {\n            return;\n        }\n        const stackFrame = debugService.getViewModel().focusedStackFrame;\n        const session = debugService.getViewModel().focusedSession;\n        if (!stackFrame || !session || !session.capabilities.supportsClipboardContext) {\n            return;\n        }\n        try {\n            const evaluation = await session.evaluate(element.originalExpression, stackFrame.frameId, 'clipboard');\n            return evaluation?.body.result;\n        }\n        catch (e) {\n            return;\n        }\n    }\n});\nexport { Repl };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerColor } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IDebugService } from '../common/debug.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { STATUS_BAR_FOREGROUND, STATUS_BAR_BORDER } from '../../../common/theme.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IStatusbarService } from '../../../services/statusbar/browser/statusbar.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nconst STATUS_BAR_DEBUGGING_BACKGROUND = registerColor('statusBar.debuggingBackground', {\n    dark: '#CC6633',\n    light: '#CC6633',\n    hcDark: '#BA592C',\n    hcLight: '#B5200D'\n}, ( localize(\n    'statusBarDebuggingBackground',\n    \"Status bar background color when a program is being debugged. The status bar is shown in the bottom of the window\"\n)));\nconst STATUS_BAR_DEBUGGING_FOREGROUND = registerColor('statusBar.debuggingForeground', {\n    dark: STATUS_BAR_FOREGROUND,\n    light: STATUS_BAR_FOREGROUND,\n    hcDark: STATUS_BAR_FOREGROUND,\n    hcLight: '#FFFFFF'\n}, ( localize(\n    'statusBarDebuggingForeground',\n    \"Status bar foreground color when a program is being debugged. The status bar is shown in the bottom of the window\"\n)));\nconst STATUS_BAR_DEBUGGING_BORDER = registerColor('statusBar.debuggingBorder', {\n    dark: STATUS_BAR_BORDER,\n    light: STATUS_BAR_BORDER,\n    hcDark: STATUS_BAR_BORDER,\n    hcLight: STATUS_BAR_BORDER\n}, ( localize(\n    'statusBarDebuggingBorder',\n    \"Status bar border color separating to the sidebar and editor when a program is being debugged. The status bar is shown in the bottom of the window\"\n)));\nlet StatusBarColorProvider = class StatusBarColorProvider {\n    set enabled(enabled) {\n        if (enabled === !!this.disposable) {\n            return;\n        }\n        if (enabled) {\n            this.disposable = this.statusbarService.overrideStyle({\n                priority: 10,\n                foreground: STATUS_BAR_DEBUGGING_FOREGROUND,\n                background: STATUS_BAR_DEBUGGING_BACKGROUND,\n                border: STATUS_BAR_DEBUGGING_BORDER,\n            });\n        }\n        else {\n            this.disposable.dispose();\n            this.disposable = undefined;\n        }\n    }\n    constructor(debugService, contextService, statusbarService, configurationService) {\n        this.debugService = debugService;\n        this.contextService = contextService;\n        this.statusbarService = statusbarService;\n        this.configurationService = configurationService;\n        this.disposables = ( new DisposableStore());\n        this.debugService.onDidChangeState(this.update, this, this.disposables);\n        this.contextService.onDidChangeWorkbenchState(this.update, this, this.disposables);\n        this.configurationService.onDidChangeConfiguration((e) => {\n            if (e.affectsConfiguration('debug.enableStatusBarColor')) {\n                this.update();\n            }\n        });\n        this.update();\n    }\n    update() {\n        const decorateStatusBar = this.configurationService.getValue('debug').enableStatusBarColor;\n        if (!decorateStatusBar) {\n            this.enabled = false;\n        }\n        else {\n            this.enabled = isStatusbarInDebugMode(this.debugService.state, this.debugService.getModel().getSessions());\n        }\n    }\n    dispose() {\n        this.disposable?.dispose();\n        this.disposables.dispose();\n    }\n};\nStatusBarColorProvider = ( __decorate([\n    ( __param(0, IDebugService)),\n    ( __param(1, IWorkspaceContextService)),\n    ( __param(2, IStatusbarService)),\n    ( __param(3, IConfigurationService))\n], StatusBarColorProvider));\nfunction isStatusbarInDebugMode(state, sessions) {\n    if (state === 0  || state === 1  || sessions.every(s => s.suppressDebugStatusbar || s.configuration?.noDebug)) {\n        return false;\n    }\n    return true;\n}\nexport { STATUS_BAR_DEBUGGING_BACKGROUND, STATUS_BAR_DEBUGGING_BORDER, STATUS_BAR_DEBUGGING_FOREGROUND, StatusBarColorProvider, isStatusbarInDebugMode };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CONTEXT_CAN_VIEW_MEMORY, CONTEXT_WATCH_ITEM_TYPE, WATCH_VIEW_ID, CONTEXT_WATCH_EXPRESSIONS_EXIST, IDebugService, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_WATCH_EXPRESSIONS_FOCUSED } from '../common/debug.js';\nimport { Variable, Expression } from '../common/debugModel.js';\nimport { IContextMenuService, IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { AbstractExpressionsRenderer, renderExpressionValue, renderViewTree } from './baseDebugView.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { WorkbenchAsyncDataTree } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { ElementsDragAndDropData } from 'monaco-editor/esm/vs/base/browser/ui/list/listView.js';\nimport { VariablesRenderer } from './variablesView.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { watchExpressionsAdd, watchExpressionsRemoveAll } from './debugIcons.js';\nimport { MenuId, registerAction2, Action2, IMenuService } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { createAndFillInContextMenuActions } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { LinkDetector } from './linkDetector.js';\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nlet ignoreViewUpdates = false;\nlet useCachedEvaluation = false;\nlet WatchExpressionsView = class WatchExpressionsView extends ViewPane {\n    constructor(options, contextMenuService, debugService, keybindingService, instantiationService, viewDescriptorService, configurationService, contextKeyService, openerService, themeService, telemetryService, menuService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.debugService = debugService;\n        this.needsRefresh = false;\n        this.menu = menuService.createMenu(MenuId.DebugWatchContext, contextKeyService);\n        this._register(this.menu);\n        this.watchExpressionsUpdatedScheduler = ( new RunOnceScheduler(() => {\n            this.needsRefresh = false;\n            this.tree.updateChildren();\n        }, 50));\n        this.watchExpressionsExist = CONTEXT_WATCH_EXPRESSIONS_EXIST.bindTo(contextKeyService);\n        this.variableReadonly = CONTEXT_VARIABLE_IS_READONLY.bindTo(contextKeyService);\n        this.watchExpressionsExist.set(this.debugService.getModel().getWatchExpressions().length > 0);\n        this.watchItemType = CONTEXT_WATCH_ITEM_TYPE.bindTo(contextKeyService);\n    }\n    renderBody(container) {\n        super.renderBody(container);\n        this.element.classList.add('debug-pane');\n        container.classList.add('debug-watch');\n        const treeContainer = renderViewTree(container);\n        const expressionsRenderer = this.instantiationService.createInstance(WatchExpressionsRenderer);\n        const linkeDetector = this.instantiationService.createInstance(LinkDetector);\n        this.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'WatchExpressions', treeContainer, ( new WatchExpressionsDelegate()), [expressionsRenderer, this.instantiationService.createInstance(VariablesRenderer, linkeDetector)], ( new WatchExpressionsDataSource()), {\n            accessibilityProvider: ( new WatchExpressionsAccessibilityProvider()),\n            identityProvider: { getId: (element) => element.getId() },\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: (e) => {\n                    if (e === this.debugService.getViewModel().getSelectedExpression()?.expression) {\n                        return undefined;\n                    }\n                    return e.name;\n                }\n            },\n            dnd: ( new WatchExpressionsDragAndDrop(this.debugService)),\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            }\n        });\n        this.tree.setInput(this.debugService);\n        CONTEXT_WATCH_EXPRESSIONS_FOCUSED.bindTo(this.tree.contextKeyService);\n        this._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n        this._register(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n        this._register(this.debugService.getModel().onDidChangeWatchExpressions(async (we) => {\n            this.watchExpressionsExist.set(this.debugService.getModel().getWatchExpressions().length > 0);\n            if (!this.isBodyVisible()) {\n                this.needsRefresh = true;\n            }\n            else {\n                if (we && !we.name) {\n                    useCachedEvaluation = true;\n                }\n                await this.tree.updateChildren();\n                useCachedEvaluation = false;\n                if (we instanceof Expression) {\n                    this.tree.reveal(we);\n                }\n            }\n        }));\n        this._register(this.debugService.getViewModel().onDidFocusStackFrame(() => {\n            if (!this.isBodyVisible()) {\n                this.needsRefresh = true;\n                return;\n            }\n            if (!this.watchExpressionsUpdatedScheduler.isScheduled()) {\n                this.watchExpressionsUpdatedScheduler.schedule();\n            }\n        }));\n        this._register(this.debugService.getViewModel().onWillUpdateViews(() => {\n            if (!ignoreViewUpdates) {\n                this.tree.updateChildren();\n            }\n        }));\n        this._register(this.onDidChangeBodyVisibility(visible => {\n            if (visible && this.needsRefresh) {\n                this.watchExpressionsUpdatedScheduler.schedule();\n            }\n        }));\n        let horizontalScrolling;\n        this._register(this.debugService.getViewModel().onDidSelectExpression(e => {\n            const expression = e?.expression;\n            if (expression instanceof Expression || (expression instanceof Variable && e?.settingWatch)) {\n                horizontalScrolling = this.tree.options.horizontalScrolling;\n                if (horizontalScrolling) {\n                    this.tree.updateOptions({ horizontalScrolling: false });\n                }\n                if (expression.name) {\n                    this.tree.rerender(expression);\n                }\n            }\n            else if (!expression && horizontalScrolling !== undefined) {\n                this.tree.updateOptions({ horizontalScrolling: horizontalScrolling });\n                horizontalScrolling = undefined;\n            }\n        }));\n        this._register(this.debugService.getViewModel().onDidEvaluateLazyExpression(async (e) => {\n            if (e instanceof Variable && this.tree.hasNode(e)) {\n                await this.tree.updateChildren(e, false, true);\n                await this.tree.expand(e);\n            }\n        }));\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.tree.layout(height, width);\n    }\n    focus() {\n        this.tree.domFocus();\n    }\n    collapseAll() {\n        this.tree.collapseAll();\n    }\n    onMouseDblClick(e) {\n        if (e.browserEvent.target.className.indexOf('twistie') >= 0) {\n            return;\n        }\n        const element = e.element;\n        const selectedExpression = this.debugService.getViewModel().getSelectedExpression();\n        if (element instanceof Expression && element !== selectedExpression?.expression) {\n            this.debugService.getViewModel().setSelectedExpression(element, false);\n        }\n        else if (!element) {\n            this.debugService.addWatchExpression();\n        }\n    }\n    onContextMenu(e) {\n        const element = e.element;\n        const selection = this.tree.getSelection();\n        this.watchItemType.set(element instanceof Expression ? 'expression' : element instanceof Variable ? 'variable' : undefined);\n        const actions = [];\n        const attributes = element instanceof Variable ? element.presentationHint?.attributes : undefined;\n        this.variableReadonly.set(!!attributes && attributes.indexOf('readOnly') >= 0 || !!element?.presentationHint?.lazy);\n        createAndFillInContextMenuActions(this.menu, { arg: element, shouldForwardArgs: true }, actions);\n        this.contextMenuService.showContextMenu({\n            getAnchor: () => e.anchor,\n            getActions: () => actions,\n            getActionsContext: () => element && selection.includes(element) ? selection : element ? [element] : [],\n        });\n    }\n};\nWatchExpressionsView = ( __decorate([\n    ( __param(1, IContextMenuService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IKeybindingService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IViewDescriptorService)),\n    ( __param(6, IConfigurationService)),\n    ( __param(7, IContextKeyService)),\n    ( __param(8, IOpenerService)),\n    ( __param(9, IThemeService)),\n    ( __param(10, ITelemetryService)),\n    ( __param(11, IMenuService))\n], WatchExpressionsView));\nclass WatchExpressionsDelegate {\n    getHeight(_element) {\n        return 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof Expression) {\n            return WatchExpressionsRenderer.ID;\n        }\n        return VariablesRenderer.ID;\n    }\n}\nfunction isDebugService(element) {\n    return typeof element.getConfigurationManager === 'function';\n}\nclass WatchExpressionsDataSource {\n    hasChildren(element) {\n        return isDebugService(element) || element.hasChildren;\n    }\n    getChildren(element) {\n        if (isDebugService(element)) {\n            const debugService = element;\n            const watchExpressions = debugService.getModel().getWatchExpressions();\n            const viewModel = debugService.getViewModel();\n            return Promise.all(( watchExpressions.map(we => !!we.name && !useCachedEvaluation\n                ? we.evaluate(viewModel.focusedSession, viewModel.focusedStackFrame, 'watch').then(() => we)\n                : Promise.resolve(we))));\n        }\n        return element.getChildren();\n    }\n}\nlet WatchExpressionsRenderer = class WatchExpressionsRenderer extends AbstractExpressionsRenderer {\n    static { this.ID = 'watchexpression'; }\n    constructor(menuService, contextKeyService, debugService, contextViewService) {\n        super(debugService, contextViewService);\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n    }\n    get templateId() {\n        return WatchExpressionsRenderer.ID;\n    }\n    renderElement(node, index, data) {\n        super.renderExpressionElement(node.element, node, data);\n    }\n    renderExpression(expression, data, highlights) {\n        const text = typeof expression.value === 'string' ? `${expression.name}:` : expression.name;\n        let title;\n        if (expression.type) {\n            title = expression.type === expression.value ?\n                expression.type :\n                `${expression.type}: ${expression.value}`;\n        }\n        else {\n            title = expression.value;\n        }\n        data.label.set(text, highlights, title);\n        renderExpressionValue(expression, data.value, {\n            showChanged: true,\n            maxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n            showHover: true,\n            colorize: true\n        });\n    }\n    getInputBoxOptions(expression, settingValue) {\n        if (settingValue) {\n            return {\n                initialValue: expression.value,\n                ariaLabel: ( localize('typeNewValue', \"Type new value\")),\n                onFinish: async (value, success) => {\n                    if (success && value) {\n                        const focusedFrame = this.debugService.getViewModel().focusedStackFrame;\n                        if (focusedFrame && (expression instanceof Variable || expression instanceof Expression)) {\n                            await expression.setExpression(value, focusedFrame);\n                            this.debugService.getViewModel().updateViews();\n                        }\n                    }\n                }\n            };\n        }\n        return {\n            initialValue: expression.name ? expression.name : '',\n            ariaLabel: ( localize('watchExpressionInputAriaLabel', \"Type watch expression\")),\n            placeholder: ( localize('watchExpressionPlaceholder', \"Expression to watch\")),\n            onFinish: (value, success) => {\n                if (success && value) {\n                    this.debugService.renameWatchExpression(expression.getId(), value);\n                    ignoreViewUpdates = true;\n                    this.debugService.getViewModel().updateViews();\n                    ignoreViewUpdates = false;\n                }\n                else if (!expression.name) {\n                    this.debugService.removeWatchExpressions(expression.getId());\n                }\n            }\n        };\n    }\n    renderActionBar(actionBar, expression) {\n        const contextKeyService = getContextForWatchExpressionMenu(this.contextKeyService, expression);\n        const menu = this.menuService.createMenu(MenuId.DebugWatchContext, contextKeyService);\n        const primary = [];\n        const context = expression;\n        createAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary, secondary: [] }, 'inline');\n        actionBar.clear();\n        actionBar.context = context;\n        actionBar.push(primary, { icon: true, label: false });\n    }\n};\nWatchExpressionsRenderer = ( __decorate([\n    ( __param(0, IMenuService)),\n    ( __param(1, IContextKeyService)),\n    ( __param(2, IDebugService)),\n    ( __param(3, IContextViewService))\n], WatchExpressionsRenderer));\nfunction getContextForWatchExpressionMenu(parentContext, expression) {\n    return parentContext.createOverlay([\n        [CONTEXT_CAN_VIEW_MEMORY.key, expression.memoryReference !== undefined],\n        [CONTEXT_WATCH_ITEM_TYPE.key, 'expression']\n    ]);\n}\nclass WatchExpressionsAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return ( localize(\n            { comment: ['Debug is a noun in this context, not a verb.'], key: 'watchAriaTreeLabel' },\n            \"Debug Watch Expressions\"\n        ));\n    }\n    getAriaLabel(element) {\n        if (element instanceof Expression) {\n            return ( localize('watchExpressionAriaLabel', \"{0}, value {1}\", element.name, element.value));\n        }\n        return ( localize('watchVariableAriaLabel', \"{0}, value {1}\", element.name, element.value));\n    }\n}\nclass WatchExpressionsDragAndDrop {\n    constructor(debugService) {\n        this.debugService = debugService;\n    }\n    onDragOver(data) {\n        if (!(data instanceof ElementsDragAndDropData)) {\n            return false;\n        }\n        const expressions = data.elements;\n        return expressions.length > 0 && expressions[0] instanceof Expression;\n    }\n    getDragURI(element) {\n        if (!(element instanceof Expression) || element === this.debugService.getViewModel().getSelectedExpression()?.expression) {\n            return null;\n        }\n        return element.getId();\n    }\n    getDragLabel(elements) {\n        if (elements.length === 1) {\n            return elements[0].name;\n        }\n        return undefined;\n    }\n    drop(data, targetElement) {\n        if (!(data instanceof ElementsDragAndDropData)) {\n            return;\n        }\n        const draggedElement = data.elements[0];\n        const watches = this.debugService.getModel().getWatchExpressions();\n        const position = targetElement instanceof Expression ? watches.indexOf(targetElement) : watches.length - 1;\n        this.debugService.moveWatchExpression(draggedElement.getId(), position);\n    }\n}\nregisterAction2(class Collapse extends ViewAction {\n    constructor() {\n        super({\n            id: 'watch.collapse',\n            viewId: WATCH_VIEW_ID,\n            title: ( localize('collapse', \"Collapse All\")),\n            f1: false,\n            icon: Codicon.collapseAll,\n            precondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n            menu: {\n                id: MenuId.ViewTitle,\n                order: 30,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', WATCH_VIEW_ID))\n            }\n        });\n    }\n    runInView(_accessor, view) {\n        view.collapseAll();\n    }\n});\nconst ADD_WATCH_ID = 'workbench.debug.viewlet.action.addWatchExpression';\nconst ADD_WATCH_LABEL = ( localize('addWatchExpression', \"Add Expression\"));\nregisterAction2(class AddWatchExpressionAction extends Action2 {\n    constructor() {\n        super({\n            id: ADD_WATCH_ID,\n            title: ADD_WATCH_LABEL,\n            f1: false,\n            icon: watchExpressionsAdd,\n            menu: {\n                id: MenuId.ViewTitle,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', WATCH_VIEW_ID))\n            }\n        });\n    }\n    run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        debugService.addWatchExpression();\n    }\n});\nconst REMOVE_WATCH_EXPRESSIONS_COMMAND_ID = 'workbench.debug.viewlet.action.removeAllWatchExpressions';\nconst REMOVE_WATCH_EXPRESSIONS_LABEL = ( localize('removeAllWatchExpressions', \"Remove All Expressions\"));\nregisterAction2(class RemoveAllWatchExpressionsAction extends Action2 {\n    constructor() {\n        super({\n            id: REMOVE_WATCH_EXPRESSIONS_COMMAND_ID,\n            title: REMOVE_WATCH_EXPRESSIONS_LABEL,\n            f1: false,\n            icon: watchExpressionsRemoveAll,\n            precondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n            menu: {\n                id: MenuId.ViewTitle,\n                order: 20,\n                group: 'navigation',\n                when: ( ContextKeyExpr.equals('view', WATCH_VIEW_ID))\n            }\n        });\n    }\n    run(accessor) {\n        const debugService = accessor.get(IDebugService);\n        debugService.removeWatchExpressions();\n    }\n});\nexport { ADD_WATCH_ID, ADD_WATCH_LABEL, REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, REMOVE_WATCH_EXPRESSIONS_LABEL, WatchExpressionsView };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IDebugService } from './debug.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet DebugLifecycle = class DebugLifecycle {\n    constructor(lifecycleService, debugService, configurationService, dialogService) {\n        this.debugService = debugService;\n        this.configurationService = configurationService;\n        this.dialogService = dialogService;\n        lifecycleService.onBeforeShutdown(async (e) => e.veto(this.shouldVetoShutdown(e.reason), 'veto.debug'));\n    }\n    shouldVetoShutdown(_reason) {\n        const rootSessions = this.debugService.getModel().getSessions().filter(s => s.parentSession === undefined);\n        if (rootSessions.length === 0) {\n            return false;\n        }\n        const shouldConfirmOnExit = this.configurationService.getValue('debug').confirmOnExit;\n        if (shouldConfirmOnExit === 'never') {\n            return false;\n        }\n        return this.showWindowCloseConfirmation(rootSessions.length);\n    }\n    async showWindowCloseConfirmation(numSessions) {\n        let message;\n        if (numSessions === 1) {\n            message = ( nls.localize(\n                'debug.debugSessionCloseConfirmationSingular',\n                \"There is an active debug session, are you sure you want to stop it?\"\n            ));\n        }\n        else {\n            message = ( nls.localize(\n                'debug.debugSessionCloseConfirmationPlural',\n                \"There are active debug sessions, are you sure you want to stop them?\"\n            ));\n        }\n        const res = await this.dialogService.confirm({\n            message,\n            type: 'warning',\n            primaryButton: ( nls.localize(\n                { key: 'debug.stop', comment: ['&& denotes a mnemonic'] },\n                \"&&Stop Debugging\"\n            ))\n        });\n        return !res.confirmed;\n    }\n};\nDebugLifecycle = ( __decorate([\n    ( __param(0, ILifecycleService)),\n    ( __param(1, IDebugService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IDialogService))\n], DebugLifecycle));\nexport { DebugLifecycle };\n","import { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport './media/debug.contribution.css.js';\nimport './media/debugHover.css.js';\nimport { registerEditorContribution } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { MenuRegistry, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { Extensions as Extensions$3 } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { Extensions as Extensions$1 } from 'monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { EditorPaneDescriptor } from '../../../browser/editor.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { EditorExtensions } from '../../../common/editor.js';\nimport { Extensions as Extensions$2 } from '../../../common/views.js';\nimport { BreakpointEditorContribution } from './breakpointEditorContribution.js';\nimport { BreakpointsView } from './breakpointsView.js';\nimport { CallStackEditorContribution } from './callStackEditorContribution.js';\nimport { CallStackView } from './callStackView.js';\nimport { registerColors } from './debugColors.js';\nimport { DEBUG_QUICK_ACCESS_PREFIX, SELECT_AND_START_ID, DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, SELECT_DEBUG_CONSOLE_ID, TOGGLE_INLINE_BREAKPOINT_ID, DEBUG_COMMAND_CATEGORY, TERMINATE_THREAD_ID, STEP_OVER_LABEL, STEP_OVER_ID, STEP_INTO_LABEL, STEP_INTO_ID, STEP_INTO_TARGET_LABEL, STEP_INTO_TARGET_ID, STEP_OUT_LABEL, STEP_OUT_ID, PAUSE_LABEL, PAUSE_ID, STOP_LABEL, STOP_ID, CONTINUE_LABEL, CONTINUE_ID, FOCUS_REPL_ID, JUMP_TO_CURSOR_ID, SELECT_AND_START_LABEL, NEXT_DEBUG_CONSOLE_LABEL, NEXT_DEBUG_CONSOLE_ID, PREV_DEBUG_CONSOLE_LABEL, PREV_DEBUG_CONSOLE_ID, OPEN_LOADED_SCRIPTS_LABEL, SHOW_LOADED_SCRIPTS_ID, SELECT_DEBUG_CONSOLE_LABEL, SELECT_DEBUG_SESSION_LABEL, SELECT_DEBUG_SESSION_ID, CALLSTACK_TOP_LABEL, CALLSTACK_TOP_ID, CALLSTACK_BOTTOM_LABEL, CALLSTACK_BOTTOM_ID, CALLSTACK_UP_LABEL, CALLSTACK_UP_ID, CALLSTACK_DOWN_LABEL, CALLSTACK_DOWN_ID, RESTART_LABEL, RESTART_SESSION_ID, DISCONNECT_LABEL, DISCONNECT_ID, DISCONNECT_AND_SUSPEND_LABEL, DISCONNECT_AND_SUSPEND_ID, RESTART_FRAME_ID, COPY_STACK_TRACE_ID, EDIT_EXPRESSION_COMMAND_ID, SET_EXPRESSION_COMMAND_ID, REMOVE_EXPRESSION_COMMAND_ID } from './debugCommands.js';\nimport { DebugConsoleQuickAccess } from './debugConsoleQuickAccess.js';\nimport { RunToCursorAction, SelectionToReplAction, SelectionToWatchExpressionsAction } from './debugEditorActions.js';\nimport { DebugEditorContribution } from './debugEditorContribution.js';\nimport { debugRun, debugConsoleViewIcon, runViewIcon, variablesViewIcon, watchViewIcon, callStackViewIcon, breakpointsViewIcon, loadedScriptsViewIcon, debugInspectMemory, watchExpressionRemove } from './debugIcons.js';\nimport { DebugProgressContribution } from './debugProgress.js';\nimport { StartDebugQuickAccessProvider } from './debugQuickAccess.js';\nimport { DebugToolBar } from './debugToolBar.js';\nimport { DebugViewPaneContainer } from './debugViewlet.js';\nimport { DisassemblyViewContribution, DisassemblyView } from './disassemblyView.js';\nimport { LoadedScriptsView } from './loadedScriptsView.js';\nimport { Repl } from './repl.js';\nimport { StatusBarColorProvider } from './statusbarColorProvider.js';\nimport { VariablesView, VIEW_MEMORY_ID, SET_VARIABLE_ID, COPY_VALUE_ID, COPY_EVALUATE_PATH_ID, ADD_TO_WATCH_ID, BREAK_WHEN_VALUE_IS_READ_ID, BREAK_WHEN_VALUE_CHANGES_ID, BREAK_WHEN_VALUE_IS_ACCESSED_ID } from './variablesView.js';\nimport { WatchExpressionsView, ADD_WATCH_LABEL, ADD_WATCH_ID, REMOVE_WATCH_EXPRESSIONS_LABEL, REMOVE_WATCH_EXPRESSIONS_COMMAND_ID } from './watchExpressionsView.js';\nimport { BREAKPOINT_EDITOR_CONTRIBUTION_ID, EDITOR_CONTRIBUTION_ID, CONTEXT_DEBUGGERS_AVAILABLE, DEBUG_PANEL_ID, REPL_VIEW_ID, VIEWLET_ID, VARIABLES_VIEW_ID, CONTEXT_DEBUG_UX, WATCH_VIEW_ID, CALLSTACK_VIEW_ID, BREAKPOINTS_VIEW_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_HAS_DEBUGGED, LOADED_SCRIPTS_VIEW_ID, CONTEXT_LOADED_SCRIPTS_SUPPORTED, DISASSEMBLY_VIEW_ID, INTERNAL_CONSOLE_OPTIONS_SCHEMA, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, getStateLabel, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_WATCH_ITEM_TYPE } from '../common/debug.js';\nimport { DebugContentProvider } from '../common/debugContentProvider.js';\nimport { DebugLifecycle } from '../common/debugLifecycle.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport { launchSchemaId } from '../../../services/configuration/common/configuration.js';\nconst debugCategory = ( nls.localize('debugCategory', \"Debug\"));\nregisterColors();\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DebugProgressContribution, 4 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DebugToolBar, 3 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DebugContentProvider, 4 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(StatusBarColorProvider, 4 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DisassemblyViewContribution, 4 );\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(DebugLifecycle, 4 );\n( Registry.as(Extensions$1.Quickaccess)).registerQuickAccessProvider({\n    ctor: StartDebugQuickAccessProvider,\n    prefix: DEBUG_QUICK_ACCESS_PREFIX,\n    contextKey: 'inLaunchConfigurationsPicker',\n    placeholder: ( nls.localize('startDebugPlaceholder', \"Type the name of a launch configuration to run.\")),\n    helpEntries: [{ description: ( nls.localize('startDebuggingHelp', \"Start Debugging\")), commandId: SELECT_AND_START_ID }]\n});\n( Registry.as(Extensions$1.Quickaccess)).registerQuickAccessProvider({\n    ctor: DebugConsoleQuickAccess,\n    prefix: DEBUG_CONSOLE_QUICK_ACCESS_PREFIX,\n    contextKey: 'inDebugConsolePicker',\n    placeholder: ( nls.localize('tasksQuickAccessPlaceholder', \"Type the name of a debug console to open.\")),\n    helpEntries: [{ description: ( nls.localize('tasksQuickAccessHelp', \"Show All Debug Consoles\")), commandId: SELECT_DEBUG_CONSOLE_ID }]\n});\nregisterEditorContribution('editor.contrib.callStack', CallStackEditorContribution, 1 );\nregisterEditorContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID, BreakpointEditorContribution, 1 );\nregisterEditorContribution(EDITOR_CONTRIBUTION_ID, DebugEditorContribution, 2 );\nconst registerDebugCommandPaletteItem = (id, title, when, precondition) => {\n    MenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n        when: ( ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, when)),\n        group: debugCategory,\n        command: {\n            id,\n            title,\n            category: DEBUG_COMMAND_CATEGORY,\n            precondition\n        }\n    });\n};\nregisterDebugCommandPaletteItem(TERMINATE_THREAD_ID, { value: ( nls.localize('terminateThread', \"Terminate Thread\")), original: 'Terminate Thread' }, CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(STEP_OVER_ID, STEP_OVER_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(STEP_INTO_ID, STEP_INTO_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(STEP_INTO_TARGET_ID, STEP_INTO_TARGET_LABEL, CONTEXT_IN_DEBUG_MODE, ( ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')))));\nregisterDebugCommandPaletteItem(STEP_OUT_ID, STEP_OUT_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(PAUSE_ID, PAUSE_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('running')));\nregisterDebugCommandPaletteItem(STOP_ID, STOP_LABEL, CONTEXT_IN_DEBUG_MODE, ( ContextKeyExpr.or(( CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated()), CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)));\nregisterDebugCommandPaletteItem(CONTINUE_ID, CONTINUE_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(FOCUS_REPL_ID, { value: ( nls.localize(\n    { comment: ['Debug is a noun in this context, not a verb.'], key: 'debugFocusConsole' },\n    \"Focus on Debug Console View\"\n)), original: 'Focus on Debug Console View' });\nregisterDebugCommandPaletteItem(JUMP_TO_CURSOR_ID, { value: ( nls.localize('jumpToCursor', \"Jump to Cursor\")), original: 'Jump to Cursor' }, CONTEXT_JUMP_TO_CURSOR_SUPPORTED);\nregisterDebugCommandPaletteItem(JUMP_TO_CURSOR_ID, { value: ( nls.localize('SetNextStatement', \"Set Next Statement\")), original: 'Set Next Statement' }, CONTEXT_JUMP_TO_CURSOR_SUPPORTED);\nregisterDebugCommandPaletteItem(RunToCursorAction.ID, { value: RunToCursorAction.LABEL, original: 'Run to Cursor' }, CONTEXT_DEBUGGERS_AVAILABLE);\nregisterDebugCommandPaletteItem(SelectionToReplAction.ID, { value: SelectionToReplAction.LABEL, original: 'Evaluate in Debug Console' }, CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(SelectionToWatchExpressionsAction.ID, { value: SelectionToWatchExpressionsAction.LABEL, original: 'Add to Watch' });\nregisterDebugCommandPaletteItem(TOGGLE_INLINE_BREAKPOINT_ID, { value: ( nls.localize('inlineBreakpoint', \"Inline Breakpoint\")), original: 'Inline Breakpoint' });\nregisterDebugCommandPaletteItem(SELECT_AND_START_ID, SELECT_AND_START_LABEL, ( ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, ( CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(1 ))))));\nregisterDebugCommandPaletteItem(NEXT_DEBUG_CONSOLE_ID, NEXT_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(PREV_DEBUG_CONSOLE_ID, PREV_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(SHOW_LOADED_SCRIPTS_ID, OPEN_LOADED_SCRIPTS_LABEL, CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(SELECT_DEBUG_CONSOLE_ID, SELECT_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(SELECT_DEBUG_SESSION_ID, SELECT_DEBUG_SESSION_LABEL);\nregisterDebugCommandPaletteItem(CALLSTACK_TOP_ID, CALLSTACK_TOP_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(CALLSTACK_BOTTOM_ID, CALLSTACK_BOTTOM_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(CALLSTACK_UP_ID, CALLSTACK_UP_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(CALLSTACK_DOWN_ID, CALLSTACK_DOWN_LABEL, CONTEXT_IN_DEBUG_MODE, ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nconst registerDebugViewMenuItem = (menuId, id, title, order, when, precondition, group = 'navigation', icon) => {\n    MenuRegistry.appendMenuItem(menuId, {\n        group,\n        when,\n        order,\n        icon,\n        command: {\n            id,\n            title,\n            icon,\n            precondition\n        }\n    });\n};\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, RESTART_SESSION_ID, RESTART_LABEL, 10, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, DISCONNECT_ID, DISCONNECT_LABEL, 20, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, 21, ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STOP_ID, STOP_LABEL, 30, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session')), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, PAUSE_ID, PAUSE_LABEL, 10, ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( CONTEXT_DEBUG_STATE.isEqualTo('running')))));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, CONTINUE_ID, CONTINUE_LABEL, 10, ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')))));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_OVER_ID, STEP_OVER_LABEL, 20, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_INTO_ID, STEP_INTO_LABEL, 30, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_OUT_ID, STEP_OUT_LABEL, 40, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), ( CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, TERMINATE_THREAD_ID, ( nls.localize('terminateThread', \"Terminate Thread\")), 10, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread')), undefined, 'termination');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, RESTART_FRAME_ID, ( nls.localize('restartFrame', \"Restart Frame\")), 10, ( ContextKeyExpr.and(( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame')), CONTEXT_RESTART_FRAME_SUPPORTED)), CONTEXT_STACK_FRAME_SUPPORTS_RESTART);\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, COPY_STACK_TRACE_ID, ( nls.localize('copyStackTrace', \"Copy Call Stack\")), 20, ( CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame')), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, VIEW_MEMORY_ID, ( nls.localize('viewMemory', \"View Binary Data\")), 15, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_IN_DEBUG_MODE, 'inline', debugInspectMemory);\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, SET_VARIABLE_ID, ( nls.localize('setValue', \"Set Value\")), 10, ( ContextKeyExpr.or(CONTEXT_SET_VARIABLE_SUPPORTED, ( ContextKeyExpr.and(CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_SET_EXPRESSION_SUPPORTED)))), ( CONTEXT_VARIABLE_IS_READONLY.toNegated()), '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, COPY_VALUE_ID, ( nls.localize('copyValue', \"Copy Value\")), 10, undefined, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, COPY_EVALUATE_PATH_ID, ( nls.localize('copyAsExpression', \"Copy as Expression\")), 20, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, ADD_TO_WATCH_ID, ( nls.localize('addToWatchExpressions', \"Add to Watch\")), 100, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_IS_READ_ID, ( nls.localize('breakWhenValueIsRead', \"Break on Value Read\")), 200, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_CHANGES_ID, ( nls.localize('breakWhenValueChanges', \"Break on Value Change\")), 210, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_IS_ACCESSED_ID, ( nls.localize('breakWhenValueIsAccessed', \"Break on Value Access\")), 220, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, ADD_WATCH_ID, ADD_WATCH_LABEL, 10, undefined, undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, EDIT_EXPRESSION_COMMAND_ID, ( nls.localize('editWatchExpression', \"Edit Expression\")), 20, ( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression')), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, SET_EXPRESSION_COMMAND_ID, ( nls.localize('setValue', \"Set Value\")), 30, ( ContextKeyExpr.or(( ContextKeyExpr.and(( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression')), CONTEXT_SET_EXPRESSION_SUPPORTED)), ( ContextKeyExpr.and(( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('variable')), CONTEXT_SET_VARIABLE_SUPPORTED)))), ( CONTEXT_VARIABLE_IS_READONLY.toNegated()), '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, COPY_VALUE_ID, ( nls.localize('copyValue', \"Copy Value\")), 40, ( ContextKeyExpr.or(( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression')), ( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('variable')))), CONTEXT_IN_DEBUG_MODE, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, VIEW_MEMORY_ID, ( nls.localize('viewMemory', \"View Binary Data\")), 10, CONTEXT_CAN_VIEW_MEMORY, undefined, 'inline', debugInspectMemory);\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, REMOVE_EXPRESSION_COMMAND_ID, ( nls.localize('removeWatchExpression', \"Remove Expression\")), 20, ( CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression')), undefined, 'inline', watchExpressionRemove);\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, REMOVE_WATCH_EXPRESSIONS_LABEL, 20, undefined, undefined, 'z_commands');\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { submenu: MenuId.EditorTitleRun, rememberDefaultAction: true, title: { value: ( nls.localize('run', \"Run or Debug...\")), original: 'Run or Debug...', }, icon: debugRun, group: 'navigation', order: -1 });\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n    submenu: MenuId.MenubarDebugMenu,\n    title: {\n        value: 'Run',\n        original: 'Run',\n        mnemonicTitle: ( nls.localize({ key: 'mRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\"))\n    },\n    order: 6\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarNewBreakpointMenu, {\n    group: '1_breakpoints',\n    command: {\n        id: TOGGLE_INLINE_BREAKPOINT_ID,\n        title: ( nls.localize(\n            { key: 'miInlineBreakpoint', comment: ['&& denotes a mnemonic'] },\n            \"Inline Breakp&&oint\"\n        ))\n    },\n    order: 2,\n    when: CONTEXT_DEBUGGERS_AVAILABLE\n});\nconst VIEW_CONTAINER = ( Registry.as(Extensions$2.ViewContainersRegistry)).registerViewContainer({\n    id: DEBUG_PANEL_ID,\n    title: ( nls.localize(\n        { comment: ['Debug is a noun in this context, not a verb.'], key: 'debugPanel' },\n        \"Debug Console\"\n    )),\n    icon: debugConsoleViewIcon,\n    ctorDescriptor: ( new SyncDescriptor(\n        ViewPaneContainer,\n        [DEBUG_PANEL_ID, { mergeViewWithContainerWhenSingleView: true }]\n    )),\n    storageId: DEBUG_PANEL_ID,\n    hideIfEmpty: true,\n    order: 2,\n}, 1 , { doNotRegisterOpenCommand: true });\n( Registry.as(Extensions$2.ViewsRegistry)).registerViews([{\n        id: REPL_VIEW_ID,\n        name: ( nls.localize(\n            { comment: ['Debug is a noun in this context, not a verb.'], key: 'debugPanel' },\n            \"Debug Console\"\n        )),\n        containerIcon: debugConsoleViewIcon,\n        canToggleVisibility: false,\n        canMoveView: true,\n        when: CONTEXT_DEBUGGERS_AVAILABLE,\n        ctorDescriptor: ( new SyncDescriptor(Repl)),\n        openCommandActionDescriptor: {\n            id: 'workbench.debug.action.toggleRepl',\n            mnemonicTitle: ( nls.localize(\n                { key: 'miToggleDebugConsole', comment: ['&& denotes a mnemonic'] },\n                \"De&&bug Console\"\n            )),\n            keybindings: { primary: 2048  | 1024  | 55  },\n            order: 2\n        }\n    }], VIEW_CONTAINER);\nconst viewContainer = ( Registry.as(Extensions$2.ViewContainersRegistry)).registerViewContainer({\n    id: VIEWLET_ID,\n    title: { value: ( nls.localize('run and debug', \"Run and Debug\")), original: 'Run and Debug' },\n    openCommandActionDescriptor: {\n        id: VIEWLET_ID,\n        mnemonicTitle: ( nls.localize({ key: 'miViewRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\")),\n        keybindings: { primary: 2048  | 1024  | 34  },\n        order: 3\n    },\n    ctorDescriptor: ( new SyncDescriptor(DebugViewPaneContainer)),\n    icon: runViewIcon,\n    alwaysUseContainerInfo: true,\n    order: 3,\n}, 0 );\nconst viewsRegistry = ( Registry.as(Extensions$2.ViewsRegistry));\nviewsRegistry.registerViews([{ id: VARIABLES_VIEW_ID, name: ( nls.localize('variables', \"Variables\")), containerIcon: variablesViewIcon, ctorDescriptor: ( new SyncDescriptor(VariablesView)), order: 10, weight: 40, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusVariablesView' }, when: ( CONTEXT_DEBUG_UX.isEqualTo('default')) }], viewContainer);\nviewsRegistry.registerViews([{ id: WATCH_VIEW_ID, name: ( nls.localize('watch', \"Watch\")), containerIcon: watchViewIcon, ctorDescriptor: ( new SyncDescriptor(WatchExpressionsView)), order: 20, weight: 10, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusWatchView' }, when: ( CONTEXT_DEBUG_UX.isEqualTo('default')) }], viewContainer);\nviewsRegistry.registerViews([{ id: CALLSTACK_VIEW_ID, name: ( nls.localize('callStack', \"Call Stack\")), containerIcon: callStackViewIcon, ctorDescriptor: ( new SyncDescriptor(CallStackView)), order: 30, weight: 30, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusCallStackView' }, when: ( CONTEXT_DEBUG_UX.isEqualTo('default')) }], viewContainer);\nviewsRegistry.registerViews([{ id: BREAKPOINTS_VIEW_ID, name: ( nls.localize('breakpoints', \"Breakpoints\")), containerIcon: breakpointsViewIcon, ctorDescriptor: ( new SyncDescriptor(BreakpointsView)), order: 40, weight: 20, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusBreakpointsView' }, when: ( ContextKeyExpr.or(CONTEXT_BREAKPOINTS_EXIST, ( CONTEXT_DEBUG_UX.isEqualTo('default')), CONTEXT_HAS_DEBUGGED)) }], viewContainer);\nviewsRegistry.registerViews([{ id: LOADED_SCRIPTS_VIEW_ID, name: ( nls.localize('loadedScripts', \"Loaded Scripts\")), containerIcon: loadedScriptsViewIcon, ctorDescriptor: ( new SyncDescriptor(LoadedScriptsView)), order: 35, weight: 5, canToggleVisibility: true, canMoveView: true, collapsed: true, when: ( ContextKeyExpr.and(CONTEXT_LOADED_SCRIPTS_SUPPORTED, ( CONTEXT_DEBUG_UX.isEqualTo('default')))) }], viewContainer);\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(DisassemblyView, DISASSEMBLY_VIEW_ID, ( nls.localize('disassembly', \"Disassembly\"))), [( new SyncDescriptor(DisassemblyViewInput))]);\nconst configurationRegistry = ( Registry.as(Extensions$3.Configuration));\nconfigurationRegistry.registerConfiguration({\n    id: 'debug',\n    order: 20,\n    title: ( nls.localize('debugConfigurationTitle', \"Debug\")),\n    type: 'object',\n    properties: {\n        'debug.allowBreakpointsEverywhere': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'allowBreakpointsEverywhere' },\n                \"Allow setting breakpoints in any file.\"\n            )),\n            default: false\n        },\n        'debug.openExplorerOnEnd': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'openExplorerOnEnd' },\n                \"Automatically open the explorer view at the end of a debug session.\"\n            )),\n            default: false\n        },\n        'debug.inlineValues': {\n            type: 'string',\n            'enum': ['on', 'off', 'auto'],\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'inlineValues' },\n                \"Show variable values inline in editor while debugging.\"\n            )),\n            'enumDescriptions': [\n                ( nls.localize(\n                    'inlineValues.on',\n                    \"Always show variable values inline in editor while debugging.\"\n                )),\n                ( nls.localize(\n                    'inlineValues.off',\n                    \"Never show variable values inline in editor while debugging.\"\n                )),\n                ( nls.localize(\n                    'inlineValues.focusNoScroll',\n                    \"Show variable values inline in editor while debugging when the language supports inline value locations.\"\n                )),\n            ],\n            default: 'auto'\n        },\n        'debug.toolBarLocation': {\n            enum: ['floating', 'docked', 'hidden'],\n            markdownDescription: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'toolBarLocation' },\n                \"Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`.\"\n            )),\n            default: 'floating'\n        },\n        'debug.showInStatusBar': {\n            enum: ['never', 'always', 'onFirstSessionStart'],\n            enumDescriptions: [( nls.localize('never', \"Never show debug in Status bar\")), ( nls.localize('always', \"Always show debug in Status bar\")), ( nls.localize(\n                'onFirstSessionStart',\n                \"Show debug in Status bar only after debug was started for the first time\"\n            ))],\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'showInStatusBar' },\n                \"Controls when the debug Status bar should be visible.\"\n            )),\n            default: 'onFirstSessionStart'\n        },\n        'debug.internalConsoleOptions': INTERNAL_CONSOLE_OPTIONS_SCHEMA,\n        'debug.console.closeOnEnd': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.console.closeOnEnd',\n                \"Controls if the Debug Console should be automatically closed when the debug session ends.\"\n            )),\n            default: false\n        },\n        'debug.terminal.clearBeforeReusing': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'debug.terminal.clearBeforeReusing' },\n                \"Before starting a new debug session in an integrated or external terminal, clear the terminal.\"\n            )),\n            default: false\n        },\n        'debug.openDebug': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart', 'openOnDebugBreak'],\n            default: 'openOnDebugBreak',\n            description: ( nls.localize('openDebug', \"Controls when the debug view should open.\"))\n        },\n        'debug.showSubSessionsInToolBar': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'showSubSessionsInToolBar' },\n                \"Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.\"\n            )),\n            default: false\n        },\n        'debug.console.fontSize': {\n            type: 'number',\n            description: ( nls.localize(\n                'debug.console.fontSize',\n                \"Controls the font size in pixels in the Debug Console.\"\n            )),\n            default: isMacintosh ? 12 : 14,\n        },\n        'debug.console.fontFamily': {\n            type: 'string',\n            description: ( nls.localize(\n                'debug.console.fontFamily',\n                \"Controls the font family in the Debug Console.\"\n            )),\n            default: 'default'\n        },\n        'debug.console.lineHeight': {\n            type: 'number',\n            description: ( nls.localize(\n                'debug.console.lineHeight',\n                \"Controls the line height in pixels in the Debug Console. Use 0 to compute the line height from the font size.\"\n            )),\n            default: 0\n        },\n        'debug.console.wordWrap': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.console.wordWrap',\n                \"Controls if the lines should wrap in the Debug Console.\"\n            )),\n            default: true\n        },\n        'debug.console.historySuggestions': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.console.historySuggestions',\n                \"Controls if the Debug Console should suggest previously typed input.\"\n            )),\n            default: true\n        },\n        'debug.console.collapseIdenticalLines': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.console.collapseIdenticalLines',\n                \"Controls if the Debug Console should collapse identical lines and show a number of occurrences with a badge.\"\n            )),\n            default: true\n        },\n        'debug.console.acceptSuggestionOnEnter': {\n            enum: ['off', 'on'],\n            description: ( nls.localize(\n                'debug.console.acceptSuggestionOnEnter',\n                \"Controls whether suggestions should be accepted on Enter in the Debug Console. Enter is also used to evaluate whatever is typed in the Debug Console.\"\n            )),\n            default: 'off'\n        },\n        'launch': {\n            type: 'object',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'launch' },\n                \"Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.\"\n            )),\n            default: { configurations: [], compounds: [] },\n            $ref: launchSchemaId\n        },\n        'debug.focusWindowOnBreak': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.focusWindowOnBreak',\n                \"Controls whether the workbench window should be focused when the debugger breaks.\"\n            )),\n            default: true\n        },\n        'debug.focusEditorOnBreak': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'debug.focusEditorOnBreak',\n                \"Controls whether the editor should be focused when the debugger breaks.\"\n            )),\n            default: true\n        },\n        'debug.onTaskErrors': {\n            enum: ['debugAnyway', 'showErrors', 'prompt', 'abort'],\n            enumDescriptions: [( nls.localize('debugAnyway', \"Ignore task errors and start debugging.\")), ( nls.localize('showErrors', \"Show the Problems view and do not start debugging.\")), ( nls.localize('prompt', \"Prompt user.\")), ( nls.localize('cancel', \"Cancel debugging.\"))],\n            description: ( nls.localize(\n                'debug.onTaskErrors',\n                \"Controls what to do when errors are encountered after running a preLaunchTask.\"\n            )),\n            default: 'prompt'\n        },\n        'debug.showBreakpointsInOverviewRuler': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'showBreakpointsInOverviewRuler' },\n                \"Controls whether breakpoints should be shown in the overview ruler.\"\n            )),\n            default: false\n        },\n        'debug.showInlineBreakpointCandidates': {\n            type: 'boolean',\n            description: ( nls.localize(\n                { comment: ['This is the description for a setting'], key: 'showInlineBreakpointCandidates' },\n                \"Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.\"\n            )),\n            default: true\n        },\n        'debug.saveBeforeStart': {\n            description: ( nls.localize(\n                'debug.saveBeforeStart',\n                \"Controls what editors to save before starting a debug session.\"\n            )),\n            enum: ['allEditorsInActiveGroup', 'nonUntitledEditorsInActiveGroup', 'none'],\n            enumDescriptions: [\n                ( nls.localize(\n                    'debug.saveBeforeStart.allEditorsInActiveGroup',\n                    \"Save all editors in the active group before starting a debug session.\"\n                )),\n                ( nls.localize(\n                    'debug.saveBeforeStart.nonUntitledEditorsInActiveGroup',\n                    \"Save all editors in the active group except untitled ones before starting a debug session.\"\n                )),\n                ( nls.localize(\n                    'debug.saveBeforeStart.none',\n                    \"Don't save any editors before starting a debug session.\"\n                )),\n            ],\n            default: 'allEditorsInActiveGroup',\n            scope: 5\n        },\n        'debug.confirmOnExit': {\n            description: ( nls.localize(\n                'debug.confirmOnExit',\n                \"Controls whether to confirm when the window closes if there are active debug sessions.\"\n            )),\n            type: 'string',\n            enum: ['never', 'always'],\n            enumDescriptions: [\n                ( nls.localize('debug.confirmOnExit.never', \"Never confirm.\")),\n                ( nls.localize(\n                    'debug.confirmOnExit.always',\n                    \"Always confirm if there are debug sessions.\"\n                )),\n            ],\n            default: 'never'\n        },\n        'debug.disassemblyView.showSourceCode': {\n            type: 'boolean',\n            default: true,\n            description: ( nls.localize(\n                'debug.disassemblyView.showSourceCode',\n                \"Show Source Code in Disassembly View.\"\n            ))\n        },\n        'debug.autoExpandLazyVariables': {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'debug.autoExpandLazyVariables',\n                \"Automatically show values for variables that are lazily resolved by the debugger, such as getters.\"\n            ))\n        },\n        'debug.enableStatusBarColor': {\n            type: 'boolean',\n            description: ( nls.localize('debug.enableStatusBarColor', \"Color status bar when debugger is active\")),\n            default: true\n        }\n    }\n});\n","import '../missing-services.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { IDebugService } from '../vscode/vs/workbench/contrib/debug/common/debug.js';\nimport { DebugService } from '../vscode/vs/workbench/contrib/debug/browser/debugService.js';\nimport { LanguageFeaturesService } from '../vscode/vs/editor/common/services/languageFeaturesService.js';\nimport { ILanguageFeaturesService } from 'monaco-editor/esm/vs/editor/common/services/languageFeatures.js';\nimport { ConfigurationResolverService } from '../vscode/vs/workbench/services/configurationResolver/browser/configurationResolverService.js';\nimport { IConfigurationResolverService } from '../vscode/vs/workbench/services/configurationResolver/common/configurationResolver.js';\nimport getServiceOverride$1 from './layout.js';\nimport '../vscode/vs/workbench/contrib/debug/browser/debug.contribution.js';\nconst original = DebugService.prototype['showError'];\nDebugService.prototype['showError'] = function (message, errorActions) {\n    return original.call(this, message, errorActions, false);\n};\nfunction getServiceOverride() {\n    return {\n        ...getServiceOverride$1(),\n        [( ILanguageFeaturesService.toString())]: new SyncDescriptor(LanguageFeaturesService, [], true),\n        [( IDebugService.toString())]: new SyncDescriptor(DebugService, [], true),\n        [( IConfigurationResolverService.toString())]: new SyncDescriptor(ConfigurationResolverService, [], true)\n    };\n}\nexport { getServiceOverride as default };\n","import { __decorate, __param } from '../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { BaseActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { MenuEntryActionViewItem } from 'monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nlet DropdownWithPrimaryActionViewItem = class DropdownWithPrimaryActionViewItem extends BaseActionViewItem {\n    get onDidChangeDropdownVisibility() {\n        return this._dropdown.onDidChangeVisibility;\n    }\n    constructor(primaryAction, dropdownAction, dropdownMenuActions, className, _contextMenuProvider, _options, _keybindingService, _notificationService, _contextKeyService, _themeService, _accessibilityService) {\n        super(null, primaryAction);\n        this._contextMenuProvider = _contextMenuProvider;\n        this._options = _options;\n        this._container = null;\n        this._dropdownContainer = null;\n        this._primaryAction = ( new MenuEntryActionViewItem(\n            primaryAction,\n            undefined,\n            _keybindingService,\n            _notificationService,\n            _contextKeyService,\n            _themeService,\n            _contextMenuProvider,\n            _accessibilityService\n        ));\n        this._dropdown = ( new DropdownMenuActionViewItem(dropdownAction, dropdownMenuActions, this._contextMenuProvider, {\n            menuAsChild: true,\n            classNames: className ? ['codicon', 'codicon-chevron-down', className] : ['codicon', 'codicon-chevron-down'],\n            keybindingProvider: this._options?.getKeyBinding\n        }));\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._primaryAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-primary');\n        const primaryContainer = dom.$('.action-container');\n        this._primaryAction.render(dom.append(this._container, primaryContainer));\n        this._dropdownContainer = dom.$('.dropdown-action-container');\n        this._dropdown.render(dom.append(this._container, this._dropdownContainer));\n        this._register(dom.addDisposableListener(primaryContainer, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(17 )) {\n                this._primaryAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._dropdownContainer, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(15 )) {\n                this._primaryAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                this._primaryAction.element?.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._primaryAction.element.tabIndex = 0;\n            this._primaryAction.element.focus();\n        }\n    }\n    blur() {\n        this._primaryAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._primaryAction.element.tabIndex = 0;\n        }\n        else {\n            this._primaryAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    update(dropdownAction, dropdownMenuActions, dropdownIcon) {\n        this._dropdown.dispose();\n        this._dropdown = ( new DropdownMenuActionViewItem(dropdownAction, dropdownMenuActions, this._contextMenuProvider, {\n            menuAsChild: true,\n            classNames: ['codicon', dropdownIcon || 'codicon-chevron-down']\n        }));\n        if (this._dropdownContainer) {\n            this._dropdown.render(this._dropdownContainer);\n        }\n    }\n    dispose() {\n        this._primaryAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithPrimaryActionViewItem = ( __decorate([\n    ( __param(6, IKeybindingService)),\n    ( __param(7, INotificationService)),\n    ( __param(8, IContextKeyService)),\n    ( __param(9, IThemeService)),\n    ( __param(10, IAccessibilityService))\n], DropdownWithPrimaryActionViewItem));\nexport { DropdownWithPrimaryActionViewItem };\n","import { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nvar Markers;\n( (function(Markers) {\n    Markers.MARKERS_CONTAINER_ID = 'workbench.panel.markers';\n    Markers.MARKERS_VIEW_ID = 'workbench.panel.markers.view';\n    Markers.MARKERS_VIEW_STORAGE_ID = 'workbench.panel.markers';\n    Markers.MARKER_COPY_ACTION_ID = 'problems.action.copy';\n    Markers.MARKER_COPY_MESSAGE_ACTION_ID = 'problems.action.copyMessage';\n    Markers.RELATED_INFORMATION_COPY_MESSAGE_ACTION_ID = 'problems.action.copyRelatedInformationMessage';\n    Markers.FOCUS_PROBLEMS_FROM_FILTER = 'problems.action.focusProblemsFromFilter';\n    Markers.MARKERS_VIEW_FOCUS_FILTER = 'problems.action.focusFilter';\n    Markers.MARKERS_VIEW_CLEAR_FILTER_TEXT = 'problems.action.clearFilterText';\n    Markers.MARKERS_VIEW_SHOW_MULTILINE_MESSAGE = 'problems.action.showMultilineMessage';\n    Markers.MARKERS_VIEW_SHOW_SINGLELINE_MESSAGE = 'problems.action.showSinglelineMessage';\n    Markers.MARKER_OPEN_ACTION_ID = 'problems.action.open';\n    Markers.MARKER_OPEN_SIDE_ACTION_ID = 'problems.action.openToSide';\n    Markers.MARKER_SHOW_PANEL_ID = 'workbench.action.showErrorsWarnings';\n    Markers.MARKER_SHOW_QUICK_FIX = 'problems.action.showQuickFixes';\n    Markers.TOGGLE_MARKERS_VIEW_ACTION_ID = 'workbench.actions.view.toggleProblems';\n})(Markers || (Markers = {})));\nvar MarkersContextKeys;\n( (function(MarkersContextKeys) {\n    MarkersContextKeys.MarkersViewModeContextKey = ( new RawContextKey('problemsViewMode', \"tree\" ));\n    MarkersContextKeys.MarkersTreeVisibilityContextKey = ( new RawContextKey('problemsVisibility', false));\n    MarkersContextKeys.MarkerFocusContextKey = ( new RawContextKey('problemFocus', false));\n    MarkersContextKeys.MarkerViewFilterFocusContextKey = ( new RawContextKey('problemsFilterFocus', false));\n    MarkersContextKeys.RelatedInformationFocusContextKey = ( new RawContextKey('relatedInformationFocus', false));\n    MarkersContextKeys.ShowErrorsFilterContextKey = ( new RawContextKey('problems.filter.errors', true));\n    MarkersContextKeys.ShowWarningsFilterContextKey = ( new RawContextKey('problems.filter.warnings', true));\n    MarkersContextKeys.ShowInfoFilterContextKey = ( new RawContextKey('problems.filter.info', true));\n    MarkersContextKeys.ShowActiveFileFilterContextKey = ( new RawContextKey('problems.filter.activeFile', false));\n    MarkersContextKeys.ShowExcludedFilesFilterContextKey = ( new RawContextKey('problems.filter.excludedFiles', true));\n})(MarkersContextKeys || (MarkersContextKeys = {})));\nexport { Markers, MarkersContextKeys };\n","import { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { refineServiceDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nconst FOLDER_CONFIG_FOLDER_NAME = '.vscode';\nconst FOLDER_SETTINGS_NAME = 'settings';\nconst FOLDER_SETTINGS_PATH = `${FOLDER_CONFIG_FOLDER_NAME}/${FOLDER_SETTINGS_NAME}.json`;\nconst defaultSettingsSchemaId = 'vscode://schemas/settings/default';\nconst userSettingsSchemaId = 'vscode://schemas/settings/user';\nconst profileSettingsSchemaId = 'vscode://schemas/settings/profile';\nconst machineSettingsSchemaId = 'vscode://schemas/settings/machine';\nconst workspaceSettingsSchemaId = 'vscode://schemas/settings/workspace';\nconst folderSettingsSchemaId = 'vscode://schemas/settings/folder';\nconst launchSchemaId = 'vscode://schemas/launch';\nconst tasksSchemaId = 'vscode://schemas/tasks';\nconst APPLICATION_SCOPES = [1 ];\nconst PROFILE_SCOPES = [2 , 3 , 4 , 5 , 6 ];\nconst LOCAL_MACHINE_PROFILE_SCOPES = [3 , 4 , 5 ];\nconst LOCAL_MACHINE_SCOPES = [1 , ...LOCAL_MACHINE_PROFILE_SCOPES];\nconst REMOTE_MACHINE_SCOPES = [2 , 3 , 4 , 5 , 6 ];\nconst WORKSPACE_SCOPES = [3 , 4 , 5 , 6 ];\nconst FOLDER_SCOPES = [4 , 5 , 6 ];\nconst TASKS_CONFIGURATION_KEY = 'tasks';\nconst LAUNCH_CONFIGURATION_KEY = 'launch';\nconst WORKSPACE_STANDALONE_CONFIGURATIONS = Object.create(null);\nWORKSPACE_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${TASKS_CONFIGURATION_KEY}.json`;\nWORKSPACE_STANDALONE_CONFIGURATIONS[LAUNCH_CONFIGURATION_KEY] = `${FOLDER_CONFIG_FOLDER_NAME}/${LAUNCH_CONFIGURATION_KEY}.json`;\nconst USER_STANDALONE_CONFIGURATIONS = Object.create(null);\nUSER_STANDALONE_CONFIGURATIONS[TASKS_CONFIGURATION_KEY] = `${TASKS_CONFIGURATION_KEY}.json`;\nconst IWorkbenchConfigurationService = refineServiceDecorator(IConfigurationService);\nconst TASKS_DEFAULT = '{\\n\\t\\\"version\\\": \\\"2.0.0\\\",\\n\\t\\\"tasks\\\": []\\n}';\nconst APPLY_ALL_PROFILES_SETTING = 'workbench.settings.applyToAllProfiles';\nexport { APPLICATION_SCOPES, APPLY_ALL_PROFILES_SETTING, FOLDER_CONFIG_FOLDER_NAME, FOLDER_SCOPES, FOLDER_SETTINGS_NAME, FOLDER_SETTINGS_PATH, IWorkbenchConfigurationService, LAUNCH_CONFIGURATION_KEY, LOCAL_MACHINE_PROFILE_SCOPES, LOCAL_MACHINE_SCOPES, PROFILE_SCOPES, REMOTE_MACHINE_SCOPES, TASKS_CONFIGURATION_KEY, TASKS_DEFAULT, USER_STANDALONE_CONFIGURATIONS, WORKSPACE_SCOPES, WORKSPACE_STANDALONE_CONFIGURATIONS, defaultSettingsSchemaId, folderSettingsSchemaId, launchSchemaId, machineSettingsSchemaId, profileSettingsSchemaId, tasksSchemaId, userSettingsSchemaId, workspaceSettingsSchemaId };\n"],"names":["Breakpoints","constructor","breakpointContribution","contextKeyService","this","breakpointsWhen","when","deserialize","undefined","language","enabled","contextMatchesRules","Debugger","adapterManager","dbgContribution","extensionDescription","configurationService","resourcePropertiesService","configurationResolverService","environmentService","debugService","mergedExtensionDescriptions","debuggerContribution","type","merge","debuggerWhen","otherDebuggerContribution","indexOf","push","mixin","destination","source","overwrite","level","Object","keys","forEach","key","isBuiltin","mainExtensionDescription","startDebugging","configuration","parentSessionId","parentSession","getModel","getSession","createDebugAdapter","session","activateDebuggers","da","Promise","resolve","Error","nls","substituteVariables","folder","config","substitutedConfig","resolveWithInteractionReplace","variables","__configurationTarget","runInTerminal","args","sessionId","label","configurationSnippets","languages","strings","uiMessages","interestedInLanguage","languageId","hasInitialConfiguration","initialConfigurations","hasConfigurationProvider","getConfigurationManager","hasDebugConfigurationProvider","getInitialConfigurationContent","initialConfigs","concat","eol","getEOL","from","scheme","untitled","path","configs","JSON","stringify","split","map","line","join","trim","content","editorConfig","getValue","editor","insertSpaces","replace","RegExp","repeat","tabSize","getMainExtensionDescriptor","getCustomTelemetryEndpoint","aiKey","sendErrorTelemtry","remoteAuthority","id","publisher","sendErrorTelemetry","getSchemaAttributes","definitions","configurationAttributes","request","definitionId","platformSpecificDefinitionId","attributes","defaultRequired","required","length","additionalProperties","properties","enum","enumDescriptions","description","pattern","deprecationMessage","deprecated","debug","doNotSuggest","errorMessage","patternErrorMessage","prop","$ref","name","schema","attributesCopy","windows","osx","linux","idDescription","typeDescription","descriptionDescription","defaultDescription","inputsSchema","inputs","items","oneOf","default","password","options","value","command","debuggersExtPoint","registerExtensionPoint","extensionPoint","defaultExtensionKind","jsonSchema","defaultSnippets","body","program","runtime","runtimeArgs","unverifiedBreakpoints","breakpointsExtPoint","presentationSchema","hidden","group","order","defaultCompound","configurations","launchSchema","title","allowTrailingCommas","allowComments","version","compounds","presentation","stopAll","preLaunchTask","jsonRegistry","as","JSONContribution","AdapterManager","delegate","editorService","quickInputService","instantiationService","commandService","extensionService","languageService","dialogService","lifecycleService","super","debugAdapterFactories","Map","_onDidRegisterDebugger","_onDidDebuggersExtPointRead","breakpointContributions","debuggerWhenKeys","Set","usedDebugTypes","adapterDescriptorFactories","debuggers","registerListeners","bufferChangeEvents","debuggersAvailable","bindTo","debugExtensionsAvailable","_register","onDidChangeContext","e","affectsSome","set","hasEnabledDebuggers","updateDebugAdapterSchema","onDidDebuggersExtPointRead","then","onDidNewSession","s","add","setHandler","extensions","delta","added","rawAdapter","collector","error","existing","getDebugger","dbg","createInstance","extension","removed","removedTypes","filter","d","fire","flatMap","ext","breakpoint","taskSchema","getJsonSchema","anyOf","task","adapter","schemaAttributes","registerSchema","registerDebugAdapterFactory","debugTypes","debugAdapterLauncher","debugType","dispose","delete","factory","get","registerDebugAdapterDescriptorFactory","debugAdapterProvider","unregisterDebugAdapterDescriptorFactory","ix","splice","getDebugAdapterDescriptor","providers","p","createDebugAdapterDescriptor","getDebuggerLabel","dbgr","onDidRegisterDebugger","event","canSetBreakpointsIn","model","getLanguageId","allowBreakpointsEverywhere","some","breakpoints","find","getEnabledDebugger","someDebuggerInterestedInLanguage","a","guessDebugger","gettingConfigurations","activeTextEditorControl","candidates","languageLabel","getLanguageName","adapters","confirmed","confirm","Warning","message","primaryButton","comment","executeCommand","initExtensionActivationsIfNeeded","sort","first","second","localeCompare","suggestedCandidates","otherCandidates","descriptor","earlyActivatedExtensions","has","picks","c","debugger","placeHolder","pick","activeItem","picked","status","getExtensionsStatus","activationTimes","activationEvent","promises","activateByEvent","all","DEBUG_SELECTED_CONFIG_NAME_KEY","DEBUG_SELECTED_ROOT","DEBUG_SELECTED_TYPE","DEBUG_RECENT_DYNAMIC_CONFIGURATIONS","ConfigurationManager","contextService","storageService","historyService","uriIdentityService","getSelectedConfig","selectedDynamic","_onDidSelectConfigurationName","configProviders","toDispose","initLaunches","setCompoundSchemaValues","previousSelectedRoot","previousSelectedType","previousSelectedLaunch","launches","l","uri","toString","previousSelectedName","debugConfigurationTypeContext","dynamicConfig","getConfigurationNames","selectConfiguration","registerDebugConfigurationProvider","debugConfigurationProvider","unregisterDebugConfigurationProvider","triggerKind","Initial","provideDebugConfigurations","resolveConfigurationByProviders","folderUri","token","resolveDebugConfigurationForType","async","resolveDebugConfiguration","resolvedType","result","seen","resolveDebugConfigurationWithSubstitutedVariables","provider","reduce","getDynamicProviders","whenInstalledExtensionsRegistered","onDebugDynamicConfigurationsName","acc","activationEvents","explicitTypes","hasGenericEvent","startsWith","slice","debuggerType","contributes","getProvider","Dynamic","getLaunches","launch","workspace","buttons","iconClass","asClassName","tooltip","disposables","input","createQuickPick","busy","placeholder","chosenPromise","onDidAccept","activeItems","onDidTriggerItemButton","context","item","openConfigFile","preserveFocus","suppressInitialConfigs","writeConfiguration","removeRecentDynamicConfigurations","nestedPicks","show","chosen","cancel","getAllConfigurations","getConfiguration","getCompound","remaining","getRecentDynamicConfigurations","store","selectedConfiguration","selectedType","parse","any","onDidChangeWorkspaceFolders","onDidChangeWorkbenchState","onDidChangeConfiguration","affectsConfiguration","getWorkspace","folders","Launch","getWorkbenchState","WorkspaceLaunch","UserLaunch","selectedLaunch","compoundConfigurationsSchema","launchNames","folderNames","f","getLaunch","workspaceUri","isUri","extUri","isEqual","selectedName","getConfig","onDidSelectConfiguration","getWorkspaceLaunch","rootUri","getLastActiveWorkspaceRoot","previousLaunch","previousName","previousSelectedDynamic","remove","names","selected","setSelectedLaunchName","activatedProviders","recentDynamicProviders","unshift","t","nameToSet","reset","AbstractLaunch","configurationManager","compound","ignoreCompoundsAndPresentation","Array","isArray","cfg","objects","useInitialConfigs","None","fileService","textFileService","resources","inspect","resource","workspaceFolderValue","created","readFile","write","index","startLineNumber","i","charAt","selection","startColumn","openEditor","pinned","revealIfVisible","fullConfig","updateValue","workspaceValue","json","preferencesService","userSettingsResource","userValue","useInitialContent","openUserSettings","jsonEditor","revealSetting","rangeRe","DebugMemoryFileSystemProvider","memoryFdCounter","fdMemory","changeEmitter","onDidChangeCapabilities","onDidChangeFile","capabilities","onDidEndSession","fd","memory","close","watch","opts","recursive","memoryReference","offset","parseUri","disposable","onDidChangeState","state","onDidInvalidateMemory","toOffset","count","fromOffset","stat","file","readOnly","File","mtime","ctime","size","permissions","Readonly","mkdir","NoPermissions","readdir","rename","open","_opts","region","getMemory","MemoryRegionView","writeFile","FileNotFound","create","data","Uint8Array","read","pos","Unavailable","ranges","readSoFar","range","Unknown","start","Math","max","toWrite","min","byteLength","buffer","assert","wrap","authority","rangeMatch","exec","query","Number","supportsWriteMemoryRequest","decodeURIComponent","parent","invalidateEmitter","onDidInvalidate","width","writable","RangeError","RawDebugSession","debugAdapter","extensionHostDebugService","openerService","notificationService","dialogSerivce","allThreadsContinued","_readyForBreakpoints","debugAdapterStopped","inShutdown","terminated","firedAdapterExitEvent","startTime","didReceiveStoppedEvent","_onDidInitialize","_onDidStop","_onDidContinued","_onDidTerminateDebugee","_onDidExitDebugee","_onDidThread","_onDidOutput","_onDidBreakpoint","_onDidLoadedSource","_onDidProgressStart","_onDidProgressUpdate","_onDidProgressEnd","_onDidInvalidated","_onDidInvalidateMemory","_onDidCustomEvent","_onDidEvent","_onDidExitAdapter","stoppedSinceLastStep","_capabilities","onError","err","shutdown","onExit","code","onEvent","mergeCapabilities","onRequest","dispatchRequest","isInShutdown","onDidExitAdapter","readyForBreakpoints","onDidInitialize","onDidStop","onDidContinued","onDidTerminateDebugee","onDidExitDebugee","onDidThread","onDidOutput","onDidBreakpoint","onDidLoadedSource","onDidCustomEvent","onDidProgressStart","onDidProgressUpdate","onDidProgressEnd","onDidInvalidated","onDidEvent","reject","startSession","Date","getTime","initialize","response","send","disconnect","terminateDebuggee","supportTerminateDebuggee","suspendDebuggee","supportSuspendDebuggee","restart","launchOrAttach","terminate","supportsTerminateRequest","supportsRestartRequest","next","fireSimulatedContinuedEvent","threadId","stepIn","stepOut","pause","terminateThreads","supportsTerminateThreadsRequest","setVariable","supportsSetVariable","setExpression","supportsSetExpression","restartFrame","supportsRestartFrame","stepInTargets","supportsStepInTargetsRequest","completions","supportsCompletionsRequest","setBreakpoints","setFunctionBreakpoints","supportsFunctionBreakpoints","dataBreakpointInfo","supportsDataBreakpoints","setDataBreakpoints","setExceptionBreakpoints","breakpointLocations","supportsBreakpointLocationsRequest","configurationDone","supportsConfigurationDoneRequest","stackTrace","exceptionInfo","supportsExceptionInfoRequest","scopes","loadedSources","supportsLoadedSourcesRequest","threads","evaluate","stepBack","supportsStepBack","reverseContinue","gotoTargets","supportsGotoTargetsRequest","goto","setInstructionBreakpoints","supportsInstructionBreakpoints","disassemble","supportsDisassembleRequest","readMemory","supportsReadMemoryRequest","writeMemory","custom","stopAdapter","stopSession","fireAdapterExitEvent","emittedStopped","sessionLengthInSeconds","seq","request_seq","success","safeSendResponse","sendResponse","launchVsCode","arguments","rendererDebugPort","shellProcessId","resp","vscodeArgs","arg","a2","prefix","match","env","openExtensionDevelopmentHostWindow","debugRenderer","timeout","showErrors","completeDispatch","errorDispatch","cancelationListener","requestId","sendRequest","onCancellationRequested","supportsCancelRequest","handleErrorResponse","errorResponse","errors","userMessage","format","url","urlLabel","actionId","run","allowCommands","showUser","topReplElementCounter","getUniqueId","ReplOutputElement","severity","sourceData","expression","_count","_onDidChangeCount","includeSource","valueRespectCount","endsWith","getId","getChildren","onDidChangeCount","hasChildren","ReplVariableElement","RawObjectReplElement","MAX_CHILDREN","valueObj","annotation","String","getOwnPropertyNames","evaluateLazy","v","ReplEvaluationInput","ReplEvaluationResult","available","_available","originalExpression","evaluateExpression","stackFrame","ReplGroup","COUNTER","autoExpand","children","ended","sourceStr","addChild","child","lastElement","hasEnded","end","ReplModel","replElements","_onDidChangeElements","onDidChangeElements","getReplElements","addReplExpression","addReplElement","appendToRepl","output","sev","clearAnsiIndex","lastIndexOf","removeReplExpressions","Ignore","substring","clearAnsiSequence","previousElement","column","lineNumber","console","collapseIdenticalLines","element","startGroup","endGroup","newElement","clone","newRepl","DebugSession","_configuration","root","telemetryService","hostService","paneCompositeService","workspaceContextService","productService","customEndpointTelemetryService","workbenchEnvironmentService","logService","initialized","sources","threadIds","cancellationMap","rawListeners","stoppedDetails","_onDidChangeState","_onDidEndAdapter","_onDidInvalidMemory","_onDidChangeREPLElements","_onDidChangeName","_options","hasSeparateRepl","repl","replListener","onWillShutdown","compoundRoot","onDidSessionStop","passFocusScheduler","getSessions","getAllThreads","stopped","lastContinuedThreadId","thread","getViewModel","focusedThread","toFocusThreadId","getStoppedDetails","toFocusThread","getThread","focusStackFrame","focusedSession","onDidEndAdapter","raw","setSubId","subId","_subId","resolved","unresolvedConfiguration","unresolved","lifecycleManagedByParent","compact","saveBeforeRestart","suppressDebugStatusbar","suppressDebugToolbar","suppressDebugView","autoExpandLazyVariables","setConfiguration","getLabel","setName","_name","onDidChangeReplElements","onDidChangeName","clientID","clientName","nameLong","adapterID","pathFormat","linesStartAt1","columnsStartAt1","supportsVariableType","supportsVariablePaging","supportsRunInTerminalRequest","locale","supportsProgressReporting","supportsInvalidatedEvent","supportsMemoryReferences","supportsArgsCanBeInterpretedByShell","supportsMemoryEvent","supportsStartDebuggingRequest","setExceptionBreakpointsForSession","exceptionBreakpointFilters","__sessionId","cancelAllRequests","sessionStopped","suspend","sendBreakpoints","modelUri","breakpointsToSend","sourceModified","rawSource","getRawSource","adapterData","lines","bp","sessionAgnosticData","condition","hitCondition","logMessage","setBreakpointSessionData","sendFunctionBreakpoints","fbpts","sendExceptionBreakpoints","exbpts","supportsExceptionFilterOptions","filters","filterOptions","exb","filterId","variablesReference","sendDataBreakpoints","dataBreakpoints","sendInstructionBreakpoints","instructionBreakpoints","breakpointsLocations","positions","getDebugProtocolBreakpoint","breakpointId","customRequest","startFrame","levels","sessionToken","getNewCancellationToken","exceptionId","breakMode","details","frameId","setLastSteppingGranularity","granularity","lastSteppingGranularity","targetId","continue","loadSource","getSourceForUri","getEncodedDebugData","sourceReference","getLoadedSources","src","getSource","text","position","overwriteBefore","sessionCancelationToken","targets","progressId","instructionOffset","instructionCount","resolveSymbols","instructions","allowPartial","clearThreads","removeThreads","reference","clearCallStack","clear","allValues","rawUpdate","oldThread","allThreadsStopped","reason","fetchThreads","initializeForTest","aria","sendConfigurationDone","sendAllBreakpoints","statusQueue","queue","focusedThreadDoesNotExist","refreshTopOfCallstack","focus","preserveFocusHint","getCallStack","focusedStackFrame","focusEditorOnBreak","openDebug","openPaneComposite","focusWindowOnBreak","extensionTestsLocationURI","force","topCallStack","wholeCallStack","presentationHint","fetchThreadsScheduler","isScheduled","schedule","viewModel","explicit","restartSession","sd","tokens","outputQueue","outputSeverity","category","Info","telemetryEndpoint","telemetryLevel","publicLog","expanded","getBreakpoints","getIdFromAdapter","functionBreakpoint","getFunctionBreakpoints","dataBreakpoint","getDataBreakpoints","dbp","exceptionBreakpoint","getExceptionBreakpoints","excbp","bps","addBreakpoints","removeBreakpoints","removeFunctionBreakpoints","removeDataBreakpoints","areas","updateViews","asCanonicalUri","uriKey","found","tokenSource","isImportant","notify","once","listener","thisArgs","call","DEBUG_TASK_ERROR_CHOICE_KEY","DebugTaskRunner","taskService","markerService","viewsService","canceled","runTaskAndCheckErrors","taskId","taskSummary","runTask","exitCode","errorCount","severities","take","successExitCode","failureExitCode","onTaskErrors","openView","MARKERS_VIEW_ID","taskLabel","DebugChoice","checkboxChecked","prompt","DebugAnyway","ShowErrors","cancelButton","Cancel","checkbox","debugAnyway","abort","taskConfigureAction","configureAction","choiceMap","choice","ConfigureTask","getTask","taskStarted","inactivePromise","kind","_id","onDidStateChange","promise","getActiveTasks","tasks","getBusyTasks","taskPromise","configurationProperties","isBackground","waitForInput","waitTime","setTimeout","DebugCompoundRoot","stopEmitter","DEBUG_BREAKPOINTS_KEY","DEBUG_FUNCTION_BREAKPOINTS_KEY","DEBUG_DATA_BREAKPOINTS_KEY","DEBUG_EXCEPTION_BREAKPOINTS_KEY","DEBUG_WATCH_EXPRESSIONS_KEY","DEBUG_CHOSEN_ENVIRONMENTS_KEY","DEBUG_UX_STATE_KEY","DebugStorage","loadDebugUxState","storeDebugUxState","loadBreakpoints","external","loadFunctionBreakpoints","fb","loadExceptionBreakpoints","exBreakpoint","supportsCondition","conditionDescription","fallback","loadDataBreakpoints","dataId","accessTypes","accessType","loadWatchExpressions","watchStoredData","loadChosenEnvironments","storeChosenEnvironments","environments","storeWatchExpressions","watchExpressions","we","storeBreakpoints","debugModel","functionBreakpoints","canPersist","exceptionBreakpoints","DebugTelemetry","logDebugSessionStart","launchJsonExists","breakpointCount","watchExpressionsCount","getWatchExpressions","extensionName","identifier","logDebugSessionStop","adapterExitEvent","ViewModel","firstSessionStart","_onDidFocusSession","_onDidFocusThread","_onDidFocusStackFrame","_onDidSelectExpression","_onDidEvaluateLazyExpression","_onWillUpdateViews","expressionSelectedContextKey","loadedScriptsSupportedContextKey","stepBackSupportedContextKey","focusedSessionIsAttach","restartFrameSupportedContextKey","stepIntoTargetsSupported","jumpToCursorSupported","setVariableSupported","setExpressionSupported","multiSessionDebug","terminateDebuggeeSupported","suspendDebuggeeSupported","disassembleRequestSupported","focusedStackFrameHasInstructionPointerReference","_focusedSession","_focusedThread","_focusedStackFrame","setFocus","shouldEmitForStackFrame","shouldEmitForSession","shouldEmitForThread","instructionPointerReference","attach","onDidFocusSession","onDidFocusThread","onDidFocusStackFrame","getSelectedExpression","selectedExpression","setSelectedExpression","settingWatch","onDidSelectExpression","onDidEvaluateLazyExpression","onWillUpdateViews","isMultiSessionView","setMultiSessionView","evaluateLazyExpression","DebugService","viewDescriptorService","layoutService","activityService","workspaceTrustRequestService","initializing","sessionCancellationTokens","haveDoneLazySetup","breakpointsToSendOnResourceSaved","_onDidNewSession","_onWillNewSession","_onDidEndSession","debugStorage","chosenEnvironments","telemetry","taskRunner","onDidFilesChange","onFileChanges","onAttachSession","port","launchOrAttachToSession","onTerminateSession","onStateChange","setExceptionBreakpointFallbackSession","debugUxValue","debugUx","onDidChangeCallStack","numberOfSessions","activity","viewContainer","getViewContainerByViewId","showViewContainerActivity","badge","n","onDidActiveEditorChange","activeEditor","instance","disassemblyViewFocus","onBeforeShutdown","editors","initContextKeys","queueMicrotask","debugState","hasDebugged","inDebugMode","breakpointsExist","setBreakpointsExistContext","onDidChangeBreakpoints","getAdapterManager","sourceIsNotAvailable","initializingOptions","_initializingOptions","startInitializingState","endInitializingState","cancelTokens","previousState","onWillNewSession","lazySetup","registerProvider","configOrName","saveBeforeStart","noDebug","requestWorkspaceTrust","configData","launchForName","launchesContainingName","launchesMatchingConfigData","createSession","every","unresolvedConfig","guess","initCancellationToken","configByProviders","resolvedConfig","isCancellationRequested","actionList","showError","doCreateSession","startedByUser","suppressMultipleSessionWarning","addSession","registerSessionListeners","internalConsoleOptions","showSubSessions","showSubSessionsInToolBar","sessions","__autoAttach","actions","forceFocus","sessionRunningScheduler","extensionDebugSession","postDebugTask","getStackFrameThreadAndSessionToFocus","isVisible","openExplorerOnEnd","closeOnEnd","debugConsoleContainer","isViewContainerVisible","closeViewContainer","removeExceptionBreakpointsForSession","restartData","isAutoRestart","runTasks","preRestartTask","taskResult1","postRestartTask","reload","needsToSubstitute","resolvedByProviders","__restart","shouldFocus","errorActions","promptLaunchJson","action","_stackFrame","_thread","_session","openInEditor","sideBySide","control","getControl","hasModel","getLineCount","lineContent","getLineContent","addWatchExpression","renameWatchExpression","newName","moveWatchExpression","removeWatchExpressions","enableOrDisableBreakpoints","enable","setEnablement","originalUri","enableOrDisableAllBreakpoints","rawBreakpoints","ariaAnnounce","fsPath","updateBreakpoints","sendOnResourceSaved","toRemove","urisToClear","setBreakpointsActivated","activated","addFunctionBreakpoint","updateFunctionBreakpoint","update","addDataBreakpoint","addInstructionBreakpoint","address","removeInstructionBreakpoints","setExceptionBreakpointCondition","setBreakpointsPromises","enabledOnly","sendToOneOrAllSessions","fbp","areBreakpointsActivated","getInstructionBreakpoints","enabledExceptionBps","getExceptionBreakpointsForSession","fileChangesEvent","contains","toSend","runTo","breakpointToRemove","threadToContinue","removeTempBreakPoint","addResult","addAndValidateBreakpoints","addTempBreakPoint","assign","verified","bestThread","bestScore","sessionsThatVerified","includes","pausedInThisFile","top","getTopStackFrame","avoidSession","LanguageFeaturesService","referenceProvider","_score","bind","renameProvider","codeActionProvider","definitionProvider","typeDefinitionProvider","declarationProvider","implementationProvider","documentSymbolProvider","inlayHintsProvider","colorProvider","codeLensProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","onTypeFormattingEditProvider","signatureHelpProvider","hoverProvider","documentHighlightProvider","selectionRangeProvider","foldingRangeProvider","linkProvider","inlineCompletionsProvider","completionProvider","linkedEditingRangeProvider","inlineValuesProvider","evaluatableExpressionProvider","documentRangeSemanticTokensProvider","documentSemanticTokensProvider","documentOnDropEditProvider","documentPasteEditProvider","setNotebookTypeResolver","resolver","_notebookTypeResolver","BaseConfigurationResolverService","INPUT_OR_COMMAND_VARIABLES_PATTERN","envVariablesPromise","labelService","pathService","getFolderUri","folderName","pop","getWorkspaceFolderCount","getConfigurationValue","suffix","getAppRoot","getExecPath","getFilePath","fileResource","getOriginalUri","supportSideBySide","PRIMARY","filterByScheme","vscodeUserData","defaultUriScheme","getUriLabel","noPrefix","getWorkspaceFolderPathForFile","wsFolder","getWorkspaceFolder","getSelectedText","activeControl","original","getOriginalEditor","modified","getModifiedEditor","hasWidgetFocus","activeModel","activeSelection","getSelection","getValueInRange","getLineNumber","positionLineNumber","getExtension","userHome","home","userInputAccessQueue","section","target","resolveAnyAsync","resolveWithInteraction","mapping","fromEntries","resolveAnyMap","newConfig","allVariableMapping","resolvedVariables","resolveWithInputAndCommands","inputOrCommandMapping","updateMapping","newMapping","fullMapping","entries","variableToCommandMap","overrides","valueResult","findVariables","variableValues","variable","showUserInput","commandId","types","_contributedVariables","object","matches","contributed","values","inputInfos","info","missingAttribute","attrName","inputOptions","ignoreFocusLost","resolvedInput","pickOption","pickOptions","matchOnDetail","ConfigurationResolverService","_registeredGutterActionsGenerators","registerGutterActionsGenerator","gutterActionsGenerator","getGutterActionsGenerators","GutterActionsRegistry","EditorLineNumberContextMenu","ID","contextMenuService","menuService","onMouseDown","doShow","rightButton","leftButton","ctrlKey","createOverlay","menu","createMenu","EditorLineNumberContext","allActions","invokeFunction","accessor","generator","collectedActions","b","menuActions","getActions","shouldForwardArgs","currentSelections","getSelections","lineRange","endLineNumber","endColumn","getLineLength","containsSelection","isEmpty","intersectRanges","setSelection","showContextMenu","getAnchor","onHide","$","dom","IPrivateBreakpointWidgetService","DECORATION_KEY","BreakpointWidget","contextViewService","themeService","modelService","codeEditorService","_configurationService","languageFeaturesService","keybindingService","showFrame","showArrow","frameWidth","isAccessible","conditionInput","hitCountInput","logMessageInput","registerDecorationType","acceptString","lookupKeybinding","AcceptBreakpointWidgetInputAction","closeString","CloseBreakpointWidgetCommand","getInputValue","rememberInput","setInputMode","setLanguage","rangeOrPos","lineNum","fitHeightToContent","_relayout","_fillContainer","container","setCssClass","selectBox","ariaLabel","selectContainer","render","onDidSelect","setValue","inputContainer","createBreakpointInput","onDidChangeContent","setPosition","getLineMaxColumn","_doLayout","heightInPixel","widthInPixel","heightInPx","layout","height","centerInputVertically","_onWidth","scopedContextKeyService","createScoped","scopedInstatiationService","createChild","createEditorOptions","codeEditorWidgetOptions","createModel","setModel","setDecorations","decorations","theme","transparentForeground","getColor","transparent","renderOptions","after","contentText","color","createDecorations","getColorTheme","setDecorationsByType","onDidColorThemeChange","register","hasAccessToAllModels","_debugDisplayName","provideCompletionItems","_context","suggestionsPromise","underlyingModel","bracketPairs","getBracketPairsInRange","fromPositions","getPosition","openingBracketInfo","bracketText","suggestions","completion","updateOptions","fontSize","fontFamily","lineHeight","fontLigatures","getOption","newTopMargin","style","marginTop","lifecycle","precondition","kbOpts","kbExpr","primary","weight","runEditorCommand","textInputFocus","secondary","debugContribution","getContribution","closeBreakpointWidget","breakpointHelperDecoration","glyphMarginClassName","glyphMargin","Right","stickiness","getBreakpointDecorationOptions","breakpointsActivated","showBreakpointsInOverviewRuler","hasOtherBreakpointsOnLine","icon","showAdapterUnverifiedMessage","glyphMarginHoverMessage","unverifiedMessage","langId","UnverifiedBreakpoints","guessLanguageIdByFilepathOrFirstLine","messages","isTrusted","supportThemeIcons","appendCodeblock","appendMarkdown","appendText","overviewRulerDecoration","debugIconBreakpointForeground","Left","renderInline","getLineFirstNonWhitespaceColumn","before","inlineClassName","inlineClassNameAffectsLetterSpacing","overviewRuler","zIndex","BreakpointEditorContribution","breakpointHintDecoration","ignoreDecorationsChangedEvent","ignoreBreakpointsChangeEvent","breakpointDecorations","candidateDecorations","breakpointWidgetVisible","setDecorationsScheduler","getContextMenuActionsAtPosition","getContextMenuActions","detail","isAfterLines","marginFreeFromNonDebugDecorations","className","canSetBreakpoints","isShiftPressed","shiftKey","logPoint","breakpointType","disabledBreakpointDialogMessage","toLowerCase","enabledBreakpointDialogMessage","pointerEvents","onMouseMove","showBreakpointHintAtLineNumber","ensureBreakpointHintDecoration","onMouseLeave","onDidChangeModel","onDidChangeModelDecorations","onModelDecorationsChanged","showBreakpointWidget","sorted","catch","getLineDecorations","clz","changeDecorations","removeDecoration","addDecoration","setCandidateDecorations","changeAccessor","desiredCandidatePositions","desiredCandidateDecorations","lineBreakpoints","firstColumn","lastColumn","getLineLastNonWhitespaceColumn","breakpointAtPosition","bpd","equalsRange","inlineWidget","createCandidateDecorations","candidateDecorationIds","deltaDecorations","decorationId","candidate","disabled","InlineBreakpointWidget","activeCodeEditor","debugSettings","desiredBreakpointDecorations","validateRange","createBreakpointDecorations","showInlineBreakpointCandidates","lineNumbers","requestBreakpointCandidateLocations","desiredCandidatePositionsRaced","race","decorationIds","contextMenuActions","layoutContentWidget","somethingChanged","breakpointDecoration","newBreakpointRange","getDecorationRange","len","decorationRange","breakpointWidget","removeDecorations","breakpointEditorContribution","cssClass","allowEditorOverflow","suppressMouseDown","addContentWidget","domNode","classList","CLICK","CONTEXT_MENU","getActionsContext","updateSize","ceil","marginLeft","hasChanged","getDomNode","toggle","preference","removeContentWidget","__decorator","prototype","debugIconBreakpointColor","addRule","asCSSSelector","regular","debugIconBreakpointDisabledColor","debugIconBreakpointDisabledForeground","debugIconBreakpointUnverifiedColor","debugIconBreakpointUnverifiedForeground","unverified","debugIconBreakpointCurrentStackframeForegroundColor","debugIconBreakpointCurrentStackframeForeground","debugIconBreakpointStackframeFocusedColor","debugIconBreakpointStackframeForeground","dark","light","hcDark","hcLight","topStackFrameColor","focusedStackFrameColor","TOP_STACK_FRAME_MARGIN","Full","FOCUSED_STACK_FRAME_MARGIN","TOP_STACK_FRAME_DECORATION","isWholeLine","FOCUSED_STACK_FRAME_DECORATION","CallStackEditorContribution","createDecorationsCollection","createCallStackDecorations","newModelUrl","isSessionFocused","callStack","stackFrames","equals","candidateStackFrame","warn","noCharactersBefore","isFocusedSession","columnUntilEOLRange","topStackFrame","createDecorationsForStackFrame","booleanRegex","stringRegex","renderViewTree","treeContainer","appendChild","renderExpressionValue","expressionOrValue","DEFAULT_VALUE","showChanged","valueChanged","colorize","isNaN","test","maxValueLength","linkDetector","textContent","linkify","showHover","renderVariable","highlights","visibility","lazy","AbstractExpressionsRenderer","renderTemplate","lazyButton","asClassNameArray","eye","inputBoxContainer","templateDisposable","actionBar","renderActionBar","template","elementDisposable","currentElement","renderExpressionElement","node","renderExpression","filterData","getInputBoxOptions","renderInputBox","nameElement","valueElement","display","inputBox","inputBoxStyles","initialValue","select","done","finishEditing","onFinish","inputElement","KEY_DOWN","isEscape","isEnter","preventDefault","stopPropagation","BLUR","disposeElement","templateData","disposeTemplate","StartDebugActionViewItem","SEPARATOR","debugOptions","setFocusable","keybinding","keybindingLabel","setAttribute","blur","actionRunner","MOUSE_DOWN","button","MOUSE_UP","MOUSE_OUT","tabIndex","handler","selectBoxContainer","border","borderLeft","backgroundColor","setActionContext","isEnabled","fromRight","focusable","manager","inWorkspace","lastGroup","disabledIdxs","setOptions","isDisabled","FocusSessionActionViewItem","getSelectedSession","sessionListeners","selectedSession","mapFocusedSessionToSelected","getActionContext","_","debugToolBarBackground","debugToolBarBorder","debugIconStartForeground","DEBUG_TOOLBAR_POSITION_KEY","DEBUG_TOOLBAR_Y_KEY","DebugToolBar","yCoordinate","isBuilt","stopActionViewItemDisposables","$el","dragArea","actionBarContainer","debugToolBarMenu","activeActions","orientation","actionViewItemProvider","createDisconnectMenuItemAction","updateScheduler","toolBarLocation","hide","arrays","updateStyles","onDidChange","onDidRun","publicLog2","window","RESIZE","setCoordinates","widgetWidth","clientWidth","innerWidth","storePosition","mouseMoveListener","mouseMoveEvent","posx","posy","mouseUpListener","onDidChangePartVisibility","setYCoordinate","browser","left","parseFloat","widgetShadowColor","boxShadow","contrastBorderColor","borderColor","y","titlebarOffset","x","positionPercentage","getNumber","titleAreaHeight","moveToTop","DebugToolBarStop","dropdownAction","debugViewTitleItems","registerDebugToolBarItem","alt","appendMenuItem","ViewContainerTitle","and","notEqualsTo","onDidChangeMenu","getMenuItems","isEqualTo","toNegated","or","assignSessionContext","assignThreadContext","getContext","frameName","frameLocation","assignStackFrameContext","isDebugSession","getContextForContributedActions","inMemory","getSpecificSourceName","getStaleCallStack","otherSources","sf","suffixLength","sep","expandTo","tree","expand","CallStackView","needsRefresh","ignoreSelectionChangedEvent","ignoreFocusStackFrameEvent","autoExpandedSessions","selectionNeedsUpdate","onCallStackChangeScheduler","stateMessageLabel","stoppedDescription","stoppedText","stateMessage","updateActions","dataSource","deemphasizedStackFramesToShow","updateChildren","toExpand","updateTreeSelection","renderHeaderTitle","renderBody","CallStackDataSource","CallStackDelegate","CallStackCompressionDelegate","SessionsRenderer","ThreadsRenderer","StackFramesRenderer","ErrorsRenderer","LoadMoreRenderer","ShowMoreRenderer","accessibilityProvider","CallStackAccessibilityProvider","compressionEnabled","autoExpandSingleChildren","identityProvider","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","stateLabel","LABEL","getCompressedNodeKeyboardNavigationLabel","firstItem","expandOnlyOnTwistieClick","overrideStyles","listBackground","getBackgroundColor","setInput","onDidOpen","editorOptions","totalFrames","remainingFramesCount","fetchCallStack","isBodyVisible","onFocusChange","onContextMenu","onDidChangeBodyVisibility","visible","hasNode","rerender","layoutBody","domFocus","collapseAll","getInput","updateSelectionAndReveal","getRelativeTop","reveal","toReveal","overlay","getSessionContextOverlay","getThreadContextOverlay","canRestart","DebugCallStackContext","anchor","templateId","renderElement","doRenderElement","renderCompressedElements","_index","elements","setupActionBar","_element","disposeCompressedElements","_node","_templateData","_height","labelDiv","fileName","wrapper","isDeemphasized","hasActions","origin","getHeight","getTemplateId","isDebugModel","obj","frame","getThreadChildren","childSessions","getThreadCallstack","last","nextChild","supportsDelayedStackTraceLoading","framesErrorMessage","reachedEndOfCallStack","getWidgetAriaLabel","getWidgetRole","getRole","getAriaLabel","isIncompressible","registerCallStackInlineMenuItem","viewId","f1","ViewTitle","runInView","_accessor","view","threadOrSessionWithOneThread","DebugConsoleQuickAccess","_debugService","_viewsService","_commandService","canAcceptInBackground","_getPicks","debugConsolePicks","_createPick","createTerminalLabel","accept","sessionIndex","keyMod","isViewVisible","ToggleBreakpointAction","alias","editorTextFocus","menuOpts","menuId","MenubarDebugMenu","canSet","ConditionalBreakpointAction","MenubarNewBreakpointMenu","LogPointAction","EditBreakpointAction","breakpointDistances","abs","closestBreakpoint","OpenDisassemblyViewAction","mnemonicTitle","EditorContext","CommandPalette","ToggleDisassemblyViewSourceCodeAction","configID","configService","disassemblyView","showSourceCode","RunToCursorAction","contextMenuOpts","SelectionToReplAction","selectionStartLineNumber","SelectionToWatchExpressionsAction","evaluatableExpression","matchingExpression","ShowDebugHoverAction","NO_TARGETS_MESSAGE","StepIntoTargetsAction","targetPosition","showMessage","positionalTargets","endLine","needle","best","isBefore","isBeforeOrEqual","revealLineInCenterIfOutsideViewport","cursorCoords","getScrolledVisiblePosition","editorCoords","GoToBreakpointAction","isNext","currentUri","currentLine","allEnabledBreakpoints","moveBreakpoint","shift","CloseExceptionWidgetAction","contribution","closeExceptionWidget","CONTROL_CODES","WEB_LINK_REGEX","WIN_PATH","PATH_LINK_REGEX","LINE_COLUMN_REGEX","LinkDetector","tunnelService","splitLines","workspaceFolder","includeFulltext","document","createElement","part","detectLinks","createTextNode","createWebLink","captures","columnNumber","createPathLink","fulltext","link","createLink","lineCol","with","fragment","decorateLink","allowTunneling","path$1","fileUrl","fileUri","exists","toResource","resolvedUserHome","isDirectory","onClick","followLink","canTunnel","onmousemove","metaKey","onmouseleave","onclick","stopImmediatePropagation","onkeydown","keyCode","regexes","kinds","splitOne","regexIndex","regex","currentIndex","lastIndex","stringBeforeMatch","stringAfterMatches","variableInternalContext","dataBreakpointInfoResponse","forgetScopes","VariablesView","savedViewState","autoExpandedScopes","updateTreeScheduler","getViewState","viewState","getScopes","expensive","linkeDetector","horizontalScrolling","VariablesDelegate","VariablesRenderer","ScopesRenderer","ScopeErrorRenderer","VariablesDataSource","VariablesAccessibilityProvider","onMouseDblClick","parentContext","getContextForVariableMenu","contextKeys","dataBreakpointId","dataBreakpointAccessTypes","getContextForVariableMenuWithDataAccess","DebugVariablesContext","getVariablesContext","toDebugProtocolObject","additionalContext","variableMenuContext","evaluateName","isStackFrame","innerText","validationOptions","validation","SET_VARIABLE_ID","registerCommand","COPY_VALUE_ID","ctx","clipboardService","elementContext","evalContext","supportsClipboardContext","toEvaluate","evaluations","expr","evaluation","writeText","VIEW_MEMORY_ID","HEX_EDITOR_EXTENSION_ID","focused","notifications","progressService","installing","withProgress","location","sticky","onDidClose","tryInstallHexEditor","revealIfOpened","override","BREAK_WHEN_VALUE_CHANGES_ID","BREAK_WHEN_VALUE_IS_ACCESSED_ID","BREAK_WHEN_VALUE_IS_READ_ID","COPY_EVALUATE_PATH_ID","ADD_TO_WATCH_ID","doFindExpression","namesToFind","filtered","findExpressionInStackFrame","nonExpensive","expressions","scope","DebugHoverWidget","highlightDecorations","isUpdatingTree","_isVisible","showAtPosition","positionPreference","debugHoverComputer","DebugHoverComputer","complexValueContainer","complexValueTitle","DebugHoverDataSource","DebugHoverDelegate","DebugHoverAccessibilityProvider","mouseSupport","useShadows","valueContainer","scrollbar","horizontal","applyFontInfo","onDidChangeContentHeight","layoutTreeAndContainer","onDidChangeContentWidth","isHovered","willBeVisible","showCancellationSource","showAt","cancellationSource","compute","rangeChanged","_HOVER_HIGHLIGHT_DECORATION_OPTIONS","getStartPosition","forceValueHover","scanDomNode","expressionToRender","scrollTop","scrollLeft","layoutTree","treeHeight","getLayoutInfo","contentHeight","realTreeWidth","contentWidth","treeWidth","beforeRender","finally","afterRender","activeElement","_currentRange","_currentExpression","lift","supportsEvaluateForHovers","word","debugExceptionWidgetBorder","debugExceptionWidgetBackground","ExceptionWidget","debugSession","applyTheme","_disposables","onDidLayoutChangeScheduler","onDidLayoutChange","frameColor","arrowColor","_applyStyles","fontInfo","linkedStackTrace","_heightInPixel","_widthInPixel","arrowHeight","round","computedLinesNumber","offsetHeight","hasFocus","InlineSegment","createInlineValueDecoration","cursorStops","showIfCollapsed","str","DebugEditorContribution","featureDebounceService","hoverPosition","mouseDown","gutterIsHovered","altPressed","oldDecorations","_wordToLineNumbersMap","debounceInfo","for","hoverWidget","exceptionWidgetVisible","toggleExceptionWidget","onFocusStackFrame","onEditorMouseDown","onMouseUp","onEditorMouseMove","hoverDomNode","rect","getBoundingClientRect","right","bottom","hideHoverWidget","onKeyDown","onDidChangeModelContent","updateInlineValuesScheduler","updateHoverConfiguration","updateInlineValueDecorations","onDidScrollChange","wordToLineNumbersMap","tokenization","forceTokenization","lineTokens","getLineTokens","tokenIndex","tokenCount","getCount","getStandardTokenType","tokenStartOffset","getStartOffset","tokenEndOffset","getEndOffset","tokenStr","wordMatch","getWordToLineNumbersMap","applyHoverConfiguration","altListener","keydownEvent","debugHoverWasVisible","enableEditorHover","showEditorHover","onKeyUp","onDidChangeFocus","keyupEvent","standardKeyboardEvent","KeyboardEvent","hover","overrideIdentifier","defaultConfiguration","delay","hoverController","showContentHover","showHoverScheduler","hoverOption","scheduler","hideHoverScheduler","mouseEvent","stopKey","focusedSf","exceptionSf","sameUri","exceptionWidget","showExceptionWidget","revealRangeInCenter","shouldFocusEditor","addLaunchConfiguration","configurationsArrayPosition","lastProperty","getConfigurationPosition","depthInArray","onObjectProperty","property","onArrayBegin","getPositionAt","onArrayEnd","getOptions","edit","startPosition","pushEditOperations","LineBreakInsert","insertLine","removeInlineValuesScheduler","var_value_format","inlineValuesSetting","inlineValues","allDecorations","findVariable","_key","caseSensitiveLookup","getMostSpecificScopes","stoppedLocation","getVisibleRangesPlusViewportAboveBelow","ordered","reverse","lineDecorations","provideInlineValues","iv","va","variableName","lineSegments","now","segments","decorationsPerScope","setStartPosition","nameValueMap","lineToNamesMap","_value","containsPosition","createInlineValueDecorationsInsideRange","previous","current","decoration","configurationWidget","DebugProgressContribution","progressListener","listenOnProgress","progressStartEvent","r","cancellable","priority","SILENT","progressStep","total","reportProgress","progress","increment","percentage","report","progressUpdateListener","StartDebugQuickAccessProvider","noResultsPick","configManager","trigger","CLOSE_PICKER","dynamicProviders","visibleLaunches","debugStartLanguageKey","CONTEXT_DEBUG_START_LANGUAGE","CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR","WelcomeView","storageSevice","debugStartLanguageContext","debuggerInterestedContext","lastSetLanguage","setContextKey","editorControl","onDidChangeModelLanguage","debugKeybinding","debugKeybindingLabel","shouldShowWelcome","viewsRegistry","ViewsRegistry","registerViewWelcomeContent","Debug","DebugViewPaneContainer","mergeViewWithContainerWhenSingleView","paneListeners","onDebugServiceStateChange","updateTitleArea","startDebugActionViewItem","focusView","getActionViewItem","getView","progressResolve","_progress","addPanes","panes","pane","breakpointView","updateBreakpointsMaxSize","removePanes","allOtherCollapsed","isExpanded","maximumBodySize","POSITIVE_INFINITY","minimumBodySize","toggled","closeView","disassemblyNotAvailable","allowBreakpoint","isBreakpointSet","isBreakpointEnabled","instruction","instructionAddress","BigInt","DisassemblyView","NUM_INSTRUCTIONS_TO_LOAD","_instantiationService","_instructionBpList","_enableSourceCodeRender","_loadingLock","_disassembledInstructions","_onDidChangeStackFrame","_previousDebuggingState","_fontInfo","createFromRawSettings","newValue","reloadDisassembly","currentInstructionAddresses","prev","curr","focusedCurrentInstructionAddress","focusedInstructionAddress","isSourceCodeRender","onDidChangeStackFrame","createEditor","thisOM","headerRowHeight","row","instructionRenderer","InstructionRenderer","minimumWidth","maximumWidth","BreakpointRenderer","TEMPLATE_ID","project","multipleSelectionSupport","setRowLineHeight","openOnSingleClick","AccessibilityProvider","onDidScroll","oldScrollTop","topElement","floor","scrollUp_LoadDisassembledInstructions","scrollHeight","scrollDown_LoadDisassembledInstructions","goToAddress","bpEvent","changed","getIndexFromAddress","instructionReference","dimension","loadDisassembledInstructions","resultEntries","newEntries","lastLocation","lastLine","specialEntriesToRemove","disassembledInstructions","ensureAddressParsed","entry","targetAddress","targetIndex","_disassemblyView","_breakpointIcon","_breakpointDisabledIcon","_breakpointHintIcon","_debugStackframe","_debugStackframeFocused","alignSelf","alignItems","justifyContent","rerenderDebugStackframe","INSTRUCTION_ADDR_MIN_LENGTH","INSTRUCTION_BYTES_MIN_LENGTH","textModelService","uriService","_topStackFrameColor","_focusedStackFrameColor","sourcecode","rerenderBackground","openSourceCode","cellDisposable","renderElementInner","sb","sourceURI","getUriFromSource","textModel","sourceSB","ref","createModelReference","textEditorModel","appendString","build","spacesToAppend","instructionBytes","sourceCode","background","selectionRevealType","whiteSpace","DisassemblyViewContribution","_languageSupportsDisassemleRequest","onDidActiveEditorChangeListener","_onDidChangeModelLanguage","newLanguage","_onDidActiveEditorChangeListener","DebugContentProvider","textModelResolverService","editorWorkerService","pendingUpdates","registerTextModelContentProvider","INSTANCE","provideTextContent","createOrUpdateContentModel","refreshDebugContent","createIfNotExists","createErrModel","errMsg","languageSelection","createById","newContent","myToken","computeMoreMinimalEdits","getFullModelRange","edits","applyEdits","mime","mimeType","createByMimeType","URI_SCHEMA_PATTERN","BaseTreeItem","_parent","_label","_children","_showedMoreThanOne","updateLabel","isLeaf","setSource","_source","ss","createIfNeeded","getChild","removeFromParent","getParent","getInternalId","isSkipped","oneChild","array","compare","separateRootFolder","RootFolderTreeItem","getHoverLabel","skipOneChild","RootTreeItem","_pathService","_contextService","_labelService","SessionTreeItem","URL_REGEXP","rootProvider","_map","acat","bcat","addPath","decodeURI","leaf","segment","removePath","asTreeElement","collapsed","collapsible","LoadedScriptsView","treeNeedsRefreshOnVisible","loadedScriptsItemType","LoadedScriptsFilter","treeLabels","onDidChangeVisibility","LoadedScriptsDelegate","LoadedScriptsRenderer","collapseByDefault","hideTwistiesOfChildlessElements","LoadedSciptsAccessibilityProvider","updateView","setChildren","changeScheduler","nullRange","getFocus","scheduleRefreshOnVisible","sessionRoot","setFilter","refilter","onDidChangeFindPattern","findMode","Highlight","visit","getNode","expandAll","sessionNode","paths","addSourcePathsToSession","labels","supportHighlights","fileKind","ROOT_FOLDER","hideIcon","FILE","FOLDER","setResource","filterText","parentVisibility","ReplFilter","_parsedQueries","matchQuery","filterQuery","includeQueryPresent","includeQueryMatched","handleANSIOutput","textLength","customFgColor","customBgColor","customUnderlineColor","styleNames","colorsInverted","currentPos","sequenceFound","charCodeAt","startPos","ansiSequence","char","appendStylizedStringToContainer","styleCodes","elem","parseInt","colorType","set8BitColor","set24BitColor","setBasicFormatters","changeColor","reverseForegroundAndBackgroundColors","oldFgColor","setBasicColor","colorNumber","calcANSI8bitColor","colorName","rgba","styleCode","colorIndex","stringContent","cssClasses","customTextColor","customBackgroundColor","Format","CSS","formatRGB","textDecorationColor","blue","green","red","convFactor","colorLevel","ReplEvaluationInputsRenderer","ReplGroupRenderer","replGroup","ReplEvaluationResultsRenderer","ReplOutputElementRenderer","countContainer","getReplElementSource","setElementCount","elementListener","setCount","ReplVariablesRenderer","isReplVariable","isNestedVariable","ReplRawObjectsRenderer","ReplDelegate","replOptions","wordWrap","estimateHeight","ignoreValueLength","replConfiguration","valueRows","hasDynamicHeight","ReplDataSource","ReplAccessibilityProvider","HISTORY_STORAGE_KEY","FILTER_HISTORY_STORAGE_KEY","FILTER_VALUE_STORAGE_KEY","revealLastElement","renderHeight","sessionsToIgnore","Repl","REFRESH_DELAY","URI","textResourcePropertiesService","history","previousTreeScrollHeight","replInputLineCount","modelChangeListener","DebugConsoleContext","multiSessionRepl","ReplOptions","onDidStyleChange","newSession","selectSession","refreshReplElements","updateInputDecoration","setMode","replInput","createReplTree","acceptSuggestionOnEnter","filterWidget","onDidChangeFilterText","getFilterText","completionItemProvider","triggerCharacters","completionTriggerCharacters","setHistoryNavigationEnablement","getWordAtPosition","computeRange","insertTextRules","insertText","selectionStart","selectionLength","fromString","sortText","historySuggestions","getHistory","idxLength","h","padStart","getFilterStats","isReadonly","showPreviousValue","navigateHistory","showNextValue","focusFilter","activeEditorControl","styleElement","replInputLineHeight","cssFontFamily","setProperty","fontSizeForTwistie","cssLineHeight","bodyContentDimension","layoutBodyContent","historyInput","treeInput","replElementsChangeListener","clearRepl","acceptReplInput","shouldRelayout","getVisibleContent","lineDelimiter","traverseAndAppend","trimRight","replInputHeight","getContentHeight","lastElementVisible","getHTMLElement","replInputContainer","getReplInput","selectReplCommandId","SelectReplActionViewItem","refreshScheduler","autoExpanded","diffIdentityProvider","autoExpandElements","isCollapsed","updateBadge","focusNotifiers","focusNextWidget","focusPreviousWidget","hasTextFocus","createReplInput","replDelegate","findWidgetEnabled","supportDynamicHeights","lastSelectedString","onMouseClick","historyNavigationBackwardsEnablement","historyNavigationForwardsEnablement","scopedInstantiationService","suggest","showStatusBar","lineCount","onDidFocusEditorText","onDidBlurEditorText","FOCUS","noDelay","saveState","replHistory","filterHistory","filterValue","lineHeightEm","_replConfig","backgroundColorDelegate","_onDidChange","onDidChangeLocation","views","debugConsole","AcceptReplInputAction","cancelSuggestWidget","getReplView","FilterReplAction","ReplCopyAllAction","getActiveViewWithId","stopppedChildSession","clipboardText","readText","nativeSelection","selectedText","tryEvaluateAndCopy","STATUS_BAR_DEBUGGING_BACKGROUND","STATUS_BAR_DEBUGGING_FOREGROUND","STATUS_BAR_DEBUGGING_BORDER","StatusBarColorProvider","statusbarService","overrideStyle","foreground","decorateStatusBar","enableStatusBarColor","ignoreViewUpdates","useCachedEvaluation","WatchExpressionsView","DebugWatchContext","watchExpressionsUpdatedScheduler","watchExpressionsExist","variableReadonly","watchItemType","expressionsRenderer","WatchExpressionsRenderer","WatchExpressionsDelegate","WatchExpressionsDataSource","WatchExpressionsAccessibilityProvider","dnd","WatchExpressionsDragAndDrop","onDidChangeWatchExpressions","browserEvent","isDebugService","settingValue","focusedFrame","getContextForWatchExpressionMenu","onDragOver","getDragURI","getDragLabel","drop","targetElement","draggedElement","watches","ADD_WATCH_ID","ADD_WATCH_LABEL","REMOVE_WATCH_EXPRESSIONS_COMMAND_ID","REMOVE_WATCH_EXPRESSIONS_LABEL","DebugLifecycle","veto","shouldVetoShutdown","_reason","rootSessions","confirmOnExit","showWindowCloseConfirmation","numSessions","debugCategory","debugTokenExpressionName","debugTokenExpressionValue","debugTokenExpressionString","debugTokenExpressionBoolean","debugTokenExpressionNumber","debugTokenExpressionError","debugViewExceptionLabelForeground","debugViewExceptionLabelBackground","debugViewStateLabelForeground","debugViewStateLabelBackground","debugViewValueChangedHighlight","debugConsoleInfoForeground","debugConsoleWarningForeground","debugConsoleErrorForeground","debugConsoleSourceForeground","debugConsoleInputIconForeground","debugIconPauseForeground","debugIconStopForeground","debugIconDisconnectForeground","debugIconRestartForeground","debugIconStepOverForeground","debugIconStepIntoForeground","debugIconStepOutForeground","debugIconContinueForeground","debugIconStepBackForeground","badgeBackgroundColor","badgeForegroundColor","listDeemphasizedForegroundColor","debugViewExceptionLabelForegroundColor","debugViewExceptionLabelBackgroundColor","debugViewStateLabelForegroundColor","debugViewStateLabelBackgroundColor","debugViewValueChangedHighlightColor","toolbarHoverBackgroundColor","tokenNameColor","tokenValueColor","tokenStringColor","tokenBooleanColor","tokenErrorColor","tokenNumberColor","debugConsoleInputBorderColor","fromHex","debugConsoleInfoForegroundColor","debugConsoleWarningForegroundColor","debugConsoleErrorForegroundColor","debugConsoleSourceForegroundColor","debugConsoleInputIconForegroundColor","defines","debugIconStartColor","debugIconPauseColor","debugIconStopColor","debugIconDisconnectColor","debugIconRestartColor","debugIconStepOverColor","debugIconStepIntoColor","debugIconStepOutColor","debugIconContinueColor","debugIconStepBackColor","registerColors","Workbench","registerWorkbenchContribution","Quickaccess","registerQuickAccessProvider","ctor","contextKey","helpEntries","registerDebugCommandPaletteItem","registerDebugViewMenuItem","EditorTitle","submenu","EditorTitleRun","rememberDefaultAction","MenubarMainMenu","VIEW_CONTAINER","ViewContainersRegistry","registerViewContainer","ctorDescriptor","storageId","hideIfEmpty","doNotRegisterOpenCommand","registerViews","containerIcon","canToggleVisibility","canMoveView","openCommandActionDescriptor","keybindings","alwaysUseContainerInfo","focusCommand","EditorPane","registerEditorPane","Configuration","registerConfiguration","markdownDescription","getServiceOverride","DropdownWithPrimaryActionViewItem","onDidChangeDropdownVisibility","_dropdown","primaryAction","dropdownMenuActions","_contextMenuProvider","_keybindingService","_notificationService","_contextKeyService","_themeService","_accessibilityService","_container","_dropdownContainer","_primaryAction","menuAsChild","classNames","keybindingProvider","getKeyBinding","newContext","primaryContainer","dropdownIcon","Markers","MarkersContextKeys","MARKERS_CONTAINER_ID","MARKERS_VIEW_STORAGE_ID","MARKER_COPY_ACTION_ID","MARKER_COPY_MESSAGE_ACTION_ID","RELATED_INFORMATION_COPY_MESSAGE_ACTION_ID","FOCUS_PROBLEMS_FROM_FILTER","MARKERS_VIEW_FOCUS_FILTER","MARKERS_VIEW_CLEAR_FILTER_TEXT","MARKERS_VIEW_SHOW_MULTILINE_MESSAGE","MARKERS_VIEW_SHOW_SINGLELINE_MESSAGE","MARKER_OPEN_ACTION_ID","MARKER_OPEN_SIDE_ACTION_ID","MARKER_SHOW_PANEL_ID","MARKER_SHOW_QUICK_FIX","TOGGLE_MARKERS_VIEW_ACTION_ID","MarkersViewModeContextKey","MarkersTreeVisibilityContextKey","MarkerFocusContextKey","MarkerViewFilterFocusContextKey","RelatedInformationFocusContextKey","ShowErrorsFilterContextKey","ShowWarningsFilterContextKey","ShowInfoFilterContextKey","ShowActiveFileFilterContextKey","ShowExcludedFilesFilterContextKey","FOLDER_CONFIG_FOLDER_NAME","FOLDER_SETTINGS_NAME","FOLDER_SETTINGS_PATH","defaultSettingsSchemaId","userSettingsSchemaId","profileSettingsSchemaId","machineSettingsSchemaId","workspaceSettingsSchemaId","folderSettingsSchemaId","launchSchemaId","tasksSchemaId","APPLICATION_SCOPES","PROFILE_SCOPES","LOCAL_MACHINE_PROFILE_SCOPES","LOCAL_MACHINE_SCOPES","REMOTE_MACHINE_SCOPES","WORKSPACE_SCOPES","FOLDER_SCOPES","TASKS_CONFIGURATION_KEY","LAUNCH_CONFIGURATION_KEY","WORKSPACE_STANDALONE_CONFIGURATIONS","USER_STANDALONE_CONFIGURATIONS","IWorkbenchConfigurationService","TASKS_DEFAULT","APPLY_ALL_PROFILES_SETTING"],"sourceRoot":""}