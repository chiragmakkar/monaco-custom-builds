{"version":3,"file":"101.bundle.js","mappings":"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D,KAAKq5D,UAAU,IACfjxD,IACA2yD,IACAQ,EAAA,GAA2BnzD,GAC3BpI,KAAKsvC,oBAAoBlnC,MAAMA,EAAM,KAIzC2yD,GACJ,GAER,CACA,2BAAAD,CAA4BF,EAAapR,EAAWhF,GAChD,OAAoB,IAAhBoW,EACkB,IAAdpR,EACIhF,EACS32C,EAAA,GACL,qCACA,sDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,oCACA,2CACA+sD,EACApR,GAGJhF,EACS32C,EAAA,GACL,sCACA,uDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,qCACA,4CACA+sD,EACApR,GAGU,IAAdA,EACIhF,EACS32C,EAAA,GACL,sCACA,uDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,qCACA,4CACA+sD,EACApR,GAGJhF,EACS32C,EAAA,GACL,uCACA,wDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,sCACA,6CACA+sD,EACApR,EAER,CACA,kCAAA4R,CAAmCR,EAAapR,EAAWhF,GACvD,OAAoB,IAAhBoW,EACkB,IAAdpR,EACIhF,EACS32C,EAAA,GACL,iDACA,qDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,kDACA,0CACA+sD,EACApR,GAGJhF,EACS32C,EAAA,GACL,kDACA,sDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,mDACA,2CACA+sD,EACApR,GAGU,IAAdA,EACIhF,EACS32C,EAAA,GACL,kDACA,sDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,mDACA,2CACA+sD,EACApR,GAGJhF,EACS32C,EAAA,GACL,mDACA,uDACA+sD,EACApR,EACAhF,GAGC32C,EAAA,GACL,oDACA,4CACA+sD,EACApR,EAER,CACA,YAAArE,GACInlD,KAAKs2D,uCAAoCpwD,EACzC,MAAMs1D,EAAmD,SAAvCx7D,KAAKm4D,gBAAgB1jD,MAAMC,QAC7C6B,GAAA,GAAcvW,KAAKm4D,iBACnB5hD,GAAA,GAASvW,KAAKm4D,iBACdn4D,KAAK6yD,mBAAmB/rB,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","sources":["webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.css","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/browser/highlightDecorations.css","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/services/search/common/searchService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/replaceService.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/media/anythingQuickAccess.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/common/cacheState.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.css?ca87","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/symbolsQuickAccess.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/tasks/browser/taskQuickPick.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/tasks/browser/tasksQuickAccess.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/anythingQuickAccess.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchIcons.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/media/searchview.css.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/browser/highlightDecorations.css?a1fa","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/browser/highlightDecorations.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/browser/multicursor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/override/vs/workbench/contrib/notebook/browser/notebookEditor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/patternInputWidget.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsBase.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchMessage.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/common/constants.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchResultsView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/constants.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/notebook/browser/contrib/find/findFilters.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/notebook/browser/contrib/find/notebookFindReplaceWidget.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/notebook/browser/contrib/find/notebookFindReplaceWidget.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchFindInput.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchWidget.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/media/searchEditor.css.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditorSerialization.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditorModel.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditorInput.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditorActions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchView.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsCopy.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsFind.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsNav.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsRemoveReplace.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsSymbol.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/searchActionsTopBar.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/replaceContributions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/notebookSearchContributions.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/search/browser/search.contribution.js","webpack://monaco-custom-bundle/./node_modules/monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditor.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/searchEditor/browser/searchEditor.contribution.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/service-override/search.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/platform/quickinput/browser/quickPickPin.js","webpack://monaco-custom-bundle/./node_modules/vscode/dist/vscode/vs/workbench/contrib/extensions/browser/extensionsIcons.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n.monaco-editor .findOptionsWidget {\n\tbackground-color: var(--vscode-editorWidget-background);\n\tcolor: var(--vscode-editorWidget-foreground);\n\tbox-shadow: 0 0 8px 2px var(--vscode-widget-shadow);\n\tborder: 2px solid var(--vscode-contrastBorder);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.css\"],\"names\":[],\"mappings\":\"AAAA;;;+FAG+F;;AAE/F;CACC,uDAAuD;CACvD,4CAA4C;CAC5C,mDAAmD;CACnD,8CAA8C;AAC/C\",\"sourcesContent\":[\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\n.monaco-editor .findOptionsWidget {\\n\\tbackground-color: var(--vscode-editorWidget-background);\\n\\tcolor: var(--vscode-editorWidget-foreground);\\n\\tbox-shadow: 0 0 8px 2px var(--vscode-widget-shadow);\\n\\tborder: 2px solid var(--vscode-contrastBorder);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n.monaco-editor .focused .selectionHighlight {\n\tbackground-color: var(--vscode-editor-selectionHighlightBackground);\n\tbox-sizing: border-box;\n\tborder: 1px solid var(--vscode-editor-selectionHighlightBorder);\n}\n.monaco-editor.hc-black .focused .selectionHighlight, .monaco-editor.hc-light .focused .selectionHighlight {\n\tborder-style: dotted;\n}\n\n.monaco-editor .wordHighlight {\n\tbackground-color: var(--vscode-editor-wordHighlightBackground);\n\tbox-sizing: border-box;\n\tborder: 1px solid var(--vscode-editor-wordHighlightBorder);\n}\n.monaco-editor.hc-black .wordHighlight, .monaco-editor.hc-light .wordHighlight {\n\tborder-style: dotted;\n}\n\n.monaco-editor .wordHighlightStrong {\n\tbackground-color: var(--vscode-editor-wordHighlightStrongBackground);\n\tbox-sizing: border-box;\n\tborder: 1px solid var(--vscode-editor-wordHighlightStrongBorder);\n}\n.monaco-editor.hc-black .wordHighlightStrong, .monaco-editor.hc-light .wordHighlightStrong {\n\tborder-style: dotted;\n}\n\n.monaco-editor .wordHighlightText {\n\tbackground-color: var(--vscode-editor-wordHighlightTextBackground);\n\tbox-sizing: border-box;\n\tborder: 1px solid var(--vscode-editor-wordHighlightTextBorder);\n}\n.monaco-editor.hc-black .wordHighlightText, .monaco-editor.hc-light .wordHighlightText {\n\tborder-style: dotted;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/browser/highlightDecorations.css\"],\"names\":[],\"mappings\":\"AAAA;;;+FAG+F;;AAE/F;CACC,mEAAmE;CACnE,sBAAsB;CACtB,+DAA+D;AAChE;AACA;CACC,oBAAoB;AACrB;;AAEA;CACC,8DAA8D;CAC9D,sBAAsB;CACtB,0DAA0D;AAC3D;AACA;CACC,oBAAoB;AACrB;;AAEA;CACC,oEAAoE;CACpE,sBAAsB;CACtB,gEAAgE;AACjE;AACA;CACC,oBAAoB;AACrB;;AAEA;CACC,kEAAkE;CAClE,sBAAsB;CACtB,8DAA8D;AAC/D;AACA;CACC,oBAAoB;AACrB\",\"sourcesContent\":[\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\n.monaco-editor .focused .selectionHighlight {\\n\\tbackground-color: var(--vscode-editor-selectionHighlightBackground);\\n\\tbox-sizing: border-box;\\n\\tborder: 1px solid var(--vscode-editor-selectionHighlightBorder);\\n}\\n.monaco-editor.hc-black .focused .selectionHighlight, .monaco-editor.hc-light .focused .selectionHighlight {\\n\\tborder-style: dotted;\\n}\\n\\n.monaco-editor .wordHighlight {\\n\\tbackground-color: var(--vscode-editor-wordHighlightBackground);\\n\\tbox-sizing: border-box;\\n\\tborder: 1px solid var(--vscode-editor-wordHighlightBorder);\\n}\\n.monaco-editor.hc-black .wordHighlight, .monaco-editor.hc-light .wordHighlight {\\n\\tborder-style: dotted;\\n}\\n\\n.monaco-editor .wordHighlightStrong {\\n\\tbackground-color: var(--vscode-editor-wordHighlightStrongBackground);\\n\\tbox-sizing: border-box;\\n\\tborder: 1px solid var(--vscode-editor-wordHighlightStrongBorder);\\n}\\n.monaco-editor.hc-black .wordHighlightStrong, .monaco-editor.hc-light .wordHighlightStrong {\\n\\tborder-style: dotted;\\n}\\n\\n.monaco-editor .wordHighlightText {\\n\\tbackground-color: var(--vscode-editor-wordHighlightTextBackground);\\n\\tbox-sizing: border-box;\\n\\tborder: 1px solid var(--vscode-editor-wordHighlightTextBorder);\\n}\\n.monaco-editor.hc-black .wordHighlightText, .monaco-editor.hc-light .wordHighlightText {\\n\\tborder-style: dotted;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as arrays from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { DeferredPromise } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { CancellationError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Disposable, toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { StopWatch } from 'monaco-editor/esm/vs/base/common/stopwatch.js';\nimport { isNumber } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { deserializeSearchError, pathIncludedInQuery, isFileMatch, isProgressMessage, SearchErrorCode, FileMatch } from './search.js';\nimport { editorMatchesToTextSearchResults, addContextToEditorMatches } from './searchHelpers.js';\nlet SearchService = class SearchService extends Disposable {\n    constructor(modelService, editorService, telemetryService, logService, extensionService, fileService, uriIdentityService) {\n        super();\n        this.modelService = modelService;\n        this.editorService = editorService;\n        this.telemetryService = telemetryService;\n        this.logService = logService;\n        this.extensionService = extensionService;\n        this.fileService = fileService;\n        this.uriIdentityService = uriIdentityService;\n        this.fileSearchProviders = ( new Map());\n        this.textSearchProviders = ( new Map());\n        this.deferredFileSearchesByScheme = ( new Map());\n        this.deferredTextSearchesByScheme = ( new Map());\n        this.loggedSchemesMissingProviders = ( new Set());\n    }\n    registerSearchResultProvider(scheme, type, provider) {\n        let list;\n        let deferredMap;\n        if (type === 0 ) {\n            list = this.fileSearchProviders;\n            deferredMap = this.deferredFileSearchesByScheme;\n        }\n        else if (type === 1 ) {\n            list = this.textSearchProviders;\n            deferredMap = this.deferredTextSearchesByScheme;\n        }\n        else {\n            throw new Error('Unknown SearchProviderType');\n        }\n        list.set(scheme, provider);\n        if (( deferredMap.has(scheme))) {\n            deferredMap.get(scheme).complete(provider);\n            deferredMap.delete(scheme);\n        }\n        return toDisposable(() => {\n            list.delete(scheme);\n        });\n    }\n    async textSearch(query, token, onProgress, notebookURIs) {\n        const localResults = this.getLocalResults(query);\n        if (onProgress) {\n            arrays.coalesce([...( localResults.results.values())]).forEach(onProgress);\n        }\n        const onProviderProgress = (progress) => {\n            if (isFileMatch(progress)) {\n                if (!( localResults.results.has(progress.resource)) && !(notebookURIs && ( notebookURIs.has(progress.resource))) && onProgress) {\n                    onProgress(progress);\n                }\n            }\n            else if (onProgress) {\n                onProgress(progress);\n            }\n            if (isProgressMessage(progress)) {\n                this.logService.debug('SearchService#search', progress.message);\n            }\n        };\n        const otherResults = await this.doSearch(query, token, onProviderProgress);\n        return {\n            ...otherResults,\n            ...{\n                limitHit: otherResults.limitHit || localResults.limitHit\n            },\n            results: [...otherResults.results, ...arrays.coalesce([...( localResults.results.values())])]\n        };\n    }\n    fileSearch(query, token) {\n        return this.doSearch(query, token);\n    }\n    doSearch(query, token, onProgress) {\n        this.logService.trace('SearchService#search', JSON.stringify(query));\n        const schemesInQuery = this.getSchemesInQuery(query);\n        const providerActivations = [Promise.resolve(null)];\n        schemesInQuery.forEach(scheme => providerActivations.push(this.extensionService.activateByEvent(`onSearch:${scheme}`)));\n        providerActivations.push(this.extensionService.activateByEvent('onSearch:file'));\n        const providerPromise = (async () => {\n            await Promise.all(providerActivations);\n            await this.extensionService.whenInstalledExtensionsRegistered();\n            if (token && token.isCancellationRequested) {\n                return Promise.reject(( new CancellationError()));\n            }\n            const progressCallback = (item) => {\n                if (token && token.isCancellationRequested) {\n                    return;\n                }\n                onProgress?.(item);\n            };\n            const exists = await Promise.all(( query.folderQueries.map(query => this.fileService.exists(query.folder))));\n            query.folderQueries = query.folderQueries.filter((_, i) => exists[i]);\n            let completes = await this.searchWithProviders(query, progressCallback, token);\n            completes = arrays.coalesce(completes);\n            if (!completes.length) {\n                return {\n                    limitHit: false,\n                    results: [],\n                    messages: [],\n                };\n            }\n            return {\n                limitHit: completes[0] && completes[0].limitHit,\n                stats: completes[0].stats,\n                messages: arrays.coalesce(arrays.flatten(( completes.map(i => i.messages)))).filter(arrays.uniqueFilter(message => message.type + message.text + message.trusted)),\n                results: arrays.flatten(( completes.map((c) => c.results)))\n            };\n        })();\n        return ( new Promise((resolve, reject) => {\n            if (token) {\n                token.onCancellationRequested(() => {\n                    reject(( new CancellationError()));\n                });\n            }\n            providerPromise.then(resolve, reject);\n        }));\n    }\n    getSchemesInQuery(query) {\n        const schemes = ( new Set());\n        query.folderQueries?.forEach(fq => schemes.add(fq.folder.scheme));\n        query.extraFileResources?.forEach(extraFile => schemes.add(extraFile.scheme));\n        return schemes;\n    }\n    async waitForProvider(queryType, scheme) {\n        const deferredMap = queryType === 1  ?\n            this.deferredFileSearchesByScheme :\n            this.deferredTextSearchesByScheme;\n        if (( deferredMap.has(scheme))) {\n            return deferredMap.get(scheme).p;\n        }\n        else {\n            const deferred = ( new DeferredPromise());\n            deferredMap.set(scheme, deferred);\n            return deferred.p;\n        }\n    }\n    async searchWithProviders(query, onProviderProgress, token) {\n        const e2eSW = StopWatch.create(false);\n        const searchPs = [];\n        const fqs = this.groupFolderQueriesByScheme(query);\n        const someSchemeHasProvider = ( [...( fqs.keys())].some(scheme => {\n            return query.type === 1  ?\n                ( this.fileSearchProviders.has(scheme)) :\n                ( this.textSearchProviders.has(scheme));\n        }));\n        await Promise.all(( [...( fqs.keys())].map(async (scheme) => {\n            const schemeFQs = fqs.get(scheme);\n            let provider = query.type === 1  ?\n                this.fileSearchProviders.get(scheme) :\n                this.textSearchProviders.get(scheme);\n            if (!provider) {\n                if (someSchemeHasProvider) {\n                    if (!( this.loggedSchemesMissingProviders.has(scheme))) {\n                        this.logService.warn(`No search provider registered for scheme: ${scheme}. Another scheme has a provider, not waiting for ${scheme}`);\n                        this.loggedSchemesMissingProviders.add(scheme);\n                    }\n                    return;\n                }\n                else {\n                    if (!( this.loggedSchemesMissingProviders.has(scheme))) {\n                        this.logService.warn(`No search provider registered for scheme: ${scheme}, waiting`);\n                        this.loggedSchemesMissingProviders.add(scheme);\n                    }\n                    provider = await this.waitForProvider(query.type, scheme);\n                }\n            }\n            const oneSchemeQuery = {\n                ...query,\n                ...{\n                    folderQueries: schemeFQs\n                }\n            };\n            searchPs.push(query.type === 1  ?\n                provider.fileSearch(oneSchemeQuery, token) :\n                provider.textSearch(oneSchemeQuery, onProviderProgress, token));\n        })));\n        return Promise.all(searchPs).then(completes => {\n            const endToEndTime = e2eSW.elapsed();\n            this.logService.trace(`SearchService#search: ${endToEndTime}ms`);\n            completes.forEach(complete => {\n                this.sendTelemetry(query, endToEndTime, complete);\n            });\n            return completes;\n        }, err => {\n            const endToEndTime = e2eSW.elapsed();\n            this.logService.trace(`SearchService#search: ${endToEndTime}ms`);\n            const searchError = deserializeSearchError(err);\n            this.logService.trace(`SearchService#searchError: ${searchError.message}`);\n            this.sendTelemetry(query, endToEndTime, undefined, searchError);\n            throw searchError;\n        });\n    }\n    groupFolderQueriesByScheme(query) {\n        const queries = ( new Map());\n        query.folderQueries.forEach(fq => {\n            const schemeFQs = queries.get(fq.folder.scheme) || [];\n            schemeFQs.push(fq);\n            queries.set(fq.folder.scheme, schemeFQs);\n        });\n        return queries;\n    }\n    sendTelemetry(query, endToEndTime, complete, err) {\n        const fileSchemeOnly = query.folderQueries.every(fq => fq.folder.scheme === Schemas.file);\n        const otherSchemeOnly = query.folderQueries.every(fq => fq.folder.scheme !== Schemas.file);\n        const scheme = fileSchemeOnly ? Schemas.file :\n            otherSchemeOnly ? 'other' :\n                'mixed';\n        if (query.type === 1  && complete && complete.stats) {\n            const fileSearchStats = complete.stats;\n            if (fileSearchStats.fromCache) {\n                const cacheStats = fileSearchStats.detailStats;\n                this.telemetryService.publicLog2('cachedSearchComplete', {\n                    reason: query._reason,\n                    resultCount: fileSearchStats.resultCount,\n                    workspaceFolderCount: query.folderQueries.length,\n                    endToEndTime: endToEndTime,\n                    sortingTime: fileSearchStats.sortingTime,\n                    cacheWasResolved: cacheStats.cacheWasResolved,\n                    cacheLookupTime: cacheStats.cacheLookupTime,\n                    cacheFilterTime: cacheStats.cacheFilterTime,\n                    cacheEntryCount: cacheStats.cacheEntryCount,\n                    scheme\n                });\n            }\n            else {\n                const searchEngineStats = fileSearchStats.detailStats;\n                this.telemetryService.publicLog2('searchComplete', {\n                    reason: query._reason,\n                    resultCount: fileSearchStats.resultCount,\n                    workspaceFolderCount: query.folderQueries.length,\n                    endToEndTime: endToEndTime,\n                    sortingTime: fileSearchStats.sortingTime,\n                    fileWalkTime: searchEngineStats.fileWalkTime,\n                    directoriesWalked: searchEngineStats.directoriesWalked,\n                    filesWalked: searchEngineStats.filesWalked,\n                    cmdTime: searchEngineStats.cmdTime,\n                    cmdResultCount: searchEngineStats.cmdResultCount,\n                    scheme\n                });\n            }\n        }\n        else if (query.type === 2 ) {\n            let errorType;\n            if (err) {\n                errorType = err.code === SearchErrorCode.regexParseError ? 'regex' :\n                    err.code === SearchErrorCode.unknownEncoding ? 'encoding' :\n                        err.code === SearchErrorCode.globParseError ? 'glob' :\n                            err.code === SearchErrorCode.invalidLiteral ? 'literal' :\n                                err.code === SearchErrorCode.other ? 'other' :\n                                    err.code === SearchErrorCode.canceled ? 'canceled' :\n                                        'unknown';\n            }\n            this.telemetryService.publicLog2('textSearchComplete', {\n                reason: query._reason,\n                workspaceFolderCount: query.folderQueries.length,\n                endToEndTime: endToEndTime,\n                scheme,\n                error: errorType,\n            });\n        }\n    }\n    getLocalResults(query) {\n        const localResults = ( new ResourceMap(uri => this.uriIdentityService.extUri.getComparisonKey(uri)));\n        let limitHit = false;\n        if (query.type === 2 ) {\n            const canonicalToOriginalResources = ( new ResourceMap());\n            for (const editorInput of this.editorService.editors) {\n                const canonical = EditorResourceAccessor.getCanonicalUri(editorInput, { supportSideBySide: SideBySideEditor.PRIMARY });\n                const original = EditorResourceAccessor.getOriginalUri(editorInput, { supportSideBySide: SideBySideEditor.PRIMARY });\n                if (canonical) {\n                    canonicalToOriginalResources.set(canonical, original ?? canonical);\n                }\n            }\n            const models = this.modelService.getModels();\n            models.forEach((model) => {\n                const resource = model.uri;\n                if (!resource) {\n                    return;\n                }\n                if (limitHit) {\n                    return;\n                }\n                const originalResource = canonicalToOriginalResources.get(resource);\n                if (!originalResource) {\n                    return;\n                }\n                if (model.getLanguageId() === 'search-result' && !(query.includePattern && query.includePattern['**/*.code-search'])) {\n                    return;\n                }\n                if (originalResource.scheme !== Schemas.untitled && !this.fileService.hasProvider(originalResource)) {\n                    return;\n                }\n                if (originalResource.scheme === 'git') {\n                    return;\n                }\n                if (!this.matches(originalResource, query)) {\n                    return;\n                }\n                const askMax = isNumber(query.maxResults) ? query.maxResults + 1 : Number.MAX_SAFE_INTEGER;\n                let matches = model.findMatches(query.contentPattern.pattern, false, !!query.contentPattern.isRegExp, !!query.contentPattern.isCaseSensitive, query.contentPattern.isWordMatch ? query.contentPattern.wordSeparators : null, false, askMax);\n                if (matches.length) {\n                    if (askMax && matches.length >= askMax) {\n                        limitHit = true;\n                        matches = matches.slice(0, askMax - 1);\n                    }\n                    const fileMatch = ( new FileMatch(originalResource));\n                    localResults.set(originalResource, fileMatch);\n                    const textSearchResults = editorMatchesToTextSearchResults(matches, model, query.previewOptions);\n                    fileMatch.results = addContextToEditorMatches(textSearchResults, model, query);\n                }\n                else {\n                    localResults.set(originalResource, null);\n                }\n            });\n        }\n        return {\n            results: localResults,\n            limitHit\n        };\n    }\n    matches(resource, query) {\n        return pathIncludedInQuery(query, resource.fsPath);\n    }\n    async clearCache(cacheKey) {\n        const clearPs = ( Array.from(( this.fileSearchProviders.values()))\n            .map(provider => provider && provider.clearCache(cacheKey)));\n        await Promise.all(clearPs);\n    }\n};\nSearchService = ( __decorate([\n    ( __param(0, IModelService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, ITelemetryService)),\n    ( __param(3, ILogService)),\n    ( __param(4, IExtensionService)),\n    ( __param(5, IFileService)),\n    ( __param(6, IUriIdentityService))\n], SearchService));\nexport { SearchService };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as network from 'monaco-editor/esm/vs/base/common/network.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { IReplaceService } from './replace.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { Match, MatchInNotebook, FileMatch, ISearchWorkbenchService } from './searchModel.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { createTextBufferFactoryFromSnapshot } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ResourceTextEdit, IBulkEditService } from 'monaco-editor/esm/vs/editor/browser/services/bulkEditService.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { EditOperation } from 'monaco-editor/esm/vs/editor/common/core/editOperation.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { Promises } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { SaveSourceRegistry } from '../../../common/editor.js';\nimport { CellUri } from '../../notebook/common/notebookCommon.js';\nimport { INotebookEditorModelResolverService } from '../../notebook/common/notebookEditorModelResolverService.js';\nconst REPLACE_PREVIEW = 'replacePreview';\nconst toReplaceResource = (fileResource) => {\n    return fileResource.with({ scheme: network.Schemas.internal, fragment: REPLACE_PREVIEW, query: JSON.stringify({ scheme: fileResource.scheme }) });\n};\nconst toFileResource = (replaceResource) => {\n    return replaceResource.with({ scheme: JSON.parse(replaceResource.query)['scheme'], fragment: '', query: '' });\n};\nlet ReplacePreviewContentProvider = class ReplacePreviewContentProvider {\n    constructor(instantiationService, textModelResolverService) {\n        this.instantiationService = instantiationService;\n        this.textModelResolverService = textModelResolverService;\n        this.textModelResolverService.registerTextModelContentProvider(network.Schemas.internal, this);\n    }\n    provideTextContent(uri) {\n        if (uri.fragment === REPLACE_PREVIEW) {\n            return this.instantiationService.createInstance(ReplacePreviewModel).resolve(uri);\n        }\n        return null;\n    }\n};\nReplacePreviewContentProvider = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, ITextModelService))\n], ReplacePreviewContentProvider));\nlet ReplacePreviewModel = class ReplacePreviewModel extends Disposable {\n    constructor(modelService, languageService, textModelResolverService, replaceService, searchWorkbenchService) {\n        super();\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.textModelResolverService = textModelResolverService;\n        this.replaceService = replaceService;\n        this.searchWorkbenchService = searchWorkbenchService;\n    }\n    async resolve(replacePreviewUri) {\n        const fileResource = toFileResource(replacePreviewUri);\n        const fileMatch = this.searchWorkbenchService.searchModel.searchResult.matches().filter(match => ( match.resource.toString()) === ( fileResource.toString()))[0];\n        const ref = this._register(await this.textModelResolverService.createModelReference(fileResource));\n        const sourceModel = ref.object.textEditorModel;\n        const sourceModelLanguageId = sourceModel.getLanguageId();\n        const replacePreviewModel = this.modelService.createModel(createTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()), this.languageService.createById(sourceModelLanguageId), replacePreviewUri);\n        this._register(fileMatch.onChange(({ forceUpdateModel }) => this.update(sourceModel, replacePreviewModel, fileMatch, forceUpdateModel)));\n        this._register(this.searchWorkbenchService.searchModel.onReplaceTermChanged(() => this.update(sourceModel, replacePreviewModel, fileMatch)));\n        this._register(fileMatch.onDispose(() => replacePreviewModel.dispose()));\n        this._register(replacePreviewModel.onWillDispose(() => this.dispose()));\n        this._register(sourceModel.onWillDispose(() => this.dispose()));\n        return replacePreviewModel;\n    }\n    update(sourceModel, replacePreviewModel, fileMatch, override = false) {\n        if (!sourceModel.isDisposed() && !replacePreviewModel.isDisposed()) {\n            this.replaceService.updateReplacePreview(fileMatch, override);\n        }\n    }\n};\nReplacePreviewModel = ( __decorate([\n    ( __param(0, IModelService)),\n    ( __param(1, ILanguageService)),\n    ( __param(2, ITextModelService)),\n    ( __param(3, IReplaceService)),\n    ( __param(4, ISearchWorkbenchService))\n], ReplacePreviewModel));\nlet ReplaceService = class ReplaceService {\n    static { this.REPLACE_SAVE_SOURCE = SaveSourceRegistry.registerSource('searchReplace.source', ( nls.localize('searchReplace.source', \"Search and Replace\"))); }\n    constructor(textFileService, editorService, textModelResolverService, bulkEditorService, labelService, notebookEditorModelResolverService) {\n        this.textFileService = textFileService;\n        this.editorService = editorService;\n        this.textModelResolverService = textModelResolverService;\n        this.bulkEditorService = bulkEditorService;\n        this.labelService = labelService;\n        this.notebookEditorModelResolverService = notebookEditorModelResolverService;\n    }\n    async replace(arg, progress = undefined, resource = null) {\n        const edits = this.createEdits(arg, resource);\n        await this.bulkEditorService.apply(edits, { progress });\n        const rawTextPromises = ( edits.map(async (e) => {\n            if (e.resource.scheme === network.Schemas.vscodeNotebookCell) {\n                const notebookResource = CellUri.parse(e.resource)?.notebook;\n                if (notebookResource) {\n                    let ref;\n                    try {\n                        ref = await this.notebookEditorModelResolverService.resolve(notebookResource);\n                        await ref.object.save({ source: ReplaceService.REPLACE_SAVE_SOURCE });\n                    }\n                    finally {\n                        ref?.dispose();\n                    }\n                }\n                return;\n            }\n            else {\n                return this.textFileService.files.get(e.resource)?.save({ source: ReplaceService.REPLACE_SAVE_SOURCE });\n            }\n        }));\n        return Promises.settled(rawTextPromises);\n    }\n    async openReplacePreview(element, preserveFocus, sideBySide, pinned) {\n        const fileMatch = element instanceof Match ? element.parent() : element;\n        const editor = await this.editorService.openEditor({\n            original: { resource: fileMatch.resource },\n            modified: { resource: toReplaceResource(fileMatch.resource) },\n            label: ( nls.localize(\n                'fileReplaceChanges',\n                \"{0} ↔ {1} (Replace Preview)\",\n                fileMatch.name(),\n                fileMatch.name()\n            )),\n            description: this.labelService.getUriLabel(dirname(fileMatch.resource), { relative: true }),\n            options: {\n                preserveFocus,\n                pinned,\n                revealIfVisible: true\n            }\n        });\n        const input = editor?.input;\n        const disposable = fileMatch.onDispose(() => {\n            input?.dispose();\n            disposable.dispose();\n        });\n        await this.updateReplacePreview(fileMatch);\n        if (editor) {\n            const editorControl = editor.getControl();\n            if (element instanceof Match && editorControl) {\n                editorControl.revealLineInCenter(element.range().startLineNumber, 1 );\n            }\n        }\n    }\n    async updateReplacePreview(fileMatch, override = false) {\n        const replacePreviewUri = toReplaceResource(fileMatch.resource);\n        const [sourceModelRef, replaceModelRef] = await Promise.all([this.textModelResolverService.createModelReference(fileMatch.resource), this.textModelResolverService.createModelReference(replacePreviewUri)]);\n        const sourceModel = sourceModelRef.object.textEditorModel;\n        const replaceModel = replaceModelRef.object.textEditorModel;\n        try {\n            if (sourceModel && replaceModel) {\n                if (override) {\n                    replaceModel.setValue(sourceModel.getValue());\n                }\n                else {\n                    replaceModel.undo();\n                }\n                this.applyEditsToPreview(fileMatch, replaceModel);\n            }\n        }\n        finally {\n            sourceModelRef.dispose();\n            replaceModelRef.dispose();\n        }\n    }\n    applyEditsToPreview(fileMatch, replaceModel) {\n        const resourceEdits = this.createEdits(fileMatch, replaceModel.uri);\n        const modelEdits = [];\n        for (const resourceEdit of resourceEdits) {\n            modelEdits.push(EditOperation.replaceMove(Range.lift(resourceEdit.textEdit.range), resourceEdit.textEdit.text));\n        }\n        replaceModel.pushEditOperations([], modelEdits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range)), () => []);\n    }\n    createEdits(arg, resource = null) {\n        const edits = [];\n        if (arg instanceof Match) {\n            if (arg instanceof MatchInNotebook) {\n                if (!arg.isWebviewMatch()) {\n                    const match = arg;\n                    edits.push(this.createEdit(match, match.replaceString, match.cell.uri));\n                }\n            }\n            else {\n                const match = arg;\n                edits.push(this.createEdit(match, match.replaceString, resource));\n            }\n        }\n        if (arg instanceof FileMatch) {\n            arg = [arg];\n        }\n        if (arg instanceof Array) {\n            arg.forEach(element => {\n                const fileMatch = element;\n                if (fileMatch.count() > 0) {\n                    edits.push(...fileMatch.matches().flatMap(match => this.createEdits(match, resource)));\n                }\n            });\n        }\n        return edits;\n    }\n    createEdit(match, text, resource = null) {\n        const fileMatch = match.parent();\n        return ( new ResourceTextEdit(\n            resource ?? fileMatch.resource,\n            { range: match.range(), text },\n            undefined,\n            undefined\n        ));\n    }\n};\nReplaceService = ( __decorate([\n    ( __param(0, ITextFileService)),\n    ( __param(1, IEditorService)),\n    ( __param(2, ITextModelService)),\n    ( __param(3, IBulkEditService)),\n    ( __param(4, ILabelService)),\n    ( __param(5, INotebookEditorModelResolverService))\n], ReplaceService));\nexport { ReplacePreviewContentProvider, ReplaceService };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".quick-input-list .quick-input-list-entry.has-actions:hover .quick-input-list-entry-action-bar .action-label.dirty-anything:before{content:\\\"\\\\ea76\\\"}\";\nn(css,{});\nexport { css, css as default };\n","import { defaultGenerator } from 'monaco-editor/esm/vs/base/common/idGenerator.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/objects.js';\nvar LoadingPhase;\n( (function(LoadingPhase) {\n    LoadingPhase[LoadingPhase[\"Created\"] = 1] = \"Created\";\n    LoadingPhase[LoadingPhase[\"Loading\"] = 2] = \"Loading\";\n    LoadingPhase[LoadingPhase[\"Loaded\"] = 3] = \"Loaded\";\n    LoadingPhase[LoadingPhase[\"Errored\"] = 4] = \"Errored\";\n    LoadingPhase[LoadingPhase[\"Disposed\"] = 5] = \"Disposed\";\n})(LoadingPhase || (LoadingPhase = {})));\nclass FileQueryCacheState {\n    get cacheKey() {\n        if (this.loadingPhase === LoadingPhase.Loaded || !this.previousCacheState) {\n            return this._cacheKey;\n        }\n        return this.previousCacheState.cacheKey;\n    }\n    get isLoaded() {\n        const isLoaded = this.loadingPhase === LoadingPhase.Loaded;\n        return isLoaded || !this.previousCacheState ? isLoaded : this.previousCacheState.isLoaded;\n    }\n    get isUpdating() {\n        const isUpdating = this.loadingPhase === LoadingPhase.Loading;\n        return isUpdating || !this.previousCacheState ? isUpdating : this.previousCacheState.isUpdating;\n    }\n    constructor(cacheQuery, loadFn, disposeFn, previousCacheState) {\n        this.cacheQuery = cacheQuery;\n        this.loadFn = loadFn;\n        this.disposeFn = disposeFn;\n        this.previousCacheState = previousCacheState;\n        this._cacheKey = defaultGenerator.nextId();\n        this.query = this.cacheQuery(this._cacheKey);\n        this.loadingPhase = LoadingPhase.Created;\n        if (this.previousCacheState) {\n            const current = Object.assign({}, this.query, { cacheKey: null });\n            const previous = Object.assign({}, this.previousCacheState.query, { cacheKey: null });\n            if (!equals(current, previous)) {\n                this.previousCacheState.dispose();\n                this.previousCacheState = undefined;\n            }\n        }\n    }\n    load() {\n        if (this.isUpdating) {\n            return this;\n        }\n        this.loadingPhase = LoadingPhase.Loading;\n        this.loadPromise = (async () => {\n            try {\n                await this.loadFn(this.query);\n                this.loadingPhase = LoadingPhase.Loaded;\n                if (this.previousCacheState) {\n                    this.previousCacheState.dispose();\n                    this.previousCacheState = undefined;\n                }\n            }\n            catch (error) {\n                this.loadingPhase = LoadingPhase.Errored;\n                throw error;\n            }\n        })();\n        return this;\n    }\n    dispose() {\n        if (this.loadPromise) {\n            (async () => {\n                try {\n                    await this.loadPromise;\n                }\n                catch (error) {\n                }\n                this.loadingPhase = LoadingPhase.Disposed;\n                this.disposeFn(this._cacheKey);\n            })();\n        }\n        else {\n            this.loadingPhase = LoadingPhase.Disposed;\n        }\n        if (this.previousCacheState) {\n            this.previousCacheState.dispose();\n            this.previousCacheState = undefined;\n        }\n    }\n}\nexport { FileQueryCacheState };\n","\n      import API from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../css-loader/dist/cjs.js!./findOptionsWidget.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../css-loader/dist/cjs.js!./findOptionsWidget.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport './findOptionsWidget.css';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { asCssVariable, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.style.zIndex = '12';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const toggleStyles = {\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        };\n        this.caseSensitive = this._register(new CaseSensitiveToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand), isChecked: this._state.matchCase }, toggleStyles)));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand), isChecked: this._state.wholeWord }, toggleStyles)));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand), isChecked: this._state.isRegex }, toggleStyles)));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(40 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(40 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(40 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(40 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n    saveViewState() {\n        var _a;\n        return (_a = this._widget) === null || _a === void 0 ? void 0 : _a.getViewState();\n    }\n    restoreViewState(state) {\n        var _a;\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.setViewState(state);\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(40 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(40 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(40 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(40 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(40 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(40 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(89 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(40 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(40 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { PickerQuickAccessProvider, TriggerAction } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { ThrottledDelayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { getWorkspaceSymbols } from '../common/search.js';\nimport { SymbolKinds } from 'monaco-editor/esm/vs/editor/common/languages.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { SIDE_GROUP, ACTIVE_GROUP, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { getSelectionSearchString } from 'monaco-editor/esm/vs/editor/contrib/find/browser/findController.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { prepareQuery, pieceToQuery, scoreFuzzy2 } from 'monaco-editor/esm/vs/base/common/fuzzyScorer.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nlet SymbolsQuickAccessProvider = class SymbolsQuickAccessProvider extends PickerQuickAccessProvider {\n    static { this.PREFIX = '#'; }\n    static { this.TYPING_SEARCH_DELAY = 200; }\n    static { this.TREAT_AS_GLOBAL_SYMBOL_TYPES = ( new Set([\n        4 ,\n        9 ,\n        0 ,\n        10 ,\n        2 ,\n        3 ,\n        1\n    ])); }\n    get defaultFilterValue() {\n        const editor = this.codeEditorService.getFocusedCodeEditor();\n        if (editor) {\n            return withNullAsUndefined(getSelectionSearchString(editor));\n        }\n        return undefined;\n    }\n    constructor(labelService, openerService, editorService, configurationService, codeEditorService) {\n        super(SymbolsQuickAccessProvider.PREFIX, {\n            canAcceptInBackground: true,\n            noResultsPick: {\n                label: ( localize('noSymbolResults', \"No matching workspace symbols\"))\n            }\n        });\n        this.labelService = labelService;\n        this.openerService = openerService;\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n        this.codeEditorService = codeEditorService;\n        this.delayer = this._register(( new ThrottledDelayer(SymbolsQuickAccessProvider.TYPING_SEARCH_DELAY)));\n    }\n    get configuration() {\n        const editorConfig = this.configurationService.getValue().workbench?.editor;\n        return {\n            openEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n            openSideBySideDirection: editorConfig?.openSideBySideDirection\n        };\n    }\n    _getPicks(filter, disposables, token) {\n        return this.getSymbolPicks(filter, undefined, token);\n    }\n    async getSymbolPicks(filter, options, token) {\n        return this.delayer.trigger(async () => {\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            return this.doGetSymbolPicks(prepareQuery(filter), options, token);\n        }, options?.delay);\n    }\n    async doGetSymbolPicks(query, options, token) {\n        let symbolQuery;\n        let containerQuery;\n        if (query.values && query.values.length > 1) {\n            symbolQuery = pieceToQuery(query.values[0]);\n            containerQuery = pieceToQuery(query.values.slice(1));\n        }\n        else {\n            symbolQuery = query;\n        }\n        const workspaceSymbols = await getWorkspaceSymbols(symbolQuery.original, token);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const symbolPicks = [];\n        const openSideBySideDirection = this.configuration.openSideBySideDirection;\n        for (const { symbol, provider } of workspaceSymbols) {\n            if (options?.skipLocal && !( SymbolsQuickAccessProvider.TREAT_AS_GLOBAL_SYMBOL_TYPES.has(symbol.kind)) && !!symbol.containerName) {\n                continue;\n            }\n            const symbolLabel = symbol.name;\n            const symbolLabelWithIcon = `$(${SymbolKinds.toIcon(symbol.kind).id}) ${symbolLabel}`;\n            const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\n            let symbolScore = undefined;\n            let symbolMatches = undefined;\n            let skipContainerQuery = false;\n            if (symbolQuery.original.length > 0) {\n                if (symbolQuery !== query) {\n                    [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, { ...query, values: undefined  }, 0, symbolLabelIconOffset);\n                    if (typeof symbolScore === 'number') {\n                        skipContainerQuery = true;\n                    }\n                }\n                if (typeof symbolScore !== 'number') {\n                    [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, 0, symbolLabelIconOffset);\n                    if (typeof symbolScore !== 'number') {\n                        continue;\n                    }\n                }\n            }\n            const symbolUri = symbol.location.uri;\n            let containerLabel = undefined;\n            if (symbolUri) {\n                const containerPath = this.labelService.getUriLabel(symbolUri, { relative: true });\n                if (symbol.containerName) {\n                    containerLabel = `${symbol.containerName} • ${containerPath}`;\n                }\n                else {\n                    containerLabel = containerPath;\n                }\n            }\n            let containerScore = undefined;\n            let containerMatches = undefined;\n            if (!skipContainerQuery && containerQuery && containerQuery.original.length > 0) {\n                if (containerLabel) {\n                    [containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\n                }\n                if (typeof containerScore !== 'number') {\n                    continue;\n                }\n                if (typeof symbolScore === 'number') {\n                    symbolScore += containerScore;\n                }\n            }\n            const deprecated = symbol.tags ? symbol.tags.indexOf(1 ) >= 0 : false;\n            symbolPicks.push({\n                symbol,\n                resource: symbolUri,\n                score: symbolScore,\n                label: symbolLabelWithIcon,\n                ariaLabel: symbolLabel,\n                highlights: deprecated ? undefined : {\n                    label: symbolMatches,\n                    description: containerMatches\n                },\n                description: containerLabel,\n                strikethrough: deprecated,\n                buttons: [\n                    {\n                        iconClass: openSideBySideDirection === 'right' ? ThemeIcon.asClassName(Codicon.splitHorizontal) : ThemeIcon.asClassName(Codicon.splitVertical),\n                        tooltip: openSideBySideDirection === 'right' ? ( localize('openToSide', \"Open to the Side\")) : ( localize('openToBottom', \"Open to the Bottom\"))\n                    }\n                ],\n                trigger: (buttonIndex, keyMods) => {\n                    this.openSymbol(provider, symbol, token, { keyMods, forceOpenSideBySide: true });\n                    return TriggerAction.CLOSE_PICKER;\n                },\n                accept: async (keyMods, event) => this.openSymbol(provider, symbol, token, { keyMods, preserveFocus: event.inBackground, forcePinned: event.inBackground }),\n            });\n        }\n        if (!options?.skipSorting) {\n            symbolPicks.sort((symbolA, symbolB) => this.compareSymbols(symbolA, symbolB));\n        }\n        return symbolPicks;\n    }\n    async openSymbol(provider, symbol, token, options) {\n        let symbolToOpen = symbol;\n        if (typeof provider.resolveWorkspaceSymbol === 'function') {\n            symbolToOpen = (await provider.resolveWorkspaceSymbol(symbol, token)) || symbol;\n            if (token.isCancellationRequested) {\n                return;\n            }\n        }\n        if (symbolToOpen.location.uri.scheme === Schemas.http || symbolToOpen.location.uri.scheme === Schemas.https) {\n            await this.openerService.open(symbolToOpen.location.uri, { fromUserGesture: true, allowContributedOpeners: true });\n        }\n        else {\n            await this.editorService.openEditor({\n                resource: symbolToOpen.location.uri,\n                options: {\n                    preserveFocus: options?.preserveFocus,\n                    pinned: options.keyMods.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n                    selection: symbolToOpen.location.range ? Range.collapseToStart(symbolToOpen.location.range) : undefined\n                }\n            }, options.keyMods.alt || (this.configuration.openEditorPinned && options.keyMods.ctrlCmd) || options?.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n        }\n    }\n    compareSymbols(symbolA, symbolB) {\n        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\n            if (symbolA.score > symbolB.score) {\n                return -1;\n            }\n            if (symbolA.score < symbolB.score) {\n                return 1;\n            }\n        }\n        if (symbolA.symbol && symbolB.symbol) {\n            const symbolAName = symbolA.symbol.name.toLowerCase();\n            const symbolBName = symbolB.symbol.name.toLowerCase();\n            const res = symbolAName.localeCompare(symbolBName);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        if (symbolA.symbol && symbolB.symbol) {\n            const symbolAKind = SymbolKinds.toIcon(symbolA.symbol.kind).id;\n            const symbolBKind = SymbolKinds.toIcon(symbolB.symbol.kind).id;\n            return symbolAKind.localeCompare(symbolBKind);\n        }\n        return 0;\n    }\n};\nSymbolsQuickAccessProvider = ( __decorate([\n    ( __param(0, ILabelService)),\n    ( __param(1, IOpenerService)),\n    ( __param(2, IEditorService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, ICodeEditorService))\n], SymbolsQuickAccessProvider));\nexport { SymbolsQuickAccessProvider };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as objects from 'monaco-editor/esm/vs/base/common/objects.js';\nimport { ConfiguringTask, ContributedTask, CustomTask } from '../common/tasks.js';\nimport * as types from 'monaco-editor/esm/vs/base/common/types.js';\nimport { ITaskService } from '../common/taskService.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Severity, INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { getColorStyleElement, getColorClass } from '../../terminal/browser/terminalIcon.js';\nimport { showWithPinnedItems } from '../../../../platform/quickinput/browser/quickPickPin.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst QUICKOPEN_DETAIL_CONFIG = 'task.quickOpen.detail';\nconst QUICKOPEN_SKIP_CONFIG = 'task.quickOpen.skip';\nconst SHOW_ALL = ( nls.localize('taskQuickPick.showAll', \"Show All Tasks...\"));\nconst configureTaskIcon = registerIcon('tasks-list-configure', Codicon.gear, ( nls.localize('configureTaskIcon', 'Configuration icon in the tasks selection list.')));\nconst removeTaskIcon = registerIcon('tasks-remove', Codicon.close, ( nls.localize('removeTaskIcon', 'Icon for remove in the tasks selection list.')));\nconst runTaskStorageKey = 'runTaskStorageKey';\nlet TaskQuickPick = class TaskQuickPick extends Disposable {\n    constructor(_taskService, _configurationService, _quickInputService, _notificationService, _themeService, _dialogService, _storageService) {\n        super();\n        this._taskService = _taskService;\n        this._configurationService = _configurationService;\n        this._quickInputService = _quickInputService;\n        this._notificationService = _notificationService;\n        this._themeService = _themeService;\n        this._dialogService = _dialogService;\n        this._storageService = _storageService;\n        this._sorter = this._taskService.createSorter();\n    }\n    _showDetail() {\n        return !!this._configurationService.getValue(QUICKOPEN_DETAIL_CONFIG);\n    }\n    _guessTaskLabel(task) {\n        if (task._label) {\n            return task._label;\n        }\n        if (ConfiguringTask.is(task)) {\n            let label = task.configures.type;\n            const configures = objects.deepClone(task.configures);\n            delete configures['_key'];\n            delete configures['type'];\n            ( Object.keys(configures)).forEach(key => label += `: ${configures[key]}`);\n            return label;\n        }\n        return '';\n    }\n    static getTaskLabelWithIcon(task, labelGuess) {\n        const label = labelGuess || task._label;\n        const icon = task.configurationProperties.icon;\n        if (!icon) {\n            return `${label}`;\n        }\n        return icon.id ? `$(${icon.id}) ${label}` : `$(${Codicon.tools.id}) ${label}`;\n    }\n    static applyColorStyles(task, entry, themeService) {\n        if (task.configurationProperties.icon?.color) {\n            const colorTheme = themeService.getColorTheme();\n            const styleElement = getColorStyleElement(colorTheme);\n            entry.iconClasses = [getColorClass(task.configurationProperties.icon.color)];\n            document.body.appendChild(styleElement);\n        }\n    }\n    _createTaskEntry(task, extraButtons = []) {\n        const buttons = [\n            { iconClass: ThemeIcon.asClassName(configureTaskIcon), tooltip: ( nls.localize('configureTask', \"Configure Task\")) },\n            ...extraButtons\n        ];\n        const entry = { label: TaskQuickPick.getTaskLabelWithIcon(task, this._guessTaskLabel(task)), description: this._taskService.getTaskDescription(task), task, detail: this._showDetail() ? task.configurationProperties.detail : undefined, buttons };\n        TaskQuickPick.applyColorStyles(task, entry, this._themeService);\n        return entry;\n    }\n    _createEntriesForGroup(entries, tasks, groupLabel, extraButtons = []) {\n        entries.push({ type: 'separator', label: groupLabel });\n        tasks.forEach(task => {\n            if (!task.configurationProperties.hide) {\n                entries.push(this._createTaskEntry(task, extraButtons));\n            }\n        });\n    }\n    _createTypeEntries(entries, types) {\n        entries.push({ type: 'separator', label: ( nls.localize('contributedTasks', \"contributed\")) });\n        types.forEach(type => {\n            entries.push({ label: `$(folder) ${type}`, task: type, ariaLabel: ( nls.localize('taskType', \"All {0} tasks\", type)) });\n        });\n        entries.push({ label: SHOW_ALL, task: SHOW_ALL, alwaysShow: true });\n    }\n    _handleFolderTaskResult(result) {\n        const tasks = [];\n        Array.from(result).forEach(([key, folderTasks]) => {\n            if (folderTasks.set) {\n                tasks.push(...folderTasks.set.tasks);\n            }\n            if (folderTasks.configurations) {\n                for (const configuration in folderTasks.configurations.byIdentifier) {\n                    tasks.push(folderTasks.configurations.byIdentifier[configuration]);\n                }\n            }\n        });\n        return tasks;\n    }\n    _dedupeConfiguredAndRecent(recentTasks, configuredTasks) {\n        let dedupedConfiguredTasks = [];\n        const foundRecentTasks = Array(recentTasks.length).fill(false);\n        for (let j = 0; j < configuredTasks.length; j++) {\n            const workspaceFolder = configuredTasks[j].getWorkspaceFolder()?.uri.toString();\n            const definition = configuredTasks[j].getDefinition()?._key;\n            const type = configuredTasks[j].type;\n            const label = configuredTasks[j]._label;\n            const recentKey = configuredTasks[j].getRecentlyUsedKey();\n            const findIndex = recentTasks.findIndex((value) => {\n                return (workspaceFolder && definition && value.getWorkspaceFolder()?.uri.toString() === workspaceFolder\n                    && ((value.getDefinition()?._key === definition) || (value.type === type && value._label === label)))\n                    || (recentKey && value.getRecentlyUsedKey() === recentKey);\n            });\n            if (findIndex === -1) {\n                dedupedConfiguredTasks.push(configuredTasks[j]);\n            }\n            else {\n                recentTasks[findIndex] = configuredTasks[j];\n                foundRecentTasks[findIndex] = true;\n            }\n        }\n        dedupedConfiguredTasks = dedupedConfiguredTasks.sort((a, b) => this._sorter.compare(a, b));\n        const prunedRecentTasks = [];\n        for (let i = 0; i < recentTasks.length; i++) {\n            if (foundRecentTasks[i] || ConfiguringTask.is(recentTasks[i])) {\n                prunedRecentTasks.push(recentTasks[i]);\n            }\n        }\n        return { configuredTasks: dedupedConfiguredTasks, recentTasks: prunedRecentTasks };\n    }\n    async getTopLevelEntries(defaultEntry) {\n        if (this._topLevelEntries !== undefined) {\n            return { entries: this._topLevelEntries };\n        }\n        let recentTasks = (await this._taskService.getSavedTasks('historical')).reverse();\n        const configuredTasks = this._handleFolderTaskResult(await this._taskService.getWorkspaceTasks());\n        const extensionTaskTypes = this._taskService.taskTypes();\n        this._topLevelEntries = [];\n        const dedupeAndPrune = this._dedupeConfiguredAndRecent(recentTasks, configuredTasks);\n        const dedupedConfiguredTasks = dedupeAndPrune.configuredTasks;\n        recentTasks = dedupeAndPrune.recentTasks;\n        if (recentTasks.length > 0) {\n            const removeRecentButton = {\n                iconClass: ThemeIcon.asClassName(removeTaskIcon),\n                tooltip: ( nls.localize('removeRecent', 'Remove Recently Used Task'))\n            };\n            this._createEntriesForGroup(this._topLevelEntries, recentTasks, ( nls.localize('recentlyUsed', 'recently used')), [removeRecentButton]);\n        }\n        if (configuredTasks.length > 0) {\n            if (dedupedConfiguredTasks.length > 0) {\n                this._createEntriesForGroup(this._topLevelEntries, dedupedConfiguredTasks, ( nls.localize('configured', 'configured')));\n            }\n        }\n        if (defaultEntry && (configuredTasks.length === 0)) {\n            this._topLevelEntries.push({ type: 'separator', label: ( nls.localize('configured', 'configured')) });\n            this._topLevelEntries.push(defaultEntry);\n        }\n        if (extensionTaskTypes.length > 0) {\n            this._createTypeEntries(this._topLevelEntries, extensionTaskTypes);\n        }\n        return { entries: this._topLevelEntries, isSingleConfigured: configuredTasks.length === 1 ? configuredTasks[0] : undefined };\n    }\n    async handleSettingOption(selectedType) {\n        const { confirmed } = await this._dialogService.confirm({\n            type: Severity.Warning,\n            message: ( nls.localize(\n                'TaskQuickPick.changeSettingDetails',\n                \"Task detection for {0} tasks causes files in any workspace you open to be run as code. Enabling {0} task detection is a user setting and will apply to any workspace you open. \\n\\n Do you want to enable {0} task detection for all workspaces?\",\n                selectedType\n            )),\n            cancelButton: ( nls.localize('TaskQuickPick.changeSettingNo', \"No\"))\n        });\n        if (confirmed) {\n            await this._configurationService.updateValue(`${selectedType}.autoDetect`, 'on');\n            await ( new Promise(resolve => setTimeout(() => resolve(), 100)));\n            return this.show(( nls.localize('TaskService.pickRunTask', 'Select the task to run')), undefined, selectedType);\n        }\n        return undefined;\n    }\n    async show(placeHolder, defaultEntry, startAtType, name) {\n        const picker = this._quickInputService.createQuickPick();\n        picker.placeholder = placeHolder;\n        picker.matchOnDescription = true;\n        picker.ignoreFocusOut = false;\n        picker.onDidTriggerItemButton(async (context) => {\n            const task = context.item.task;\n            if (context.button.iconClass === ThemeIcon.asClassName(removeTaskIcon)) {\n                const key = (task && !types.isString(task)) ? task.getRecentlyUsedKey() : undefined;\n                if (key) {\n                    this._taskService.removeRecentlyUsedTask(key);\n                }\n                const indexToRemove = picker.items.indexOf(context.item);\n                if (indexToRemove >= 0) {\n                    picker.items = [...picker.items.slice(0, indexToRemove), ...picker.items.slice(indexToRemove + 1)];\n                }\n            }\n            else if (context.button.iconClass === ThemeIcon.asClassName(configureTaskIcon)) {\n                this._quickInputService.cancel();\n                if (ContributedTask.is(task)) {\n                    this._taskService.customize(task, undefined, true);\n                }\n                else if (CustomTask.is(task) || ConfiguringTask.is(task)) {\n                    let canOpenConfig = false;\n                    try {\n                        canOpenConfig = await this._taskService.openConfig(task);\n                    }\n                    catch (e) {\n                    }\n                    if (!canOpenConfig) {\n                        this._taskService.customize(task, undefined, true);\n                    }\n                }\n            }\n        });\n        if (name) {\n            picker.value = name;\n        }\n        let firstLevelTask = startAtType;\n        if (!firstLevelTask) {\n            const topLevelEntriesResult = await this.getTopLevelEntries(defaultEntry);\n            if (topLevelEntriesResult.isSingleConfigured && this._configurationService.getValue(QUICKOPEN_SKIP_CONFIG)) {\n                picker.dispose();\n                return this._toTask(topLevelEntriesResult.isSingleConfigured);\n            }\n            const taskQuickPickEntries = topLevelEntriesResult.entries;\n            firstLevelTask = await this._doPickerFirstLevel(picker, taskQuickPickEntries);\n        }\n        do {\n            if (types.isString(firstLevelTask)) {\n                if (name) {\n                    await this._doPickerFirstLevel(picker, (await this.getTopLevelEntries(defaultEntry)).entries);\n                    picker.dispose();\n                    return undefined;\n                }\n                const selectedEntry = await this.doPickerSecondLevel(picker, firstLevelTask);\n                if (selectedEntry && !selectedEntry.settingType && selectedEntry.task === null) {\n                    picker.value = '';\n                    firstLevelTask = await this._doPickerFirstLevel(picker, (await this.getTopLevelEntries(defaultEntry)).entries);\n                }\n                else if (selectedEntry && types.isString(selectedEntry.settingType)) {\n                    picker.dispose();\n                    return this.handleSettingOption(selectedEntry.settingType);\n                }\n                else {\n                    picker.dispose();\n                    return (selectedEntry?.task && !types.isString(selectedEntry?.task)) ? this._toTask(selectedEntry?.task) : undefined;\n                }\n            }\n            else if (firstLevelTask) {\n                picker.dispose();\n                return this._toTask(firstLevelTask);\n            }\n            else {\n                picker.dispose();\n                return firstLevelTask;\n            }\n        } while (1);\n        return;\n    }\n    async _doPickerFirstLevel(picker, taskQuickPickEntries) {\n        picker.items = taskQuickPickEntries;\n        showWithPinnedItems(this._storageService, runTaskStorageKey, picker, true);\n        const firstLevelPickerResult = await ( new Promise(resolve => {\n            Event.once(picker.onDidAccept)(async () => {\n                resolve(picker.selectedItems ? picker.selectedItems[0] : undefined);\n            });\n        }));\n        return firstLevelPickerResult?.task;\n    }\n    async doPickerSecondLevel(picker, type, name) {\n        picker.busy = true;\n        if (type === SHOW_ALL) {\n            const items = ( (await this._taskService.tasks()).filter(t => !t.configurationProperties.hide).sort((a, b) => this._sorter.compare(a, b)).map(task => this._createTaskEntry(task)));\n            items.push(...TaskQuickPick.allSettingEntries(this._configurationService));\n            picker.items = items;\n        }\n        else {\n            picker.value = name || '';\n            picker.items = await this._getEntriesForProvider(type);\n        }\n        await picker.show();\n        picker.busy = false;\n        const secondLevelPickerResult = await ( new Promise(resolve => {\n            Event.once(picker.onDidAccept)(async () => {\n                resolve(picker.selectedItems ? picker.selectedItems[0] : undefined);\n            });\n        }));\n        return secondLevelPickerResult;\n    }\n    static allSettingEntries(configurationService) {\n        const entries = [];\n        const gruntEntry = TaskQuickPick.getSettingEntry(configurationService, 'grunt');\n        if (gruntEntry) {\n            entries.push(gruntEntry);\n        }\n        const gulpEntry = TaskQuickPick.getSettingEntry(configurationService, 'gulp');\n        if (gulpEntry) {\n            entries.push(gulpEntry);\n        }\n        const jakeEntry = TaskQuickPick.getSettingEntry(configurationService, 'jake');\n        if (jakeEntry) {\n            entries.push(jakeEntry);\n        }\n        return entries;\n    }\n    static getSettingEntry(configurationService, type) {\n        if (configurationService.getValue(`${type}.autoDetect`) === 'off') {\n            return {\n                label: ( nls.localize(\n                    'TaskQuickPick.changeSettingsOptions',\n                    \"$(gear) {0} task detection is turned off. Enable {1} task detection...\",\n                    type[0].toUpperCase() + type.slice(1),\n                    type\n                )),\n                task: null,\n                settingType: type,\n                alwaysShow: true\n            };\n        }\n        return undefined;\n    }\n    async _getEntriesForProvider(type) {\n        const tasks = (await this._taskService.tasks({ type })).sort((a, b) => this._sorter.compare(a, b));\n        let taskQuickPickEntries = [];\n        if (tasks.length > 0) {\n            for (const task of tasks) {\n                if (!task.configurationProperties.hide) {\n                    taskQuickPickEntries.push(this._createTaskEntry(task));\n                }\n            }\n            taskQuickPickEntries.push({\n                type: 'separator'\n            }, {\n                label: ( nls.localize('TaskQuickPick.goBack', 'Go back ↩')),\n                task: null,\n                alwaysShow: true\n            });\n        }\n        else {\n            taskQuickPickEntries = [{\n                    label: ( nls.localize('TaskQuickPick.noTasksForType', 'No {0} tasks found. Go back ↩', type)),\n                    task: null,\n                    alwaysShow: true\n                }];\n        }\n        const settingEntry = TaskQuickPick.getSettingEntry(this._configurationService, type);\n        if (settingEntry) {\n            taskQuickPickEntries.push(settingEntry);\n        }\n        return taskQuickPickEntries;\n    }\n    async _toTask(task) {\n        if (!ConfiguringTask.is(task)) {\n            return task;\n        }\n        const resolvedTask = await this._taskService.tryResolveTask(task);\n        if (!resolvedTask) {\n            this._notificationService.error(( nls.localize(\n                'noProviderForTask',\n                \"There is no task provider registered for tasks of type \\\"{0}\\\".\",\n                task.type\n            )));\n        }\n        return resolvedTask;\n    }\n};\nTaskQuickPick = ( __decorate([\n    ( __param(0, ITaskService)),\n    ( __param(1, IConfigurationService)),\n    ( __param(2, IQuickInputService)),\n    ( __param(3, INotificationService)),\n    ( __param(4, IThemeService)),\n    ( __param(5, IDialogService)),\n    ( __param(6, IStorageService))\n], TaskQuickPick));\nexport { QUICKOPEN_DETAIL_CONFIG, QUICKOPEN_SKIP_CONFIG, TaskQuickPick, configureTaskIcon };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { PickerQuickAccessProvider, TriggerAction } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { matchesFuzzy } from 'monaco-editor/esm/vs/base/common/filters.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { ITaskService } from '../common/taskService.js';\nimport { ContributedTask, CustomTask, ConfiguringTask } from '../common/tasks.js';\nimport { TaskQuickPick } from './taskQuickPick.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { isString } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nlet TasksQuickAccessProvider = class TasksQuickAccessProvider extends PickerQuickAccessProvider {\n    static { this.PREFIX = 'task '; }\n    constructor(extensionService, _taskService, _configurationService, _quickInputService, _notificationService, _dialogService, _themeService, _storageService) {\n        super(TasksQuickAccessProvider.PREFIX, {\n            noResultsPick: {\n                label: ( localize('noTaskResults', \"No matching tasks\"))\n            }\n        });\n        this._taskService = _taskService;\n        this._configurationService = _configurationService;\n        this._quickInputService = _quickInputService;\n        this._notificationService = _notificationService;\n        this._dialogService = _dialogService;\n        this._themeService = _themeService;\n        this._storageService = _storageService;\n    }\n    async _getPicks(filter, disposables, token) {\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const taskQuickPick = ( new TaskQuickPick(\n            this._taskService,\n            this._configurationService,\n            this._quickInputService,\n            this._notificationService,\n            this._themeService,\n            this._dialogService,\n            this._storageService\n        ));\n        const topLevelPicks = await taskQuickPick.getTopLevelEntries();\n        const taskPicks = [];\n        for (const entry of topLevelPicks.entries) {\n            const highlights = matchesFuzzy(filter, entry.label);\n            if (!highlights) {\n                continue;\n            }\n            if (entry.type === 'separator') {\n                taskPicks.push(entry);\n            }\n            const task = entry.task;\n            const quickAccessEntry = entry;\n            quickAccessEntry.highlights = { label: highlights };\n            quickAccessEntry.trigger = (index) => {\n                if ((index === 1) && (quickAccessEntry.buttons?.length === 2)) {\n                    const key = (task && !isString(task)) ? task.getRecentlyUsedKey() : undefined;\n                    if (key) {\n                        this._taskService.removeRecentlyUsedTask(key);\n                    }\n                    return TriggerAction.REFRESH_PICKER;\n                }\n                else {\n                    if (ContributedTask.is(task)) {\n                        this._taskService.customize(task, undefined, true);\n                    }\n                    else if (CustomTask.is(task)) {\n                        this._taskService.openConfig(task);\n                    }\n                    return TriggerAction.CLOSE_PICKER;\n                }\n            };\n            quickAccessEntry.accept = async () => {\n                if (isString(task)) {\n                    const showResult = await taskQuickPick.show(( localize('TaskService.pickRunTask', 'Select the task to run')), undefined, task);\n                    if (showResult) {\n                        this._taskService.run(showResult, { attachProblemMatcher: true });\n                    }\n                }\n                else {\n                    this._taskService.run(await this._toTask(task), { attachProblemMatcher: true });\n                }\n            };\n            taskPicks.push(quickAccessEntry);\n        }\n        return taskPicks;\n    }\n    async _toTask(task) {\n        if (!ConfiguringTask.is(task)) {\n            return task;\n        }\n        return this._taskService.tryResolveTask(task);\n    }\n};\nTasksQuickAccessProvider = ( __decorate([\n    ( __param(0, IExtensionService)),\n    ( __param(1, ITaskService)),\n    ( __param(2, IConfigurationService)),\n    ( __param(3, IQuickInputService)),\n    ( __param(4, INotificationService)),\n    ( __param(5, IDialogService)),\n    ( __param(6, IThemeService)),\n    ( __param(7, IStorageService))\n], TasksQuickAccessProvider));\nexport { TasksQuickAccessProvider };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/anythingQuickAccess.css.js';\nimport { QuickPickItemScorerAccessor, QuickInputHideReason, quickPickItemScorerAccessor, IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nimport { PickerQuickAccessProvider, TriggerAction } from 'monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js';\nimport { prepareQuery, compareItemsByFuzzyScore, scoreItemFuzzy } from 'monaco-editor/esm/vs/base/common/fuzzyScorer.js';\nimport { QueryBuilder } from '../../../services/search/common/queryBuilder.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { extractRangeFromFilter, getOutOfWorkspaceEditorResources } from '../common/search.js';\nimport { ISearchService } from '../../../services/search/common/search.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { untildify } from 'monaco-editor/esm/vs/base/common/labels.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { toLocalResource, basenameOrAuthority, dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { MutableDisposable, Disposable, toDisposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { getIconClasses } from 'monaco-editor/esm/vs/editor/common/services/getIconClasses.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { isEditorInput, EditorResourceAccessor } from '../../../common/editor.js';\nimport { SIDE_GROUP, ACTIVE_GROUP, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { ThrottledDelayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { top } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport { FileQueryCacheState } from '../common/cacheState.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nimport { SymbolsQuickAccessProvider } from './symbolsQuickAccess.js';\nimport { DefaultQuickAccessFilterValue } from 'monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js';\nimport { GotoSymbolQuickAccessProvider } from '../../codeEditor/browser/quickaccess/gotoSymbolQuickAccess.js';\nimport { ITextModelService } from 'monaco-editor/esm/vs/editor/common/services/resolverService.js';\nimport { once } from 'monaco-editor/esm/vs/base/common/functional.js';\nimport { getIEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { stripIcons } from 'monaco-editor/esm/vs/base/common/iconLabels.js';\nimport { HelpQuickAccessProvider } from 'monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js';\nimport { CommandsQuickAccessProvider } from '../../quickaccess/browser/commandsQuickAccess.js';\nimport { DEBUG_QUICK_ACCESS_PREFIX } from '../../debug/browser/debugCommands.js';\nimport { TasksQuickAccessProvider } from '../../tasks/browser/tasksQuickAccess.js';\nimport { Lazy } from 'monaco-editor/esm/vs/base/common/lazy.js';\nfunction isEditorSymbolQuickPickItem(pick) {\n    const candidate = pick;\n    return !!candidate?.range && !!candidate.resource;\n}\nlet AnythingQuickAccessProvider = class AnythingQuickAccessProvider extends PickerQuickAccessProvider {\n    static { this.PREFIX = ''; }\n    static { this.NO_RESULTS_PICK = {\n        label: ( localize('noAnythingResults', \"No matching results\"))\n    }; }\n    static { this.MAX_RESULTS = 512; }\n    static { this.TYPING_SEARCH_DELAY = 200; }\n    static { this.SYMBOL_PICKS_MERGE_DELAY = 200; }\n    get defaultFilterValue() {\n        if (this.configuration.preserveInput) {\n            return DefaultQuickAccessFilterValue.LAST;\n        }\n        return undefined;\n    }\n    constructor(instantiationService, searchService, contextService, pathService, environmentService, fileService, labelService, modelService, languageService, workingCopyService, configurationService, editorService, historyService, filesConfigurationService, textModelService, uriIdentityService, quickInputService) {\n        super(AnythingQuickAccessProvider.PREFIX, {\n            canAcceptInBackground: true,\n            noResultsPick: AnythingQuickAccessProvider.NO_RESULTS_PICK\n        });\n        this.instantiationService = instantiationService;\n        this.searchService = searchService;\n        this.contextService = contextService;\n        this.pathService = pathService;\n        this.environmentService = environmentService;\n        this.fileService = fileService;\n        this.labelService = labelService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this.workingCopyService = workingCopyService;\n        this.configurationService = configurationService;\n        this.editorService = editorService;\n        this.historyService = historyService;\n        this.filesConfigurationService = filesConfigurationService;\n        this.textModelService = textModelService;\n        this.uriIdentityService = uriIdentityService;\n        this.quickInputService = quickInputService;\n        this.pickState = new (class {\n            constructor(provider, editorService) {\n                this.provider = provider;\n                this.editorService = editorService;\n                this.picker = undefined;\n                this.editorViewState = undefined;\n                this.scorerCache = Object.create(null);\n                this.fileQueryCache = undefined;\n                this.lastOriginalFilter = undefined;\n                this.lastFilter = undefined;\n                this.lastRange = undefined;\n                this.lastGlobalPicks = undefined;\n                this.isQuickNavigating = undefined;\n            }\n            set(picker) {\n                this.picker = picker;\n                once(picker.onDispose)(() => {\n                    if (picker === this.picker) {\n                        this.picker = undefined;\n                    }\n                });\n                const isQuickNavigating = !!picker.quickNavigate;\n                if (!isQuickNavigating) {\n                    this.fileQueryCache = this.provider.createFileQueryCache();\n                    this.scorerCache = Object.create(null);\n                }\n                this.isQuickNavigating = isQuickNavigating;\n                this.lastOriginalFilter = undefined;\n                this.lastFilter = undefined;\n                this.lastRange = undefined;\n                this.lastGlobalPicks = undefined;\n                this.editorViewState = undefined;\n            }\n            rememberEditorViewState() {\n                if (this.editorViewState) {\n                    return;\n                }\n                const activeEditorPane = this.editorService.activeEditorPane;\n                if (activeEditorPane) {\n                    this.editorViewState = {\n                        group: activeEditorPane.group,\n                        editor: activeEditorPane.input,\n                        state: withNullAsUndefined(getIEditor(activeEditorPane.getControl())?.saveViewState())\n                    };\n                }\n            }\n            async restoreEditorViewState() {\n                if (this.editorViewState) {\n                    const options = {\n                        viewState: this.editorViewState.state,\n                        preserveFocus: true\n                    };\n                    await this.editorViewState.group.openEditor(this.editorViewState.editor, options);\n                }\n            }\n        })(this, this.editorService);\n        this.labelOnlyEditorHistoryPickAccessor = ( new QuickPickItemScorerAccessor({ skipDescription: true }));\n        this.fileQueryDelayer = this._register(( new ThrottledDelayer(AnythingQuickAccessProvider.TYPING_SEARCH_DELAY)));\n        this.fileQueryBuilder = this.instantiationService.createInstance(QueryBuilder);\n        this.helpQuickAccess = this.instantiationService.createInstance(HelpQuickAccessProvider);\n        this.workspaceSymbolsQuickAccess = this._register(this.instantiationService.createInstance(SymbolsQuickAccessProvider));\n        this.editorSymbolsQuickAccess = this.instantiationService.createInstance(GotoSymbolQuickAccessProvider);\n    }\n    get configuration() {\n        const editorConfig = this.configurationService.getValue().workbench?.editor;\n        const searchConfig = this.configurationService.getValue().search;\n        const quickAccessConfig = this.configurationService.getValue().workbench.quickOpen;\n        return {\n            openEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n            openSideBySideDirection: editorConfig?.openSideBySideDirection,\n            includeSymbols: searchConfig?.quickOpen.includeSymbols,\n            includeHistory: searchConfig?.quickOpen.includeHistory,\n            historyFilterSortOrder: searchConfig?.quickOpen.history.filterSortOrder,\n            shortAutoSaveDelay: this.filesConfigurationService.getAutoSaveMode() === 1 ,\n            preserveInput: quickAccessConfig.preserveInput\n        };\n    }\n    provide(picker, token, runOptions) {\n        const disposables = ( new DisposableStore());\n        this.pickState.set(picker);\n        const editorDecorationsDisposable = disposables.add(( new MutableDisposable()));\n        disposables.add(picker.onDidChangeActive(() => {\n            editorDecorationsDisposable.value = undefined;\n            const [item] = picker.activeItems;\n            if (isEditorSymbolQuickPickItem(item)) {\n                editorDecorationsDisposable.value = this.decorateAndRevealSymbolRange(item);\n            }\n        }));\n        disposables.add(once(picker.onDidHide)(({ reason }) => {\n            if (reason === QuickInputHideReason.Gesture) {\n                this.pickState.restoreEditorViewState();\n            }\n        }));\n        disposables.add(super.provide(picker, token, runOptions));\n        return disposables;\n    }\n    decorateAndRevealSymbolRange(pick) {\n        const activeEditor = this.editorService.activeEditor;\n        if (!this.uriIdentityService.extUri.isEqual(pick.resource, activeEditor?.resource)) {\n            return Disposable.None;\n        }\n        const activeEditorControl = this.editorService.activeTextEditorControl;\n        if (!activeEditorControl) {\n            return Disposable.None;\n        }\n        this.pickState.rememberEditorViewState();\n        activeEditorControl.revealRangeInCenter(pick.range.selection, 0 );\n        this.addDecorations(activeEditorControl, pick.range.decoration);\n        return toDisposable(() => this.clearDecorations(activeEditorControl));\n    }\n    _getPicks(originalFilter, disposables, token, runOptions) {\n        const filterWithRange = extractRangeFromFilter(originalFilter, [GotoSymbolQuickAccessProvider.PREFIX]);\n        let filter;\n        if (filterWithRange) {\n            filter = filterWithRange.filter;\n        }\n        else {\n            filter = originalFilter;\n        }\n        this.pickState.lastRange = filterWithRange?.range;\n        if (originalFilter !== this.pickState.lastOriginalFilter && filter === this.pickState.lastFilter) {\n            return null;\n        }\n        const lastWasFiltering = !!this.pickState.lastOriginalFilter;\n        this.pickState.lastOriginalFilter = originalFilter;\n        this.pickState.lastFilter = filter;\n        const picks = this.pickState.picker?.items;\n        const activePick = this.pickState.picker?.activeItems[0];\n        if (picks && activePick) {\n            const activePickIsEditorSymbol = isEditorSymbolQuickPickItem(activePick);\n            const activePickIsNoResultsInEditorSymbols = activePick === AnythingQuickAccessProvider.NO_RESULTS_PICK && filter.indexOf(GotoSymbolQuickAccessProvider.PREFIX) >= 0;\n            if (!activePickIsEditorSymbol && !activePickIsNoResultsInEditorSymbols) {\n                this.pickState.lastGlobalPicks = {\n                    items: picks,\n                    active: activePick\n                };\n            }\n        }\n        return this.doGetPicks(filter, { enableEditorSymbolSearch: lastWasFiltering, includeHelp: runOptions?.includeHelp, from: runOptions?.from }, disposables, token);\n    }\n    doGetPicks(filter, options, disposables, token) {\n        const query = prepareQuery(filter);\n        if (options.enableEditorSymbolSearch) {\n            const editorSymbolPicks = this.getEditorSymbolPicks(query, disposables, token);\n            if (editorSymbolPicks) {\n                return editorSymbolPicks;\n            }\n        }\n        const activePick = this.pickState.picker?.activeItems[0];\n        if (isEditorSymbolQuickPickItem(activePick) && this.pickState.lastGlobalPicks) {\n            return this.pickState.lastGlobalPicks;\n        }\n        const historyEditorPicks = this.getEditorHistoryPicks(query);\n        let picks;\n        if (this.pickState.isQuickNavigating) {\n            picks = historyEditorPicks;\n        }\n        else {\n            picks = [];\n            if (options.includeHelp) {\n                picks.push(...this.getHelpPicks(query, token, options));\n            }\n            if (historyEditorPicks.length !== 0) {\n                picks.push({ type: 'separator', label: ( localize('recentlyOpenedSeparator', \"recently opened\")) });\n                picks.push(...historyEditorPicks);\n            }\n        }\n        return {\n            picks,\n            additionalPicks: (async () => {\n                const additionalPicksExcludes = ( new ResourceMap());\n                for (const historyEditorPick of historyEditorPicks) {\n                    if (historyEditorPick.resource) {\n                        additionalPicksExcludes.set(historyEditorPick.resource, true);\n                    }\n                }\n                const additionalPicks = await this.getAdditionalPicks(query, additionalPicksExcludes, token);\n                if (token.isCancellationRequested) {\n                    return [];\n                }\n                return additionalPicks.length > 0 ? [\n                    { type: 'separator', label: this.configuration.includeSymbols ? ( localize('fileAndSymbolResultsSeparator', \"file and symbol results\")) : ( localize('fileResultsSeparator', \"file results\")) },\n                    ...additionalPicks\n                ] : [];\n            })(),\n            mergeDelay: AnythingQuickAccessProvider.SYMBOL_PICKS_MERGE_DELAY\n        };\n    }\n    async getAdditionalPicks(query, excludes, token) {\n        const [filePicks, symbolPicks] = await Promise.all([\n            this.getFilePicks(query, excludes, token),\n            this.getWorkspaceSymbolPicks(query, token)\n        ]);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const sortedAnythingPicks = top([...filePicks, ...symbolPicks], (anyPickA, anyPickB) => compareItemsByFuzzyScore(anyPickA, anyPickB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache), AnythingQuickAccessProvider.MAX_RESULTS);\n        const filteredAnythingPicks = [];\n        for (const anythingPick of sortedAnythingPicks) {\n            if (anythingPick.highlights) {\n                filteredAnythingPicks.push(anythingPick);\n            }\n            else {\n                const { score, labelMatch, descriptionMatch } = scoreItemFuzzy(anythingPick, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n                if (!score) {\n                    continue;\n                }\n                anythingPick.highlights = {\n                    label: labelMatch,\n                    description: descriptionMatch\n                };\n                filteredAnythingPicks.push(anythingPick);\n            }\n        }\n        return filteredAnythingPicks;\n    }\n    getEditorHistoryPicks(query) {\n        const configuration = this.configuration;\n        if (!query.normalized) {\n            return ( this.historyService.getHistory().map(editor => this.createAnythingPick(editor, configuration)));\n        }\n        if (!this.configuration.includeHistory) {\n            return [];\n        }\n        const editorHistoryScorerAccessor = query.containsPathSeparator ? quickPickItemScorerAccessor : this.labelOnlyEditorHistoryPickAccessor;\n        const editorHistoryPicks = [];\n        for (const editor of this.historyService.getHistory()) {\n            const resource = editor.resource;\n            if (!resource || (!this.fileService.hasProvider(resource) && resource.scheme !== Schemas.untitled && resource.scheme !== Schemas.vscodeTerminal)) {\n                continue;\n            }\n            const editorHistoryPick = this.createAnythingPick(editor, configuration);\n            const { score, labelMatch, descriptionMatch } = scoreItemFuzzy(editorHistoryPick, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache);\n            if (!score) {\n                continue;\n            }\n            editorHistoryPick.highlights = {\n                label: labelMatch,\n                description: descriptionMatch\n            };\n            editorHistoryPicks.push(editorHistoryPick);\n        }\n        if (this.configuration.historyFilterSortOrder === 'recency') {\n            return editorHistoryPicks;\n        }\n        return editorHistoryPicks.sort((editorA, editorB) => compareItemsByFuzzyScore(editorA, editorB, query, false, editorHistoryScorerAccessor, this.pickState.scorerCache));\n    }\n    createFileQueryCache() {\n        return ( new FileQueryCacheState(\n            cacheKey => this.fileQueryBuilder.file(this.contextService.getWorkspace().folders, this.getFileQueryOptions({ cacheKey })),\n            query => this.searchService.fileSearch(query),\n            cacheKey => this.searchService.clearCache(cacheKey),\n            this.pickState.fileQueryCache\n        )).load();\n    }\n    async getFilePicks(query, excludes, token) {\n        if (!query.normalized) {\n            return [];\n        }\n        const absolutePathResult = await this.getAbsolutePathFileResult(query, token);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        let fileMatches;\n        if (absolutePathResult) {\n            if (( excludes.has(absolutePathResult))) {\n                return [];\n            }\n            const absolutePathPick = this.createAnythingPick(absolutePathResult, this.configuration);\n            absolutePathPick.highlights = {\n                label: [{ start: 0, end: absolutePathPick.label.length }],\n                description: absolutePathPick.description ? [{ start: 0, end: absolutePathPick.description.length }] : undefined\n            };\n            return [absolutePathPick];\n        }\n        if (this.pickState.fileQueryCache?.isLoaded) {\n            fileMatches = await this.doFileSearch(query, token);\n        }\n        else {\n            fileMatches = await this.fileQueryDelayer.trigger(async () => {\n                if (token.isCancellationRequested) {\n                    return [];\n                }\n                return this.doFileSearch(query, token);\n            });\n        }\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        const configuration = this.configuration;\n        return ( fileMatches\n            .filter(resource => !( excludes.has(resource)))\n            .map(resource => this.createAnythingPick(resource, configuration)));\n    }\n    async doFileSearch(query, token) {\n        const [fileSearchResults, relativePathFileResults] = await Promise.all([\n            this.getFileSearchResults(query, token),\n            this.getRelativePathFileResults(query, token)\n        ]);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        if (!relativePathFileResults) {\n            return fileSearchResults;\n        }\n        const relativePathFileResultsMap = ( new ResourceMap());\n        for (const relativePathFileResult of relativePathFileResults) {\n            relativePathFileResultsMap.set(relativePathFileResult, true);\n        }\n        return [\n            ...fileSearchResults.filter(result => !( relativePathFileResultsMap.has(result))),\n            ...relativePathFileResults\n        ];\n    }\n    async getFileSearchResults(query, token) {\n        let filePattern = '';\n        if (query.values && query.values.length > 1) {\n            filePattern = query.values[0].original;\n        }\n        else {\n            filePattern = query.original;\n        }\n        const fileSearchResults = await this.doGetFileSearchResults(filePattern, token);\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        if (fileSearchResults.limitHit && query.values && query.values.length > 1) {\n            const additionalFileSearchResults = await this.doGetFileSearchResults(query.original, token);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            const existingFileSearchResultsMap = ( new ResourceMap());\n            for (const fileSearchResult of fileSearchResults.results) {\n                existingFileSearchResultsMap.set(fileSearchResult.resource, true);\n            }\n            for (const additionalFileSearchResult of additionalFileSearchResults.results) {\n                if (!( existingFileSearchResultsMap.has(additionalFileSearchResult.resource))) {\n                    fileSearchResults.results.push(additionalFileSearchResult);\n                }\n            }\n        }\n        return ( fileSearchResults.results.map(result => result.resource));\n    }\n    doGetFileSearchResults(filePattern, token) {\n        return this.searchService.fileSearch(this.fileQueryBuilder.file(this.contextService.getWorkspace().folders, this.getFileQueryOptions({\n            filePattern,\n            cacheKey: this.pickState.fileQueryCache?.cacheKey,\n            maxResults: AnythingQuickAccessProvider.MAX_RESULTS\n        })), token);\n    }\n    getFileQueryOptions(input) {\n        return {\n            _reason: 'openFileHandler',\n            extraFileResources: this.instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n            filePattern: input.filePattern || '',\n            cacheKey: input.cacheKey,\n            maxResults: input.maxResults || 0,\n            sortByScore: true\n        };\n    }\n    async getAbsolutePathFileResult(query, token) {\n        if (!query.containsPathSeparator) {\n            return;\n        }\n        const userHome = await this.pathService.userHome();\n        const detildifiedQuery = untildify(query.original, userHome.scheme === Schemas.file ? userHome.fsPath : userHome.path);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const isAbsolutePathQuery = (await this.pathService.path).isAbsolute(detildifiedQuery);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        if (isAbsolutePathQuery) {\n            const resource = toLocalResource(await this.pathService.fileURI(detildifiedQuery), this.environmentService.remoteAuthority, this.pathService.defaultUriScheme);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            try {\n                if ((await this.fileService.stat(resource)).isFile) {\n                    return resource;\n                }\n            }\n            catch (error) {\n            }\n        }\n        return;\n    }\n    async getRelativePathFileResults(query, token) {\n        if (!query.containsPathSeparator) {\n            return;\n        }\n        const isAbsolutePathQuery = (await this.pathService.path).isAbsolute(query.original);\n        if (!isAbsolutePathQuery) {\n            const resources = [];\n            for (const folder of this.contextService.getWorkspace().folders) {\n                if (token.isCancellationRequested) {\n                    break;\n                }\n                const resource = toLocalResource(folder.toResource(query.original), this.environmentService.remoteAuthority, this.pathService.defaultUriScheme);\n                try {\n                    if ((await this.fileService.stat(resource)).isFile) {\n                        resources.push(resource);\n                    }\n                }\n                catch (error) {\n                }\n            }\n            return resources;\n        }\n        return;\n    }\n    getHelpPicks(query, token, runOptions) {\n        if (query.normalized) {\n            return [];\n        }\n        const providers = this.helpQuickAccess.getQuickAccessProviders();\n        const mapOfProviders = ( new Map());\n        for (const provider of providers) {\n            mapOfProviders.set(provider.prefix, provider);\n        }\n        const importantProviders = [];\n        const AddProvider = (prefix, modifications = {}) => {\n            if (( mapOfProviders.has(prefix))) {\n                const provider = mapOfProviders.get(prefix);\n                provider.label = provider.description;\n                provider.description = provider.prefix;\n                const providerSpecificOptions = {\n                    ...runOptions,\n                    includeHelp: provider.prefix === AnythingQuickAccessProvider.PREFIX ? false : runOptions?.includeHelp\n                };\n                importantProviders.push({\n                    ...mapOfProviders.get(prefix),\n                    ...modifications,\n                    accept: () => {\n                        this.quickInputService.quickAccess.show(provider.prefix, {\n                            preserveValue: true,\n                            providerOptions: providerSpecificOptions\n                        });\n                    }\n                });\n            }\n        };\n        AddProvider(AnythingQuickAccessProvider.PREFIX);\n        AddProvider(CommandsQuickAccessProvider.PREFIX);\n        AddProvider(GotoSymbolQuickAccessProvider.PREFIX);\n        AddProvider(DEBUG_QUICK_ACCESS_PREFIX);\n        AddProvider(TasksQuickAccessProvider.PREFIX);\n        AddProvider(HelpQuickAccessProvider.PREFIX, {\n            label: ( localize('more', 'More'))\n        });\n        return importantProviders;\n    }\n    async getWorkspaceSymbolPicks(query, token) {\n        const configuration = this.configuration;\n        if (!query.normalized ||\n            !configuration.includeSymbols ||\n            this.pickState.lastRange\n        ) {\n            return [];\n        }\n        return this.workspaceSymbolsQuickAccess.getSymbolPicks(query.original, {\n            skipLocal: true,\n            skipSorting: true,\n            delay: AnythingQuickAccessProvider.TYPING_SEARCH_DELAY\n        }, token);\n    }\n    getEditorSymbolPicks(query, disposables, token) {\n        const filterSegments = query.original.split(GotoSymbolQuickAccessProvider.PREFIX);\n        const filter = filterSegments.length > 1 ? filterSegments[filterSegments.length - 1].trim() : undefined;\n        if (typeof filter !== 'string') {\n            return null;\n        }\n        const activeGlobalPick = this.pickState.lastGlobalPicks?.active;\n        if (!activeGlobalPick) {\n            return null;\n        }\n        const activeGlobalResource = activeGlobalPick.resource;\n        if (!activeGlobalResource || (!this.fileService.hasProvider(activeGlobalResource) && activeGlobalResource.scheme !== Schemas.untitled)) {\n            return null;\n        }\n        if (activeGlobalPick.label.includes(GotoSymbolQuickAccessProvider.PREFIX) || activeGlobalPick.description?.includes(GotoSymbolQuickAccessProvider.PREFIX)) {\n            if (filterSegments.length < 3) {\n                return null;\n            }\n        }\n        return this.doGetEditorSymbolPicks(activeGlobalPick, activeGlobalResource, filter, disposables, token);\n    }\n    async doGetEditorSymbolPicks(activeGlobalPick, activeGlobalResource, filter, disposables, token) {\n        try {\n            this.pickState.rememberEditorViewState();\n            await this.editorService.openEditor({\n                resource: activeGlobalResource,\n                options: { preserveFocus: true, revealIfOpened: true, ignoreError: true }\n            });\n        }\n        catch (error) {\n            return [];\n        }\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        let model = this.modelService.getModel(activeGlobalResource);\n        if (!model) {\n            try {\n                const modelReference = disposables.add(await this.textModelService.createModelReference(activeGlobalResource));\n                if (token.isCancellationRequested) {\n                    return [];\n                }\n                model = modelReference.object.textEditorModel;\n            }\n            catch (error) {\n                return [];\n            }\n        }\n        const editorSymbolPicks = (await this.editorSymbolsQuickAccess.getSymbolPicks(model, filter, { extraContainerLabel: stripIcons(activeGlobalPick.label) }, disposables, token));\n        if (token.isCancellationRequested) {\n            return [];\n        }\n        return ( editorSymbolPicks.map(editorSymbolPick => {\n            if (editorSymbolPick.type === 'separator') {\n                return editorSymbolPick;\n            }\n            return {\n                ...editorSymbolPick,\n                resource: activeGlobalResource,\n                description: editorSymbolPick.description,\n                trigger: (buttonIndex, keyMods) => {\n                    this.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, forceOpenSideBySide: true });\n                    return TriggerAction.CLOSE_PICKER;\n                },\n                accept: (keyMods, event) => this.openAnything(activeGlobalResource, { keyMods, range: editorSymbolPick.range?.selection, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n            };\n        }));\n    }\n    addDecorations(editor, range) {\n        this.editorSymbolsQuickAccess.addDecorations(editor, range);\n    }\n    clearDecorations(editor) {\n        this.editorSymbolsQuickAccess.clearDecorations(editor);\n    }\n    createAnythingPick(resourceOrEditor, configuration) {\n        const isEditorHistoryEntry = !URI.isUri(resourceOrEditor);\n        let resource;\n        let label;\n        let description = undefined;\n        let isDirty = undefined;\n        let extraClasses;\n        if (isEditorInput(resourceOrEditor)) {\n            resource = EditorResourceAccessor.getOriginalUri(resourceOrEditor);\n            label = resourceOrEditor.getName();\n            description = resourceOrEditor.getDescription();\n            isDirty = resourceOrEditor.isDirty() && !resourceOrEditor.isSaving();\n            extraClasses = resourceOrEditor.getLabelExtraClasses();\n        }\n        else {\n            resource = URI.isUri(resourceOrEditor) ? resourceOrEditor : resourceOrEditor.resource;\n            label = basenameOrAuthority(resource);\n            description = this.labelService.getUriLabel(dirname(resource), { relative: true });\n            isDirty = this.workingCopyService.isDirty(resource) && !configuration.shortAutoSaveDelay;\n            extraClasses = [];\n        }\n        const labelAndDescription = description ? `${label} ${description}` : label;\n        const iconClassesValue = ( new Lazy(\n            () => getIconClasses(this.modelService, this.languageService, resource).concat(extraClasses)\n        ));\n        const buttonsValue = ( new Lazy(() => {\n            const openSideBySideDirection = configuration.openSideBySideDirection;\n            const buttons = [];\n            buttons.push({\n                iconClass: openSideBySideDirection === 'right' ? ThemeIcon.asClassName(Codicon.splitHorizontal) : ThemeIcon.asClassName(Codicon.splitVertical),\n                tooltip: openSideBySideDirection === 'right' ?\n                    ( localize(\n                        { key: 'openToSide', comment: ['Open this file in a split editor on the left/right side'] },\n                        \"Open to the Side\"\n                    )) :\n                    ( localize(\n                        { key: 'openToBottom', comment: ['Open this file in a split editor on the bottom'] },\n                        \"Open to the Bottom\"\n                    ))\n            });\n            if (isEditorHistoryEntry) {\n                buttons.push({\n                    iconClass: isDirty ? ('dirty-anything ' + ThemeIcon.asClassName(Codicon.circleFilled)) : ThemeIcon.asClassName(Codicon.close),\n                    tooltip: ( localize('closeEditor', \"Remove from Recently Opened\")),\n                    alwaysVisible: isDirty\n                });\n            }\n            return buttons;\n        }));\n        return {\n            resource,\n            label,\n            ariaLabel: isDirty ? ( localize('filePickAriaLabelDirty', \"{0} unsaved changes\", labelAndDescription)) : labelAndDescription,\n            description,\n            get iconClasses() { return iconClassesValue.value; },\n            get buttons() { return buttonsValue.value; },\n            trigger: (buttonIndex, keyMods) => {\n                switch (buttonIndex) {\n                    case 0:\n                        this.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, forceOpenSideBySide: true });\n                        return TriggerAction.CLOSE_PICKER;\n                    case 1:\n                        if (!URI.isUri(resourceOrEditor)) {\n                            this.historyService.removeFromHistory(resourceOrEditor);\n                            return TriggerAction.REMOVE_ITEM;\n                        }\n                }\n                return TriggerAction.NO_ACTION;\n            },\n            accept: (keyMods, event) => this.openAnything(resourceOrEditor, { keyMods, range: this.pickState.lastRange, preserveFocus: event.inBackground, forcePinned: event.inBackground })\n        };\n    }\n    async openAnything(resourceOrEditor, options) {\n        const editorOptions = {\n            preserveFocus: options.preserveFocus,\n            pinned: options.keyMods?.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n            selection: options.range ? Range.collapseToStart(options.range) : undefined\n        };\n        const targetGroup = options.keyMods?.alt || (this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) || options.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP;\n        if (targetGroup === SIDE_GROUP) {\n            await this.pickState.restoreEditorViewState();\n        }\n        if (isEditorInput(resourceOrEditor)) {\n            await this.editorService.openEditor(resourceOrEditor, editorOptions, targetGroup);\n        }\n        else {\n            let resourceEditorInput;\n            if (URI.isUri(resourceOrEditor)) {\n                resourceEditorInput = {\n                    resource: resourceOrEditor,\n                    options: editorOptions\n                };\n            }\n            else {\n                resourceEditorInput = {\n                    ...resourceOrEditor,\n                    options: {\n                        ...resourceOrEditor.options,\n                        ...editorOptions\n                    }\n                };\n            }\n            await this.editorService.openEditor(resourceEditorInput, targetGroup);\n        }\n    }\n};\nAnythingQuickAccessProvider = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, ISearchService)),\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IPathService)),\n    ( __param(4, IWorkbenchEnvironmentService)),\n    ( __param(5, IFileService)),\n    ( __param(6, ILabelService)),\n    ( __param(7, IModelService)),\n    ( __param(8, ILanguageService)),\n    ( __param(9, IWorkingCopyService)),\n    ( __param(10, IConfigurationService)),\n    ( __param(11, IEditorService)),\n    ( __param(12, IHistoryService)),\n    ( __param(13, IFilesConfigurationService)),\n    ( __param(14, ITextModelService)),\n    ( __param(15, IUriIdentityService)),\n    ( __param(16, IQuickInputService))\n], AnythingQuickAccessProvider));\nexport { AnythingQuickAccessProvider };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nconst searchDetailsIcon = registerIcon('search-details', Codicon.ellipsis, ( localize('searchDetailsIcon', 'Icon to make search details visible.')));\nconst searchShowContextIcon = registerIcon('search-show-context', Codicon.listSelection, ( localize(\n 'searchShowContextIcon',\n 'Icon for toggle the context in the search editor.'\n)));\nconst searchHideReplaceIcon = registerIcon('search-hide-replace', Codicon.chevronRight, ( localize(\n 'searchHideReplaceIcon',\n 'Icon to collapse the replace section in the search view.'\n)));\nconst searchShowReplaceIcon = registerIcon('search-show-replace', Codicon.chevronDown, ( localize(\n 'searchShowReplaceIcon',\n 'Icon to expand the replace section in the search view.'\n)));\nconst searchReplaceAllIcon = registerIcon('search-replace-all', Codicon.replaceAll, ( localize('searchReplaceAllIcon', 'Icon for replace all in the search view.')));\nconst searchReplaceIcon = registerIcon('search-replace', Codicon.replace, ( localize('searchReplaceIcon', 'Icon for replace in the search view.')));\nconst searchRemoveIcon = registerIcon('search-remove', Codicon.close, ( localize('searchRemoveIcon', 'Icon to remove a search result.')));\nconst searchRefreshIcon = registerIcon('search-refresh', Codicon.refresh, ( localize('searchRefreshIcon', 'Icon for refresh in the search view.')));\nconst searchCollapseAllIcon = registerIcon('search-collapse-results', Codicon.collapseAll, ( localize('searchCollapseAllIcon', 'Icon for collapse results in the search view.')));\nconst searchExpandAllIcon = registerIcon('search-expand-results', Codicon.expandAll, ( localize('searchExpandAllIcon', 'Icon for expand results in the search view.')));\nconst searchShowAsTree = registerIcon('search-tree', Codicon.listTree, ( localize(\n 'searchShowAsTree',\n 'Icon for viewing results as a tree in the search view.'\n)));\nconst searchShowAsList = registerIcon('search-list', Codicon.listFlat, ( localize(\n 'searchShowAsList',\n 'Icon for viewing results as a list in the search view.'\n)));\nconst searchClearIcon = registerIcon('search-clear-results', Codicon.clearAll, ( localize('searchClearIcon', 'Icon for clear results in the search view.')));\nconst searchStopIcon = registerIcon('search-stop', Codicon.searchStop, ( localize('searchStopIcon', 'Icon for stop in the search view.')));\nconst searchViewIcon = registerIcon('search-view-icon', Codicon.search, ( localize('searchViewIcon', 'View icon of the search view.')));\nconst searchNewEditorIcon = registerIcon('search-new-editor', Codicon.newFile, ( localize('searchNewEditorIcon', 'Icon for the action to open a new search editor.')));\nexport { searchClearIcon, searchCollapseAllIcon, searchDetailsIcon, searchExpandAllIcon, searchHideReplaceIcon, searchNewEditorIcon, searchRefreshIcon, searchRemoveIcon, searchReplaceAllIcon, searchReplaceIcon, searchShowAsList, searchShowAsTree, searchShowContextIcon, searchShowReplaceIcon, searchStopIcon, searchViewIcon };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".search-view{display:flex;flex-direction:column;height:100%}.search-view .results{flex-grow:1;min-height:0}.search-view .search-widgets-container{margin:0 12px 0 2px;padding-bottom:6px;padding-top:6px}.search-view .search-widget .toggle-replace-button{align-items:center;background-color:unset;background-position:50%;background-repeat:no-repeat;box-sizing:border-box;color:inherit;cursor:pointer;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:16px}.monaco-workbench .search-view .search-widget .toggle-replace-button:hover{background-color:var(--vscode-toolbar-hoverBackground)}.monaco-workbench .search-view .search-widget .toggle-replace-button:active{background-color:var(--vscode-toolbar-activeBackground)}.search-view .search-widget .replace-container,.search-view .search-widget .search-container{margin-left:18px}.search-view .search-widget .monaco-inputbox>.ibwrapper{height:100%}.search-view .search-widget .monaco-inputbox>.ibwrapper>.mirror,.search-view .search-widget .monaco-inputbox>.ibwrapper>textarea.input{padding:3px 0 3px 6px}.search-view .search-widget .monaco-inputbox>.ibwrapper>textarea.input{height:26px;overflow:initial}.search-view .search-widget .monaco-findInput .monaco-scrollable-element .scrollbar{opacity:0}.search-view .monaco-inputbox>.ibwrapper>textarea.input{scrollbar-width:none}.search-view .monaco-inputbox>.ibwrapper>textarea.input::-webkit-scrollbar{display:none}.search-view .monaco-findInput{display:inline-block;vertical-align:middle;width:100%}.search-view .search-widget .replace-container{display:inline-flex;margin-top:6px;position:relative}.search-view .search-widget .replace-input{display:flex;position:relative;vertical-align:middle;width:auto!important}.search-view .search-widget .replace-input>.controls{position:absolute;right:2px;top:3px}.search-view .search-widget .replace-container.disabled{display:none}.search-view .search-widget .replace-container .monaco-action-bar{height:25px;margin-left:4px}.search-view .query-details{margin:0 0 0 18px;min-height:1em;position:relative}.search-view .query-details .more{color:inherit;cursor:pointer;height:16px;position:absolute;right:-2px;width:25px;z-index:2}.search-view .query-details .file-types{display:none}.search-view .query-details .file-types>.monaco-inputbox{height:25px;width:100%}.search-view .query-details.more .file-types{display:inherit}.search-view .query-details.more .file-types:last-child{padding-bottom:4px}.search-view .query-details.more h4{font-size:11px;font-weight:400;margin:0;overflow:hidden;padding:4px 0 0;text-overflow:ellipsis;white-space:nowrap}.search-view .messages{color:var(--vscode-search-resultsInfoForeground);cursor:default;margin-top:-5px}.search-view .message{overflow-wrap:break-word;padding:0 22px 8px}.search-view .message p:first-child{margin-bottom:0;margin-top:0;padding-bottom:4px;user-select:text;-webkit-user-select:text}.search-view .message a{color:var(--vscode-textLink-foreground)}.search-view .message a:active,.search-view .message a:hover{color:var(--vscode-textLink-activeForeground)}.search-view .filematch,.search-view .foldermatch{display:flex;height:100%;line-height:22px;padding:0;position:relative}.pane-body:not(.wide) .search-view .filematch .monaco-icon-label,.pane-body:not(.wide) .search-view .foldermatch .monaco-icon-label,.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row.focused .filematch .monaco-icon-label,.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row.focused .foldermatch .monaco-icon-label,.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row:hover:not(.highlighted) .filematch .monaco-icon-label,.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row:hover:not(.highlighted) .foldermatch .monaco-icon-label{flex:1}.pane-body.wide .search-view .filematch .badge,.pane-body.wide .search-view .foldermatch .badge{margin-left:10px}.search-view .linematch{display:flex;line-height:22px;overflow:hidden;position:relative}.search-view .linematch>.match{overflow:hidden;text-overflow:ellipsis;white-space:pre}.search-view .linematch .matchLineNum{display:none;font-size:.9em;margin-left:7px;margin-right:4px;opacity:.7}.search-view .linematch .matchLineNum.show{display:block}.pane-body.wide .search-view .monaco-list .monaco-list-row .filematch .actionBarContainer,.pane-body.wide .search-view .monaco-list .monaco-list-row .foldermatch .actionBarContainer,.search-view .monaco-list .monaco-list-row .linematch .actionBarContainer{flex:1 0 auto}.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row .filematch .actionBarContainer,.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row .foldermatch .actionBarContainer{flex:0 0 auto}.pane-body:not(.wide) .search-view .monaco-list .monaco-list-row .linematch .actionBarContainer,.search-view.actions-right .monaco-list .monaco-list-row .filematch .actionBarContainer,.search-view.actions-right .monaco-list .monaco-list-row .foldermatch .actionBarContainer,.search-view.actions-right .monaco-list .monaco-list-row .linematch .actionBarContainer{text-align:right}.search-view .monaco-list .monaco-list-row .monaco-action-bar{display:none;line-height:1em;padding:0 .8em 0 .4em}.search-view .monaco-list .monaco-list-row .monaco-action-bar .action-item{margin:0}.search-view .monaco-list .monaco-list-row.focused .monaco-action-bar,.search-view .monaco-list .monaco-list-row.selected .monaco-action-bar,.search-view .monaco-list .monaco-list-row:hover:not(.highlighted) .monaco-action-bar{display:inline-block}.search-view .monaco-list .monaco-list-row .monaco-action-bar .action-item{margin-right:.2em}.search-view .monaco-list .monaco-list-row .monaco-action-bar .action-label{padding:2px}.monaco-workbench.hc-black .search-view .monaco-list .monaco-list-row .monaco-action-bar .action-label,.monaco-workbench.hc-light .search-view .monaco-list .monaco-list-row .monaco-action-bar .action-label{margin-top:2px}.search-view .monaco-count-badge{margin-right:12px}.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row.focused .filematch .monaco-count-badge,.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row.focused .foldermatch .monaco-count-badge,.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row.focused .linematch .monaco-count-badge,.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row:hover .filematch .monaco-count-badge,.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row:hover .foldermatch .monaco-count-badge,.pane-body:not(.wide) .search-view>.results>.monaco-list .monaco-list-row:hover .linematch .monaco-count-badge{display:none}.search-view .replace.findInFileMatch{background-color:var(--vscode-diffEditor-removedTextBackground);border:1px solid var(--vscode-diffEditor-removedTextBackground);text-decoration:line-through}.monaco-workbench.hc-dark .search-view .replace.findInFileMatch,.monaco-workbench.hc-light .search-view .replace.findInFileMatch{border:1px dashed var(--vscode-diffEditor-removedTextBackground)}.search-view .findInFileMatch,.search-view .replaceMatch{white-space:pre}.search-view .findInFileMatch{background-color:var(--vscode-editor-findMatchHighlightBackground);border:1px solid var(--vscode-editor-findMatchHighlightBorder)}.monaco-workbench.hc-dark .search-view .findInFileMatch,.monaco-workbench.hc-light .search-view .findInFileMatch{border:1px dashed var(--vscode-editor-findMatchHighlightBorder)}.search-view .replaceMatch{background-color:var(--vscode-diffEditor-insertedTextBackground)}.monaco-workbench.hc-black .search-view .findInFileMatch,.monaco-workbench.hc-black .search-view .replaceMatch,.monaco-workbench.hc-light .search-view .findInFileMatch,.monaco-workbench.hc-light .search-view .replaceMatch{background:none!important;box-sizing:border-box}.search-view .replaceMatch:not(:empty){border:1px solid var(--vscode-diffEditor-insertedLineBackground)}.monaco-workbench.hc-dark .search-view .replaceMatch:not(:empty),.monaco-workbench.hc-light .search-view .replaceMatch:not(:empty){border:1px dashed var(--vscode-diffEditor-insertedLineBackground)}.monaco-workbench.hc-black .search-view .filematch,.monaco-workbench.hc-black .search-view .foldermatch,.monaco-workbench.hc-black .search-view .linematch,.monaco-workbench.hc-light .search-view .filematch,.monaco-workbench.hc-light .search-view .foldermatch,.monaco-workbench.hc-light .search-view .linematch{line-height:20px}.monaco-workbench.vs .search-panel .search-view .monaco-inputbox{border:1px solid transparent}.text-search-provider-messages .providerMessage{padding-top:4px}.text-search-provider-messages .providerMessage .codicon{padding-right:3px;position:relative;top:3px}.monaco-workbench .search-view .monaco-list.element-focused .monaco-list-row.focused.selected:not(.highlighted) .action-label:focus{outline-color:var(--vscode-list-activeSelectionForeground)}.monaco-workbench .search-container .monaco-custom-toggle.disabled{background-color:inherit!important;cursor:default;opacity:.3;pointer-events:none;user-select:none;-webkit-user-select:none}.monaco-workbench .search-container .find-filter-button{box-sizing:border-box;color:inherit;cursor:pointer;float:left;margin-left:2px;user-select:none;-webkit-user-select:none}\";\nn(css,{});\nexport { css, css as default };\n","\n      import API from \"!../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../css-loader/dist/cjs.js!./highlightDecorations.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../css-loader/dist/cjs.js!./highlightDecorations.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './highlightDecorations.css';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DocumentHighlightKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { activeContrastBorder, editorSelectionHighlight, minimapSelectionOccurrenceHighlight, overviewRulerSelectionHighlightForeground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst wordHighlightBackground = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hcDark: null, hcLight: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nregisterColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hcDark: null, hcLight: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nregisterColor('editor.wordHighlightTextBackground', { light: wordHighlightBackground, dark: wordHighlightBackground, hcDark: wordHighlightBackground, hcLight: wordHighlightBackground }, nls.localize('wordHighlightText', 'Background color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst wordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\nregisterColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\nregisterColor('editor.wordHighlightTextBorder', { light: wordHighlightBorder, dark: wordHighlightBorder, hcDark: wordHighlightBorder, hcLight: wordHighlightBorder }, nls.localize('wordHighlightTextBorder', \"Border color of a textual occurrence for a symbol.\"));\nconst overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hcDark: '#C0A0C0CC', hcLight: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst overviewRulerWordHighlightTextForeground = registerColor('editorOverviewRuler.wordHighlightTextForeground', { dark: overviewRulerSelectionHighlightForeground, light: overviewRulerSelectionHighlightForeground, hcDark: overviewRulerSelectionHighlightForeground, hcLight: overviewRulerSelectionHighlightForeground }, nls.localize('overviewRulerWordHighlightTextForeground', 'Overview ruler marker color of a textual occurrence for a symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nconst _WRITE_OPTIONS = ModelDecorationOptions.register({\n    description: 'word-highlight-strong',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'wordHighlightStrong',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerWordHighlightStrongForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapSelectionOccurrenceHighlight),\n        position: MinimapPosition.Inline\n    },\n});\nconst _TEXT_OPTIONS = ModelDecorationOptions.register({\n    description: 'word-highlight-text',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'wordHighlightText',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerWordHighlightTextForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapSelectionOccurrenceHighlight),\n        position: MinimapPosition.Inline\n    },\n});\nconst _SELECTION_HIGHLIGHT_OPTIONS = ModelDecorationOptions.register({\n    description: 'selection-highlight-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'selectionHighlight',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapSelectionOccurrenceHighlight),\n        position: MinimapPosition.Inline\n    },\n});\nconst _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW = ModelDecorationOptions.register({\n    description: 'selection-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'selectionHighlight',\n});\nconst _REGULAR_OPTIONS = ModelDecorationOptions.register({\n    description: 'word-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'wordHighlight',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerWordHighlightForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapSelectionOccurrenceHighlight),\n        position: MinimapPosition.Inline\n    },\n});\nexport function getHighlightDecorationOptions(kind) {\n    if (kind === DocumentHighlightKind.Write) {\n        return _WRITE_OPTIONS;\n    }\n    else if (kind === DocumentHighlightKind.Text) {\n        return _TEXT_OPTIONS;\n    }\n    else {\n        return _REGULAR_OPTIONS;\n    }\n}\nexport function getSelectionHighlightDecorationOptions(hasSemanticHighlights) {\n    // Show in overviewRuler only if model has no semantic highlighting\n    return (hasSemanticHighlights ? _SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW : _SELECTION_HIGHLIGHT_OPTIONS);\n}\nregisterThemingParticipant((theme, collector) => {\n    const selectionHighlight = theme.getColor(editorSelectionHighlight);\n    if (selectionHighlight) {\n        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CommonFindController } from '../../find/browser/findController.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getSelectionHighlightDecorationOptions } from '../../wordHighlighter/browser/highlightDecorations.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nfunction announceCursorChange(previousCursorState, cursorState) {\n    const cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\n    if (cursorDiff.length >= 1) {\n        const cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\n        const msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\n        status(msg);\n    }\n}\nexport class InsertCursorAbove extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorAbove',\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\n            alias: 'Add Cursor Above',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: {\n                    primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */]\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\n                order: 2\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let useLogicalLine = true;\n        if (args && args.logicalLine === false) {\n            useLogicalLine = false;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = viewModel.getCursorStates();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\n        viewModel.revealTopMostCursor(args.source);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class InsertCursorBelow extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorBelow',\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\n            alias: 'Add Cursor Below',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: {\n                    primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */]\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\n                order: 3\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let useLogicalLine = true;\n        if (args && args.logicalLine === false) {\n            useLogicalLine = false;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = viewModel.getCursorStates();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\n        viewModel.revealBottomMostCursor(args.source);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\n            alias: 'Add Cursors to Line Ends',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 39 /* KeyCode.KeyI */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\n                order: 4\n            }\n        });\n    }\n    getCursorsForSelection(selection, model, result) {\n        if (selection.isEmpty()) {\n            return;\n        }\n        for (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\n            const currentLineMaxColumn = model.getLineMaxColumn(i);\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\n        }\n        if (selection.endColumn > 1) {\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\n        }\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        const selections = editor.getSelections();\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        const newSelections = [];\n        selections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.addCursorsToBottom',\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\n            alias: 'Add Cursors To Bottom',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        const lineCount = editor.getModel().getLineCount();\n        const newSelections = [];\n        for (let i = selections[0].startLineNumber; i <= lineCount; i++) {\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n        }\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.addCursorsToTop',\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\n            alias: 'Add Cursors To Top',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        const newSelections = [];\n        for (let i = selections[0].startLineNumber; i >= 1; i--) {\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n        }\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class MultiCursorSessionResult {\n    constructor(selections, revealRange, revealScrollType) {\n        this.selections = selections;\n        this.revealRange = revealRange;\n        this.revealScrollType = revealScrollType;\n    }\n}\nexport class MultiCursorSession {\n    static create(editor, findController) {\n        if (!editor.hasModel()) {\n            return null;\n        }\n        const findState = findController.getState();\n        // Find widget owns entirely what we search for if:\n        //  - focus is not in the editor (i.e. it is in the find widget)\n        //  - and the search widget is visible\n        //  - and the search string is non-empty\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\n            // Find widget owns what is searched for\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\n        }\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\n        let isDisconnectedFromFindController = false;\n        let wholeWord;\n        let matchCase;\n        const selections = editor.getSelections();\n        if (selections.length === 1 && selections[0].isEmpty()) {\n            isDisconnectedFromFindController = true;\n            wholeWord = true;\n            matchCase = true;\n        }\n        else {\n            wholeWord = findState.wholeWord;\n            matchCase = findState.matchCase;\n        }\n        // Selection owns what is searched for\n        const s = editor.getSelection();\n        let searchText;\n        let currentMatch = null;\n        if (s.isEmpty()) {\n            // selection is empty => expand to current word\n            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());\n            if (!word) {\n                return null;\n            }\n            searchText = word.word;\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\n        }\n        else {\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\n        }\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\n    }\n    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\n        this._editor = _editor;\n        this.findController = findController;\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\n        this.searchText = searchText;\n        this.wholeWord = wholeWord;\n        this.matchCase = matchCase;\n        this.currentMatch = currentMatch;\n    }\n    addSelectionToNextFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const nextMatch = this._getNextMatch();\n        if (!nextMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n    moveSelectionToNextFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const nextMatch = this._getNextMatch();\n        if (!nextMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n    _getNextMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (this.currentMatch) {\n            const result = this.currentMatch;\n            this.currentMatch = null;\n            return result;\n        }\n        this.findController.highlightFindOptions();\n        const allSelections = this._editor.getSelections();\n        const lastAddedSelection = allSelections[allSelections.length - 1];\n        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false);\n        if (!nextMatch) {\n            return null;\n        }\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\n    }\n    addSelectionToPreviousFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const previousMatch = this._getPreviousMatch();\n        if (!previousMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n    moveSelectionToPreviousFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const previousMatch = this._getPreviousMatch();\n        if (!previousMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n    _getPreviousMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (this.currentMatch) {\n            const result = this.currentMatch;\n            this.currentMatch = null;\n            return result;\n        }\n        this.findController.highlightFindOptions();\n        const allSelections = this._editor.getSelections();\n        const lastAddedSelection = allSelections[allSelections.length - 1];\n        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false);\n        if (!previousMatch) {\n            return null;\n        }\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\n    }\n    selectAll(searchScope) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        this.findController.highlightFindOptions();\n        const editorModel = this._editor.getModel();\n        if (searchScope) {\n            return editorModel.findMatches(this.searchText, searchScope, false, this.matchCase, this.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        }\n        return editorModel.findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n    }\n}\nexport class MultiCursorSelectionController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(MultiCursorSelectionController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._sessionDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._ignoreSelectionChange = false;\n        this._session = null;\n    }\n    dispose() {\n        this._endSession();\n        super.dispose();\n    }\n    _beginSessionIfNeeded(findController) {\n        if (!this._session) {\n            // Create a new session\n            const session = MultiCursorSession.create(this._editor, findController);\n            if (!session) {\n                return;\n            }\n            this._session = session;\n            const newState = { searchString: this._session.searchText };\n            if (this._session.isDisconnectedFromFindController) {\n                newState.wholeWordOverride = 1 /* FindOptionOverride.True */;\n                newState.matchCaseOverride = 1 /* FindOptionOverride.True */;\n                newState.isRegexOverride = 2 /* FindOptionOverride.False */;\n            }\n            findController.getState().change(newState, false);\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\n                if (this._ignoreSelectionChange) {\n                    return;\n                }\n                this._endSession();\n            }));\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\n                this._endSession();\n            }));\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\n                if (e.matchCase || e.wholeWord) {\n                    this._endSession();\n                }\n            }));\n        }\n    }\n    _endSession() {\n        this._sessionDispose.clear();\n        if (this._session && this._session.isDisconnectedFromFindController) {\n            const newState = {\n                wholeWordOverride: 0 /* FindOptionOverride.NotSet */,\n                matchCaseOverride: 0 /* FindOptionOverride.NotSet */,\n                isRegexOverride: 0 /* FindOptionOverride.NotSet */,\n            };\n            this._session.findController.getState().change(newState, false);\n        }\n        this._session = null;\n    }\n    _setSelections(selections) {\n        this._ignoreSelectionChange = true;\n        this._editor.setSelections(selections);\n        this._ignoreSelectionChange = false;\n    }\n    _expandEmptyToWord(model, selection) {\n        if (!selection.isEmpty()) {\n            return selection;\n        }\n        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\n        if (!word) {\n            return selection;\n        }\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n    }\n    _applySessionResult(result) {\n        if (!result) {\n            return;\n        }\n        this._setSelections(result.selections);\n        if (result.revealRange) {\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\n        }\n    }\n    getSession(findController) {\n        return this._session;\n    }\n    addSelectionToNextFindMatch(findController) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._session) {\n            // If there are multiple cursors, handle the case where they do not all select the same text.\n            const allSelections = this._editor.getSelections();\n            if (allSelections.length > 1) {\n                const findState = findController.getState();\n                const matchCase = findState.matchCase;\n                const selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\n                if (!selectionsContainSameText) {\n                    const model = this._editor.getModel();\n                    const resultingSelections = [];\n                    for (let i = 0, len = allSelections.length; i < len; i++) {\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\n                    }\n                    this._editor.setSelections(resultingSelections);\n                    return;\n                }\n            }\n        }\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\n        }\n    }\n    addSelectionToPreviousFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\n        }\n    }\n    moveSelectionToNextFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\n        }\n    }\n    moveSelectionToPreviousFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\n        }\n    }\n    selectAll(findController) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        let matches = null;\n        const findState = findController.getState();\n        // Special case: find widget owns entirely what we search for if:\n        // - focus is not in the editor (i.e. it is in the find widget)\n        // - and the search widget is visible\n        // - and the search string is non-empty\n        // - and we're searching for a regex\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\n            const editorModel = this._editor.getModel();\n            if (findState.searchScope) {\n                matches = editorModel.findMatches(findState.searchString, findState.searchScope, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            }\n            else {\n                matches = editorModel.findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(128 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            }\n        }\n        else {\n            this._beginSessionIfNeeded(findController);\n            if (!this._session) {\n                return;\n            }\n            matches = this._session.selectAll(findState.searchScope);\n        }\n        if (matches.length > 0) {\n            const editorSelection = this._editor.getSelection();\n            // Have the primary cursor remain the one where the action was invoked\n            for (let i = 0, len = matches.length; i < len; i++) {\n                const match = matches[i];\n                const intersection = match.range.intersectRanges(editorSelection);\n                if (intersection) {\n                    // bingo!\n                    matches[i] = matches[0];\n                    matches[0] = match;\n                    break;\n                }\n            }\n            this._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\n        }\n    }\n    selectAllUsingSelections(selections) {\n        if (selections.length > 0) {\n            this._setSelections(selections);\n        }\n    }\n}\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\nexport class MultiCursorSelectionControllerAction extends EditorAction {\n    run(accessor, editor) {\n        const multiCursorController = MultiCursorSelectionController.get(editor);\n        if (!multiCursorController) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel) {\n            const previousCursorState = viewModel.getCursorStates();\n            const findController = CommonFindController.get(editor);\n            if (findController) {\n                this._run(multiCursorController, findController);\n            }\n            else {\n                const newFindController = accessor.get(IInstantiationService).createInstance(CommonFindController, editor);\n                this._run(multiCursorController, newFindController);\n                newFindController.dispose();\n            }\n            announceCursorChange(previousCursorState, viewModel.getCursorStates());\n        }\n    }\n}\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.addSelectionToNextFindMatch',\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\n            alias: 'Add Selection To Next Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\n                order: 5\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.addSelectionToNextFindMatch(findController);\n    }\n}\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.addSelectionToPreviousFindMatch',\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\n            alias: 'Add Selection To Previous Find Match',\n            precondition: undefined,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\n                order: 6\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\n    }\n}\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.moveSelectionToNextFindMatch',\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\n            alias: 'Move Last Selection To Next Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.moveSelectionToNextFindMatch(findController);\n    }\n}\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\n            alias: 'Move Last Selection To Previous Find Match',\n            precondition: undefined\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\n    }\n}\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectHighlights',\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\n            alias: 'Select All Occurrences of Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 42 /* KeyCode.KeyL */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\n                order: 7\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.selectAll(findController);\n    }\n}\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.changeAll',\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\n            alias: 'Change All Occurrences',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.2\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.selectAll(findController);\n    }\n}\nclass SelectionHighlighterState {\n    constructor(_model, _searchText, _matchCase, _wordSeparators, prevState) {\n        this._model = _model;\n        this._searchText = _searchText;\n        this._matchCase = _matchCase;\n        this._wordSeparators = _wordSeparators;\n        this._modelVersionId = this._model.getVersionId();\n        this._cachedFindMatches = null;\n        if (prevState\n            && this._model === prevState._model\n            && this._searchText === prevState._searchText\n            && this._matchCase === prevState._matchCase\n            && this._wordSeparators === prevState._wordSeparators\n            && this._modelVersionId === prevState._modelVersionId) {\n            this._cachedFindMatches = prevState._cachedFindMatches;\n        }\n    }\n    findMatches() {\n        if (this._cachedFindMatches === null) {\n            this._cachedFindMatches = this._model.findMatches(this._searchText, true, false, this._matchCase, this._wordSeparators, false).map(m => m.range);\n            this._cachedFindMatches.sort(Range.compareRangesUsingStarts);\n        }\n        return this._cachedFindMatches;\n    }\n}\nlet SelectionHighlighter = class SelectionHighlighter extends Disposable {\n    constructor(editor, _languageFeaturesService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n        this.editor = editor;\n        this._isEnabled = editor.getOption(106 /* EditorOption.selectionHighlight */);\n        this._decorations = editor.createDecorationsCollection();\n        this.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\n        this.state = null;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            this._isEnabled = editor.getOption(106 /* EditorOption.selectionHighlight */);\n        }));\n        this._register(editor.onDidChangeCursorSelection((e) => {\n            if (!this._isEnabled) {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            if (e.selection.isEmpty()) {\n                if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                    if (this.state) {\n                        // no longer valid\n                        this._setState(null);\n                    }\n                    this.updateSoon.schedule();\n                }\n                else {\n                    this._setState(null);\n                }\n            }\n            else {\n                this._update();\n            }\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this._setState(null);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (this._isEnabled) {\n                this.updateSoon.schedule();\n            }\n        }));\n        const findController = CommonFindController.get(editor);\n        if (findController) {\n            this._register(findController.getState().onFindReplaceStateChange((e) => {\n                this._update();\n            }));\n        }\n        this.updateSoon.schedule();\n    }\n    _update() {\n        this._setState(SelectionHighlighter._createState(this.state, this._isEnabled, this.editor));\n    }\n    static _createState(oldState, isEnabled, editor) {\n        if (!isEnabled) {\n            return null;\n        }\n        if (!editor.hasModel()) {\n            return null;\n        }\n        const s = editor.getSelection();\n        if (s.startLineNumber !== s.endLineNumber) {\n            // multiline forbidden for perf reasons\n            return null;\n        }\n        const multiCursorController = MultiCursorSelectionController.get(editor);\n        if (!multiCursorController) {\n            return null;\n        }\n        const findController = CommonFindController.get(editor);\n        if (!findController) {\n            return null;\n        }\n        let r = multiCursorController.getSession(findController);\n        if (!r) {\n            const allSelections = editor.getSelections();\n            if (allSelections.length > 1) {\n                const findState = findController.getState();\n                const matchCase = findState.matchCase;\n                const selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\n                if (!selectionsContainSameText) {\n                    return null;\n                }\n            }\n            r = MultiCursorSession.create(editor, findController);\n        }\n        if (!r) {\n            return null;\n        }\n        if (r.currentMatch) {\n            // This is an empty selection\n            // Do not interfere with semantic word highlighting in the no selection case\n            return null;\n        }\n        if (/^[ \\t]+$/.test(r.searchText)) {\n            // whitespace only selection\n            return null;\n        }\n        if (r.searchText.length > 200) {\n            // very long selection\n            return null;\n        }\n        // TODO: better handling of this case\n        const findState = findController.getState();\n        const caseSensitive = findState.matchCase;\n        // Return early if the find widget shows the exact same matches\n        if (findState.isRevealed) {\n            let findStateSearchString = findState.searchString;\n            if (!caseSensitive) {\n                findStateSearchString = findStateSearchString.toLowerCase();\n            }\n            let mySearchString = r.searchText;\n            if (!caseSensitive) {\n                mySearchString = mySearchString.toLowerCase();\n            }\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\n                return null;\n            }\n        }\n        return new SelectionHighlighterState(editor.getModel(), r.searchText, r.matchCase, r.wholeWord ? editor.getOption(128 /* EditorOption.wordSeparators */) : null, oldState);\n    }\n    _setState(newState) {\n        this.state = newState;\n        if (!this.state) {\n            this._decorations.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (model.isTooLargeForTokenization()) {\n            // the file is too large, so searching word under cursor in the whole document would be blocking the UI.\n            return;\n        }\n        const allMatches = this.state.findMatches();\n        const selections = this.editor.getSelections();\n        selections.sort(Range.compareRangesUsingStarts);\n        // do not overlap with selection (issue #64 and #512)\n        const matches = [];\n        for (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\n            const match = allMatches[i];\n            if (j >= lenJ) {\n                // finished all editor selections\n                matches.push(match);\n                i++;\n            }\n            else {\n                const cmp = Range.compareRangesUsingStarts(match, selections[j]);\n                if (cmp < 0) {\n                    // match is before sel\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\n                        matches.push(match);\n                    }\n                    i++;\n                }\n                else if (cmp > 0) {\n                    // sel is before match\n                    j++;\n                }\n                else {\n                    // sel is equal to match\n                    i++;\n                    j++;\n                }\n            }\n        }\n        const hasSemanticHighlights = this._languageFeaturesService.documentHighlightProvider.has(model) && this.editor.getOption(79 /* EditorOption.occurrencesHighlight */);\n        const decorations = matches.map(r => {\n            return {\n                range: r,\n                options: getSelectionHighlightDecorationOptions(hasSemanticHighlights)\n            };\n        });\n        this._decorations.set(decorations);\n    }\n    dispose() {\n        this._setState(null);\n        super.dispose();\n    }\n};\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\nSelectionHighlighter = __decorate([\n    __param(1, ILanguageFeaturesService)\n], SelectionHighlighter);\nexport { SelectionHighlighter };\nfunction modelRangesContainSameText(model, ranges, matchCase) {\n    const selectedText = getValueInRange(model, ranges[0], !matchCase);\n    for (let i = 1, len = ranges.length; i < len; i++) {\n        const range = ranges[i];\n        if (range.isEmpty()) {\n            return false;\n        }\n        const thisSelectedText = getValueInRange(model, range, !matchCase);\n        if (selectedText !== thisSelectedText) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getValueInRange(model, range, toLowerCase) {\n    const text = model.getValueInRange(range);\n    return (toLowerCase ? text.toLowerCase() : text);\n}\nexport class FocusNextCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.focusNextCursor',\n            label: nls.localize('mutlicursor.focusNextCursor', \"Focus Next Cursor\"),\n            description: {\n                description: nls.localize('mutlicursor.focusNextCursor.description', \"Focuses the next cursor\"),\n                args: [],\n            },\n            alias: 'Focus Next Cursor',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = Array.from(viewModel.getCursorStates());\n        const firstCursor = previousCursorState.shift();\n        if (!firstCursor) {\n            return;\n        }\n        previousCursorState.push(firstCursor);\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n        viewModel.revealPrimaryCursor(args.source, true);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class FocusPreviousCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.focusPreviousCursor',\n            label: nls.localize('mutlicursor.focusPreviousCursor', \"Focus Previous Cursor\"),\n            description: {\n                description: nls.localize('mutlicursor.focusPreviousCursor.description', \"Focuses the previous cursor\"),\n                args: [],\n            },\n            alias: 'Focus Previous Cursor',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = Array.from(viewModel.getCursorStates());\n        const firstCursor = previousCursorState.pop();\n        if (!firstCursor) {\n            return;\n        }\n        previousCursorState.unshift(firstCursor);\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n        viewModel.revealPrimaryCursor(args.source, true);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\nregisterEditorAction(FocusNextCursor);\nregisterEditorAction(FocusPreviousCursor);\n","class NotebookEditor {}\nexport { NotebookEditor };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { Toggle } from 'monaco-editor/esm/vs/base/browser/ui/toggle/toggle.js';\nimport { Widget } from 'monaco-editor/esm/vs/base/browser/ui/widget.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ContextScopedHistoryInputBox } from 'monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from 'monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { defaultToggleStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nlet PatternInputWidget = class PatternInputWidget extends Widget {\n    static { this.OPTION_CHANGE = 'optionChange'; }\n    constructor(parent, contextViewProvider, options, contextKeyService, configurationService, keybindingService) {\n        super();\n        this.contextViewProvider = contextViewProvider;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.keybindingService = keybindingService;\n        this._onSubmit = this._register(( new Emitter()));\n        this.onSubmit = this._onSubmit.event;\n        this._onCancel = this._register(( new Emitter()));\n        this.onCancel = this._onCancel.event;\n        options = {\n            ...{\n                ariaLabel: ( nls.localize('defaultLabel', \"input\"))\n            },\n            ...options,\n        };\n        this.width = options.width ?? 100;\n        this.render(options);\n        parent.appendChild(this.domNode);\n    }\n    dispose() {\n        super.dispose();\n        this.inputFocusTracker?.dispose();\n    }\n    setWidth(newWidth) {\n        this.width = newWidth;\n        this.contextViewProvider.layout();\n        this.setInputWidth();\n    }\n    getValue() {\n        return this.inputBox.value;\n    }\n    setValue(value) {\n        if (this.inputBox.value !== value) {\n            this.inputBox.value = value;\n        }\n    }\n    select() {\n        this.inputBox.select();\n    }\n    focus() {\n        this.inputBox.focus();\n    }\n    inputHasFocus() {\n        return this.inputBox.hasFocus();\n    }\n    setInputWidth() {\n        this.inputBox.width = this.width - this.getSubcontrolsWidth() - 2;\n    }\n    getSubcontrolsWidth() {\n        return 0;\n    }\n    getHistory() {\n        return this.inputBox.getHistory();\n    }\n    clearHistory() {\n        this.inputBox.clearHistory();\n    }\n    prependHistory(history) {\n        this.inputBox.prependHistory(history);\n    }\n    clear() {\n        this.setValue('');\n    }\n    onSearchSubmit() {\n        this.inputBox.addToHistory();\n    }\n    showNextTerm() {\n        this.inputBox.showNextValue();\n    }\n    showPreviousTerm() {\n        this.inputBox.showPreviousValue();\n    }\n    render(options) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('monaco-findInput');\n        this.inputBox = ( new ContextScopedHistoryInputBox(this.domNode, this.contextViewProvider, {\n            placeholder: options.placeholder,\n            showPlaceholderOnFocus: options.showPlaceholderOnFocus,\n            tooltip: options.tooltip,\n            ariaLabel: options.ariaLabel,\n            validationOptions: {\n                validation: undefined\n            },\n            history: options.history || [],\n            showHistoryHint: () => showHistoryKeybindingHint(this.keybindingService),\n            inputBoxStyles: options.inputBoxStyles\n        }, this.contextKeyService));\n        this._register(this.inputBox.onDidChange(() => this._onSubmit.fire(true)));\n        this.inputFocusTracker = dom.trackFocus(this.inputBox.inputElement);\n        this.onkeyup(this.inputBox.inputElement, (keyboardEvent) => this.onInputKeyUp(keyboardEvent));\n        const controls = document.createElement('div');\n        controls.className = 'controls';\n        this.renderSubcontrols(controls);\n        this.domNode.appendChild(controls);\n        this.setInputWidth();\n    }\n    renderSubcontrols(_controlsDiv) {\n    }\n    onInputKeyUp(keyboardEvent) {\n        switch (keyboardEvent.keyCode) {\n            case 3 :\n                this.onSearchSubmit();\n                this._onSubmit.fire(false);\n                return;\n            case 9 :\n                this._onCancel.fire();\n                return;\n        }\n    }\n};\nPatternInputWidget = ( __decorate([\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IKeybindingService))\n], PatternInputWidget));\nlet IncludePatternInputWidget = class IncludePatternInputWidget extends PatternInputWidget {\n    constructor(parent, contextViewProvider, options, contextKeyService, configurationService, keybindingService) {\n        super(parent, contextViewProvider, options, contextKeyService, configurationService, keybindingService);\n        this._onChangeSearchInEditorsBoxEmitter = this._register(( new Emitter()));\n        this.onChangeSearchInEditorsBox = this._onChangeSearchInEditorsBoxEmitter.event;\n    }\n    dispose() {\n        super.dispose();\n        this.useSearchInEditorsBox.dispose();\n    }\n    onlySearchInOpenEditors() {\n        return this.useSearchInEditorsBox.checked;\n    }\n    setOnlySearchInOpenEditors(value) {\n        this.useSearchInEditorsBox.checked = value;\n        this._onChangeSearchInEditorsBoxEmitter.fire();\n    }\n    getSubcontrolsWidth() {\n        return super.getSubcontrolsWidth() + this.useSearchInEditorsBox.width();\n    }\n    renderSubcontrols(controlsDiv) {\n        this.useSearchInEditorsBox = this._register(( new Toggle({\n            icon: Codicon.book,\n            title: ( nls.localize('onlySearchInOpenEditors', \"Search only in Open Editors\")),\n            isChecked: false,\n            ...defaultToggleStyles\n        })));\n        this._register(this.useSearchInEditorsBox.onChange(viaKeyboard => {\n            this._onChangeSearchInEditorsBoxEmitter.fire();\n            if (!viaKeyboard) {\n                this.inputBox.focus();\n            }\n        }));\n        controlsDiv.appendChild(this.useSearchInEditorsBox.domNode);\n        super.renderSubcontrols(controlsDiv);\n    }\n};\nIncludePatternInputWidget = ( __decorate([\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IKeybindingService))\n], IncludePatternInputWidget));\nlet ExcludePatternInputWidget = class ExcludePatternInputWidget extends PatternInputWidget {\n    constructor(parent, contextViewProvider, options, contextKeyService, configurationService, keybindingService) {\n        super(parent, contextViewProvider, options, contextKeyService, configurationService, keybindingService);\n        this._onChangeIgnoreBoxEmitter = this._register(( new Emitter()));\n        this.onChangeIgnoreBox = this._onChangeIgnoreBoxEmitter.event;\n    }\n    dispose() {\n        super.dispose();\n        this.useExcludesAndIgnoreFilesBox.dispose();\n    }\n    useExcludesAndIgnoreFiles() {\n        return this.useExcludesAndIgnoreFilesBox.checked;\n    }\n    setUseExcludesAndIgnoreFiles(value) {\n        this.useExcludesAndIgnoreFilesBox.checked = value;\n        this._onChangeIgnoreBoxEmitter.fire();\n    }\n    getSubcontrolsWidth() {\n        return super.getSubcontrolsWidth() + this.useExcludesAndIgnoreFilesBox.width();\n    }\n    renderSubcontrols(controlsDiv) {\n        this.useExcludesAndIgnoreFilesBox = this._register(( new Toggle({\n            icon: Codicon.exclude,\n            actionClassName: 'useExcludesAndIgnoreFiles',\n            title: ( nls.localize(\n                'useExcludesAndIgnoreFilesDescription',\n                \"Use Exclude Settings and Ignore Files\"\n            )),\n            isChecked: true,\n            ...defaultToggleStyles\n        })));\n        this._register(this.useExcludesAndIgnoreFilesBox.onChange(viaKeyboard => {\n            this._onChangeIgnoreBoxEmitter.fire();\n            if (!viaKeyboard) {\n                this.inputBox.focus();\n            }\n        }));\n        controlsDiv.appendChild(this.useExcludesAndIgnoreFilesBox.domNode);\n        super.renderSubcontrols(controlsDiv);\n    }\n};\nExcludePatternInputWidget = ( __decorate([\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IConfigurationService)),\n    ( __param(5, IKeybindingService))\n], ExcludePatternInputWidget));\nexport { ExcludePatternInputWidget, IncludePatternInputWidget, PatternInputWidget };\n","import * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { searchComparer, FileMatch, Match, FolderMatch } from './searchModel.js';\nimport { VIEW_ID } from '../../../services/search/common/search.js';\nconst category = { value: ( nls.localize('search', \"Search\")), original: 'Search' };\nfunction isSearchViewFocused(viewsService) {\n    const searchView = getSearchView(viewsService);\n    const activeElement = document.activeElement;\n    return !!(searchView && activeElement && dom.isAncestor(activeElement, searchView.getContainer()));\n}\nfunction appendKeyBindingLabel(label, inputKeyBinding) {\n    return doAppendKeyBindingLabel(label, inputKeyBinding);\n}\nfunction getSearchView(viewsService) {\n    return viewsService.getActiveViewWithId(VIEW_ID);\n}\nfunction getElementsToOperateOn(viewer, currElement, sortConfig) {\n    let elements = viewer.getSelection().filter((x) => x !== null).sort((a, b) => searchComparer(a, b, sortConfig.sortOrder));\n    if (currElement && !(elements.length > 1 && elements.includes(currElement))) {\n        elements = [currElement];\n    }\n    return elements;\n}\nfunction shouldRefocus(elements, focusElement) {\n    if (!focusElement) {\n        return false;\n    }\n    return !focusElement || elements.includes(focusElement) || hasDownstreamMatch(elements, focusElement);\n}\nfunction hasDownstreamMatch(elements, focusElement) {\n    for (const elem of elements) {\n        if ((elem instanceof FileMatch && focusElement instanceof Match && elem.matches().includes(focusElement)) ||\n            (elem instanceof FolderMatch && ((focusElement instanceof FileMatch && elem.getDownstreamFileMatch(focusElement.resource)) ||\n                (focusElement instanceof Match && elem.getDownstreamFileMatch(focusElement.parent().resource))))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction openSearchView(viewsService, focus) {\n    return viewsService.openView(VIEW_ID, focus).then(view => (view ?? undefined));\n}\nfunction doAppendKeyBindingLabel(label, keyBinding) {\n    return keyBinding ? label + ' (' + keyBinding.getLabel() + ')' : label;\n}\nexport { appendKeyBindingLabel, category, getElementsToOperateOn, getSearchView, isSearchViewFocused, openSearchView, shouldRefocus };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { parseLinkedText } from 'monaco-editor/esm/vs/base/common/linkedText.js';\nimport Severity from 'monaco-editor/esm/vs/base/common/severity.js';\nimport { SeverityIcon } from 'monaco-editor/esm/vs/platform/severityIcon/browser/severityIcon.js';\nimport { TextSearchCompleteMessageType } from '../../../services/search/common/searchExtTypes.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { Link } from 'monaco-editor/esm/vs/platform/opener/browser/link.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nconst renderSearchMessage = (message, instantiationService, notificationService, openerService, commandService, disposableStore, triggerSearch) => {\n    const div = dom.$('div.providerMessage');\n    const linkedText = parseLinkedText(message.text);\n    dom.append(div, dom.$('.' +\n        SeverityIcon.className(message.type === TextSearchCompleteMessageType.Information\n            ? Severity.Info\n            : Severity.Warning)\n            .split(' ')\n            .join('.')));\n    for (const node of linkedText.nodes) {\n        if (typeof node === 'string') {\n            dom.append(div, document.createTextNode(node));\n        }\n        else {\n            const link = instantiationService.createInstance(Link, div, node, {\n                opener: async (href) => {\n                    if (!message.trusted) {\n                        return;\n                    }\n                    const parsed = ( URI.parse(href, true));\n                    if (parsed.scheme === Schemas.command && message.trusted) {\n                        const result = await commandService.executeCommand(parsed.path);\n                        if (result?.triggerSearch) {\n                            triggerSearch();\n                        }\n                    }\n                    else if (parsed.scheme === Schemas.https) {\n                        openerService.open(parsed);\n                    }\n                    else {\n                        if (parsed.scheme === Schemas.command && !message.trusted) {\n                            notificationService.error(( nls.localize(\n                                'unable to open trust',\n                                \"Unable to open command link from untrusted source: {0}\",\n                                href\n                            )));\n                        }\n                        else {\n                            notificationService.error(( nls.localize('unable to open', \"Unable to open unknown link: {0}\", href)));\n                        }\n                    }\n                }\n            });\n            disposableStore.add(link);\n        }\n    }\n    return div;\n};\nexport { renderSearchMessage };\n","import { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nconst FindInFilesActionId = 'workbench.action.findInFiles';\nconst FocusSearchFromResults = 'search.action.focusSearchFromResults';\nconst OpenMatch = 'search.action.openResult';\nconst OpenMatchToSide = 'search.action.openResultToSide';\nconst RemoveActionId = 'search.action.remove';\nconst CopyPathCommandId = 'search.action.copyPath';\nconst CopyMatchCommandId = 'search.action.copyMatch';\nconst CopyAllCommandId = 'search.action.copyAll';\nconst OpenInEditorCommandId = 'search.action.openInEditor';\nconst ClearSearchHistoryCommandId = 'search.action.clearHistory';\nconst FocusSearchListCommandID = 'search.action.focusSearchList';\nconst ReplaceActionId = 'search.action.replace';\nconst ReplaceAllInFileActionId = 'search.action.replaceAllInFile';\nconst ReplaceAllInFolderActionId = 'search.action.replaceAllInFolder';\nconst CloseReplaceWidgetActionId = 'closeReplaceInFilesWidget';\nconst ToggleCaseSensitiveCommandId = 'toggleSearchCaseSensitive';\nconst ToggleWholeWordCommandId = 'toggleSearchWholeWord';\nconst ToggleRegexCommandId = 'toggleSearchRegex';\nconst TogglePreserveCaseId = 'toggleSearchPreserveCase';\nconst AddCursorsAtSearchResults = 'addCursorsAtSearchResults';\nconst RevealInSideBarForSearchResults = 'search.action.revealInSideBar';\nconst ReplaceInFilesActionId = 'workbench.action.replaceInFiles';\nconst ShowAllSymbolsActionId = 'workbench.action.showAllSymbols';\nconst CancelSearchActionId = 'search.action.cancel';\nconst RefreshSearchResultsActionId = 'search.action.refreshSearchResults';\nconst FocusNextSearchResultActionId = 'search.action.focusNextSearchResult';\nconst FocusPreviousSearchResultActionId = 'search.action.focusPreviousSearchResult';\nconst ToggleSearchOnTypeActionId = 'workbench.action.toggleSearchOnType';\nconst CollapseSearchResultsActionId = 'search.action.collapseSearchResults';\nconst ExpandSearchResultsActionId = 'search.action.expandSearchResults';\nconst ClearSearchResultsActionId = 'search.action.clearSearchResults';\nconst ViewAsTreeActionId = 'search.action.viewAsTree';\nconst ViewAsListActionId = 'search.action.viewAsList';\nconst ToggleQueryDetailsActionId = 'workbench.action.search.toggleQueryDetails';\nconst ExcludeFolderFromSearchId = 'search.action.excludeFromSearch';\nconst FocusNextInputActionId = 'search.focus.nextInputBox';\nconst FocusPreviousInputActionId = 'search.focus.previousInputBox';\nconst RestrictSearchToFolderId = 'search.action.restrictSearchToFolder';\nconst FindInFolderId = 'filesExplorer.findInFolder';\nconst FindInWorkspaceId = 'filesExplorer.findInWorkspace';\nconst SearchViewVisibleKey = ( new RawContextKey('searchViewletVisible', true));\nconst SearchViewFocusedKey = ( new RawContextKey('searchViewletFocus', false));\nconst InputBoxFocusedKey = ( new RawContextKey('inputBoxFocus', false));\nconst SearchInputBoxFocusedKey = ( new RawContextKey('searchInputBoxFocus', false));\nconst ReplaceInputBoxFocusedKey = ( new RawContextKey('replaceInputBoxFocus', false));\nconst PatternIncludesFocusedKey = ( new RawContextKey('patternIncludesInputBoxFocus', false));\nconst PatternExcludesFocusedKey = ( new RawContextKey('patternExcludesInputBoxFocus', false));\nconst ReplaceActiveKey = ( new RawContextKey('replaceActive', false));\nconst HasSearchResults = ( new RawContextKey('hasSearchResult', false));\nconst FirstMatchFocusKey = ( new RawContextKey('firstMatchFocus', false));\nconst FileMatchOrMatchFocusKey = ( new RawContextKey('fileMatchOrMatchFocus', false));\nconst FileMatchOrFolderMatchFocusKey = ( new RawContextKey('fileMatchOrFolderMatchFocus', false));\nconst FileMatchOrFolderMatchWithResourceFocusKey = ( new RawContextKey('fileMatchOrFolderMatchWithResourceFocus', false));\nconst FileFocusKey = ( new RawContextKey('fileMatchFocus', false));\nconst FolderFocusKey = ( new RawContextKey('folderMatchFocus', false));\nconst ResourceFolderFocusKey = ( new RawContextKey('folderMatchWithResourceFocus', false));\nconst IsEditableItemKey = ( new RawContextKey('isEditableItem', true));\nconst MatchFocusKey = ( new RawContextKey('matchFocus', false));\nconst ViewHasSearchPatternKey = ( new RawContextKey('viewHasSearchPattern', false));\nconst ViewHasReplacePatternKey = ( new RawContextKey('viewHasReplacePattern', false));\nconst ViewHasFilePatternKey = ( new RawContextKey('viewHasFilePattern', false));\nconst ViewHasSomeCollapsibleKey = ( new RawContextKey('viewHasSomeCollapsibleResult', false));\nconst InTreeViewKey = ( new RawContextKey('inTreeView', false));\nexport { AddCursorsAtSearchResults, CancelSearchActionId, ClearSearchHistoryCommandId, ClearSearchResultsActionId, CloseReplaceWidgetActionId, CollapseSearchResultsActionId, CopyAllCommandId, CopyMatchCommandId, CopyPathCommandId, ExcludeFolderFromSearchId, ExpandSearchResultsActionId, FileFocusKey, FileMatchOrFolderMatchFocusKey, FileMatchOrFolderMatchWithResourceFocusKey, FileMatchOrMatchFocusKey, FindInFilesActionId, FindInFolderId, FindInWorkspaceId, FirstMatchFocusKey, FocusNextInputActionId, FocusNextSearchResultActionId, FocusPreviousInputActionId, FocusPreviousSearchResultActionId, FocusSearchFromResults, FocusSearchListCommandID, FolderFocusKey, HasSearchResults, InTreeViewKey, InputBoxFocusedKey, IsEditableItemKey, MatchFocusKey, OpenInEditorCommandId, OpenMatch, OpenMatchToSide, PatternExcludesFocusedKey, PatternIncludesFocusedKey, RefreshSearchResultsActionId, RemoveActionId, ReplaceActionId, ReplaceActiveKey, ReplaceAllInFileActionId, ReplaceAllInFolderActionId, ReplaceInFilesActionId, ReplaceInputBoxFocusedKey, ResourceFolderFocusKey, RestrictSearchToFolderId, RevealInSideBarForSearchResults, SearchInputBoxFocusedKey, SearchViewFocusedKey, SearchViewVisibleKey, ShowAllSymbolsActionId, ToggleCaseSensitiveCommandId, TogglePreserveCaseId, ToggleQueryDetailsActionId, ToggleRegexCommandId, ToggleSearchOnTypeActionId, ToggleWholeWordCommandId, ViewAsListActionId, ViewAsTreeActionId, ViewHasFilePatternKey, ViewHasReplacePatternKey, ViewHasSearchPatternKey, ViewHasSomeCollapsibleKey };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { CountBadge } from 'monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js';\nimport { Disposable, DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as path from 'monaco-editor/esm/vs/base/common/path.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { FileKind } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { FolderMatch, FileMatch, Match, FolderMatchNoRoot, MatchInNotebook, FolderMatchWorkspaceRoot } from './searchModel.js';\nimport { isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { MenuWorkbenchToolBar } from 'monaco-editor/esm/vs/platform/actions/browser/toolbar.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { MatchFocusKey, FileFocusKey, FolderFocusKey, IsEditableItemKey } from '../common/constants.js';\nimport { defaultCountBadgeStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nclass SearchDelegate {\n    static { this.ITEM_HEIGHT = 22; }\n    getHeight(element) {\n        return SearchDelegate.ITEM_HEIGHT;\n    }\n    getTemplateId(element) {\n        if (element instanceof FolderMatch) {\n            return FolderMatchRenderer.TEMPLATE_ID;\n        }\n        else if (element instanceof FileMatch) {\n            return FileMatchRenderer.TEMPLATE_ID;\n        }\n        else if (element instanceof Match) {\n            return MatchRenderer.TEMPLATE_ID;\n        }\n        console.error('Invalid search tree element', element);\n        throw new Error('Invalid search tree element');\n    }\n}\nlet FolderMatchRenderer = class FolderMatchRenderer extends Disposable {\n    static { this.TEMPLATE_ID = 'folderMatch'; }\n    constructor(searchView, labels, contextService, labelService, instantiationService, contextKeyService) {\n        super();\n        this.searchView = searchView;\n        this.labels = labels;\n        this.contextService = contextService;\n        this.labelService = labelService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.templateId = FolderMatchRenderer.TEMPLATE_ID;\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        const compressed = node.element;\n        const folder = compressed.elements[compressed.elements.length - 1];\n        const label = ( compressed.elements.map(e => e.name()));\n        if (folder.resource) {\n            const fileKind = (folder instanceof FolderMatchWorkspaceRoot) ? FileKind.ROOT_FOLDER : FileKind.FOLDER;\n            templateData.label.setResource({ resource: folder.resource, name: label }, {\n                fileKind,\n                separator: this.labelService.getSeparator(folder.resource.scheme),\n            });\n        }\n        else {\n            templateData.label.setLabel(( nls.localize('searchFolderMatch.other.label', \"Other files\")));\n        }\n        this.renderFolderDetails(folder, templateData);\n    }\n    renderTemplate(container) {\n        const disposables = ( new DisposableStore());\n        const folderMatchElement = dom.append(container, dom.$('.foldermatch'));\n        const label = this.labels.create(folderMatchElement, { supportDescriptionHighlights: true, supportHighlights: true });\n        disposables.add(label);\n        const badge = ( new CountBadge(\n            dom.append(folderMatchElement, dom.$('.badge')),\n            {},\n            defaultCountBadgeStyles\n        ));\n        const actionBarContainer = dom.append(folderMatchElement, dom.$('.actionBarContainer'));\n        const elementDisposables = ( new DisposableStore());\n        disposables.add(elementDisposables);\n        const contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n        MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n        FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n        FolderFocusKey.bindTo(contextKeyServiceMain).set(true);\n        const instantiationService = this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n        const actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n            menuOptions: {\n                shouldForwardArgs: true\n            },\n            hiddenItemStrategy: 0 ,\n            toolbarOptions: {\n                primaryGroup: (g) => /^inline/.test(g),\n            },\n        }));\n        return {\n            label,\n            badge,\n            actions,\n            disposables,\n            elementDisposables,\n            contextKeyService: contextKeyServiceMain\n        };\n    }\n    renderElement(node, index, templateData) {\n        const folderMatch = node.element;\n        if (folderMatch.resource) {\n            const workspaceFolder = this.contextService.getWorkspaceFolder(folderMatch.resource);\n            if (workspaceFolder && isEqual(workspaceFolder.uri, folderMatch.resource)) {\n                templateData.label.setFile(folderMatch.resource, { fileKind: FileKind.ROOT_FOLDER, hidePath: true });\n            }\n            else {\n                templateData.label.setFile(folderMatch.resource, { fileKind: FileKind.FOLDER, hidePath: this.searchView.isTreeLayoutViewVisible });\n            }\n        }\n        else {\n            templateData.label.setLabel(( nls.localize('searchFolderMatch.other.label', \"Other files\")));\n        }\n        IsEditableItemKey.bindTo(templateData.contextKeyService).set(!folderMatch.hasOnlyReadOnlyMatches());\n        templateData.elementDisposables.add(folderMatch.onChange(() => {\n            IsEditableItemKey.bindTo(templateData.contextKeyService).set(!folderMatch.hasOnlyReadOnlyMatches());\n        }));\n        this.renderFolderDetails(folderMatch, templateData);\n    }\n    disposeElement(element, index, templateData) {\n        templateData.elementDisposables.clear();\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        templateData.elementDisposables.clear();\n    }\n    disposeTemplate(templateData) {\n        templateData.disposables.dispose();\n    }\n    renderFolderDetails(folder, templateData) {\n        const count = folder.recursiveMatchCount();\n        templateData.badge.setCount(count);\n        templateData.badge.setTitleFormat(count > 1 ? ( nls.localize('searchFileMatches', \"{0} files found\", count)) : ( nls.localize('searchFileMatch', \"{0} file found\", count)));\n        templateData.actions.context = { viewer: this.searchView.getControl(), element: folder };\n    }\n};\nFolderMatchRenderer = ( __decorate([\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, ILabelService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IContextKeyService))\n], FolderMatchRenderer));\nlet FileMatchRenderer = class FileMatchRenderer extends Disposable {\n    static { this.TEMPLATE_ID = 'fileMatch'; }\n    constructor(searchView, labels, contextService, configurationService, instantiationService, contextKeyService) {\n        super();\n        this.searchView = searchView;\n        this.labels = labels;\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.templateId = FileMatchRenderer.TEMPLATE_ID;\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Should never happen since node is incompressible.');\n    }\n    renderTemplate(container) {\n        const disposables = ( new DisposableStore());\n        const elementDisposables = ( new DisposableStore());\n        disposables.add(elementDisposables);\n        const fileMatchElement = dom.append(container, dom.$('.filematch'));\n        const label = this.labels.create(fileMatchElement);\n        disposables.add(label);\n        const badge = ( new CountBadge(dom.append(fileMatchElement, dom.$('.badge')), {}, defaultCountBadgeStyles));\n        const actionBarContainer = dom.append(fileMatchElement, dom.$('.actionBarContainer'));\n        const contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n        MatchFocusKey.bindTo(contextKeyServiceMain).set(false);\n        FileFocusKey.bindTo(contextKeyServiceMain).set(true);\n        FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n        const instantiationService = this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n        const actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n            menuOptions: {\n                shouldForwardArgs: true\n            },\n            hiddenItemStrategy: 0 ,\n            toolbarOptions: {\n                primaryGroup: (g) => /^inline/.test(g),\n            },\n        }));\n        return {\n            el: fileMatchElement,\n            label,\n            badge,\n            actions,\n            disposables,\n            elementDisposables,\n            contextKeyService: contextKeyServiceMain\n        };\n    }\n    renderElement(node, index, templateData) {\n        const fileMatch = node.element;\n        templateData.el.setAttribute('data-resource', ( fileMatch.resource.toString()));\n        const decorationConfig = this.configurationService.getValue('search').decorations;\n        templateData.label.setFile(fileMatch.resource, { hidePath: this.searchView.isTreeLayoutViewVisible && !(fileMatch.parent() instanceof FolderMatchNoRoot), hideIcon: false, fileDecorations: { colors: decorationConfig.colors, badges: decorationConfig.badges } });\n        const count = fileMatch.count();\n        templateData.badge.setCount(count);\n        templateData.badge.setTitleFormat(count > 1 ? ( nls.localize('searchMatches', \"{0} matches found\", count)) : ( nls.localize('searchMatch', \"{0} match found\", count)));\n        templateData.actions.context = { viewer: this.searchView.getControl(), element: fileMatch };\n        IsEditableItemKey.bindTo(templateData.contextKeyService).set(!fileMatch.hasOnlyReadOnlyMatches());\n        templateData.elementDisposables.add(fileMatch.onChange(() => {\n            IsEditableItemKey.bindTo(templateData.contextKeyService).set(!fileMatch.hasOnlyReadOnlyMatches());\n        }));\n        const twistieContainer = templateData.el.parentElement?.parentElement?.querySelector('.monaco-tl-twistie');\n        twistieContainer?.classList.add('force-twistie');\n    }\n    disposeElement(element, index, templateData) {\n        templateData.elementDisposables.clear();\n    }\n    disposeTemplate(templateData) {\n        templateData.disposables.dispose();\n    }\n};\nFileMatchRenderer = ( __decorate([\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IContextKeyService))\n], FileMatchRenderer));\nlet MatchRenderer = class MatchRenderer extends Disposable {\n    static { this.TEMPLATE_ID = 'match'; }\n    constructor(searchModel, searchView, contextService, configurationService, instantiationService, contextKeyService) {\n        super();\n        this.searchModel = searchModel;\n        this.searchView = searchView;\n        this.contextService = contextService;\n        this.configurationService = configurationService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.templateId = MatchRenderer.TEMPLATE_ID;\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        throw new Error('Should never happen since node is incompressible.');\n    }\n    renderTemplate(container) {\n        container.classList.add('linematch');\n        const parent = dom.append(container, dom.$('a.plain.match'));\n        const before = dom.append(parent, dom.$('span'));\n        const match = dom.append(parent, dom.$('span.findInFileMatch'));\n        const replace = dom.append(parent, dom.$('span.replaceMatch'));\n        const after = dom.append(parent, dom.$('span'));\n        const lineNumber = dom.append(container, dom.$('span.matchLineNum'));\n        const actionBarContainer = dom.append(container, dom.$('span.actionBarContainer'));\n        const disposables = ( new DisposableStore());\n        const contextKeyServiceMain = disposables.add(this.contextKeyService.createScoped(container));\n        MatchFocusKey.bindTo(contextKeyServiceMain).set(true);\n        FileFocusKey.bindTo(contextKeyServiceMain).set(false);\n        FolderFocusKey.bindTo(contextKeyServiceMain).set(false);\n        const instantiationService = this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, contextKeyServiceMain])));\n        const actions = disposables.add(instantiationService.createInstance(MenuWorkbenchToolBar, actionBarContainer, MenuId.SearchActionMenu, {\n            menuOptions: {\n                shouldForwardArgs: true\n            },\n            hiddenItemStrategy: 0 ,\n            toolbarOptions: {\n                primaryGroup: (g) => /^inline/.test(g),\n            },\n        }));\n        return {\n            parent,\n            before,\n            match,\n            replace,\n            after,\n            lineNumber,\n            actions,\n            disposables,\n            contextKeyService: contextKeyServiceMain\n        };\n    }\n    renderElement(node, index, templateData) {\n        const match = node.element;\n        const preview = match.preview();\n        const replace = this.searchModel.isReplaceActive() && !!this.searchModel.replaceString && !(match instanceof MatchInNotebook && match.isWebviewMatch());\n        templateData.before.textContent = preview.before;\n        templateData.match.textContent = preview.inside;\n        templateData.match.classList.toggle('replace', replace);\n        templateData.replace.textContent = replace ? match.replaceString : '';\n        templateData.after.textContent = preview.after;\n        templateData.parent.title = (preview.before + (replace ? match.replaceString : preview.inside) + preview.after).trim().substr(0, 999);\n        IsEditableItemKey.bindTo(templateData.contextKeyService).set(!(match instanceof MatchInNotebook && match.isWebviewMatch()));\n        const numLines = match.range().endLineNumber - match.range().startLineNumber;\n        const extraLinesStr = numLines > 0 ? `+${numLines}` : '';\n        const showLineNumbers = this.configurationService.getValue('search').showLineNumbers;\n        const lineNumberStr = showLineNumbers ? `:${match.range().startLineNumber}` : '';\n        templateData.lineNumber.classList.toggle('show', (numLines > 0) || showLineNumbers);\n        templateData.lineNumber.textContent = lineNumberStr + extraLinesStr;\n        templateData.lineNumber.setAttribute('title', this.getMatchTitle(match, showLineNumbers));\n        templateData.actions.context = { viewer: this.searchView.getControl(), element: match };\n    }\n    disposeTemplate(templateData) {\n        templateData.disposables.dispose();\n    }\n    getMatchTitle(match, showLineNumbers) {\n        const startLine = match.range().startLineNumber;\n        const numLines = match.range().endLineNumber - match.range().startLineNumber;\n        const lineNumStr = showLineNumbers ?\n            ( nls.localize('lineNumStr', \"From line {0}\", startLine, numLines)) + ' ' :\n            '';\n        const numLinesStr = numLines > 0 ?\n            '+ ' + ( nls.localize('numLinesStr', \"{0} more lines\", numLines)) :\n            '';\n        return lineNumStr + numLinesStr;\n    }\n};\nMatchRenderer = ( __decorate([\n    ( __param(2, IWorkspaceContextService)),\n    ( __param(3, IConfigurationService)),\n    ( __param(4, IInstantiationService)),\n    ( __param(5, IContextKeyService))\n], MatchRenderer));\nlet SearchAccessibilityProvider = class SearchAccessibilityProvider {\n    constructor(searchModel, labelService) {\n        this.searchModel = searchModel;\n        this.labelService = labelService;\n    }\n    getWidgetAriaLabel() {\n        return ( nls.localize('search', \"Search\"));\n    }\n    getAriaLabel(element) {\n        if (element instanceof FolderMatch) {\n            const count = element.allDownstreamFileMatches().reduce((total, current) => total + current.count(), 0);\n            return element.resource ?\n                ( nls.localize(\n                    'folderMatchAriaLabel',\n                    \"{0} matches in folder root {1}, Search result\",\n                    count,\n                    element.name()\n                )) :\n                ( nls.localize(\n                    'otherFilesAriaLabel',\n                    \"{0} matches outside of the workspace, Search result\",\n                    count\n                ));\n        }\n        if (element instanceof FileMatch) {\n            const path$1 = this.labelService.getUriLabel(element.resource, { relative: true }) || element.resource.fsPath;\n            return ( nls.localize(\n                'fileMatchAriaLabel',\n                \"{0} matches in file {1} of folder {2}, Search result\",\n                element.count(),\n                element.name(),\n                path.dirname(path$1)\n            ));\n        }\n        if (element instanceof Match) {\n            const match = element;\n            const searchModel = this.searchModel;\n            const replace = searchModel.isReplaceActive() && !!searchModel.replaceString;\n            const matchString = match.getMatchString();\n            const range = match.range();\n            const matchText = match.text().substr(0, range.endColumn + 150);\n            if (replace) {\n                return ( nls.localize(\n                    'replacePreviewResultAria',\n                    \"'{0}' at column {1} replace {2} with {3}\",\n                    matchText,\n                    range.startColumn,\n                    matchString,\n                    match.replaceString\n                ));\n            }\n            return ( nls.localize(\n                'searchResultAria',\n                \"'{0}' at column {1} found {2}\",\n                matchText,\n                range.startColumn,\n                matchString\n            ));\n        }\n        return null;\n    }\n};\nSearchAccessibilityProvider = ( __decorate([\n    ( __param(1, ILabelService))\n], SearchAccessibilityProvider));\nexport { FileMatchRenderer, FolderMatchRenderer, MatchRenderer, SearchAccessibilityProvider, SearchDelegate };\n","import { RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nconst InSearchEditor = ( new RawContextKey('inSearchEditor', false));\nconst SearchEditorScheme = 'search-editor';\nconst SearchEditorWorkingCopyTypeId = 'search/editor';\nconst SearchEditorFindMatchClass = 'searchEditorFindMatch';\nconst SearchEditorID = 'workbench.editor.searchEditor';\nconst OpenNewEditorCommandId = 'search.action.openNewEditor';\nconst OpenEditorCommandId = 'search.action.openEditor';\nconst ToggleSearchEditorContextLinesCommandId = 'toggleSearchEditorContextLines';\nconst SearchEditorInputTypeId = 'workbench.editorinputs.searchEditorInput';\nexport { InSearchEditor, OpenEditorCommandId, OpenNewEditorCommandId, SearchEditorFindMatchClass, SearchEditorID, SearchEditorInputTypeId, SearchEditorScheme, SearchEditorWorkingCopyTypeId, ToggleSearchEditorContextLinesCommandId };\n","import { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nclass NotebookFindFilters extends Disposable {\n    get markupInput() {\n        return this._markupInput;\n    }\n    set markupInput(value) {\n        if (this._markupInput !== value) {\n            this._markupInput = value;\n            this._onDidChange.fire({ markupInput: value });\n        }\n    }\n    get markupPreview() {\n        return this._markupPreview;\n    }\n    set markupPreview(value) {\n        if (this._markupPreview !== value) {\n            this._markupPreview = value;\n            this._onDidChange.fire({ markupPreview: value });\n        }\n    }\n    get codeInput() {\n        return this._codeInput;\n    }\n    set codeInput(value) {\n        if (this._codeInput !== value) {\n            this._codeInput = value;\n            this._onDidChange.fire({ codeInput: value });\n        }\n    }\n    get codeOutput() {\n        return this._codeOutput;\n    }\n    set codeOutput(value) {\n        if (this._codeOutput !== value) {\n            this._codeOutput = value;\n            this._onDidChange.fire({ codeOutput: value });\n        }\n    }\n    constructor(markupInput, markupPreview, codeInput, codeOutput) {\n        super();\n        this._onDidChange = this._register(( new Emitter()));\n        this.onDidChange = this._onDidChange.event;\n        this._markupInput = true;\n        this._markupPreview = true;\n        this._codeInput = true;\n        this._codeOutput = true;\n        this._markupInput = markupInput;\n        this._markupPreview = markupPreview;\n        this._codeInput = codeInput;\n        this._codeOutput = codeOutput;\n        this._initialMarkupInput = markupInput;\n        this._initialMarkupPreview = markupPreview;\n        this._initialCodeInput = codeInput;\n        this._initialCodeOutput = codeOutput;\n    }\n    isModified() {\n        return (this._markupInput !== this._initialMarkupInput\n            || this._markupPreview !== this._initialMarkupPreview\n            || this._codeInput !== this._initialCodeInput\n            || this._codeOutput !== this._initialCodeOutput);\n    }\n    update(v) {\n        this._markupInput = v.markupInput;\n        this._markupPreview = v.markupPreview;\n        this._codeInput = v.codeInput;\n        this._codeOutput = v.codeOutput;\n    }\n}\nexport { NotebookFindFilters };\n","import n from '../../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".monaco-workbench .simple-fr-find-part-wrapper{background-color:var(--vscode-editorWidget-background)!important;border-bottom-left-radius:4px;border-bottom-right-radius:4px;box-shadow:0 0 8px 2px var(--vscode-widget-shadow);color:var(--vscode-editorWidget-foreground);max-width:calc(100% - 64px);overflow:hidden;padding:0 var(--notebook-find-horizontal-padding);position:absolute;right:18px;top:-45px;transition:top .2s linear;visibility:hidden;width:var(--notebook-find-width);z-index:10}.monaco-workbench.reduce-motion .simple-fr-find-part-wrapper{transition:top 0ms linear}.monaco-workbench .notebookOverlay .simple-fr-find-part-wrapper.visible{z-index:100}.monaco-workbench .simple-fr-find-part,.monaco-workbench .simple-fr-replace-part{align-items:center;display:flex;margin:0 0 0 17px;padding:4px;pointer-events:all;position:relative;top:0;z-index:10}.monaco-workbench .simple-fr-find-part-wrapper .find-replace-progress{height:2px;position:absolute;width:100%}.monaco-workbench .simple-fr-find-part-wrapper .find-replace-progress .monaco-progress-container{height:2px;top:0!important;z-index:100!important}.monaco-workbench .simple-fr-find-part-wrapper .find-replace-progress .monaco-progress-container .progress-bit{height:2px}.monaco-workbench .simple-fr-find-part-wrapper .monaco-findInput{width:224px}.monaco-workbench .simple-fr-find-part-wrapper .button{align-items:center;background-position:50%;background-repeat:no-repeat;cursor:pointer;display:flex;flex:initial;height:20px;justify-content:center;margin-left:3px;width:20px}.monaco-workbench .simple-fr-find-part-wrapper.visible .simple-fr-find-part{visibility:visible}.monaco-workbench .simple-fr-find-part-wrapper .toggle{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:center;margin-left:0;pointer-events:all;position:absolute;top:0;width:18px}.monaco-workbench .simple-fr-find-part-wrapper.visible{visibility:visible}.monaco-workbench .simple-fr-find-part-wrapper.visible-transition{top:0}.monaco-workbench .simple-fr-find-part .monaco-findInput{flex:1}.monaco-workbench .simple-fr-find-part .button{background-position:50%;background-repeat:no-repeat;cursor:pointer;display:flex;flex:initial;height:20px;margin-left:3px;min-width:20px;width:20px}.monaco-workbench .simple-fr-find-part-wrapper .button.disabled{cursor:default;opacity:.3}.monaco-workbench .simple-fr-find-part-wrapper .monaco-custom-toggle.disabled{background-color:inherit!important;cursor:default;opacity:.3;pointer-events:none;user-select:none;-webkit-user-select:none}.monaco-workbench .simple-fr-find-part-wrapper .find-filter-button{box-sizing:border-box;color:inherit;cursor:pointer;float:left;margin-left:2px;user-select:none;-webkit-user-select:none}.find-filter-button .monaco-action-bar .action-label{padding:0}.monaco-workbench .simple-fr-find-part .monaco-inputbox>.ibwrapper>.input,.monaco-workbench .simple-fr-replace-part .monaco-inputbox>.ibwrapper>.input{height:24px}.monaco-workbench .simple-fr-find-part-wrapper .monaco-sash{background-color:var(--vscode-editorWidget-resizeBorder,var(--vscode-editorWidget-border));left:0!important}\";\nn(css,{});\nexport { css, css as default };\n","import { __decorate, __param } from '../../../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport './notebookFindReplaceWidget.css.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { Action, ActionRunner, Separator } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { DropdownMenuActionViewItem } from 'monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { filterIcon } from '../../../../extensions/browser/extensionsIcons.js';\nimport { isSafari } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nregisterIcon('find-filter', Codicon.filter, ( nls.localize('findFilterIcon', 'Icon for Find Filter in find widget.')));\nconst NOTEBOOK_FIND_FILTERS = ( nls.localize('notebook.find.filter.filterAction', \"Find Filters\"));\nconst NOTEBOOK_FIND_IN_MARKUP_INPUT = ( nls.localize('notebook.find.filter.findInMarkupInput', \"Markdown Source\"));\nconst NOTEBOOK_FIND_IN_MARKUP_PREVIEW = ( nls.localize('notebook.find.filter.findInMarkupPreview', \"Rendered Markdown\"));\nconst NOTEBOOK_FIND_IN_CODE_INPUT = ( nls.localize('notebook.find.filter.findInCodeInput', \"Code Cell Source\"));\nconst NOTEBOOK_FIND_IN_CODE_OUTPUT = ( nls.localize('notebook.find.filter.findInCodeOutput', \"Code Cell Output\"));\nconst NOTEBOOK_FIND_WIDGET_INITIAL_WIDTH = 318;\nconst NOTEBOOK_FIND_WIDGET_INITIAL_HORIZONTAL_PADDING = 4;\nlet NotebookFindFilterActionViewItem = class NotebookFindFilterActionViewItem extends DropdownMenuActionViewItem {\n    constructor(filters, action, actionRunner, contextMenuService) {\n        super(action, { getActions: () => this.getActions() }, contextMenuService, {\n            actionRunner,\n            classNames: action.class,\n            anchorAlignmentProvider: () => 1\n        });\n        this.filters = filters;\n    }\n    render(container) {\n        super.render(container);\n        this.updateChecked();\n    }\n    getActions() {\n        const markdownInput = {\n            checked: this.filters.markupInput,\n            class: undefined,\n            enabled: true,\n            id: 'findInMarkdownInput',\n            label: NOTEBOOK_FIND_IN_MARKUP_INPUT,\n            run: async () => {\n                this.filters.markupInput = !this.filters.markupInput;\n            },\n            tooltip: ''\n        };\n        const markdownPreview = {\n            checked: this.filters.markupPreview,\n            class: undefined,\n            enabled: true,\n            id: 'findInMarkdownInput',\n            label: NOTEBOOK_FIND_IN_MARKUP_PREVIEW,\n            run: async () => {\n                this.filters.markupPreview = !this.filters.markupPreview;\n            },\n            tooltip: ''\n        };\n        const codeInput = {\n            checked: this.filters.codeInput,\n            class: undefined,\n            enabled: true,\n            id: 'findInCodeInput',\n            label: NOTEBOOK_FIND_IN_CODE_INPUT,\n            run: async () => {\n                this.filters.codeInput = !this.filters.codeInput;\n            },\n            tooltip: ''\n        };\n        const codeOutput = {\n            checked: this.filters.codeOutput,\n            class: undefined,\n            enabled: true,\n            id: 'findInCodeOutput',\n            label: NOTEBOOK_FIND_IN_CODE_OUTPUT,\n            run: async () => {\n                this.filters.codeOutput = !this.filters.codeOutput;\n            },\n            tooltip: '',\n            dispose: () => null\n        };\n        if (isSafari) {\n            return [\n                markdownInput,\n                codeInput\n            ];\n        }\n        else {\n            return [\n                markdownInput,\n                markdownPreview,\n                ( new Separator()),\n                codeInput,\n                codeOutput,\n            ];\n        }\n    }\n    updateChecked() {\n        this.element.classList.toggle('checked', this._action.checked);\n    }\n};\nNotebookFindFilterActionViewItem = ( __decorate([\n    ( __param(3, IContextMenuService))\n], NotebookFindFilterActionViewItem));\nclass NotebookFindInputFilterButton extends Disposable {\n    constructor(filters, contextMenuService, instantiationService, options, tooltip = NOTEBOOK_FIND_FILTERS) {\n        super();\n        this.filters = filters;\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n        this._actionbar = null;\n        this._toggleStyles = options.toggleStyles;\n        this._filtersAction = ( new Action(\n            'notebookFindFilterAction',\n            tooltip,\n            'notebook-filters ' + ThemeIcon.asClassName(filterIcon)\n        ));\n        this._filtersAction.checked = false;\n        this._filterButtonContainer = dom.$('.find-filter-button');\n        this._filterButtonContainer.classList.add('monaco-custom-toggle');\n        this.createFilters(this._filterButtonContainer);\n    }\n    get container() {\n        return this._filterButtonContainer;\n    }\n    get width() {\n        return 2  + 2  + 2  + 16 ;\n    }\n    applyStyles(filterChecked) {\n        const toggleStyles = this._toggleStyles;\n        this._filterButtonContainer.style.border = '1px solid transparent';\n        this._filterButtonContainer.style.borderRadius = '3px';\n        this._filterButtonContainer.style.borderColor = (filterChecked && toggleStyles.inputActiveOptionBorder) || '';\n        this._filterButtonContainer.style.color = (filterChecked && toggleStyles.inputActiveOptionForeground) || 'inherit';\n        this._filterButtonContainer.style.backgroundColor = (filterChecked && toggleStyles.inputActiveOptionBackground) || '';\n    }\n    createFilters(container) {\n        this._actionbar = this._register(( new ActionBar(container, {\n            actionViewItemProvider: action => {\n                if (action.id === this._filtersAction.id) {\n                    return this.instantiationService.createInstance(NotebookFindFilterActionViewItem, this.filters, action, ( new ActionRunner()));\n                }\n                return undefined;\n            }\n        })));\n        this._actionbar.push(this._filtersAction, { icon: true, label: false });\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    collector.addRule(`\n\t.notebook-editor {\n\t\t--notebook-find-width: ${NOTEBOOK_FIND_WIDGET_INITIAL_WIDTH}px;\n\t\t--notebook-find-horizontal-padding: ${NOTEBOOK_FIND_WIDGET_INITIAL_HORIZONTAL_PADDING}px;\n\t}\n\t`);\n});\nexport { NotebookFindInputFilterButton };\n","import { ContextScopedFindInput } from 'monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js';\nimport { NotebookFindInputFilterButton } from '../../notebook/browser/contrib/find/notebookFindReplaceWidget.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nclass SearchFindInput extends ContextScopedFindInput {\n    constructor(container, contextViewProvider, options, contextKeyService, contextMenuService, instantiationService, filters, filterStartVisiblitity) {\n        super(container, contextViewProvider, options, contextKeyService);\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n        this.filters = filters;\n        this._filterChecked = false;\n        this._visible = false;\n        this._findFilter = this._register(( new NotebookFindInputFilterButton(filters, contextMenuService, instantiationService, options, ( nls.localize('searchFindInputNotebookFilter.label', \"Notebook Find Filters\")))));\n        this.inputBox.paddingRight = (this.caseSensitive?.width() ?? 0) + (this.wholeWords?.width() ?? 0) + (this.regex?.width() ?? 0) + this._findFilter.width;\n        this.controls.appendChild(this._findFilter.container);\n        this._findFilter.container.classList.add('monaco-custom-toggle');\n        this.filterVisible = filterStartVisiblitity;\n    }\n    set filterVisible(show) {\n        this._findFilter.container.style.display = show ? '' : 'none';\n        this._visible = show;\n        this.updateStyles();\n    }\n    setEnabled(enabled) {\n        super.setEnabled(enabled);\n        if (enabled && (!this._filterChecked || !this._visible)) {\n            this.regex?.enable();\n        }\n        else {\n            this.regex?.disable();\n        }\n    }\n    updateStyles() {\n        this._filterChecked =\n            !this.filters.markupInput ||\n                !this.filters.markupPreview ||\n                !this.filters.codeInput ||\n                !this.filters.codeOutput;\n        this._findFilter.applyStyles(this._filterChecked);\n    }\n}\nexport { SearchFindInput };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { ActionBar } from 'monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js';\nimport { Button } from 'monaco-editor/esm/vs/base/browser/ui/button/button.js';\nimport { InputBox } from 'monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js';\nimport { Widget } from 'monaco-editor/esm/vs/base/browser/ui/widget.js';\nimport { Action } from 'monaco-editor/esm/vs/base/common/actions.js';\nimport { Delayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { CONTEXT_FIND_WIDGET_NOT_VISIBLE } from 'monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextViewService, IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { KeybindingsRegistry } from 'monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { ContextScopedReplaceInput } from 'monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js';\nimport { appendKeyBindingLabel, isSearchViewFocused, getSearchView } from './searchActionsBase.js';\nimport { ReplaceActiveKey, SearchInputBoxFocusedKey, ReplaceInputBoxFocusedKey, ToggleCaseSensitiveCommandId, ToggleWholeWordCommandId, ToggleRegexCommandId, TogglePreserveCaseId, SearchViewVisibleKey } from '../common/constants.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { Toggle } from 'monaco-editor/esm/vs/base/browser/ui/toggle/toggle.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { searchReplaceAllIcon, searchHideReplaceIcon, searchShowContextIcon, searchShowReplaceIcon } from './searchIcons.js';\nimport { ToggleSearchEditorContextLinesCommandId } from '../../searchEditor/browser/constants.js';\nimport { showHistoryKeybindingHint } from 'monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js';\nimport { defaultToggleStyles, defaultInputBoxStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { NotebookFindFilters } from '../../notebook/browser/contrib/find/findFilters.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { NotebookEditorInput } from '../../../../../../override/vs/workbench/contrib/notebook/common/notebookEditorInput.js';\nimport { SearchFindInput } from './searchFindInput.js';\nconst SingleLineInputHeight = 26;\nclass ReplaceAllAction extends Action {\n    static { this.ID = 'search.action.replaceAll'; }\n    constructor(_searchWidget) {\n        super(ReplaceAllAction.ID, '', ThemeIcon.asClassName(searchReplaceAllIcon), false);\n        this._searchWidget = _searchWidget;\n    }\n    set searchWidget(searchWidget) {\n        this._searchWidget = searchWidget;\n    }\n    run() {\n        if (this._searchWidget) {\n            return this._searchWidget.triggerReplaceAll();\n        }\n        return Promise.resolve(null);\n    }\n}\nconst ctrlKeyMod = ((isMacintosh ? 256  : 2048) );\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && (isMultiline || textarea.clientHeight > SingleLineInputHeight) && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && (isMultiline || textarea.clientHeight > SingleLineInputHeight) && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nlet SearchWidget = class SearchWidget extends Widget {\n    static { this.INPUT_MAX_HEIGHT = 134; }\n    static { this.REPLACE_ALL_DISABLED_LABEL = ( nls.localize(\n        'search.action.replaceAll.disabled.label',\n        \"Replace All (Submit Search to Enable)\"\n    )); }\n    static { this.REPLACE_ALL_ENABLED_LABEL = (keyBindingService2) => {\n        const kb = keyBindingService2.lookupKeybinding(ReplaceAllAction.ID);\n        return appendKeyBindingLabel(( nls.localize('search.action.replaceAll.enabled.label', \"Replace All\")), kb);\n    }; }\n    constructor(container, options, contextViewService, contextKeyService, keybindingService, clipboardServce, configurationService, accessibilityService, contextMenuService, instantiationService, editorService) {\n        super();\n        this.contextViewService = contextViewService;\n        this.contextKeyService = contextKeyService;\n        this.keybindingService = keybindingService;\n        this.clipboardServce = clipboardServce;\n        this.configurationService = configurationService;\n        this.accessibilityService = accessibilityService;\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n        this.editorService = editorService;\n        this.ignoreGlobalFindBufferOnNextFocus = false;\n        this.previousGlobalFindBufferValue = null;\n        this._onSearchSubmit = this._register(( new Emitter()));\n        this.onSearchSubmit = this._onSearchSubmit.event;\n        this._onSearchCancel = this._register(( new Emitter()));\n        this.onSearchCancel = this._onSearchCancel.event;\n        this._onReplaceToggled = this._register(( new Emitter()));\n        this.onReplaceToggled = this._onReplaceToggled.event;\n        this._onReplaceStateChange = this._register(( new Emitter()));\n        this.onReplaceStateChange = this._onReplaceStateChange.event;\n        this._onPreserveCaseChange = this._register(( new Emitter()));\n        this.onPreserveCaseChange = this._onPreserveCaseChange.event;\n        this._onReplaceValueChanged = this._register(( new Emitter()));\n        this.onReplaceValueChanged = this._onReplaceValueChanged.event;\n        this._onReplaceAll = this._register(( new Emitter()));\n        this.onReplaceAll = this._onReplaceAll.event;\n        this._onBlur = this._register(( new Emitter()));\n        this.onBlur = this._onBlur.event;\n        this._onDidHeightChange = this._register(( new Emitter()));\n        this.onDidHeightChange = this._onDidHeightChange.event;\n        this._onDidToggleContext = ( new Emitter());\n        this.onDidToggleContext = this._onDidToggleContext.event;\n        this.replaceActive = ReplaceActiveKey.bindTo(this.contextKeyService);\n        this.searchInputBoxFocused = SearchInputBoxFocusedKey.bindTo(this.contextKeyService);\n        this.replaceInputBoxFocused = ReplaceInputBoxFocusedKey.bindTo(this.contextKeyService);\n        const notebookOptions = options.notebookOptions ??\n            {\n                isInNotebookMarkdownInput: true,\n                isInNotebookMarkdownPreview: true,\n                isInNotebookCellInput: true,\n                isInNotebookCellOutput: true\n            };\n        this._notebookFilters = this._register(( new NotebookFindFilters(\n            notebookOptions.isInNotebookMarkdownInput,\n            notebookOptions.isInNotebookMarkdownPreview,\n            notebookOptions.isInNotebookCellInput,\n            notebookOptions.isInNotebookCellOutput\n        )));\n        this._register(this._notebookFilters.onDidChange(() => {\n            if (this.searchInput instanceof SearchFindInput) {\n                this.searchInput.updateStyles();\n            }\n        }));\n        this._register(this.editorService.onDidEditorsChange((e) => {\n            if (this.searchInput instanceof SearchFindInput &&\n                e.event.editor instanceof NotebookEditorInput &&\n                ((e.event.kind === 3  || e.event.kind === 4) )) {\n                this.searchInput.filterVisible = this._hasNotebookOpen();\n            }\n        }));\n        this._replaceHistoryDelayer = ( new Delayer(500));\n        this.render(container, options);\n        this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                this.updateAccessibilitySupport();\n            }\n        });\n        this.accessibilityService.onDidChangeScreenReaderOptimized(() => this.updateAccessibilitySupport());\n        this.updateAccessibilitySupport();\n    }\n    _hasNotebookOpen() {\n        const editors = this.editorService.editors;\n        return ( editors.some(editor => editor instanceof NotebookEditorInput));\n    }\n    getNotebookFilters() {\n        return this._notebookFilters;\n    }\n    focus(select = true, focusReplace = false, suppressGlobalSearchBuffer = false) {\n        this.ignoreGlobalFindBufferOnNextFocus = suppressGlobalSearchBuffer;\n        if (focusReplace && this.isReplaceShown()) {\n            if (this.replaceInput) {\n                this.replaceInput.focus();\n                if (select) {\n                    this.replaceInput.select();\n                }\n            }\n        }\n        else {\n            if (this.searchInput) {\n                this.searchInput.focus();\n                if (select) {\n                    this.searchInput.select();\n                }\n            }\n        }\n    }\n    setWidth(width) {\n        this.searchInput?.inputBox.layout();\n        if (this.replaceInput) {\n            this.replaceInput.width = width - 28;\n            this.replaceInput.inputBox.layout();\n        }\n    }\n    clear() {\n        this.searchInput?.clear();\n        this.replaceInput?.setValue('');\n        this.setReplaceAllActionState(false);\n    }\n    isReplaceShown() {\n        return this.replaceContainer ? !this.replaceContainer.classList.contains('disabled') : false;\n    }\n    isReplaceActive() {\n        return !!this.replaceActive.get();\n    }\n    getReplaceValue() {\n        return this.replaceInput?.getValue() ?? '';\n    }\n    toggleReplace(show) {\n        if (show === undefined || show !== this.isReplaceShown()) {\n            this.onToggleReplaceButton();\n        }\n    }\n    getSearchHistory() {\n        return this.searchInput?.inputBox.getHistory() ?? [];\n    }\n    getReplaceHistory() {\n        return this.replaceInput?.inputBox.getHistory() ?? [];\n    }\n    prependSearchHistory(history) {\n        this.searchInput?.inputBox.prependHistory(history);\n    }\n    prependReplaceHistory(history) {\n        this.replaceInput?.inputBox.prependHistory(history);\n    }\n    clearHistory() {\n        this.searchInput?.inputBox.clearHistory();\n        this.replaceInput?.inputBox.clearHistory();\n    }\n    showNextSearchTerm() {\n        this.searchInput?.inputBox.showNextValue();\n    }\n    showPreviousSearchTerm() {\n        this.searchInput?.inputBox.showPreviousValue();\n    }\n    showNextReplaceTerm() {\n        this.replaceInput?.inputBox.showNextValue();\n    }\n    showPreviousReplaceTerm() {\n        this.replaceInput?.inputBox.showPreviousValue();\n    }\n    searchInputHasFocus() {\n        return !!this.searchInputBoxFocused.get();\n    }\n    replaceInputHasFocus() {\n        return !!this.replaceInput?.inputBox.hasFocus();\n    }\n    focusReplaceAllAction() {\n        this.replaceActionBar?.focus(true);\n    }\n    focusRegexAction() {\n        this.searchInput?.focusOnRegex();\n    }\n    render(container, options) {\n        this.domNode = dom.append(container, dom.$('.search-widget'));\n        this.domNode.style.position = 'relative';\n        if (!options._hideReplaceToggle) {\n            this.renderToggleReplaceButton(this.domNode);\n        }\n        this.renderSearchInput(this.domNode, options);\n        this.renderReplaceInput(this.domNode, options);\n    }\n    updateAccessibilitySupport() {\n        this.searchInput?.setFocusInputOnOptionClick(!this.accessibilityService.isScreenReaderOptimized());\n    }\n    renderToggleReplaceButton(parent) {\n        const opts = {\n            buttonBackground: undefined,\n            buttonBorder: undefined,\n            buttonForeground: undefined,\n            buttonHoverBackground: undefined,\n            buttonSecondaryBackground: undefined,\n            buttonSecondaryForeground: undefined,\n            buttonSecondaryHoverBackground: undefined,\n            buttonSeparator: undefined\n        };\n        this.toggleReplaceButton = this._register(( new Button(parent, opts)));\n        this.toggleReplaceButton.element.setAttribute('aria-expanded', 'false');\n        this.toggleReplaceButton.element.classList.add('toggle-replace-button');\n        this.toggleReplaceButton.icon = searchHideReplaceIcon;\n        this.toggleReplaceButton.onDidClick(() => this.onToggleReplaceButton());\n        this.toggleReplaceButton.element.title = ( nls.localize('search.replace.toggle.button.title', \"Toggle Replace\"));\n    }\n    renderSearchInput(parent, options) {\n        const inputOptions = {\n            label: ( nls.localize('label.Search', 'Search: Type Search Term and press Enter to search')),\n            validation: (value) => this.validateSearchInput(value),\n            placeholder: ( nls.localize('search.placeHolder', \"Search\")),\n            appendCaseSensitiveLabel: appendKeyBindingLabel('', this.keybindingService.lookupKeybinding(ToggleCaseSensitiveCommandId)),\n            appendWholeWordsLabel: appendKeyBindingLabel('', this.keybindingService.lookupKeybinding(ToggleWholeWordCommandId)),\n            appendRegexLabel: appendKeyBindingLabel('', this.keybindingService.lookupKeybinding(ToggleRegexCommandId)),\n            history: options.searchHistory,\n            showHistoryHint: () => showHistoryKeybindingHint(this.keybindingService),\n            flexibleHeight: true,\n            flexibleMaxHeight: SearchWidget.INPUT_MAX_HEIGHT,\n            showCommonFindToggles: true,\n            inputBoxStyles: options.inputBoxStyles,\n            toggleStyles: options.toggleStyles\n        };\n        const searchInputContainer = dom.append(parent, dom.$('.search-container.input-box'));\n        this.searchInput = this._register(( new SearchFindInput(\n            searchInputContainer,\n            this.contextViewService,\n            inputOptions,\n            this.contextKeyService,\n            this.contextMenuService,\n            this.instantiationService,\n            this._notebookFilters,\n            this._hasNotebookOpen()\n        )));\n        this.searchInput.onKeyDown((keyboardEvent) => this.onSearchInputKeyDown(keyboardEvent));\n        this.searchInput.setValue(options.value || '');\n        this.searchInput.setRegex(!!options.isRegex);\n        this.searchInput.setCaseSensitive(!!options.isCaseSensitive);\n        this.searchInput.setWholeWords(!!options.isWholeWords);\n        this._register(this.searchInput.onCaseSensitiveKeyDown((keyboardEvent) => this.onCaseSensitiveKeyDown(keyboardEvent)));\n        this._register(this.searchInput.onRegexKeyDown((keyboardEvent) => this.onRegexKeyDown(keyboardEvent)));\n        this._register(this.searchInput.inputBox.onDidChange(() => this.onSearchInputChanged()));\n        this._register(this.searchInput.inputBox.onDidHeightChange(() => this._onDidHeightChange.fire()));\n        this._register(this.onReplaceValueChanged(() => {\n            this._replaceHistoryDelayer.trigger(() => this.replaceInput?.inputBox.addToHistory());\n        }));\n        this.searchInputFocusTracker = this._register(dom.trackFocus(this.searchInput.inputBox.inputElement));\n        this._register(this.searchInputFocusTracker.onDidFocus(async () => {\n            this.searchInputBoxFocused.set(true);\n            const useGlobalFindBuffer = this.searchConfiguration.globalFindClipboard;\n            if (!this.ignoreGlobalFindBufferOnNextFocus && useGlobalFindBuffer) {\n                const globalBufferText = await this.clipboardServce.readFindText();\n                if (globalBufferText && this.previousGlobalFindBufferValue !== globalBufferText) {\n                    this.searchInput?.inputBox.addToHistory();\n                    this.searchInput?.setValue(globalBufferText);\n                    this.searchInput?.select();\n                }\n                this.previousGlobalFindBufferValue = globalBufferText;\n            }\n            this.ignoreGlobalFindBufferOnNextFocus = false;\n        }));\n        this._register(this.searchInputFocusTracker.onDidBlur(() => this.searchInputBoxFocused.set(false)));\n        this.showContextToggle = ( new Toggle({\n            isChecked: false,\n            title: appendKeyBindingLabel(( nls.localize('showContext', \"Toggle Context Lines\")), this.keybindingService.lookupKeybinding(ToggleSearchEditorContextLinesCommandId)),\n            icon: searchShowContextIcon,\n            ...defaultToggleStyles\n        }));\n        this._register(this.showContextToggle.onChange(() => this.onContextLinesChanged()));\n        if (options.showContextToggle) {\n            this.contextLinesInput = ( new InputBox(\n                searchInputContainer,\n                this.contextViewService,\n                { type: 'number', inputBoxStyles: defaultInputBoxStyles }\n            ));\n            this.contextLinesInput.element.classList.add('context-lines-input');\n            this.contextLinesInput.value = '' + (this.configurationService.getValue('search').searchEditor.defaultNumberOfContextLines ?? 1);\n            this._register(this.contextLinesInput.onDidChange((value) => {\n                if (value !== '0') {\n                    this.showContextToggle.checked = true;\n                }\n                this.onContextLinesChanged();\n            }));\n            dom.append(searchInputContainer, this.showContextToggle.domNode);\n        }\n    }\n    onContextLinesChanged() {\n        this._onDidToggleContext.fire();\n        if (this.contextLinesInput.value.includes('-')) {\n            this.contextLinesInput.value = '0';\n        }\n        this._onDidToggleContext.fire();\n    }\n    setContextLines(lines) {\n        if (!this.contextLinesInput) {\n            return;\n        }\n        if (lines === 0) {\n            this.showContextToggle.checked = false;\n        }\n        else {\n            this.showContextToggle.checked = true;\n            this.contextLinesInput.value = '' + lines;\n        }\n    }\n    renderReplaceInput(parent, options) {\n        this.replaceContainer = dom.append(parent, dom.$('.replace-container.disabled'));\n        const replaceBox = dom.append(this.replaceContainer, dom.$('.replace-input'));\n        this.replaceInput = this._register(( new ContextScopedReplaceInput(replaceBox, this.contextViewService, {\n            label: ( nls.localize('label.Replace', 'Replace: Type replace term and press Enter to preview')),\n            placeholder: ( nls.localize('search.replace.placeHolder', \"Replace\")),\n            appendPreserveCaseLabel: appendKeyBindingLabel('', this.keybindingService.lookupKeybinding(TogglePreserveCaseId)),\n            history: options.replaceHistory,\n            showHistoryHint: () => showHistoryKeybindingHint(this.keybindingService),\n            flexibleHeight: true,\n            flexibleMaxHeight: SearchWidget.INPUT_MAX_HEIGHT,\n            inputBoxStyles: options.inputBoxStyles,\n            toggleStyles: options.toggleStyles\n        }, this.contextKeyService, true)));\n        this._register(this.replaceInput.onDidOptionChange(viaKeyboard => {\n            if (!viaKeyboard) {\n                if (this.replaceInput) {\n                    this._onPreserveCaseChange.fire(this.replaceInput.getPreserveCase());\n                }\n            }\n        }));\n        this.replaceInput.onKeyDown((keyboardEvent) => this.onReplaceInputKeyDown(keyboardEvent));\n        this.replaceInput.setValue(options.replaceValue || '');\n        this._register(this.replaceInput.inputBox.onDidChange(() => this._onReplaceValueChanged.fire()));\n        this._register(this.replaceInput.inputBox.onDidHeightChange(() => this._onDidHeightChange.fire()));\n        this.replaceAllAction = ( new ReplaceAllAction(this));\n        this.replaceAllAction.label = SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n        this.replaceActionBar = this._register(( new ActionBar(this.replaceContainer)));\n        this.replaceActionBar.push([this.replaceAllAction], { icon: true, label: false });\n        this.onkeydown(this.replaceActionBar.domNode, (keyboardEvent) => this.onReplaceActionbarKeyDown(keyboardEvent));\n        this.replaceInputFocusTracker = this._register(dom.trackFocus(this.replaceInput.inputBox.inputElement));\n        this._register(this.replaceInputFocusTracker.onDidFocus(() => this.replaceInputBoxFocused.set(true)));\n        this._register(this.replaceInputFocusTracker.onDidBlur(() => this.replaceInputBoxFocused.set(false)));\n        this._register(this.replaceInput.onPreserveCaseKeyDown((keyboardEvent) => this.onPreserveCaseKeyDown(keyboardEvent)));\n    }\n    triggerReplaceAll() {\n        this._onReplaceAll.fire();\n        return Promise.resolve(null);\n    }\n    onToggleReplaceButton() {\n        this.replaceContainer?.classList.toggle('disabled');\n        if (this.isReplaceShown()) {\n            this.toggleReplaceButton?.element.classList.remove(...ThemeIcon.asClassNameArray(searchHideReplaceIcon));\n            this.toggleReplaceButton?.element.classList.add(...ThemeIcon.asClassNameArray(searchShowReplaceIcon));\n        }\n        else {\n            this.toggleReplaceButton?.element.classList.remove(...ThemeIcon.asClassNameArray(searchShowReplaceIcon));\n            this.toggleReplaceButton?.element.classList.add(...ThemeIcon.asClassNameArray(searchHideReplaceIcon));\n        }\n        this.toggleReplaceButton?.element.setAttribute('aria-expanded', this.isReplaceShown() ? 'true' : 'false');\n        this.updateReplaceActiveState();\n        this._onReplaceToggled.fire();\n    }\n    setValue(value) {\n        this.searchInput?.setValue(value);\n    }\n    setReplaceAllActionState(enabled) {\n        if (this.replaceAllAction && (this.replaceAllAction.enabled !== enabled)) {\n            this.replaceAllAction.enabled = enabled;\n            this.replaceAllAction.label = enabled ? SearchWidget.REPLACE_ALL_ENABLED_LABEL(this.keybindingService) : SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n            this.updateReplaceActiveState();\n        }\n    }\n    updateReplaceActiveState() {\n        const currentState = this.isReplaceActive();\n        const newState = this.isReplaceShown() && !!this.replaceAllAction?.enabled;\n        if (currentState !== newState) {\n            this.replaceActive.set(newState);\n            this._onReplaceStateChange.fire(newState);\n            this.replaceInput?.inputBox.layout();\n        }\n    }\n    validateSearchInput(value) {\n        if (value.length === 0) {\n            return null;\n        }\n        if (!(this.searchInput?.getRegex())) {\n            return null;\n        }\n        return null;\n    }\n    onSearchInputChanged() {\n        this.searchInput?.clearMessage();\n        this.setReplaceAllActionState(false);\n        if (this.searchConfiguration.searchOnType) {\n            if (this.searchInput?.getRegex()) {\n                try {\n                    const regex = ( new RegExp(this.searchInput.getValue(), 'ug'));\n                    const matchienessHeuristic = `\n\t\t\t\t\t\t\t\t~!@#$%^&*()_+\n\t\t\t\t\t\t\t\t\\`1234567890-=\n\t\t\t\t\t\t\t\tqwertyuiop[]\\\\\n\t\t\t\t\t\t\t\tQWERTYUIOP{}|\n\t\t\t\t\t\t\t\tasdfghjkl;'\n\t\t\t\t\t\t\t\tASDFGHJKL:\"\n\t\t\t\t\t\t\t\tzxcvbnm,./\n\t\t\t\t\t\t\t\tZXCVBNM<>? `.match(regex)?.length ?? 0;\n                    const delayMultiplier = matchienessHeuristic < 50 ? 1 :\n                        matchienessHeuristic < 100 ? 5 :\n                            10;\n                    this.submitSearch(true, this.searchConfiguration.searchOnTypeDebouncePeriod * delayMultiplier);\n                }\n                catch {\n                }\n            }\n            else {\n                this.submitSearch(true, this.searchConfiguration.searchOnTypeDebouncePeriod);\n            }\n        }\n    }\n    onSearchInputKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(ctrlKeyMod | 3 )) {\n            this.searchInput?.inputBox.insertAtCursor('\\n');\n            keyboardEvent.preventDefault();\n        }\n        if (keyboardEvent.equals(3 )) {\n            this.searchInput?.onSearchSubmit();\n            this.submitSearch();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(9 )) {\n            this._onSearchCancel.fire({ focus: true });\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(2 )) {\n            if (this.isReplaceShown()) {\n                this.replaceInput?.focus();\n            }\n            else {\n                this.searchInput?.focusOnCaseSensitive();\n            }\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(16 )) {\n            stopPropagationForMultiLineUpwards(keyboardEvent, this.searchInput?.getValue() ?? '', this.searchInput?.domNode.querySelector('textarea') ?? null);\n        }\n        else if (keyboardEvent.equals(18 )) {\n            stopPropagationForMultiLineDownwards(keyboardEvent, this.searchInput?.getValue() ?? '', this.searchInput?.domNode.querySelector('textarea') ?? null);\n        }\n    }\n    onCaseSensitiveKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(1024  | 2 )) {\n            if (this.isReplaceShown()) {\n                this.replaceInput?.focus();\n                keyboardEvent.preventDefault();\n            }\n        }\n    }\n    onRegexKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(2 )) {\n            if (this.isReplaceShown()) {\n                this.replaceInput?.focusOnPreserve();\n                keyboardEvent.preventDefault();\n            }\n        }\n    }\n    onPreserveCaseKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(2 )) {\n            if (this.isReplaceActive()) {\n                this.focusReplaceAllAction();\n            }\n            else {\n                this._onBlur.fire();\n            }\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(1024  | 2 )) {\n            this.focusRegexAction();\n            keyboardEvent.preventDefault();\n        }\n    }\n    onReplaceInputKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(ctrlKeyMod | 3 )) {\n            this.replaceInput?.inputBox.insertAtCursor('\\n');\n            keyboardEvent.preventDefault();\n        }\n        if (keyboardEvent.equals(3 )) {\n            this.submitSearch();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(2 )) {\n            this.searchInput?.focusOnCaseSensitive();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(1024  | 2 )) {\n            this.searchInput?.focus();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(16 )) {\n            stopPropagationForMultiLineUpwards(keyboardEvent, this.replaceInput?.getValue() ?? '', this.replaceInput?.domNode.querySelector('textarea') ?? null);\n        }\n        else if (keyboardEvent.equals(18 )) {\n            stopPropagationForMultiLineDownwards(keyboardEvent, this.replaceInput?.getValue() ?? '', this.replaceInput?.domNode.querySelector('textarea') ?? null);\n        }\n    }\n    onReplaceActionbarKeyDown(keyboardEvent) {\n        if (keyboardEvent.equals(1024  | 2 )) {\n            this.focusRegexAction();\n            keyboardEvent.preventDefault();\n        }\n    }\n    async submitSearch(triggeredOnType = false, delay = 0) {\n        this.searchInput?.validate();\n        if (!this.searchInput?.inputBox.isInputValid()) {\n            return;\n        }\n        const value = this.searchInput.getValue();\n        const useGlobalFindBuffer = this.searchConfiguration.globalFindClipboard;\n        if (value && useGlobalFindBuffer) {\n            await this.clipboardServce.writeFindText(value);\n        }\n        this._onSearchSubmit.fire({ triggeredOnType, delay });\n    }\n    getContextLines() {\n        return this.showContextToggle.checked ? +this.contextLinesInput.value : 0;\n    }\n    modifyContextLines(increase) {\n        const current = +this.contextLinesInput.value;\n        const modified = current + (increase ? 1 : -1);\n        this.showContextToggle.checked = modified !== 0;\n        this.contextLinesInput.value = '' + modified;\n    }\n    toggleContextLines() {\n        this.showContextToggle.checked = !this.showContextToggle.checked;\n        this.onContextLinesChanged();\n    }\n    dispose() {\n        this.setReplaceAllActionState(false);\n        super.dispose();\n    }\n    get searchConfiguration() {\n        return this.configurationService.getValue('search');\n    }\n};\nSearchWidget = ( __decorate([\n    ( __param(2, IContextViewService)),\n    ( __param(3, IContextKeyService)),\n    ( __param(4, IKeybindingService)),\n    ( __param(5, IClipboardService)),\n    ( __param(6, IConfigurationService)),\n    ( __param(7, IAccessibilityService)),\n    ( __param(8, IContextMenuService)),\n    ( __param(9, IInstantiationService)),\n    ( __param(10, IEditorService))\n], SearchWidget));\nfunction registerContributions() {\n    KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: ReplaceAllAction.ID,\n        weight: 200 ,\n        when: ( ContextKeyExpr.and(\n            SearchViewVisibleKey,\n            ReplaceActiveKey,\n            CONTEXT_FIND_WIDGET_NOT_VISIBLE\n        )),\n        primary: 512  | 2048  | 3 ,\n        handler: accessor => {\n            const viewsService = accessor.get(IViewsService);\n            if (isSearchViewFocused(viewsService)) {\n                const searchView = getSearchView(viewsService);\n                if (searchView) {\n                    ( new ReplaceAllAction(searchView.searchAndReplaceWidget)).run();\n                }\n            }\n        }\n    });\n}\nexport { SearchWidget, registerContributions };\n","import n from '../../../../../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js';\nvar css = \".search-editor{display:flex;flex-direction:column}.search-editor .search-results{flex:1}.search-editor .query-container{margin:0 12px 12px 19px;padding-top:6px}.search-editor .search-widget .toggle-replace-button{align-items:center;background-position:50%;background-repeat:no-repeat;box-sizing:border-box;cursor:pointer;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:16px}.search-editor .search-widget .replace-container,.search-editor .search-widget .search-container{align-items:center;display:flex}.search-editor .search-widget .monaco-findInput{display:inline-block;vertical-align:middle;width:100%}.search-editor .search-widget .monaco-inputbox>.ibwrapper{height:100%}.search-editor .search-widget .monaco-inputbox>.ibwrapper>.mirror,.search-editor .search-widget .monaco-inputbox>.ibwrapper>textarea.input{padding:3px 3px 3px 6px}.search-editor .search-widget .monaco-inputbox>.ibwrapper>.mirror{max-height:134px}.search-editor .search-widget .monaco-inputbox>.ibwrapper>textarea.input{height:26px;overflow:initial}.search-editor .monaco-inputbox>.ibwrapper>textarea.input{scrollbar-width:none}.search-editor .monaco-inputbox>.ibwrapper>textarea.input::-webkit-scrollbar{display:none}.search-editor .search-widget .context-lines-input{margin-left:5px;margin-right:2px;max-width:50px}.search-editor .search-widget .context-lines-input input[type=number]::-webkit-inner-spin-button{-webkit-appearance:none!important}.search-editor .search-widget .replace-container{display:inline-flex;margin-top:6px;position:relative}.search-editor .search-widget .replace-input{display:flex;height:25px;position:relative;vertical-align:middle;width:auto!important}.search-editor .search-widget .replace-input>.controls{position:absolute;right:2px;top:3px}.search-editor .search-widget .replace-container.disabled{display:none}.search-editor .search-widget .replace-container .monaco-action-bar{height:25px;margin-left:0}.search-editor .search-widget .replace-container .monaco-action-bar .action-item .codicon{align-items:center;background-repeat:no-repeat;display:flex;height:25px;justify-content:center;margin-right:0;width:25px}.search-editor .includes-excludes{min-height:1em;position:relative}.search-editor .includes-excludes .expand{cursor:pointer;height:16px;position:absolute;right:-2px;width:25px;z-index:2}.search-editor .includes-excludes .file-types{display:none}.search-editor .includes-excludes.expanded .file-types{display:inherit}.search-editor .includes-excludes.expanded .file-types:last-child{padding-bottom:10px}.search-editor .includes-excludes.expanded h4{font-size:11px;font-weight:400;margin:0;overflow:hidden;padding:4px 0 0;text-overflow:ellipsis;white-space:nowrap}.search-editor .messages{cursor:default;margin-top:-5px}.search-editor .message{padding-left:7px;padding-right:22px;padding-top:0}.search-editor a.prominent{text-decoration:underline}.monaco-editor .searchEditorFindMatch{background-color:var(--vscode-searchEditor-findMatchBackground);border:1px solid var(--vscode-searchEditor-findMatchBorder);box-sizing:border-box}.monaco-editor.hc-black .searchEditorFindMatch,.monaco-editor.hc-light .searchEditorFindMatch{border:1px dotted var(--vscode-searchEditor-findMatchBorder)}\";\nn(css,{});\nexport { css, css as default };\n","import { coalesce, flatten } from 'monaco-editor/esm/vs/base/common/arrays.js';\nimport './media/searchEditor.css.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { searchMatchComparer } from '../../search/browser/searchModel.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nconst lineDelimiter = '\\n';\nconst translateRangeLines = (n) => (range) => ( new Range(\n    range.startLineNumber + n,\n    range.startColumn,\n    range.endLineNumber + n,\n    range.endColumn\n));\nconst matchToSearchResultFormat = (match, longestLineNumber) => {\n    const getLinePrefix = (i) => `${match.range().startLineNumber + i}`;\n    const fullMatchLines = match.fullPreviewLines();\n    const results = [];\n    fullMatchLines\n        .forEach((sourceLine, i) => {\n        const lineNumber = getLinePrefix(i);\n        const paddingStr = ' '.repeat(longestLineNumber - lineNumber.length);\n        const prefix = `  ${paddingStr}${lineNumber}: `;\n        const prefixOffset = prefix.length;\n        const line = prefix + (sourceLine.split(/\\r?\\n?$/, 1)[0] || '');\n        const rangeOnThisLine = ({ start, end }) => ( new Range(\n            1,\n            (start ?? 1) + prefixOffset,\n            1,\n            (end ?? sourceLine.length + 1) + prefixOffset\n        ));\n        const matchRange = match.rangeInPreview();\n        const matchIsSingleLine = matchRange.startLineNumber === matchRange.endLineNumber;\n        let lineRange;\n        if (matchIsSingleLine) {\n            lineRange = (rangeOnThisLine({ start: matchRange.startColumn, end: matchRange.endColumn }));\n        }\n        else if (i === 0) {\n            lineRange = (rangeOnThisLine({ start: matchRange.startColumn }));\n        }\n        else if (i === fullMatchLines.length - 1) {\n            lineRange = (rangeOnThisLine({ end: matchRange.endColumn }));\n        }\n        else {\n            lineRange = (rangeOnThisLine({}));\n        }\n        results.push({ lineNumber: lineNumber, line, ranges: [lineRange] });\n    });\n    return results;\n};\nfunction fileMatchToSearchResultFormat(fileMatch, labelFormatter) {\n    const textSerializations = fileMatch.textMatches().length > 0 ? matchesToSearchResultFormat(fileMatch.resource, fileMatch.textMatches().sort(searchMatchComparer), fileMatch.context, labelFormatter) : undefined;\n    const cellSerializations = ( fileMatch.cellMatches().sort((a, b) => a.cellIndex - b.cellIndex).sort().filter(cellMatch => cellMatch.contentMatches.length > 0).map(\n        (cellMatch, index) => cellMatchToSearchResultFormat(cellMatch, labelFormatter, index === 0)\n    ));\n    return [textSerializations, ...cellSerializations].filter(x => !!x);\n}\nfunction matchesToSearchResultFormat(resource, sortedMatches, matchContext, labelFormatter, shouldUseHeader = true) {\n    const longestLineNumber = ( sortedMatches[sortedMatches.length - 1].range().endLineNumber.toString()).length;\n    const text = shouldUseHeader ? [`${labelFormatter(resource)}:`] : [];\n    const matchRanges = [];\n    const targetLineNumberToOffset = {};\n    const context = [];\n    matchContext.forEach((line, lineNumber) => context.push({ line, lineNumber }));\n    context.sort((a, b) => a.lineNumber - b.lineNumber);\n    let lastLine = undefined;\n    const seenLines = ( new Set());\n    sortedMatches.forEach(match => {\n        matchToSearchResultFormat(match, longestLineNumber).forEach(match => {\n            if (!( seenLines.has(match.lineNumber))) {\n                while (context.length && context[0].lineNumber < +match.lineNumber) {\n                    const { line, lineNumber } = context.shift();\n                    if (lastLine !== undefined && lineNumber !== lastLine + 1) {\n                        text.push('');\n                    }\n                    text.push(`  ${' '.repeat(longestLineNumber - `${lineNumber}`.length)}${lineNumber}  ${line}`);\n                    lastLine = lineNumber;\n                }\n                targetLineNumberToOffset[match.lineNumber] = text.length;\n                seenLines.add(match.lineNumber);\n                text.push(match.line);\n                lastLine = +match.lineNumber;\n            }\n            matchRanges.push(...( match.ranges.map(translateRangeLines(targetLineNumberToOffset[match.lineNumber]))));\n        });\n    });\n    while (context.length) {\n        const { line, lineNumber } = context.shift();\n        text.push(`  ${lineNumber}  ${line}`);\n    }\n    return { text, matchRanges };\n}\nfunction cellMatchToSearchResultFormat(cellMatch, labelFormatter, shouldUseHeader) {\n    return matchesToSearchResultFormat(cellMatch.cell.uri, cellMatch.contentMatches.sort(searchMatchComparer), cellMatch.context, labelFormatter, shouldUseHeader);\n}\nconst contentPatternToSearchConfiguration = (pattern, includes, excludes, contextLines) => {\n    return {\n        query: pattern.contentPattern.pattern,\n        isRegexp: !!pattern.contentPattern.isRegExp,\n        isCaseSensitive: !!pattern.contentPattern.isCaseSensitive,\n        matchWholeWord: !!pattern.contentPattern.isWordMatch,\n        filesToExclude: excludes, filesToInclude: includes,\n        showIncludesExcludes: !!(includes || excludes || pattern?.userDisabledExcludesAndIgnoreFiles),\n        useExcludeSettingsAndIgnoreFiles: (pattern?.userDisabledExcludesAndIgnoreFiles === undefined ? true : !pattern.userDisabledExcludesAndIgnoreFiles),\n        contextLines,\n        onlyOpenEditors: !!pattern.onlyOpenEditors,\n        notebookSearchConfig: {\n            includeMarkupInput: !!pattern.contentPattern.notebookInfo?.isInNotebookMarkdownInput,\n            includeMarkupPreview: !!pattern.contentPattern.notebookInfo?.isInNotebookMarkdownPreview,\n            includeCodeInput: !!pattern.contentPattern.notebookInfo?.isInNotebookCellInput,\n            includeOutput: !!pattern.contentPattern.notebookInfo?.isInNotebookCellOutput,\n        }\n    };\n};\nconst serializeSearchConfiguration = (config) => {\n    const removeNullFalseAndUndefined = (a) => a.filter(a => a !== false && a !== null && a !== undefined);\n    const escapeNewlines = (str) => str.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n');\n    return removeNullFalseAndUndefined([\n        `# Query: ${escapeNewlines(config.query ?? '')}`,\n        (config.isCaseSensitive || config.matchWholeWord || config.isRegexp || config.useExcludeSettingsAndIgnoreFiles === false)\n            && `# Flags: ${coalesce([\n                config.isCaseSensitive && 'CaseSensitive',\n                config.matchWholeWord && 'WordMatch',\n                config.isRegexp && 'RegExp',\n                config.onlyOpenEditors && 'OpenEditors',\n                (config.useExcludeSettingsAndIgnoreFiles === false) && 'IgnoreExcludeSettings'\n            ]).join(' ')}`,\n        config.filesToInclude ? `# Including: ${config.filesToInclude}` : undefined,\n        config.filesToExclude ? `# Excluding: ${config.filesToExclude}` : undefined,\n        config.contextLines ? `# ContextLines: ${config.contextLines}` : undefined,\n        ''\n    ]).join(lineDelimiter);\n};\nconst defaultSearchConfig = () => ({\n    query: '',\n    filesToInclude: '',\n    filesToExclude: '',\n    isRegexp: false,\n    isCaseSensitive: false,\n    useExcludeSettingsAndIgnoreFiles: true,\n    matchWholeWord: false,\n    contextLines: 0,\n    showIncludesExcludes: false,\n    onlyOpenEditors: false,\n    notebookSearchConfig: {\n        includeMarkupInput: true,\n        includeMarkupPreview: false,\n        includeCodeInput: true,\n        includeOutput: true,\n    }\n});\nconst extractSearchQueryFromLines = (lines) => {\n    const query = defaultSearchConfig();\n    const unescapeNewlines = (str) => {\n        let out = '';\n        for (let i = 0; i < str.length; i++) {\n            if (str[i] === '\\\\') {\n                i++;\n                const escaped = str[i];\n                if (escaped === 'n') {\n                    out += '\\n';\n                }\n                else if (escaped === '\\\\') {\n                    out += '\\\\';\n                }\n                else {\n                    throw Error(localize('invalidQueryStringError', \"All backslashes in Query string must be escaped (\\\\\\\\)\"));\n                }\n            }\n            else {\n                out += str[i];\n            }\n        }\n        return out;\n    };\n    const parseYML = /^# ([^:]*): (.*)$/;\n    for (const line of lines) {\n        const parsed = parseYML.exec(line);\n        if (!parsed) {\n            continue;\n        }\n        const [, key, value] = parsed;\n        switch (key) {\n            case 'Query':\n                query.query = unescapeNewlines(value);\n                break;\n            case 'Including':\n                query.filesToInclude = value;\n                break;\n            case 'Excluding':\n                query.filesToExclude = value;\n                break;\n            case 'ContextLines':\n                query.contextLines = +value;\n                break;\n            case 'Flags': {\n                query.isRegexp = value.indexOf('RegExp') !== -1;\n                query.isCaseSensitive = value.indexOf('CaseSensitive') !== -1;\n                query.useExcludeSettingsAndIgnoreFiles = value.indexOf('IgnoreExcludeSettings') === -1;\n                query.matchWholeWord = value.indexOf('WordMatch') !== -1;\n                query.onlyOpenEditors = value.indexOf('OpenEditors') !== -1;\n            }\n        }\n    }\n    query.showIncludesExcludes = !!(query.filesToInclude || query.filesToExclude || !query.useExcludeSettingsAndIgnoreFiles);\n    return query;\n};\nconst serializeSearchResultForEditor = (searchResult, rawIncludePattern, rawExcludePattern, contextLines, labelFormatter, sortOrder, limitHit) => {\n    if (!searchResult.query) {\n        throw Error('Internal Error: Expected query, got null');\n    }\n    const config = contentPatternToSearchConfiguration(searchResult.query, rawIncludePattern, rawExcludePattern, contextLines);\n    const filecount = searchResult.fileCount() > 1 ? ( localize('numFiles', \"{0} files\", searchResult.fileCount())) : ( localize('oneFile', \"1 file\"));\n    const resultcount = searchResult.count() > 1 ? ( localize('numResults', \"{0} results\", searchResult.count())) : ( localize('oneResult', \"1 result\"));\n    const info = [\n        searchResult.count()\n            ? `${resultcount} - ${filecount}`\n            : ( localize('noResults', \"No Results\")),\n    ];\n    if (limitHit) {\n        info.push(( localize(\n            'searchMaxResultsWarning',\n            \"The result set only contains a subset of all matches. Be more specific in your search to narrow down the results.\"\n        )));\n    }\n    info.push('');\n    const matchComparer = (a, b) => searchMatchComparer(a, b, sortOrder);\n    const allResults = flattenSearchResultSerializations(flatten(( searchResult.folderMatches().sort(matchComparer)\n        .map(folderMatch => folderMatch.allDownstreamFileMatches().sort(matchComparer)\n        .flatMap(fileMatch => fileMatchToSearchResultFormat(fileMatch, labelFormatter))))));\n    return {\n        matchRanges: ( allResults.matchRanges.map(translateRangeLines(info.length))),\n        text: info.concat(allResults.text).join(lineDelimiter),\n        config\n    };\n};\nconst flattenSearchResultSerializations = (serializations) => {\n    const text = [];\n    const matchRanges = [];\n    serializations.forEach(serialized => {\n        ( serialized.matchRanges.map(translateRangeLines(text.length))).forEach(range => matchRanges.push(range));\n        serialized.text.forEach(line => text.push(line));\n        text.push('');\n    });\n    return { text, matchRanges };\n};\nconst parseSavedSearchEditor = async (accessor, resource) => {\n    const textFileService = accessor.get(ITextFileService);\n    const text = (await textFileService.read(resource)).value;\n    return parseSerializedSearchEditor(text);\n};\nconst parseSerializedSearchEditor = (text) => {\n    const headerlines = [];\n    const bodylines = [];\n    let inHeader = true;\n    for (const line of text.split(/\\r?\\n/g)) {\n        if (inHeader) {\n            headerlines.push(line);\n            if (line === '') {\n                inHeader = false;\n            }\n        }\n        else {\n            bodylines.push(line);\n        }\n    }\n    return { config: extractSearchQueryFromLines(headerlines), text: bodylines.join('\\n') };\n};\nexport { defaultSearchConfig, extractSearchQueryFromLines, parseSavedSearchEditor, parseSerializedSearchEditor, serializeSearchConfiguration, serializeSearchResultForEditor };\n","import { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { parseSavedSearchEditor, parseSerializedSearchEditor } from './searchEditorSerialization.js';\nimport { IWorkingCopyBackupService } from '../../../services/workingCopy/common/workingCopyBackup.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { createTextBufferFactoryFromStream } from 'monaco-editor/esm/vs/editor/common/model/textModel.js';\nimport { SearchEditorWorkingCopyTypeId } from './constants.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { ResourceMap } from 'monaco-editor/esm/vs/base/common/map.js';\nclass SearchConfigurationModel {\n    constructor(config) {\n        this.config = config;\n        this._onConfigDidUpdate = ( new Emitter());\n        this.onConfigDidUpdate = this._onConfigDidUpdate.event;\n    }\n    updateConfig(config) { this.config = config; this._onConfigDidUpdate.fire(config); }\n}\nclass SearchEditorModel {\n    constructor(resource) {\n        this.resource = resource;\n    }\n    async resolve() {\n        return assertIsDefined(searchEditorModelFactory.models.get(this.resource)).resolve();\n    }\n}\nclass SearchEditorModelFactory {\n    constructor() {\n        this.models = ( new ResourceMap());\n    }\n    initializeModelFromExistingModel(accessor, resource, config) {\n        if (( this.models.has(resource))) {\n            throw Error('Unable to contruct model for resource that already exists');\n        }\n        const languageService = accessor.get(ILanguageService);\n        const modelService = accessor.get(IModelService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n        let ongoingResolve;\n        this.models.set(resource, {\n            resolve: () => {\n                if (!ongoingResolve) {\n                    ongoingResolve = (async () => {\n                        const backup = await this.tryFetchModelFromBackupService(resource, languageService, modelService, workingCopyBackupService, instantiationService);\n                        if (backup) {\n                            return backup;\n                        }\n                        return Promise.resolve({\n                            resultsModel: modelService.getModel(resource) ?? modelService.createModel('', languageService.createById('search-result'), resource),\n                            configurationModel: ( new SearchConfigurationModel(config))\n                        });\n                    })();\n                }\n                return ongoingResolve;\n            }\n        });\n    }\n    initializeModelFromRawData(accessor, resource, config, contents) {\n        if (( this.models.has(resource))) {\n            throw Error('Unable to contruct model for resource that already exists');\n        }\n        const languageService = accessor.get(ILanguageService);\n        const modelService = accessor.get(IModelService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n        let ongoingResolve;\n        this.models.set(resource, {\n            resolve: () => {\n                if (!ongoingResolve) {\n                    ongoingResolve = (async () => {\n                        const backup = await this.tryFetchModelFromBackupService(resource, languageService, modelService, workingCopyBackupService, instantiationService);\n                        if (backup) {\n                            return backup;\n                        }\n                        return Promise.resolve({\n                            resultsModel: modelService.createModel(contents ?? '', languageService.createById('search-result'), resource),\n                            configurationModel: ( new SearchConfigurationModel(config))\n                        });\n                    })();\n                }\n                return ongoingResolve;\n            }\n        });\n    }\n    initializeModelFromExistingFile(accessor, resource, existingFile) {\n        if (( this.models.has(resource))) {\n            throw Error('Unable to contruct model for resource that already exists');\n        }\n        const languageService = accessor.get(ILanguageService);\n        const modelService = accessor.get(IModelService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n        let ongoingResolve;\n        this.models.set(resource, {\n            resolve: async () => {\n                if (!ongoingResolve) {\n                    ongoingResolve = (async () => {\n                        const backup = await this.tryFetchModelFromBackupService(resource, languageService, modelService, workingCopyBackupService, instantiationService);\n                        if (backup) {\n                            return backup;\n                        }\n                        const { text, config } = await instantiationService.invokeFunction(parseSavedSearchEditor, existingFile);\n                        return ({\n                            resultsModel: modelService.createModel(text ?? '', languageService.createById('search-result'), resource),\n                            configurationModel: ( new SearchConfigurationModel(config))\n                        });\n                    })();\n                }\n                return ongoingResolve;\n            }\n        });\n    }\n    async tryFetchModelFromBackupService(resource, languageService, modelService, workingCopyBackupService, instantiationService) {\n        const backup = await workingCopyBackupService.resolve({ resource, typeId: SearchEditorWorkingCopyTypeId });\n        let model = modelService.getModel(resource);\n        if (!model && backup) {\n            const factory = await createTextBufferFactoryFromStream(backup.value);\n            model = modelService.createModel(factory, languageService.createById('search-result'), resource);\n        }\n        if (model) {\n            const existingFile = model.getValue();\n            const { text, config } = parseSerializedSearchEditor(existingFile);\n            modelService.destroyModel(resource);\n            return ({\n                resultsModel: modelService.createModel(text ?? '', languageService.createById('search-result'), resource),\n                configurationModel: ( new SearchConfigurationModel(config))\n            });\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nconst searchEditorModelFactory = ( new SearchEditorModelFactory());\nexport { SearchConfigurationModel, SearchEditorModel, searchEditorModelFactory };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport './media/searchEditor.css.js';\nimport { Emitter } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { basename } from 'monaco-editor/esm/vs/base/common/path.js';\nimport { isEqual, extname, joinPath } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { EditorResourceAccessor } from '../../../common/editor.js';\nimport { Memento } from '../../../common/memento.js';\nimport { SearchEditorInputTypeId, SearchEditorScheme, SearchEditorWorkingCopyTypeId, SearchEditorFindMatchClass } from './constants.js';\nimport { SearchEditorModel, searchEditorModelFactory } from './searchEditorModel.js';\nimport { serializeSearchConfiguration, parseSavedSearchEditor, defaultSearchConfig } from './searchEditorSerialization.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { bufferToReadable, VSBuffer } from 'monaco-editor/esm/vs/base/common/buffer.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst SEARCH_EDITOR_EXT = '.code-search';\nlet SearchEditorInput = class SearchEditorInput extends EditorInput {\n    static { this.ID = SearchEditorInputTypeId; }\n    get typeId() {\n        return SearchEditorInput.ID;\n    }\n    get editorId() {\n        return this.typeId;\n    }\n    get capabilities() {\n        let capabilities = 8 ;\n        if (!this.backingUri) {\n            capabilities |= 4 ;\n        }\n        return capabilities;\n    }\n    get resource() {\n        return this.backingUri || this.modelUri;\n    }\n    constructor(modelUri, backingUri, modelService, textFileService, fileDialogService, instantiationService, workingCopyService, telemetryService, pathService, storageService) {\n        super();\n        this.modelUri = modelUri;\n        this.backingUri = backingUri;\n        this.modelService = modelService;\n        this.textFileService = textFileService;\n        this.fileDialogService = fileDialogService;\n        this.instantiationService = instantiationService;\n        this.workingCopyService = workingCopyService;\n        this.telemetryService = telemetryService;\n        this.pathService = pathService;\n        this.dirty = false;\n        this._onDidChangeContent = this._register(( new Emitter()));\n        this.onDidChangeContent = this._onDidChangeContent.event;\n        this._onDidSave = this._register(( new Emitter()));\n        this.onDidSave = this._onDidSave.event;\n        this.oldDecorationsIDs = [];\n        this.model = instantiationService.createInstance(SearchEditorModel, modelUri);\n        if (this.modelUri.scheme !== SearchEditorScheme) {\n            throw Error('SearchEditorInput must be invoked with a SearchEditorScheme uri');\n        }\n        this.memento = ( new Memento(SearchEditorInput.ID, storageService));\n        storageService.onWillSaveState(() => this.memento.saveMemento());\n        const input = this;\n        const workingCopyAdapter = new (class {\n            constructor() {\n                this.typeId = SearchEditorWorkingCopyTypeId;\n                this.resource = input.modelUri;\n                this.capabilities = input.hasCapability(4 ) ? 2  : 0 ;\n                this.onDidChangeDirty = input.onDidChangeDirty;\n                this.onDidChangeContent = input.onDidChangeContent;\n                this.onDidSave = input.onDidSave;\n            }\n            get name() { return input.getName(); }\n            isDirty() { return input.isDirty(); }\n            isModified() { return input.isDirty(); }\n            backup(token) { return input.backup(token); }\n            save(options) { return input.save(0, options).then(editor => !!editor); }\n            revert(options) { return input.revert(0, options); }\n        });\n        this._register(this.workingCopyService.registerWorkingCopy(workingCopyAdapter));\n    }\n    async save(group, options) {\n        if (((await this.resolveModels()).resultsModel).isDisposed()) {\n            return;\n        }\n        if (this.backingUri) {\n            await this.textFileService.write(this.backingUri, await this.serializeForDisk(), options);\n            this.setDirty(false);\n            this._onDidSave.fire({ reason: options?.reason, source: options?.source });\n            return this;\n        }\n        else {\n            return this.saveAs(group, options);\n        }\n    }\n    tryReadConfigSync() {\n        return this._cachedConfigurationModel?.config;\n    }\n    async serializeForDisk() {\n        const { configurationModel, resultsModel } = await this.resolveModels();\n        return serializeSearchConfiguration(configurationModel.config) + '\\n' + resultsModel.getValue();\n    }\n    registerConfigChangeListeners(model) {\n        this.configChangeListenerDisposable?.dispose();\n        if (!this.isDisposed()) {\n            this.configChangeListenerDisposable = model.onConfigDidUpdate(() => {\n                if (this.lastLabel !== this.getName()) {\n                    this._onDidChangeLabel.fire();\n                    this.lastLabel = this.getName();\n                }\n                this.memento.getMemento(1 , 1 ).searchConfig = model.config;\n            });\n            this._register(this.configChangeListenerDisposable);\n        }\n    }\n    async resolveModels() {\n        return this.model.resolve().then(data => {\n            this._cachedResultsModel = data.resultsModel;\n            this._cachedConfigurationModel = data.configurationModel;\n            if (this.lastLabel !== this.getName()) {\n                this._onDidChangeLabel.fire();\n                this.lastLabel = this.getName();\n            }\n            this.registerConfigChangeListeners(data.configurationModel);\n            return data;\n        });\n    }\n    async saveAs(group, options) {\n        const path = await this.fileDialogService.pickFileToSave(await this.suggestFileName(), options?.availableFileSystems);\n        if (path) {\n            this.telemetryService.publicLog2('searchEditor/saveSearchResults');\n            const toWrite = await this.serializeForDisk();\n            if (await this.textFileService.create([{ resource: path, value: toWrite, options: { overwrite: true } }])) {\n                this.setDirty(false);\n                if (!isEqual(path, this.modelUri)) {\n                    const input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { fileUri: path, from: 'existingFile' });\n                    input.setMatchRanges(this.getMatchRanges());\n                    return input;\n                }\n                return this;\n            }\n        }\n        return undefined;\n    }\n    getName(maxLength = 12) {\n        const trimToMax = (label) => (label.length < maxLength ? label : `${label.slice(0, maxLength - 3)}...`);\n        if (this.backingUri) {\n            const originalURI = EditorResourceAccessor.getOriginalUri(this);\n            return ( localize(\n                'searchTitle.withQuery',\n                \"Search: {0}\",\n                basename((originalURI ?? this.backingUri).path, SEARCH_EDITOR_EXT)\n            ));\n        }\n        const query = this._cachedConfigurationModel?.config?.query?.trim();\n        if (query) {\n            return ( localize('searchTitle.withQuery', \"Search: {0}\", trimToMax(query)));\n        }\n        return ( localize('searchTitle', \"Search\"));\n    }\n    setDirty(dirty) {\n        const wasDirty = this.dirty;\n        this.dirty = dirty;\n        if (wasDirty !== dirty) {\n            this._onDidChangeDirty.fire();\n        }\n    }\n    isDirty() {\n        return this.dirty;\n    }\n    async rename(group, target) {\n        if (extname(target) === SEARCH_EDITOR_EXT) {\n            return {\n                editor: this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'existingFile', fileUri: target })\n            };\n        }\n        return undefined;\n    }\n    dispose() {\n        this.modelService.destroyModel(this.modelUri);\n        super.dispose();\n    }\n    matches(other) {\n        if (super.matches(other)) {\n            return true;\n        }\n        if (other instanceof SearchEditorInput) {\n            return !!(other.modelUri.fragment && other.modelUri.fragment === this.modelUri.fragment) || !!(other.backingUri && isEqual(other.backingUri, this.backingUri));\n        }\n        return false;\n    }\n    getMatchRanges() {\n        return ( (this._cachedResultsModel?.getAllDecorations() ?? [])\n            .filter(decoration => decoration.options.className === SearchEditorFindMatchClass)\n            .filter(({ range }) => !(range.startColumn === 1 && range.endColumn === 1))\n            .map(({ range }) => range));\n    }\n    async setMatchRanges(ranges) {\n        this.oldDecorationsIDs = (await this.resolveModels()).resultsModel.deltaDecorations(this.oldDecorationsIDs, ( ranges.map(\n            range => ({ range, options: { description: 'search-editor-find-match', className: SearchEditorFindMatchClass, stickiness: 1  } })\n        )));\n    }\n    async revert(group, options) {\n        if (options?.soft) {\n            this.setDirty(false);\n            return;\n        }\n        if (this.backingUri) {\n            const { config, text } = await this.instantiationService.invokeFunction(parseSavedSearchEditor, this.backingUri);\n            const { resultsModel, configurationModel } = await this.resolveModels();\n            resultsModel.setValue(text);\n            configurationModel.updateConfig(config);\n        }\n        else {\n            (await this.resolveModels()).resultsModel.setValue('');\n        }\n        super.revert(group, options);\n        this.setDirty(false);\n    }\n    async backup(token) {\n        const contents = await this.serializeForDisk();\n        if (token.isCancellationRequested) {\n            return {};\n        }\n        return {\n            content: bufferToReadable(VSBuffer.fromString(contents))\n        };\n    }\n    async suggestFileName() {\n        const query = (await this.resolveModels()).configurationModel.config.query;\n        const searchFileName = (query.replace(/[^\\w \\-_]+/g, '_') || 'Search') + SEARCH_EDITOR_EXT;\n        return joinPath(await this.fileDialogService.defaultFilePath(this.pathService.defaultUriScheme), searchFileName);\n    }\n    toUntyped() {\n        if (this.hasCapability(4 )) {\n            return undefined;\n        }\n        return {\n            resource: this.resource,\n            options: {\n                override: SearchEditorInput.ID\n            }\n        };\n    }\n};\nSearchEditorInput = ( __decorate([\n    ( __param(2, IModelService)),\n    ( __param(3, ITextFileService)),\n    ( __param(4, IFileDialogService)),\n    ( __param(5, IInstantiationService)),\n    ( __param(6, IWorkingCopyService)),\n    ( __param(7, ITelemetryService)),\n    ( __param(8, IPathService)),\n    ( __param(9, IStorageService))\n], SearchEditorInput));\nconst getOrMakeSearchEditorInput = (accessor, existingData) => {\n    const storageService = accessor.get(IStorageService);\n    const configurationService = accessor.get(IConfigurationService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const modelUri = existingData.from === 'model' ? existingData.modelUri : ( URI.from({ scheme: SearchEditorScheme, fragment: `${Math.random()}` }));\n    if (!( searchEditorModelFactory.models.has(modelUri))) {\n        if (existingData.from === 'existingFile') {\n            instantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingFile(accessor, modelUri, existingData.fileUri));\n        }\n        else {\n            const searchEditorSettings = configurationService.getValue('search').searchEditor;\n            const reuseOldSettings = searchEditorSettings.reusePriorSearchConfiguration;\n            const defaultNumberOfContextLines = searchEditorSettings.defaultNumberOfContextLines;\n            const priorConfig = reuseOldSettings ? ( new Memento(SearchEditorInput.ID, storageService)).getMemento(1 , 1 ).searchConfig : {};\n            const defaultConfig = defaultSearchConfig();\n            const config = { ...defaultConfig, ...priorConfig, ...existingData.config };\n            if (defaultNumberOfContextLines !== null && defaultNumberOfContextLines !== undefined) {\n                config.contextLines = existingData?.config?.contextLines ?? defaultNumberOfContextLines;\n            }\n            if (existingData.from === 'rawData') {\n                if (existingData.resultsContents) {\n                    config.contextLines = 0;\n                }\n                instantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromRawData(accessor, modelUri, config, existingData.resultsContents));\n            }\n            else {\n                instantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingModel(accessor, modelUri, config));\n            }\n        }\n    }\n    return instantiationService.createInstance(SearchEditorInput, modelUri, existingData.from === 'existingFile'\n        ? existingData.fileUri\n        : existingData.from === 'model'\n            ? existingData.backupOf\n            : undefined);\n};\nexport { SEARCH_EDITOR_EXT, SearchEditorInput, getOrMakeSearchEditorInput };\n","import { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport './media/searchEditor.css.js';\nimport { isDiffEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { getSearchView } from '../../search/browser/searchActionsBase.js';\nimport { SearchEditorInput, getOrMakeSearchEditorInput } from './searchEditorInput.js';\nimport { serializeSearchResultForEditor } from './searchEditorSerialization.js';\nimport { IConfigurationResolverService } from '../../../services/configurationResolver/common/configurationResolver.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nconst toggleSearchEditorCaseSensitiveCommand = (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.toggleCaseSensitive();\n    }\n};\nconst toggleSearchEditorWholeWordCommand = (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.toggleWholeWords();\n    }\n};\nconst toggleSearchEditorRegexCommand = (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.toggleRegex();\n    }\n};\nconst toggleSearchEditorContextLinesCommand = (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.toggleContextLines();\n    }\n};\nconst modifySearchEditorContextLinesCommand = (accessor, increase) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.modifyContextLines(increase);\n    }\n};\nconst selectAllSearchEditorMatchesCommand = (accessor) => {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        editorService.activeEditorPane.focusAllResults();\n    }\n};\nasync function openSearchEditor(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const searchView = getSearchView(viewsService);\n    if (searchView) {\n        await instantiationService.invokeFunction(openNewSearchEditor, {\n            filesToInclude: searchView.searchIncludePattern.getValue(),\n            onlyOpenEditors: searchView.searchIncludePattern.onlySearchInOpenEditors(),\n            filesToExclude: searchView.searchExcludePattern.getValue(),\n            isRegexp: searchView.searchAndReplaceWidget.searchInput?.getRegex(),\n            isCaseSensitive: searchView.searchAndReplaceWidget.searchInput?.getCaseSensitive(),\n            matchWholeWord: searchView.searchAndReplaceWidget.searchInput?.getWholeWords(),\n            useExcludeSettingsAndIgnoreFiles: searchView.searchExcludePattern.useExcludesAndIgnoreFiles(),\n            showIncludesExcludes: !!(searchView.searchIncludePattern.getValue() || searchView.searchExcludePattern.getValue() || !searchView.searchExcludePattern.useExcludesAndIgnoreFiles())\n        });\n    }\n    else {\n        await instantiationService.invokeFunction(openNewSearchEditor);\n    }\n}\nconst openNewSearchEditor = async (accessor, _args = {}, toSide = false) => {\n    const editorService = accessor.get(IEditorService);\n    const editorGroupsService = accessor.get(IEditorGroupsService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const configurationService = accessor.get(IConfigurationService);\n    const configurationResolverService = accessor.get(IConfigurationResolverService);\n    const workspaceContextService = accessor.get(IWorkspaceContextService);\n    const historyService = accessor.get(IHistoryService);\n    const activeWorkspaceRootUri = historyService.getLastActiveWorkspaceRoot(Schemas.file);\n    const lastActiveWorkspaceRoot = activeWorkspaceRootUri ? withNullAsUndefined(workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n    const activeEditorControl = editorService.activeTextEditorControl;\n    let activeModel;\n    let selected = '';\n    if (activeEditorControl) {\n        if (isDiffEditor(activeEditorControl)) {\n            if (activeEditorControl.getOriginalEditor().hasTextFocus()) {\n                activeModel = activeEditorControl.getOriginalEditor();\n            }\n            else {\n                activeModel = activeEditorControl.getModifiedEditor();\n            }\n        }\n        else {\n            activeModel = activeEditorControl;\n        }\n        const selection = activeModel?.getSelection();\n        selected = (selection && activeModel?.getModel()?.getValueInRange(selection)) ?? '';\n        if (selection?.isEmpty() && configurationService.getValue('search').seedWithNearestWord) {\n            const wordAtPosition = activeModel.getModel()?.getWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition) {\n                selected = wordAtPosition.word;\n            }\n        }\n    }\n    else {\n        if (editorService.activeEditor instanceof SearchEditorInput) {\n            const active = editorService.activeEditorPane;\n            selected = active.getSelected();\n        }\n    }\n    telemetryService.publicLog2('searchEditor/openNewSearchEditor');\n    const seedSearchStringFromSelection = _args.location === 'new' || configurationService.getValue('editor').find.seedSearchStringFromSelection;\n    const args = { query: seedSearchStringFromSelection ? selected : undefined };\n    for (const entry of Object.entries(_args)) {\n        const name = entry[0];\n        const value = entry[1];\n        if (value !== undefined) {\n            args[name] = (typeof value === 'string') ? await configurationResolverService.resolveAsync(lastActiveWorkspaceRoot, value) : value;\n        }\n    }\n    const existing = editorService.getEditors(0 ).find(id => id.editor.typeId === SearchEditorInput.ID);\n    let editor;\n    if (existing && args.location === 'reuse') {\n        const group = editorGroupsService.getGroup(existing.groupId);\n        if (!group) {\n            throw new Error('Invalid group id for search editor');\n        }\n        const input = existing.editor;\n        editor = (await group.openEditor(input));\n        if (selected) {\n            editor.setQuery(selected);\n        }\n        else {\n            editor.selectQuery();\n        }\n        editor.setSearchConfig(args);\n    }\n    else {\n        const input = instantiationService.invokeFunction(getOrMakeSearchEditorInput, { config: args, resultsContents: '', from: 'rawData' });\n        editor = await editorService.openEditor(input, { pinned: true }, toSide ? SIDE_GROUP : ACTIVE_GROUP);\n    }\n    const searchOnType = configurationService.getValue('search').searchOnType;\n    if (args.triggerSearch === true ||\n        args.triggerSearch !== false && searchOnType && args.query) {\n        editor.triggerSearch({ focusResults: args.focusResults });\n    }\n    if (!args.focusResults) {\n        editor.focusSearchInput();\n    }\n};\nconst createEditorFromSearchResult = async (accessor, searchResult, rawIncludePattern, rawExcludePattern, onlySearchInOpenEditors) => {\n    if (!searchResult.query) {\n        console.error('Expected searchResult.query to be defined. Got', searchResult);\n        return;\n    }\n    const editorService = accessor.get(IEditorService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const labelService = accessor.get(ILabelService);\n    const configurationService = accessor.get(IConfigurationService);\n    const sortOrder = configurationService.getValue('search').sortOrder;\n    telemetryService.publicLog2('searchEditor/createEditorFromSearchResult');\n    const labelFormatter = (uri) => labelService.getUriLabel(uri, { relative: true });\n    const { text, matchRanges, config } = serializeSearchResultForEditor(searchResult, rawIncludePattern, rawExcludePattern, 0, labelFormatter, sortOrder);\n    config.onlyOpenEditors = onlySearchInOpenEditors;\n    const contextLines = configurationService.getValue('search').searchEditor.defaultNumberOfContextLines;\n    if (searchResult.isDirty || contextLines === 0 || contextLines === null) {\n        const input = instantiationService.invokeFunction(getOrMakeSearchEditorInput, { resultsContents: text, config, from: 'rawData' });\n        await editorService.openEditor(input, { pinned: true });\n        input.setMatchRanges(matchRanges);\n    }\n    else {\n        const input = instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'rawData', resultsContents: '', config: { ...config, contextLines } });\n        const editor = await editorService.openEditor(input, { pinned: true });\n        editor.triggerSearch({ focusResults: true });\n    }\n};\nexport { createEditorFromSearchResult, modifySearchEditorContextLinesCommand, openNewSearchEditor, openSearchEditor, selectAllSearchEditorMatchesCommand, toggleSearchEditorCaseSensitiveCommand, toggleSearchEditorContextLinesCommand, toggleSearchEditorRegexCommand, toggleSearchEditorWholeWordCommand };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport * as aria from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { ObjectTreeElementCollapseState } from 'monaco-editor/esm/vs/base/browser/ui/tree/tree.js';\nimport { Delayer, RunOnceScheduler } from 'monaco-editor/esm/vs/base/common/async.js';\nimport * as errors from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { Event } from 'monaco-editor/esm/vs/base/common/event.js';\nimport { Iterable } from 'monaco-editor/esm/vs/base/common/iterator.js';\nimport { DisposableStore, Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport * as strings from 'monaco-editor/esm/vs/base/common/strings.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { URI } from 'monaco-editor/esm/vs/base/common/uri.js';\nimport * as network from 'monaco-editor/esm/vs/base/common/network.js';\nimport './media/searchview.css.js';\nimport { isCodeEditor, isDiffEditor, getCodeEditor } from 'monaco-editor/esm/vs/editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from 'monaco-editor/esm/vs/editor/browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from 'monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js';\nimport { Selection } from 'monaco-editor/esm/vs/editor/common/core/selection.js';\nimport { CommonFindController } from 'monaco-editor/esm/vs/editor/contrib/find/browser/findController.js';\nimport { MultiCursorSelectionController } from 'monaco-editor/esm/vs/editor/contrib/multicursor/browser/multicursor.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IAccessibilityService } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nimport { MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextViewService, IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport '../../../../../../override/vs/platform/dialogs/common/dialogs.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from 'monaco-editor/esm/vs/platform/keybinding/common/keybinding.js';\nimport { WorkbenchCompressibleObjectTree, getSelectionKeyboardEvent } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { withSelection, IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { IProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { OpenFileFolderAction, OpenFolderAction } from '../../../browser/actions/workspaceActions.js';\nimport { ResourceListDnDHandler } from '../../../browser/dnd.js';\nimport { ResourceLabels } from '../../../browser/labels.js';\nimport { ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { Memento } from '../../../common/memento.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { NotebookEditor } from '../../../../../../override/vs/workbench/contrib/notebook/browser/notebookEditor.js';\nimport { IncludePatternInputWidget, ExcludePatternInputWidget } from './patternInputWidget.js';\nimport { appendKeyBindingLabel } from './searchActionsBase.js';\nimport { searchDetailsIcon } from './searchIcons.js';\nimport { renderSearchMessage } from './searchMessage.js';\nimport { SearchAccessibilityProvider, SearchDelegate, FolderMatchRenderer, FileMatchRenderer, MatchRenderer } from './searchResultsView.js';\nimport { SearchWidget } from './searchWidget.js';\nimport { SearchViewVisibleKey, FirstMatchFocusKey, FileMatchOrMatchFocusKey, FileMatchOrFolderMatchFocusKey, FileMatchOrFolderMatchWithResourceFocusKey, FileFocusKey, FolderFocusKey, ResourceFolderFocusKey, HasSearchResults, MatchFocusKey, ViewHasSearchPatternKey, ViewHasReplacePatternKey, ViewHasFilePatternKey, ViewHasSomeCollapsibleKey, InTreeViewKey, SearchViewFocusedKey, InputBoxFocusedKey, PatternIncludesFocusedKey, PatternExcludesFocusedKey, IsEditableItemKey, OpenInEditorCommandId } from '../common/constants.js';\nimport { IReplaceService } from './replace.js';\nimport { SearchStateKey, SearchUIState, getOutOfWorkspaceEditorResources } from '../common/search.js';\nimport { SearchHistoryService, ISearchHistoryService } from '../common/searchHistoryService.js';\nimport { searchMatchComparer, FileMatch, SearchResult, FolderMatch, Match, FolderMatchWithResource, MatchInNotebook, ISearchWorkbenchService } from './searchModel.js';\nimport { createEditorFromSearchResult } from '../../searchEditor/browser/searchEditorActions.js';\nimport { SIDE_GROUP, ACTIVE_GROUP, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { QueryBuilder } from '../../../services/search/common/queryBuilder.js';\nimport '../../../services/search/common/search.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { INotebookService } from '../../notebook/common/notebookService.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nimport { TextSearchCompleteMessageType } from '../../../services/search/common/searchExtTypes.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst $ = dom.$;\nconst SEARCH_CANCELLED_MESSAGE = ( nls.localize(\n    'searchCanceled',\n    \"Search was canceled before any results could be found - \"\n));\nconst DEBOUNCE_DELAY = 75;\nlet SearchView = class SearchView extends ViewPane {\n    static { this.ACTIONS_RIGHT_CLASS_NAME = 'actions-right'; }\n    constructor(options, fileService, editorService, codeEditorService, progressService, notificationService, dialogService, commandService, contextViewService, instantiationService, viewDescriptorService, configurationService, contextService, searchWorkbenchService, contextKeyService, replaceService, textFileService, preferencesService, themeService, searchHistoryService, contextMenuService, accessibilityService, keybindingService, storageService, openerService, telemetryService, notebookService, logService) {\n        super(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n        this.fileService = fileService;\n        this.editorService = editorService;\n        this.codeEditorService = codeEditorService;\n        this.progressService = progressService;\n        this.notificationService = notificationService;\n        this.dialogService = dialogService;\n        this.commandService = commandService;\n        this.contextViewService = contextViewService;\n        this.contextService = contextService;\n        this.searchWorkbenchService = searchWorkbenchService;\n        this.replaceService = replaceService;\n        this.textFileService = textFileService;\n        this.preferencesService = preferencesService;\n        this.searchHistoryService = searchHistoryService;\n        this.accessibilityService = accessibilityService;\n        this.storageService = storageService;\n        this.notebookService = notebookService;\n        this.logService = logService;\n        this.isDisposed = false;\n        this.lastFocusState = 'input';\n        this.messageDisposables = ( new DisposableStore());\n        this.changedWhileHidden = false;\n        this.currentSearchQ = Promise.resolve();\n        this.pauseSearching = false;\n        this._visibleMatches = 0;\n        this.container = dom.$('.search-view');\n        this.viewletVisible = SearchViewVisibleKey.bindTo(this.contextKeyService);\n        this.firstMatchFocused = FirstMatchFocusKey.bindTo(this.contextKeyService);\n        this.fileMatchOrMatchFocused = FileMatchOrMatchFocusKey.bindTo(this.contextKeyService);\n        this.fileMatchOrFolderMatchFocus = FileMatchOrFolderMatchFocusKey.bindTo(this.contextKeyService);\n        this.fileMatchOrFolderMatchWithResourceFocus = FileMatchOrFolderMatchWithResourceFocusKey.bindTo(this.contextKeyService);\n        this.fileMatchFocused = FileFocusKey.bindTo(this.contextKeyService);\n        this.folderMatchFocused = FolderFocusKey.bindTo(this.contextKeyService);\n        this.folderMatchWithResourceFocused = ResourceFolderFocusKey.bindTo(this.contextKeyService);\n        this.hasSearchResultsKey = HasSearchResults.bindTo(this.contextKeyService);\n        this.matchFocused = MatchFocusKey.bindTo(this.contextKeyService);\n        this.searchStateKey = SearchStateKey.bindTo(this.contextKeyService);\n        this.hasSearchPatternKey = ViewHasSearchPatternKey.bindTo(this.contextKeyService);\n        this.hasReplacePatternKey = ViewHasReplacePatternKey.bindTo(this.contextKeyService);\n        this.hasFilePatternKey = ViewHasFilePatternKey.bindTo(this.contextKeyService);\n        this.hasSomeCollapsibleResultKey = ViewHasSomeCollapsibleKey.bindTo(this.contextKeyService);\n        this.treeViewKey = InTreeViewKey.bindTo(this.contextKeyService);\n        this.contextKeyService = this._register(this.contextKeyService.createScoped(this.container));\n        SearchViewFocusedKey.bindTo(this.contextKeyService).set(true);\n        this.inputBoxFocused = InputBoxFocusedKey.bindTo(this.contextKeyService);\n        this.inputPatternIncludesFocused = PatternIncludesFocusedKey.bindTo(this.contextKeyService);\n        this.inputPatternExclusionsFocused = PatternExcludesFocusedKey.bindTo(this.contextKeyService);\n        this.isEditableItem = IsEditableItemKey.bindTo(this.contextKeyService);\n        this.instantiationService = this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, this.contextKeyService])));\n        this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('search.sortOrder')) {\n                if (this.searchConfig.sortOrder === \"modified\" ) {\n                    this.removeFileStats();\n                }\n                this.refreshTree();\n            }\n        });\n        this.viewModel = this._register(this.searchWorkbenchService.searchModel);\n        this.queryBuilder = this.instantiationService.createInstance(QueryBuilder);\n        this.memento = ( new Memento(this.id, storageService));\n        this.viewletState = this.memento.getMemento(1 , 1 );\n        this._register(this.fileService.onDidFilesChange(e => this.onFilesChanged(e)));\n        this._register(this.textFileService.untitled.onWillDispose(model => this.onUntitledDidDispose(model.resource)));\n        this._register(this.contextService.onDidChangeWorkbenchState(() => this.onDidChangeWorkbenchState()));\n        this._register(this.searchHistoryService.onDidClearHistory(() => this.clearHistory()));\n        this._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n        this.delayedRefresh = this._register(( new Delayer(250)));\n        this.addToSearchHistoryDelayer = this._register(( new Delayer(2000)));\n        this.toggleCollapseStateDelayer = this._register(( new Delayer(100)));\n        this.triggerQueryDelayer = this._register(( new Delayer(0)));\n        this.treeAccessibilityProvider = this.instantiationService.createInstance(SearchAccessibilityProvider, this.viewModel);\n        this.isTreeLayoutViewVisible = this.viewletState['view.treeLayout'] ?? ((this.searchConfig.defaultViewMode === \"tree\") );\n        this._refreshResultsScheduler = this._register(( new RunOnceScheduler(this._updateResults.bind(this), 80)));\n        this._register(this.storageService.onWillSaveState(() => {\n            this._saveSearchHistoryService();\n        }));\n        this._register(this.storageService.onDidChangeValue((v) => {\n            if (v.key === SearchHistoryService.SEARCH_HISTORY_KEY) {\n                const restoredHistory = this.searchHistoryService.load();\n                if (restoredHistory.include) {\n                    this.inputPatternIncludes.prependHistory(restoredHistory.include);\n                }\n                if (restoredHistory.exclude) {\n                    this.inputPatternExcludes.prependHistory(restoredHistory.exclude);\n                }\n                if (restoredHistory.search) {\n                    this.searchWidget.prependSearchHistory(restoredHistory.search);\n                }\n                if (restoredHistory.replace) {\n                    this.searchWidget.prependReplaceHistory(restoredHistory.replace);\n                }\n            }\n        }));\n    }\n    get isTreeLayoutViewVisible() {\n        return this.treeViewKey.get() ?? false;\n    }\n    set isTreeLayoutViewVisible(visible) {\n        this.treeViewKey.set(visible);\n    }\n    setTreeView(visible) {\n        if (visible === this.isTreeLayoutViewVisible) {\n            return;\n        }\n        this.isTreeLayoutViewVisible = visible;\n        this.updateIndentStyles(this.themeService.getFileIconTheme());\n        this.refreshTree();\n    }\n    get state() {\n        return this.searchStateKey.get() ?? SearchUIState.Idle;\n    }\n    set state(v) {\n        this.searchStateKey.set(v);\n    }\n    getContainer() {\n        return this.container;\n    }\n    get searchResult() {\n        return this.viewModel && this.viewModel.searchResult;\n    }\n    onDidChangeWorkbenchState() {\n        if (this.contextService.getWorkbenchState() !== 1  && this.searchWithoutFolderMessageElement) {\n            dom.hide(this.searchWithoutFolderMessageElement);\n        }\n    }\n    renderBody(parent) {\n        super.renderBody(parent);\n        this.container = dom.append(parent, dom.$('.search-view'));\n        this.searchWidgetsContainerElement = dom.append(this.container, $('.search-widgets-container'));\n        this.createSearchWidget(this.searchWidgetsContainerElement);\n        const history = this.searchHistoryService.load();\n        const filePatterns = this.viewletState['query.filePatterns'] || '';\n        const patternExclusions = this.viewletState['query.folderExclusions'] || '';\n        const patternExclusionsHistory = history.exclude || [];\n        const patternIncludes = this.viewletState['query.folderIncludes'] || '';\n        const patternIncludesHistory = history.include || [];\n        const onlyOpenEditors = this.viewletState['query.onlyOpenEditors'] || false;\n        const queryDetailsExpanded = this.viewletState['query.queryDetailsExpanded'] || '';\n        const useExcludesAndIgnoreFiles = typeof this.viewletState['query.useExcludesAndIgnoreFiles'] === 'boolean' ?\n            this.viewletState['query.useExcludesAndIgnoreFiles'] : true;\n        this.queryDetails = dom.append(this.searchWidgetsContainerElement, $('.query-details'));\n        this.toggleQueryDetailsButton = dom.append(this.queryDetails, $('.more' + ThemeIcon.asCSSSelector(searchDetailsIcon), { tabindex: 0, role: 'button', title: ( nls.localize('moreSearch', \"Toggle Search Details\")) }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.CLICK, e => {\n            dom.EventHelper.stop(e);\n            this.toggleQueryDetails(!this.accessibilityService.isScreenReaderOptimized());\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_UP, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(3 ) || event.equals(10 )) {\n                dom.EventHelper.stop(e);\n                this.toggleQueryDetails(false);\n            }\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(1024  | 2 )) {\n                if (this.searchWidget.isReplaceActive()) {\n                    this.searchWidget.focusReplaceAllAction();\n                }\n                else {\n                    this.searchWidget.isReplaceShown() ? this.searchWidget.replaceInput?.focusOnPreserve() : this.searchWidget.focusRegexAction();\n                }\n                dom.EventHelper.stop(e);\n            }\n        }));\n        const folderIncludesList = dom.append(this.queryDetails, $('.file-types.includes'));\n        const filesToIncludeTitle = ( nls.localize('searchScope.includes', \"files to include\"));\n        dom.append(folderIncludesList, $('h4', undefined, filesToIncludeTitle));\n        this.inputPatternIncludes = this._register(this.instantiationService.createInstance(IncludePatternInputWidget, folderIncludesList, this.contextViewService, {\n            ariaLabel: filesToIncludeTitle,\n            placeholder: ( nls.localize('placeholder.includes', \"e.g. *.ts, src/**/include\")),\n            showPlaceholderOnFocus: true,\n            history: patternIncludesHistory,\n            inputBoxStyles: defaultInputBoxStyles\n        }));\n        this.inputPatternIncludes.setValue(patternIncludes);\n        this.inputPatternIncludes.setOnlySearchInOpenEditors(onlyOpenEditors);\n        this._register(this.inputPatternIncludes.onCancel(() => this.cancelSearch(false)));\n        this._register(this.inputPatternIncludes.onChangeSearchInEditorsBox(() => this.triggerQueryChange()));\n        this.trackInputBox(this.inputPatternIncludes.inputFocusTracker, this.inputPatternIncludesFocused);\n        const excludesList = dom.append(this.queryDetails, $('.file-types.excludes'));\n        const excludesTitle = ( nls.localize('searchScope.excludes', \"files to exclude\"));\n        dom.append(excludesList, $('h4', undefined, excludesTitle));\n        this.inputPatternExcludes = this._register(this.instantiationService.createInstance(ExcludePatternInputWidget, excludesList, this.contextViewService, {\n            ariaLabel: excludesTitle,\n            placeholder: ( nls.localize('placeholder.excludes', \"e.g. *.ts, src/**/exclude\")),\n            showPlaceholderOnFocus: true,\n            history: patternExclusionsHistory,\n            inputBoxStyles: defaultInputBoxStyles\n        }));\n        this.inputPatternExcludes.setValue(patternExclusions);\n        this.inputPatternExcludes.setUseExcludesAndIgnoreFiles(useExcludesAndIgnoreFiles);\n        this._register(this.inputPatternExcludes.onCancel(() => this.cancelSearch(false)));\n        this._register(this.inputPatternExcludes.onChangeIgnoreBox(() => this.triggerQueryChange()));\n        this.trackInputBox(this.inputPatternExcludes.inputFocusTracker, this.inputPatternExclusionsFocused);\n        const updateHasFilePatternKey = () => this.hasFilePatternKey.set(this.inputPatternIncludes.getValue().length > 0 || this.inputPatternExcludes.getValue().length > 0);\n        updateHasFilePatternKey();\n        const onFilePatternSubmit = (triggeredOnType) => {\n            this.triggerQueryChange({ triggeredOnType, delay: this.searchConfig.searchOnTypeDebouncePeriod });\n            if (triggeredOnType) {\n                updateHasFilePatternKey();\n            }\n        };\n        this._register(this.inputPatternIncludes.onSubmit(onFilePatternSubmit));\n        this._register(this.inputPatternExcludes.onSubmit(onFilePatternSubmit));\n        this.messagesElement = dom.append(this.container, $('.messages.text-search-provider-messages'));\n        if (this.contextService.getWorkbenchState() === 1 ) {\n            this.showSearchWithoutFolderMessage();\n        }\n        this.createSearchResultsView(this.container);\n        if (filePatterns !== '' || patternExclusions !== '' || patternIncludes !== '' || queryDetailsExpanded !== '' || !useExcludesAndIgnoreFiles) {\n            this.toggleQueryDetails(true, true, true);\n        }\n        this._register(this.viewModel.searchResult.onChange((event) => this.onSearchResultsChanged(event)));\n        this._register(this.onDidChangeBodyVisibility(visible => this.onVisibilityChanged(visible)));\n        this.updateIndentStyles(this.themeService.getFileIconTheme());\n        this._register(this.themeService.onDidFileIconThemeChange(this.updateIndentStyles, this));\n    }\n    updateIndentStyles(theme) {\n        this.resultsElement.classList.toggle('hide-arrows', this.isTreeLayoutViewVisible && theme.hidesExplorerArrows);\n    }\n    onVisibilityChanged(visible) {\n        this.viewletVisible.set(visible);\n        if (visible) {\n            if (this.changedWhileHidden) {\n                this.refreshAndUpdateCount();\n                this.changedWhileHidden = false;\n            }\n        }\n        else {\n            this.lastFocusState = 'input';\n        }\n        this.viewModel?.searchResult.toggleHighlights(visible);\n    }\n    get searchAndReplaceWidget() {\n        return this.searchWidget;\n    }\n    get searchIncludePattern() {\n        return this.inputPatternIncludes;\n    }\n    get searchExcludePattern() {\n        return this.inputPatternExcludes;\n    }\n    createSearchWidget(container) {\n        const contentPattern = this.viewletState['query.contentPattern'] || '';\n        const replaceText = this.viewletState['query.replaceText'] || '';\n        const isRegex = this.viewletState['query.regex'] === true;\n        const isWholeWords = this.viewletState['query.wholeWords'] === true;\n        const isCaseSensitive = this.viewletState['query.caseSensitive'] === true;\n        const history = this.searchHistoryService.load();\n        const searchHistory = history.search || this.viewletState['query.searchHistory'] || [];\n        const replaceHistory = history.replace || this.viewletState['query.replaceHistory'] || [];\n        const showReplace = typeof this.viewletState['view.showReplace'] === 'boolean' ? this.viewletState['view.showReplace'] : true;\n        const preserveCase = this.viewletState['query.preserveCase'] === true;\n        const isInNotebookMarkdownInput = this.viewletState['query.isInNotebookMarkdownInput'] ?? true;\n        const isInNotebookMarkdownPreview = this.viewletState['query.isInNotebookMarkdownPreview'] ?? true;\n        const isInNotebookCellInput = this.viewletState['query.isInNotebookCellInput'] ?? true;\n        const isInNotebookCellOutput = this.viewletState['query.isInNotebookCellOutput'] ?? true;\n        this.searchWidget = this._register(this.instantiationService.createInstance(SearchWidget, container, {\n            value: contentPattern,\n            replaceValue: replaceText,\n            isRegex: isRegex,\n            isCaseSensitive: isCaseSensitive,\n            isWholeWords: isWholeWords,\n            searchHistory: searchHistory,\n            replaceHistory: replaceHistory,\n            preserveCase: preserveCase,\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles,\n            notebookOptions: {\n                isInNotebookMarkdownInput,\n                isInNotebookMarkdownPreview,\n                isInNotebookCellInput,\n                isInNotebookCellOutput,\n            }\n        }));\n        if (!this.searchWidget.searchInput || !this.searchWidget.replaceInput) {\n            this.logService.warn(`Cannot fully create search widget. Search or replace input undefined. SearchInput: ${this.searchWidget.searchInput}, ReplaceInput: ${this.searchWidget.replaceInput}`);\n            return;\n        }\n        if (showReplace) {\n            this.searchWidget.toggleReplace(true);\n        }\n        this._register(this.searchWidget.onSearchSubmit(options => this.triggerQueryChange(options)));\n        this._register(this.searchWidget.onSearchCancel(({ focus }) => this.cancelSearch(focus)));\n        this._register(this.searchWidget.searchInput.onDidOptionChange(() => this.triggerQueryChange()));\n        this._register(this.searchWidget.getNotebookFilters().onDidChange(() => this.triggerQueryChange()));\n        const updateHasPatternKey = () => this.hasSearchPatternKey.set(this.searchWidget.searchInput ? (this.searchWidget.searchInput.getValue().length > 0) : false);\n        updateHasPatternKey();\n        this._register(this.searchWidget.searchInput.onDidChange(() => updateHasPatternKey()));\n        const updateHasReplacePatternKey = () => this.hasReplacePatternKey.set(this.searchWidget.getReplaceValue().length > 0);\n        updateHasReplacePatternKey();\n        this._register(this.searchWidget.replaceInput.inputBox.onDidChange(() => updateHasReplacePatternKey()));\n        this._register(this.searchWidget.onDidHeightChange(() => this.reLayout()));\n        this._register(this.searchWidget.onReplaceToggled(() => this.reLayout()));\n        this._register(this.searchWidget.onReplaceStateChange((state) => {\n            this.viewModel.replaceActive = state;\n            this.refreshTree();\n        }));\n        this._register(this.searchWidget.onPreserveCaseChange((state) => {\n            this.viewModel.preserveCase = state;\n            this.refreshTree();\n        }));\n        this._register(this.searchWidget.onReplaceValueChanged(() => {\n            this.viewModel.replaceString = this.searchWidget.getReplaceValue();\n            this.delayedRefresh.trigger(() => this.refreshTree());\n        }));\n        this._register(this.searchWidget.onBlur(() => {\n            this.toggleQueryDetailsButton.focus();\n        }));\n        this._register(this.searchWidget.onReplaceAll(() => this.replaceAll()));\n        this.trackInputBox(this.searchWidget.searchInputFocusTracker);\n        this.trackInputBox(this.searchWidget.replaceInputFocusTracker);\n    }\n    onConfigurationUpdated(event) {\n        if (event && (event.affectsConfiguration('search.decorations.colors') || event.affectsConfiguration('search.decorations.badges'))) {\n            this.refreshTree();\n        }\n    }\n    trackInputBox(inputFocusTracker, contextKey) {\n        if (!inputFocusTracker) {\n            return;\n        }\n        this._register(inputFocusTracker.onDidFocus(() => {\n            this.lastFocusState = 'input';\n            this.inputBoxFocused.set(true);\n            contextKey?.set(true);\n        }));\n        this._register(inputFocusTracker.onDidBlur(() => {\n            this.inputBoxFocused.set(this.searchWidget.searchInputHasFocus()\n                || this.searchWidget.replaceInputHasFocus()\n                || this.inputPatternIncludes.inputHasFocus()\n                || this.inputPatternExcludes.inputHasFocus());\n            contextKey?.set(false);\n        }));\n    }\n    onSearchResultsChanged(event) {\n        if (this.isVisible()) {\n            return this.refreshAndUpdateCount(event);\n        }\n        else {\n            this.changedWhileHidden = true;\n        }\n    }\n    refreshAndUpdateCount(event) {\n        this.searchWidget.setReplaceAllActionState(!this.viewModel.searchResult.isEmpty());\n        this.updateSearchResultCount(this.viewModel.searchResult.query.userDisabledExcludesAndIgnoreFiles, this.viewModel.searchResult.query?.onlyOpenEditors, event?.clearingAll);\n        return this.refreshTree(event);\n    }\n    refreshTree(event) {\n        const collapseResults = this.searchConfig.collapseResults;\n        if (!event || event.added || event.removed) {\n            if (this.searchConfig.sortOrder === \"modified\" ) {\n                this.retrieveFileStats()\n                    .then(() => this.tree.setChildren(null, this.createResultIterator(collapseResults)));\n            }\n            else {\n                this.tree.setChildren(null, this.createResultIterator(collapseResults));\n            }\n        }\n        else {\n            if (this.searchConfig.sortOrder === \"countAscending\"  ||\n                this.searchConfig.sortOrder === \"countDescending\" ) {\n                this.tree.setChildren(null, this.createResultIterator(collapseResults));\n            }\n            else {\n                event.elements.forEach(element => {\n                    this.tree.setChildren(element, this.createIterator(element, collapseResults));\n                    this.tree.rerender(element);\n                });\n            }\n        }\n    }\n    createResultIterator(collapseResults) {\n        const folderMatches = this.searchResult.folderMatches()\n            .filter(fm => !fm.isEmpty())\n            .sort(searchMatchComparer);\n        if (folderMatches.length === 1) {\n            return this.createFolderIterator(folderMatches[0], collapseResults, true);\n        }\n        return ( Iterable.map(folderMatches, folderMatch => {\n            const children = this.createFolderIterator(folderMatch, collapseResults, true);\n            return { element: folderMatch, children, incompressible: true };\n        }));\n    }\n    createFolderIterator(folderMatch, collapseResults, childFolderIncompressible) {\n        const sortOrder = this.searchConfig.sortOrder;\n        const matchArray = this.isTreeLayoutViewVisible ? folderMatch.matches() : folderMatch.allDownstreamFileMatches();\n        const matches = matchArray.sort((a, b) => searchMatchComparer(a, b, sortOrder));\n        return ( Iterable.map(matches, match => {\n            let children;\n            if (match instanceof FileMatch) {\n                children = this.createFileIterator(match);\n            }\n            else {\n                children = this.createFolderIterator(match, collapseResults, false);\n            }\n            const collapsed = (collapseResults === 'alwaysCollapse' || (match.count() > 10 && collapseResults !== 'alwaysExpand')) ? ObjectTreeElementCollapseState.PreserveOrCollapsed : ObjectTreeElementCollapseState.PreserveOrExpanded;\n            return { element: match, children, collapsed, incompressible: (match instanceof FileMatch) ? true : childFolderIncompressible };\n        }));\n    }\n    createFileIterator(fileMatch) {\n        const matches = fileMatch.matches().sort(searchMatchComparer);\n        return ( Iterable.map(matches, r => ({ element: r, incompressible: true })));\n    }\n    createIterator(match, collapseResults) {\n        return match instanceof SearchResult ? this.createResultIterator(collapseResults) :\n            match instanceof FolderMatch ? this.createFolderIterator(match, collapseResults, false) :\n                this.createFileIterator(match);\n    }\n    replaceAll() {\n        if (this.viewModel.searchResult.count() === 0) {\n            return;\n        }\n        const occurrences = this.viewModel.searchResult.count();\n        const fileCount = this.viewModel.searchResult.fileCount();\n        const replaceValue = this.searchWidget.getReplaceValue() || '';\n        const afterReplaceAllMessage = this.buildAfterReplaceAllMessage(occurrences, fileCount, replaceValue);\n        let progressComplete;\n        let progressReporter;\n        this.progressService.withProgress({ location: this.getProgressLocation(), delay: 100, total: occurrences }, p => {\n            progressReporter = p;\n            return ( new Promise(resolve => progressComplete = resolve));\n        });\n        const confirmation = {\n            title: ( nls.localize('replaceAll.confirmation.title', \"Replace All\")),\n            message: this.buildReplaceAllConfirmationMessage(occurrences, fileCount, replaceValue),\n            primaryButton: ( nls.localize(\n                { key: 'replaceAll.confirm.button', comment: ['&& denotes a mnemonic'] },\n                \"&&Replace\"\n            ))\n        };\n        this.dialogService.confirm(confirmation).then(res => {\n            if (res.confirmed) {\n                this.searchWidget.setReplaceAllActionState(false);\n                this.viewModel.searchResult.replaceAll(progressReporter).then(() => {\n                    progressComplete();\n                    const messageEl = this.clearMessage();\n                    dom.append(messageEl, afterReplaceAllMessage);\n                    this.reLayout();\n                }, (error) => {\n                    progressComplete();\n                    errors.isCancellationError(error);\n                    this.notificationService.error(error);\n                });\n            }\n            else {\n                progressComplete();\n            }\n        });\n    }\n    buildAfterReplaceAllMessage(occurrences, fileCount, replaceValue) {\n        if (occurrences === 1) {\n            if (fileCount === 1) {\n                if (replaceValue) {\n                    return ( nls.localize(\n                        'replaceAll.occurrence.file.message',\n                        \"Replaced {0} occurrence across {1} file with '{2}'.\",\n                        occurrences,\n                        fileCount,\n                        replaceValue\n                    ));\n                }\n                return ( nls.localize(\n                    'removeAll.occurrence.file.message',\n                    \"Replaced {0} occurrence across {1} file.\",\n                    occurrences,\n                    fileCount\n                ));\n            }\n            if (replaceValue) {\n                return ( nls.localize(\n                    'replaceAll.occurrence.files.message',\n                    \"Replaced {0} occurrence across {1} files with '{2}'.\",\n                    occurrences,\n                    fileCount,\n                    replaceValue\n                ));\n            }\n            return ( nls.localize(\n                'removeAll.occurrence.files.message',\n                \"Replaced {0} occurrence across {1} files.\",\n                occurrences,\n                fileCount\n            ));\n        }\n        if (fileCount === 1) {\n            if (replaceValue) {\n                return ( nls.localize(\n                    'replaceAll.occurrences.file.message',\n                    \"Replaced {0} occurrences across {1} file with '{2}'.\",\n                    occurrences,\n                    fileCount,\n                    replaceValue\n                ));\n            }\n            return ( nls.localize(\n                'removeAll.occurrences.file.message',\n                \"Replaced {0} occurrences across {1} file.\",\n                occurrences,\n                fileCount\n            ));\n        }\n        if (replaceValue) {\n            return ( nls.localize(\n                'replaceAll.occurrences.files.message',\n                \"Replaced {0} occurrences across {1} files with '{2}'.\",\n                occurrences,\n                fileCount,\n                replaceValue\n            ));\n        }\n        return ( nls.localize(\n            'removeAll.occurrences.files.message',\n            \"Replaced {0} occurrences across {1} files.\",\n            occurrences,\n            fileCount\n        ));\n    }\n    buildReplaceAllConfirmationMessage(occurrences, fileCount, replaceValue) {\n        if (occurrences === 1) {\n            if (fileCount === 1) {\n                if (replaceValue) {\n                    return ( nls.localize(\n                        'removeAll.occurrence.file.confirmation.message',\n                        \"Replace {0} occurrence across {1} file with '{2}'?\",\n                        occurrences,\n                        fileCount,\n                        replaceValue\n                    ));\n                }\n                return ( nls.localize(\n                    'replaceAll.occurrence.file.confirmation.message',\n                    \"Replace {0} occurrence across {1} file?\",\n                    occurrences,\n                    fileCount\n                ));\n            }\n            if (replaceValue) {\n                return ( nls.localize(\n                    'removeAll.occurrence.files.confirmation.message',\n                    \"Replace {0} occurrence across {1} files with '{2}'?\",\n                    occurrences,\n                    fileCount,\n                    replaceValue\n                ));\n            }\n            return ( nls.localize(\n                'replaceAll.occurrence.files.confirmation.message',\n                \"Replace {0} occurrence across {1} files?\",\n                occurrences,\n                fileCount\n            ));\n        }\n        if (fileCount === 1) {\n            if (replaceValue) {\n                return ( nls.localize(\n                    'removeAll.occurrences.file.confirmation.message',\n                    \"Replace {0} occurrences across {1} file with '{2}'?\",\n                    occurrences,\n                    fileCount,\n                    replaceValue\n                ));\n            }\n            return ( nls.localize(\n                'replaceAll.occurrences.file.confirmation.message',\n                \"Replace {0} occurrences across {1} file?\",\n                occurrences,\n                fileCount\n            ));\n        }\n        if (replaceValue) {\n            return ( nls.localize(\n                'removeAll.occurrences.files.confirmation.message',\n                \"Replace {0} occurrences across {1} files with '{2}'?\",\n                occurrences,\n                fileCount,\n                replaceValue\n            ));\n        }\n        return ( nls.localize(\n            'replaceAll.occurrences.files.confirmation.message',\n            \"Replace {0} occurrences across {1} files?\",\n            occurrences,\n            fileCount\n        ));\n    }\n    clearMessage() {\n        this.searchWithoutFolderMessageElement = undefined;\n        const wasHidden = this.messagesElement.style.display === 'none';\n        dom.clearNode(this.messagesElement);\n        dom.show(this.messagesElement);\n        this.messageDisposables.clear();\n        const newMessage = dom.append(this.messagesElement, $('.message'));\n        if (wasHidden) {\n            this.reLayout();\n        }\n        return newMessage;\n    }\n    createSearchResultsView(container) {\n        this.resultsElement = dom.append(container, $('.results.show-file-icons.file-icon-themable-tree'));\n        const delegate = this.instantiationService.createInstance(SearchDelegate);\n        const identityProvider = {\n            getId(element) {\n                return element.id();\n            }\n        };\n        this.treeLabels = this._register(this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility }));\n        this.tree = this._register(this.instantiationService.createInstance(WorkbenchCompressibleObjectTree, 'SearchView', this.resultsElement, delegate, [\n            this._register(this.instantiationService.createInstance(FolderMatchRenderer, this, this.treeLabels)),\n            this._register(this.instantiationService.createInstance(FileMatchRenderer, this, this.treeLabels)),\n            this._register(this.instantiationService.createInstance(MatchRenderer, this.viewModel, this)),\n        ], {\n            identityProvider,\n            accessibilityProvider: this.treeAccessibilityProvider,\n            dnd: this.instantiationService.createInstance(ResourceListDnDHandler, element => {\n                if (element instanceof FileMatch) {\n                    return element.resource;\n                }\n                if (element instanceof Match) {\n                    return withSelection(element.parent().resource, element.range());\n                }\n                return null;\n            }),\n            multipleSelectionSupport: true,\n            selectionNavigation: true,\n            overrideStyles: {\n                listBackground: this.getBackgroundColor()\n            },\n            additionalScrollHeight: SearchDelegate.ITEM_HEIGHT\n        }));\n        this._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n        const updateHasSomeCollapsible = () => this.toggleCollapseStateDelayer.trigger(() => this.hasSomeCollapsibleResultKey.set(this.hasSomeCollapsible()));\n        updateHasSomeCollapsible();\n        this._register(this.viewModel.searchResult.onChange(() => updateHasSomeCollapsible()));\n        this._register(this.tree.onDidChangeCollapseState(() => updateHasSomeCollapsible()));\n        this._register(Event.debounce(this.tree.onDidOpen, (last, event) => event, DEBOUNCE_DELAY, true)(options => {\n            if (options.element instanceof Match) {\n                const selectedMatch = options.element;\n                this.currentSelectedFileMatch?.setSelectedMatch(null);\n                this.currentSelectedFileMatch = selectedMatch.parent();\n                this.currentSelectedFileMatch.setSelectedMatch(selectedMatch);\n                this.onFocus(selectedMatch, options.editorOptions.preserveFocus, options.sideBySide, options.editorOptions.pinned);\n            }\n        }));\n        this._register(Event.debounce(this.tree.onDidChangeFocus, (last, event) => event, DEBOUNCE_DELAY, true)(() => {\n            const selection = this.tree.getSelection();\n            const focus = this.tree.getFocus()[0];\n            if (selection.length > 1 && focus instanceof Match) {\n                this.onFocus(focus, true);\n            }\n        }));\n        this._register(Event.any(this.tree.onDidFocus, this.tree.onDidChangeFocus)(() => {\n            const focus = this.tree.getFocus()[0];\n            if (this.tree.isDOMFocused()) {\n                this.firstMatchFocused.set(this.tree.navigate().first() === focus);\n                this.fileMatchOrMatchFocused.set(!!focus);\n                this.fileMatchFocused.set(focus instanceof FileMatch);\n                this.folderMatchFocused.set(focus instanceof FolderMatch);\n                this.matchFocused.set(focus instanceof Match);\n                this.fileMatchOrFolderMatchFocus.set(focus instanceof FileMatch || focus instanceof FolderMatch);\n                this.fileMatchOrFolderMatchWithResourceFocus.set(focus instanceof FileMatch || focus instanceof FolderMatchWithResource);\n                this.folderMatchWithResourceFocused.set(focus instanceof FolderMatchWithResource);\n                this.lastFocusState = 'tree';\n            }\n            let editable = false;\n            if (focus instanceof MatchInNotebook) {\n                editable = !focus.isWebviewMatch();\n            }\n            else if (focus instanceof FileMatch) {\n                editable = !focus.hasOnlyReadOnlyMatches();\n            }\n            else if (focus instanceof FolderMatch) {\n                editable = !focus.hasOnlyReadOnlyMatches();\n            }\n            this.isEditableItem.set(editable);\n        }));\n        this._register(this.tree.onDidBlur(() => {\n            this.firstMatchFocused.reset();\n            this.fileMatchOrMatchFocused.reset();\n            this.fileMatchFocused.reset();\n            this.folderMatchFocused.reset();\n            this.matchFocused.reset();\n            this.fileMatchOrFolderMatchFocus.reset();\n            this.fileMatchOrFolderMatchWithResourceFocus.reset();\n            this.folderMatchWithResourceFocused.reset();\n            this.isEditableItem.reset();\n        }));\n    }\n    onContextMenu(e) {\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n        this.contextMenuService.showContextMenu({\n            menuId: MenuId.SearchContext,\n            menuActionOptions: { shouldForwardArgs: true },\n            contextKeyService: this.contextKeyService,\n            getAnchor: () => e.anchor,\n            getActionsContext: () => e.element,\n        });\n    }\n    hasSomeCollapsible() {\n        const viewer = this.getControl();\n        const navigator = viewer.navigate();\n        let node = navigator.first();\n        do {\n            if (!viewer.isCollapsed(node)) {\n                return true;\n            }\n        } while (node = navigator.next());\n        return false;\n    }\n    selectNextMatch() {\n        if (!this.hasSearchResults()) {\n            return;\n        }\n        const [selected] = this.tree.getSelection();\n        if (selected && !(selected instanceof Match)) {\n            if (this.tree.isCollapsed(selected)) {\n                this.tree.expand(selected);\n            }\n        }\n        const navigator = this.tree.navigate(selected);\n        let next = navigator.next();\n        if (!next) {\n            next = navigator.first();\n        }\n        while (next && !(next instanceof Match)) {\n            if (this.tree.isCollapsed(next)) {\n                this.tree.expand(next);\n            }\n            next = navigator.next();\n        }\n        if (next) {\n            if (next === selected) {\n                this.tree.setFocus([]);\n            }\n            const event = getSelectionKeyboardEvent(undefined, false, false);\n            this.tree.setFocus([next], event);\n            this.tree.setSelection([next], event);\n            this.tree.reveal(next);\n            const ariaLabel = this.treeAccessibilityProvider.getAriaLabel(next);\n            if (ariaLabel) {\n                aria.status(ariaLabel);\n            }\n        }\n    }\n    selectPreviousMatch() {\n        if (!this.hasSearchResults()) {\n            return;\n        }\n        const [selected] = this.tree.getSelection();\n        let navigator = this.tree.navigate(selected);\n        let prev = navigator.previous();\n        while (!prev || (!(prev instanceof Match) && !this.tree.isCollapsed(prev))) {\n            const nextPrev = prev ? navigator.previous() : navigator.last();\n            if (!prev && !nextPrev) {\n                return;\n            }\n            prev = nextPrev;\n        }\n        while (!(prev instanceof Match)) {\n            const nextItem = navigator.next();\n            this.tree.expand(prev);\n            navigator = this.tree.navigate(nextItem);\n            prev = nextItem ? navigator.previous() : navigator.last();\n        }\n        if (prev) {\n            if (prev === selected) {\n                this.tree.setFocus([]);\n            }\n            const event = getSelectionKeyboardEvent(undefined, false, false);\n            this.tree.setFocus([prev], event);\n            this.tree.setSelection([prev], event);\n            this.tree.reveal(prev);\n            const ariaLabel = this.treeAccessibilityProvider.getAriaLabel(prev);\n            if (ariaLabel) {\n                aria.status(ariaLabel);\n            }\n        }\n    }\n    moveFocusToResults() {\n        this.tree.domFocus();\n    }\n    focus() {\n        super.focus();\n        if (this.lastFocusState === 'input' || !this.hasSearchResults()) {\n            const updatedText = this.searchConfig.seedOnFocus ? this.updateTextFromSelection({ allowSearchOnType: false }) : false;\n            this.searchWidget.focus(undefined, undefined, updatedText);\n        }\n        else {\n            this.tree.domFocus();\n        }\n    }\n    updateTextFromFindWidgetOrSelection({ allowUnselectedWord = true, allowSearchOnType = true }) {\n        let activeEditor = this.editorService.activeTextEditorControl;\n        if (isCodeEditor(activeEditor) && !activeEditor?.hasTextFocus()) {\n            const controller = CommonFindController.get(activeEditor);\n            if (controller && controller.isFindInputFocused()) {\n                return this.updateTextFromFindWidget(controller, { allowSearchOnType });\n            }\n            const editors = this.codeEditorService.listCodeEditors();\n            activeEditor = editors.find(editor => editor instanceof EmbeddedCodeEditorWidget && editor.getParentEditor() === activeEditor && editor.hasTextFocus())\n                ?? activeEditor;\n        }\n        return this.updateTextFromSelection({ allowUnselectedWord, allowSearchOnType }, activeEditor);\n    }\n    updateTextFromFindWidget(controller, { allowSearchOnType = true }) {\n        if (!this.searchConfig.seedWithNearestWord && (window.getSelection()?.toString() ?? '') === '') {\n            return false;\n        }\n        const searchString = controller.getState().searchString;\n        if (searchString === '') {\n            return false;\n        }\n        this.searchWidget.searchInput?.setCaseSensitive(controller.getState().matchCase);\n        this.searchWidget.searchInput?.setWholeWords(controller.getState().wholeWord);\n        this.searchWidget.searchInput?.setRegex(controller.getState().isRegex);\n        this.updateText(searchString, allowSearchOnType);\n        return true;\n    }\n    updateTextFromSelection({ allowUnselectedWord = true, allowSearchOnType = true }, editor) {\n        const seedSearchStringFromSelection = this.configurationService.getValue('editor').find.seedSearchStringFromSelection;\n        if (!seedSearchStringFromSelection) {\n            return false;\n        }\n        let selectedText = this.getSearchTextFromEditor(allowUnselectedWord, editor);\n        if (selectedText === null) {\n            return false;\n        }\n        if (this.searchWidget.searchInput?.getRegex()) {\n            selectedText = strings.escapeRegExpCharacters(selectedText);\n        }\n        this.updateText(selectedText, allowSearchOnType);\n        return true;\n    }\n    updateText(text, allowSearchOnType = true) {\n        if (allowSearchOnType && !this.viewModel.searchResult.isDirty) {\n            this.searchWidget.setValue(text);\n        }\n        else {\n            this.pauseSearching = true;\n            this.searchWidget.setValue(text);\n            this.pauseSearching = false;\n        }\n    }\n    focusNextInputBox() {\n        if (this.searchWidget.searchInputHasFocus()) {\n            if (this.searchWidget.isReplaceShown()) {\n                this.searchWidget.focus(true, true);\n            }\n            else {\n                this.moveFocusFromSearchOrReplace();\n            }\n            return;\n        }\n        if (this.searchWidget.replaceInputHasFocus()) {\n            this.moveFocusFromSearchOrReplace();\n            return;\n        }\n        if (this.inputPatternIncludes.inputHasFocus()) {\n            this.inputPatternExcludes.focus();\n            this.inputPatternExcludes.select();\n            return;\n        }\n        if (this.inputPatternExcludes.inputHasFocus()) {\n            this.selectTreeIfNotSelected();\n            return;\n        }\n    }\n    moveFocusFromSearchOrReplace() {\n        if (this.showsFileTypes()) {\n            this.toggleQueryDetails(true, this.showsFileTypes());\n        }\n        else {\n            this.selectTreeIfNotSelected();\n        }\n    }\n    focusPreviousInputBox() {\n        if (this.searchWidget.searchInputHasFocus()) {\n            return;\n        }\n        if (this.searchWidget.replaceInputHasFocus()) {\n            this.searchWidget.focus(true);\n            return;\n        }\n        if (this.inputPatternIncludes.inputHasFocus()) {\n            this.searchWidget.focus(true, true);\n            return;\n        }\n        if (this.inputPatternExcludes.inputHasFocus()) {\n            this.inputPatternIncludes.focus();\n            this.inputPatternIncludes.select();\n            return;\n        }\n        if (this.tree.isDOMFocused()) {\n            this.moveFocusFromResults();\n            return;\n        }\n    }\n    moveFocusFromResults() {\n        if (this.showsFileTypes()) {\n            this.toggleQueryDetails(true, true, false, true);\n        }\n        else {\n            this.searchWidget.focus(true, true);\n        }\n    }\n    reLayout() {\n        if (this.isDisposed || !this.size) {\n            return;\n        }\n        const actionsPosition = this.searchConfig.actionsPosition;\n        this.getContainer().classList.toggle(SearchView.ACTIONS_RIGHT_CLASS_NAME, actionsPosition === 'right');\n        this.searchWidget.setWidth(this.size.width - 28 );\n        this.inputPatternExcludes.setWidth(this.size.width - 28 );\n        this.inputPatternIncludes.setWidth(this.size.width - 28 );\n        const widgetHeight = dom.getTotalHeight(this.searchWidgetsContainerElement);\n        const messagesHeight = dom.getTotalHeight(this.messagesElement);\n        this.tree.layout(this.size.height - widgetHeight - messagesHeight, this.size.width - 28);\n    }\n    layoutBody(height, width) {\n        super.layoutBody(height, width);\n        this.size = new dom.Dimension(width, height);\n        this.reLayout();\n    }\n    getControl() {\n        return this.tree;\n    }\n    allSearchFieldsClear() {\n        return this.searchWidget.getReplaceValue() === '' &&\n            (!this.searchWidget.searchInput || this.searchWidget.searchInput.getValue() === '');\n    }\n    allFilePatternFieldsClear() {\n        return this.searchExcludePattern.getValue() === '' &&\n            this.searchIncludePattern.getValue() === '';\n    }\n    hasSearchResults() {\n        return !this.viewModel.searchResult.isEmpty();\n    }\n    clearSearchResults(clearInput = true) {\n        this.viewModel.searchResult.clear();\n        this.showEmptyStage(true);\n        if (this.contextService.getWorkbenchState() === 1 ) {\n            this.showSearchWithoutFolderMessage();\n        }\n        if (clearInput) {\n            if (this.allSearchFieldsClear()) {\n                this.clearFilePatternFields();\n            }\n            this.searchWidget.clear();\n        }\n        this.viewModel.cancelSearch();\n        this.tree.ariaLabel = ( nls.localize('emptySearch', \"Empty Search\"));\n        aria.status(( nls.localize('ariaSearchResultsClearStatus', \"The search results have been cleared\")));\n        this.reLayout();\n    }\n    clearFilePatternFields() {\n        this.searchExcludePattern.clear();\n        this.searchIncludePattern.clear();\n    }\n    cancelSearch(focus = true) {\n        if (this.viewModel.cancelSearch()) {\n            if (focus) {\n                this.searchWidget.focus();\n            }\n            return true;\n        }\n        return false;\n    }\n    selectTreeIfNotSelected() {\n        if (this.tree.getNode(null)) {\n            this.tree.domFocus();\n            const selection = this.tree.getSelection();\n            if (selection.length === 0) {\n                const event = getSelectionKeyboardEvent();\n                this.tree.focusNext(undefined, undefined, event);\n                this.tree.setSelection(this.tree.getFocus(), event);\n            }\n        }\n    }\n    getSearchTextFromEditor(allowUnselectedWord, editor) {\n        if (dom.isAncestor(document.activeElement, this.getContainer())) {\n            return null;\n        }\n        editor = editor ?? this.editorService.activeTextEditorControl;\n        if (isDiffEditor(editor)) {\n            if (editor.getOriginalEditor().hasTextFocus()) {\n                editor = editor.getOriginalEditor();\n            }\n            else {\n                editor = editor.getModifiedEditor();\n            }\n        }\n        if (!isCodeEditor(editor) || !editor.hasModel()) {\n            return null;\n        }\n        const range = editor.getSelection();\n        if (!range) {\n            return null;\n        }\n        if (range.isEmpty() && this.searchConfig.seedWithNearestWord && allowUnselectedWord) {\n            const wordAtPosition = editor.getModel().getWordAtPosition(range.getStartPosition());\n            if (wordAtPosition) {\n                return wordAtPosition.word;\n            }\n        }\n        if (!range.isEmpty()) {\n            let searchText = '';\n            for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                let lineText = editor.getModel().getLineContent(i);\n                if (i === range.endLineNumber) {\n                    lineText = lineText.substring(0, range.endColumn - 1);\n                }\n                if (i === range.startLineNumber) {\n                    lineText = lineText.substring(range.startColumn - 1);\n                }\n                if (i !== range.startLineNumber) {\n                    lineText = '\\n' + lineText;\n                }\n                searchText += lineText;\n            }\n            return searchText;\n        }\n        return null;\n    }\n    showsFileTypes() {\n        return this.queryDetails.classList.contains('more');\n    }\n    toggleCaseSensitive() {\n        this.searchWidget.searchInput?.setCaseSensitive(!this.searchWidget.searchInput.getCaseSensitive());\n        this.triggerQueryChange();\n    }\n    toggleWholeWords() {\n        this.searchWidget.searchInput?.setWholeWords(!this.searchWidget.searchInput.getWholeWords());\n        this.triggerQueryChange();\n    }\n    toggleRegex() {\n        this.searchWidget.searchInput?.setRegex(!this.searchWidget.searchInput.getRegex());\n        this.triggerQueryChange();\n    }\n    togglePreserveCase() {\n        this.searchWidget.replaceInput?.setPreserveCase(!this.searchWidget.replaceInput.getPreserveCase());\n        this.triggerQueryChange();\n    }\n    setSearchParameters(args = {}) {\n        if (typeof args.isCaseSensitive === 'boolean') {\n            this.searchWidget.searchInput?.setCaseSensitive(args.isCaseSensitive);\n        }\n        if (typeof args.matchWholeWord === 'boolean') {\n            this.searchWidget.searchInput?.setWholeWords(args.matchWholeWord);\n        }\n        if (typeof args.isRegex === 'boolean') {\n            this.searchWidget.searchInput?.setRegex(args.isRegex);\n        }\n        if (typeof args.filesToInclude === 'string') {\n            this.searchIncludePattern.setValue(String(args.filesToInclude));\n        }\n        if (typeof args.filesToExclude === 'string') {\n            this.searchExcludePattern.setValue(String(args.filesToExclude));\n        }\n        if (typeof args.query === 'string') {\n            this.searchWidget.searchInput?.setValue(args.query);\n        }\n        if (typeof args.replace === 'string') {\n            this.searchWidget.replaceInput?.setValue(args.replace);\n        }\n        else {\n            if (this.searchWidget.replaceInput && this.searchWidget.replaceInput.getValue() !== '') {\n                this.searchWidget.replaceInput.setValue('');\n            }\n        }\n        if (typeof args.triggerSearch === 'boolean' && args.triggerSearch) {\n            this.triggerQueryChange();\n        }\n        if (typeof args.preserveCase === 'boolean') {\n            this.searchWidget.replaceInput?.setPreserveCase(args.preserveCase);\n        }\n        if (typeof args.useExcludeSettingsAndIgnoreFiles === 'boolean') {\n            this.inputPatternExcludes.setUseExcludesAndIgnoreFiles(args.useExcludeSettingsAndIgnoreFiles);\n        }\n        if (typeof args.onlyOpenEditors === 'boolean') {\n            this.searchIncludePattern.setOnlySearchInOpenEditors(args.onlyOpenEditors);\n        }\n    }\n    toggleQueryDetails(moveFocus = true, show, skipLayout, reverse) {\n        const cls = 'more';\n        show = typeof show === 'undefined' ? !this.queryDetails.classList.contains(cls) : Boolean(show);\n        this.viewletState['query.queryDetailsExpanded'] = show;\n        skipLayout = Boolean(skipLayout);\n        if (show) {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'true');\n            this.queryDetails.classList.add(cls);\n            if (moveFocus) {\n                if (reverse) {\n                    this.inputPatternExcludes.focus();\n                    this.inputPatternExcludes.select();\n                }\n                else {\n                    this.inputPatternIncludes.focus();\n                    this.inputPatternIncludes.select();\n                }\n            }\n        }\n        else {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'false');\n            this.queryDetails.classList.remove(cls);\n            if (moveFocus) {\n                this.searchWidget.focus();\n            }\n        }\n        if (!skipLayout && this.size) {\n            this.reLayout();\n        }\n    }\n    searchInFolders(folderPaths = []) {\n        this._searchWithIncludeOrExclude(true, folderPaths);\n    }\n    searchOutsideOfFolders(folderPaths = []) {\n        this._searchWithIncludeOrExclude(false, folderPaths);\n    }\n    _searchWithIncludeOrExclude(include, folderPaths) {\n        if (!folderPaths.length || ( folderPaths.some(folderPath => folderPath === '.'))) {\n            this.inputPatternIncludes.setValue('');\n            this.searchWidget.focus();\n            return;\n        }\n        if (!this.showsFileTypes()) {\n            this.toggleQueryDetails(true, true);\n        }\n        (include ? this.inputPatternIncludes : this.inputPatternExcludes).setValue(folderPaths.join(', '));\n        this.searchWidget.focus(false);\n    }\n    triggerQueryChange(_options) {\n        const options = { preserveFocus: true, triggeredOnType: false, delay: 0, ..._options };\n        if (options.triggeredOnType && !this.searchConfig.searchOnType) {\n            return;\n        }\n        if (!this.pauseSearching) {\n            this.triggerQueryDelayer.trigger(() => {\n                this._onQueryChanged(options.preserveFocus, options.triggeredOnType);\n            }, options.delay);\n        }\n    }\n    _onQueryChanged(preserveFocus, triggeredOnType = false) {\n        if (!(this.searchWidget.searchInput?.inputBox.isInputValid())) {\n            return;\n        }\n        const isRegex = this.searchWidget.searchInput.getRegex();\n        const isInNotebookMarkdownInput = this.searchWidget.getNotebookFilters().markupInput;\n        const isInNotebookMarkdownPreview = this.searchWidget.getNotebookFilters().markupPreview;\n        const isInNotebookCellInput = this.searchWidget.getNotebookFilters().codeInput;\n        const isInNotebookCellOutput = this.searchWidget.getNotebookFilters().codeOutput;\n        const isWholeWords = this.searchWidget.searchInput.getWholeWords();\n        const isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n        const contentPattern = this.searchWidget.searchInput.getValue();\n        const excludePatternText = this.inputPatternExcludes.getValue().trim();\n        const includePatternText = this.inputPatternIncludes.getValue().trim();\n        const useExcludesAndIgnoreFiles = this.inputPatternExcludes.useExcludesAndIgnoreFiles();\n        const onlySearchInOpenEditors = this.inputPatternIncludes.onlySearchInOpenEditors();\n        if (contentPattern.length === 0) {\n            this.clearSearchResults(false);\n            this.clearMessage();\n            return;\n        }\n        const content = {\n            pattern: contentPattern,\n            isRegExp: isRegex,\n            isCaseSensitive: isCaseSensitive,\n            isWordMatch: isWholeWords,\n            notebookInfo: {\n                isInNotebookMarkdownInput,\n                isInNotebookMarkdownPreview,\n                isInNotebookCellInput,\n                isInNotebookCellOutput\n            }\n        };\n        const excludePattern = this.inputPatternExcludes.getValue();\n        const includePattern = this.inputPatternIncludes.getValue();\n        const charsPerLine = content.isRegExp ? 10000 : 1000;\n        const options = {\n            _reason: 'searchView',\n            extraFileResources: this.instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n            maxResults: withNullAsUndefined(this.searchConfig.maxResults),\n            disregardIgnoreFiles: !useExcludesAndIgnoreFiles || undefined,\n            disregardExcludeSettings: !useExcludesAndIgnoreFiles || undefined,\n            onlyOpenEditors: onlySearchInOpenEditors,\n            excludePattern,\n            includePattern,\n            previewOptions: {\n                matchLines: 1,\n                charsPerLine\n            },\n            isSmartCase: this.searchConfig.smartCase,\n            expandPatterns: true\n        };\n        const folderResources = this.contextService.getWorkspace().folders;\n        const onQueryValidationError = (err) => {\n            this.searchWidget.searchInput?.showMessage({ content: err.message, type: 3  });\n            this.viewModel.searchResult.clear();\n        };\n        let query;\n        try {\n            query = this.queryBuilder.text(content, ( folderResources.map(folder => folder.uri)), options);\n        }\n        catch (err) {\n            onQueryValidationError(err);\n            return;\n        }\n        this.validateQuery(query).then(() => {\n            this.onQueryTriggered(query, options, excludePatternText, includePatternText, triggeredOnType);\n            if (!preserveFocus) {\n                this.searchWidget.focus(false, undefined, true);\n            }\n        }, onQueryValidationError);\n    }\n    validateQuery(query) {\n        const folderQueriesExistP = ( query.folderQueries.map(fq => {\n            return this.fileService.exists(fq.folder).catch(() => false);\n        }));\n        return Promise.all(folderQueriesExistP).then(existResults => {\n            const existingFolderQueries = query.folderQueries.filter((folderQuery, i) => existResults[i]);\n            if (!query.folderQueries.length || existingFolderQueries.length) {\n                query.folderQueries = existingFolderQueries;\n            }\n            else {\n                const nonExistantPath = query.folderQueries[0].folder.fsPath;\n                const searchPathNotFoundError = ( nls.localize('searchPathNotFoundError', \"Search path not found: {0}\", nonExistantPath));\n                return Promise.reject(( new Error(searchPathNotFoundError)));\n            }\n            return undefined;\n        });\n    }\n    onQueryTriggered(query, options, excludePatternText, includePatternText, triggeredOnType) {\n        this.addToSearchHistoryDelayer.trigger(() => {\n            this.searchWidget.searchInput?.onSearchSubmit();\n            this.inputPatternExcludes.onSearchSubmit();\n            this.inputPatternIncludes.onSearchSubmit();\n        });\n        this.viewModel.cancelSearch(true);\n        this.currentSearchQ = this.currentSearchQ\n            .then(() => this.doSearch(query, excludePatternText, includePatternText, triggeredOnType))\n            .then(() => undefined, () => undefined);\n    }\n    _updateResults() {\n        if (this.state === SearchUIState.Idle) {\n            return;\n        }\n        try {\n            const fileCount = this.viewModel.searchResult.fileCount();\n            if (this._visibleMatches !== fileCount) {\n                this._visibleMatches = fileCount;\n                this.refreshAndUpdateCount();\n            }\n        }\n        finally {\n            this._refreshResultsScheduler.schedule();\n        }\n    }\n    doSearch(query, excludePatternText, includePatternText, triggeredOnType) {\n        let progressComplete;\n        this.progressService.withProgress({ location: this.getProgressLocation(), delay: triggeredOnType ? 300 : 0 }, _progress => {\n            return ( new Promise(resolve => progressComplete = resolve));\n        });\n        this.searchWidget.searchInput?.clearMessage();\n        this.state = SearchUIState.Searching;\n        this.showEmptyStage();\n        const slowTimer = setTimeout(() => {\n            this.state = SearchUIState.SlowSearch;\n        }, 2000);\n        const onComplete = (completed) => {\n            clearTimeout(slowTimer);\n            this.state = SearchUIState.Idle;\n            progressComplete();\n            this.onSearchResultsChanged();\n            const collapseResults = this.searchConfig.collapseResults;\n            if (collapseResults !== 'alwaysCollapse' && this.viewModel.searchResult.matches().length === 1) {\n                const onlyMatch = this.viewModel.searchResult.matches()[0];\n                if (onlyMatch.count() < 50) {\n                    this.tree.expand(onlyMatch);\n                }\n            }\n            this.viewModel.replaceString = this.searchWidget.getReplaceValue();\n            const hasResults = !this.viewModel.searchResult.isEmpty();\n            if (completed?.exit === 1 ) {\n                return;\n            }\n            if (!hasResults) {\n                const hasExcludes = !!excludePatternText;\n                const hasIncludes = !!includePatternText;\n                let message;\n                if (!completed) {\n                    message = SEARCH_CANCELLED_MESSAGE;\n                }\n                else if (this.inputPatternIncludes.onlySearchInOpenEditors()) {\n                    if (hasIncludes && hasExcludes) {\n                        message = ( nls.localize(\n                            'noOpenEditorResultsIncludesExcludes',\n                            \"No results found in open editors matching '{0}' excluding '{1}' - \",\n                            includePatternText,\n                            excludePatternText\n                        ));\n                    }\n                    else if (hasIncludes) {\n                        message = ( nls.localize(\n                            'noOpenEditorResultsIncludes',\n                            \"No results found in open editors matching '{0}' - \",\n                            includePatternText\n                        ));\n                    }\n                    else if (hasExcludes) {\n                        message = ( nls.localize(\n                            'noOpenEditorResultsExcludes',\n                            \"No results found in open editors excluding '{0}' - \",\n                            excludePatternText\n                        ));\n                    }\n                    else {\n                        message = ( nls.localize(\n                            'noOpenEditorResultsFound',\n                            \"No results found in open editors. Review your settings for configured exclusions and check your gitignore files - \"\n                        ));\n                    }\n                }\n                else {\n                    if (hasIncludes && hasExcludes) {\n                        message = ( nls.localize(\n                            'noResultsIncludesExcludes',\n                            \"No results found in '{0}' excluding '{1}' - \",\n                            includePatternText,\n                            excludePatternText\n                        ));\n                    }\n                    else if (hasIncludes) {\n                        message = ( nls.localize('noResultsIncludes', \"No results found in '{0}' - \", includePatternText));\n                    }\n                    else if (hasExcludes) {\n                        message = ( nls.localize(\n                            'noResultsExcludes',\n                            \"No results found excluding '{0}' - \",\n                            excludePatternText\n                        ));\n                    }\n                    else {\n                        message = ( nls.localize(\n                            'noResultsFound',\n                            \"No results found. Review your settings for configured exclusions and check your gitignore files - \"\n                        ));\n                    }\n                }\n                aria.status(message);\n                const messageEl = this.clearMessage();\n                dom.append(messageEl, message);\n                if (!completed) {\n                    const searchAgainButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('rerunSearch.message', \"Search again\")), () => this.triggerQueryChange({ preserveFocus: false }))));\n                    dom.append(messageEl, searchAgainButton.element);\n                }\n                else if (hasIncludes || hasExcludes) {\n                    const searchAgainButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('rerunSearchInAll.message', \"Search again in all files\")), this.onSearchAgain.bind(this))));\n                    dom.append(messageEl, searchAgainButton.element);\n                }\n                else {\n                    const openSettingsButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('openSettings.message', \"Open Settings\")), this.onOpenSettings.bind(this))));\n                    dom.append(messageEl, openSettingsButton.element);\n                }\n                if (completed) {\n                    dom.append(messageEl, $('span', undefined, ' - '));\n                    const learnMoreButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('openSettings.learnMore', \"Learn More\")), this.onLearnMore.bind(this))));\n                    dom.append(messageEl, learnMoreButton.element);\n                }\n                if (this.contextService.getWorkbenchState() === 1 ) {\n                    this.showSearchWithoutFolderMessage();\n                }\n                this.reLayout();\n            }\n            else {\n                this.viewModel.searchResult.toggleHighlights(this.isVisible());\n                aria.status(( nls.localize(\n                    'ariaSearchResultsStatus',\n                    \"Search returned {0} results in {1} files\",\n                    this.viewModel.searchResult.count(),\n                    this.viewModel.searchResult.fileCount()\n                )));\n            }\n            if (completed && completed.limitHit) {\n                completed.messages.push({ type: TextSearchCompleteMessageType.Warning, text: ( nls.localize(\n                    'searchMaxResultsWarning',\n                    \"The result set only contains a subset of all matches. Be more specific in your search to narrow down the results.\"\n                )) });\n            }\n            if (completed && completed.messages) {\n                for (const message of completed.messages) {\n                    this.addMessage(message);\n                }\n            }\n            this.reLayout();\n        };\n        const onError = (e) => {\n            clearTimeout(slowTimer);\n            this.state = SearchUIState.Idle;\n            if (errors.isCancellationError(e)) {\n                return onComplete(undefined);\n            }\n            else {\n                progressComplete();\n                this.searchWidget.searchInput?.showMessage({ content: e.message, type: 3  });\n                this.viewModel.searchResult.clear();\n                return Promise.resolve();\n            }\n        };\n        this._visibleMatches = 0;\n        this._refreshResultsScheduler.schedule();\n        this.searchWidget.setReplaceAllActionState(false);\n        this.tree.setSelection([]);\n        this.tree.setFocus([]);\n        return this.viewModel.search(query)\n            .then(onComplete, onError);\n    }\n    onOpenSettings(e) {\n        dom.EventHelper.stop(e, false);\n        this.openSettings('@id:files.exclude,search.exclude,search.useParentIgnoreFiles,search.useGlobalIgnoreFiles,search.useIgnoreFiles');\n    }\n    openSettings(query) {\n        const options = { query };\n        return this.contextService.getWorkbenchState() !== 1  ?\n            this.preferencesService.openWorkspaceSettings(options) :\n            this.preferencesService.openUserSettings(options);\n    }\n    onLearnMore() {\n        this.openerService.open(( URI.parse('https://go.microsoft.com/fwlink/?linkid=853977')));\n    }\n    onSearchAgain() {\n        this.inputPatternExcludes.setValue('');\n        this.inputPatternIncludes.setValue('');\n        this.inputPatternIncludes.setOnlySearchInOpenEditors(false);\n        this.triggerQueryChange({ preserveFocus: false });\n    }\n    onEnableExcludes() {\n        this.toggleQueryDetails(false, true);\n        this.searchExcludePattern.setUseExcludesAndIgnoreFiles(true);\n    }\n    onDisableSearchInOpenEditors() {\n        this.toggleQueryDetails(false, true);\n        this.inputPatternIncludes.setOnlySearchInOpenEditors(false);\n    }\n    updateSearchResultCount(disregardExcludesAndIgnores, onlyOpenEditors, clear = false) {\n        const fileCount = this.viewModel.searchResult.fileCount();\n        this.hasSearchResultsKey.set(fileCount > 0);\n        const msgWasHidden = this.messagesElement.style.display === 'none';\n        const messageEl = this.clearMessage();\n        const resultMsg = clear ? '' : this.buildResultCountMessage(this.viewModel.searchResult.count(), fileCount);\n        this.tree.ariaLabel = resultMsg + ( nls.localize(\n            'forTerm',\n            \" - Search: {0}\",\n            this.searchResult.query?.contentPattern.pattern ?? ''\n        ));\n        dom.append(messageEl, resultMsg);\n        if (fileCount > 0) {\n            if (disregardExcludesAndIgnores) {\n                const excludesDisabledMessage = ' - ' + ( nls.localize(\n                    'useIgnoresAndExcludesDisabled',\n                    \"exclude settings and ignore files are disabled\"\n                )) + ' ';\n                const enableExcludesButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('excludes.enable', \"enable\")), this.onEnableExcludes.bind(this), ( nls.localize(\n                    'useExcludesAndIgnoreFilesDescription',\n                    \"Use Exclude Settings and Ignore Files\"\n                )))));\n                dom.append(messageEl, $('span', undefined, excludesDisabledMessage, '(', enableExcludesButton.element, ')'));\n            }\n            if (onlyOpenEditors) {\n                const searchingInOpenMessage = ' - ' + ( nls.localize('onlyOpenEditors', \"searching only in open files\")) + ' ';\n                const disableOpenEditorsButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('openEditors.disable', \"disable\")), this.onDisableSearchInOpenEditors.bind(this), ( nls.localize('disableOpenEditors', \"Search in entire workspace\")))));\n                dom.append(messageEl, $('span', undefined, searchingInOpenMessage, '(', disableOpenEditorsButton.element, ')'));\n            }\n            dom.append(messageEl, ' - ');\n            const openInEditorTooltip = appendKeyBindingLabel(( nls.localize('openInEditor.tooltip', \"Copy current search results to an editor\")), this.keybindingService.lookupKeybinding(OpenInEditorCommandId));\n            const openInEditorButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('openInEditor.message', \"Open in editor\")), () => this.instantiationService.invokeFunction(createEditorFromSearchResult, this.searchResult, this.searchIncludePattern.getValue(), this.searchExcludePattern.getValue(), this.searchIncludePattern.onlySearchInOpenEditors()), openInEditorTooltip)));\n            dom.append(messageEl, openInEditorButton.element);\n            this.reLayout();\n        }\n        else if (!msgWasHidden) {\n            dom.hide(this.messagesElement);\n        }\n    }\n    addMessage(message) {\n        const messageBox = this.messagesElement.firstChild;\n        if (!messageBox) {\n            return;\n        }\n        dom.append(messageBox, renderSearchMessage(message, this.instantiationService, this.notificationService, this.openerService, this.commandService, this.messageDisposables, () => this.triggerQueryChange()));\n    }\n    buildResultCountMessage(resultCount, fileCount) {\n        if (resultCount === 1 && fileCount === 1) {\n            return ( nls.localize('search.file.result', \"{0} result in {1} file\", resultCount, fileCount));\n        }\n        else if (resultCount === 1) {\n            return ( nls.localize('search.files.result', \"{0} result in {1} files\", resultCount, fileCount));\n        }\n        else if (fileCount === 1) {\n            return ( nls.localize('search.file.results', \"{0} results in {1} file\", resultCount, fileCount));\n        }\n        else {\n            return ( nls.localize('search.files.results', \"{0} results in {1} files\", resultCount, fileCount));\n        }\n    }\n    showSearchWithoutFolderMessage() {\n        this.searchWithoutFolderMessageElement = this.clearMessage();\n        const textEl = dom.append(this.searchWithoutFolderMessageElement, $('p', undefined, ( nls.localize(\n            'searchWithoutFolder',\n            \"You have not opened or specified a folder. Only open files are currently searched - \"\n        ))));\n        const openFolderButton = this.messageDisposables.add(( new SearchLinkButton(( nls.localize('openFolder', \"Open Folder\")), () => {\n            this.commandService.executeCommand(platform.isMacintosh && platform.isNative ? OpenFileFolderAction.ID : OpenFolderAction.ID).catch(err => errors.onUnexpectedError(err));\n        })));\n        dom.append(textEl, openFolderButton.element);\n    }\n    showEmptyStage(forceHideMessages = false) {\n        const showingCancelled = (this.messagesElement.firstChild?.textContent?.indexOf(SEARCH_CANCELLED_MESSAGE) ?? -1) > -1;\n        if (showingCancelled || forceHideMessages || !this.configurationService.getValue().search.searchOnType) {\n            dom.hide(this.messagesElement);\n        }\n        dom.show(this.resultsElement);\n        this.currentSelectedFileMatch = undefined;\n    }\n    shouldOpenInNotebookEditor(match, uri) {\n        return match instanceof MatchInNotebook || (uri.scheme !== network.Schemas.untitled && this.notebookService.getContributedNotebookTypes(uri).length > 0);\n    }\n    onFocus(lineMatch, preserveFocus, sideBySide, pinned) {\n        const useReplacePreview = this.configurationService.getValue().search.useReplacePreview;\n        const resource = lineMatch instanceof Match ? lineMatch.parent().resource : lineMatch.resource;\n        return (useReplacePreview && this.viewModel.isReplaceActive() && !!this.viewModel.replaceString && !(this.shouldOpenInNotebookEditor(lineMatch, resource))) ?\n            this.replaceService.openReplacePreview(lineMatch, preserveFocus, sideBySide, pinned) :\n            this.open(lineMatch, preserveFocus, sideBySide, pinned, resource);\n    }\n    async open(element, preserveFocus, sideBySide, pinned, resourceInput) {\n        const selection = this.getSelectionFrom(element);\n        const oldParentMatches = element instanceof Match ? element.parent().matches() : [];\n        const resource = resourceInput ?? (element instanceof Match ? element.parent().resource : element.resource);\n        let editor;\n        const options = {\n            preserveFocus,\n            pinned,\n            selection,\n            revealIfVisible: true,\n            indexedCellOptions: element instanceof MatchInNotebook ? { cellIndex: element.cellIndex, selection: element.range } : undefined,\n        };\n        try {\n            editor = await this.editorService.openEditor({\n                resource: resource,\n                options,\n            }, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n            const editorControl = editor?.getControl();\n            if (element instanceof Match && preserveFocus && isCodeEditor(editorControl)) {\n                this.viewModel.searchResult.rangeHighlightDecorations.highlightRange(editorControl.getModel(), element.range());\n            }\n            else {\n                this.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n            }\n        }\n        catch (err) {\n            errors.onUnexpectedError(err);\n            return;\n        }\n        if (editor instanceof NotebookEditor) {\n            const elemParent = element.parent();\n            if (element instanceof Match) {\n                if (element instanceof MatchInNotebook) {\n                    element.parent().showMatch(element);\n                }\n                else {\n                    const editorWidget = editor.getControl();\n                    if (editorWidget) {\n                        elemParent.bindNotebookEditorWidget(editorWidget);\n                        await elemParent.updateMatchesForEditorWidget();\n                        const matchIndex = oldParentMatches.findIndex(e => e.id() === element.id());\n                        const matches = elemParent.matches();\n                        const match = matchIndex >= matches.length ? matches[matches.length - 1] : matches[matchIndex];\n                        if (match instanceof MatchInNotebook) {\n                            elemParent.showMatch(match);\n                            if (!this.tree.getFocus().includes(match) || !this.tree.getSelection().includes(match)) {\n                                this.tree.setSelection([match], getSelectionKeyboardEvent());\n                                this.tree.setFocus([match]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    openEditorWithMultiCursor(element) {\n        const resource = element instanceof Match ? element.parent().resource : element.resource;\n        return this.editorService.openEditor({\n            resource: resource,\n            options: {\n                preserveFocus: false,\n                pinned: true,\n                revealIfVisible: true\n            }\n        }).then(editor => {\n            if (editor) {\n                let fileMatch = null;\n                if (element instanceof FileMatch) {\n                    fileMatch = element;\n                }\n                else if (element instanceof Match) {\n                    fileMatch = element.parent();\n                }\n                if (fileMatch) {\n                    const selections = ( fileMatch.matches().map(m => ( new Selection(\n                        m.range().startLineNumber,\n                        m.range().startColumn,\n                        m.range().endLineNumber,\n                        m.range().endColumn\n                    ))));\n                    const codeEditor = getCodeEditor(editor.getControl());\n                    if (codeEditor) {\n                        const multiCursorController = MultiCursorSelectionController.get(codeEditor);\n                        multiCursorController?.selectAllUsingSelections(selections);\n                    }\n                }\n            }\n            this.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n        }, errors.onUnexpectedError);\n    }\n    getSelectionFrom(element) {\n        let match = null;\n        if (element instanceof Match) {\n            match = element;\n        }\n        if (element instanceof FileMatch && element.count() > 0) {\n            match = element.matches()[element.matches().length - 1];\n        }\n        if (match) {\n            const range = match.range();\n            if (this.viewModel.isReplaceActive() && !!this.viewModel.replaceString) {\n                const replaceString = match.replaceString;\n                return {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.startLineNumber,\n                    endColumn: range.startColumn + replaceString.length\n                };\n            }\n            return range;\n        }\n        return undefined;\n    }\n    onUntitledDidDispose(resource) {\n        if (!this.viewModel) {\n            return;\n        }\n        const matches = this.viewModel.searchResult.matches();\n        for (let i = 0, len = matches.length; i < len; i++) {\n            if (( resource.toString()) === ( matches[i].resource.toString())) {\n                this.viewModel.searchResult.remove(matches[i]);\n            }\n        }\n    }\n    onFilesChanged(e) {\n        if (!this.viewModel || (this.searchConfig.sortOrder !== \"modified\"  && !e.gotDeleted())) {\n            return;\n        }\n        const matches = this.viewModel.searchResult.matches();\n        if (e.gotDeleted()) {\n            const deletedMatches = matches.filter(m => e.contains(m.resource, 2 ));\n            this.viewModel.searchResult.remove(deletedMatches);\n        }\n        else {\n            const changedMatches = matches.filter(m => e.contains(m.resource));\n            if (changedMatches.length && this.searchConfig.sortOrder === \"modified\" ) {\n                this.updateFileStats(changedMatches).then(() => this.refreshTree());\n            }\n        }\n    }\n    get searchConfig() {\n        return this.configurationService.getValue('search');\n    }\n    clearHistory() {\n        this.searchWidget.clearHistory();\n        this.inputPatternExcludes.clearHistory();\n        this.inputPatternIncludes.clearHistory();\n    }\n    saveState() {\n        if (!this.searchWidget) {\n            return;\n        }\n        const patternExcludes = this.inputPatternExcludes?.getValue().trim() ?? '';\n        const patternIncludes = this.inputPatternIncludes?.getValue().trim() ?? '';\n        const onlyOpenEditors = this.inputPatternIncludes?.onlySearchInOpenEditors() ?? false;\n        const useExcludesAndIgnoreFiles = this.inputPatternExcludes?.useExcludesAndIgnoreFiles() ?? true;\n        const preserveCase = this.viewModel.preserveCase;\n        if (this.searchWidget.searchInput) {\n            const isRegex = this.searchWidget.searchInput.getRegex();\n            const isWholeWords = this.searchWidget.searchInput.getWholeWords();\n            const isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n            const contentPattern = this.searchWidget.searchInput.getValue();\n            const isInNotebookCellInput = this.searchWidget.getNotebookFilters().codeInput;\n            const isInNotebookCellOutput = this.searchWidget.getNotebookFilters().codeOutput;\n            const isInNotebookMarkdownInput = this.searchWidget.getNotebookFilters().markupInput;\n            const isInNotebookMarkdownPreview = this.searchWidget.getNotebookFilters().markupPreview;\n            this.viewletState['query.contentPattern'] = contentPattern;\n            this.viewletState['query.regex'] = isRegex;\n            this.viewletState['query.wholeWords'] = isWholeWords;\n            this.viewletState['query.caseSensitive'] = isCaseSensitive;\n            this.viewletState['query.isInNotebookMarkdownInput'] = isInNotebookMarkdownInput;\n            this.viewletState['query.isInNotebookMarkdownPreview'] = isInNotebookMarkdownPreview;\n            this.viewletState['query.isInNotebookCellInput'] = isInNotebookCellInput;\n            this.viewletState['query.isInNotebookCellOutput'] = isInNotebookCellOutput;\n        }\n        this.viewletState['query.folderExclusions'] = patternExcludes;\n        this.viewletState['query.folderIncludes'] = patternIncludes;\n        this.viewletState['query.useExcludesAndIgnoreFiles'] = useExcludesAndIgnoreFiles;\n        this.viewletState['query.preserveCase'] = preserveCase;\n        this.viewletState['query.onlyOpenEditors'] = onlyOpenEditors;\n        const isReplaceShown = this.searchAndReplaceWidget.isReplaceShown();\n        this.viewletState['view.showReplace'] = isReplaceShown;\n        this.viewletState['view.treeLayout'] = this.isTreeLayoutViewVisible;\n        this.viewletState['query.replaceText'] = isReplaceShown && this.searchWidget.getReplaceValue();\n        this._saveSearchHistoryService();\n        this.memento.saveMemento();\n        super.saveState();\n    }\n    _saveSearchHistoryService() {\n        const history = Object.create(null);\n        const searchHistory = this.searchWidget.getSearchHistory();\n        if (searchHistory && searchHistory.length) {\n            history.search = searchHistory;\n        }\n        const replaceHistory = this.searchWidget.getReplaceHistory();\n        if (replaceHistory && replaceHistory.length) {\n            history.replace = replaceHistory;\n        }\n        const patternExcludesHistory = this.inputPatternExcludes.getHistory();\n        if (patternExcludesHistory && patternExcludesHistory.length) {\n            history.exclude = patternExcludesHistory;\n        }\n        const patternIncludesHistory = this.inputPatternIncludes.getHistory();\n        if (patternIncludesHistory && patternIncludesHistory.length) {\n            history.include = patternIncludesHistory;\n        }\n        this.searchHistoryService.save(history);\n    }\n    async retrieveFileStats() {\n        const files = ( this.searchResult.matches().filter(f => !f.fileStat).map(f => f.resolveFileStat(this.fileService)));\n        await Promise.all(files);\n    }\n    async updateFileStats(elements) {\n        const files = ( elements.map(f => f.resolveFileStat(this.fileService)));\n        await Promise.all(files);\n    }\n    removeFileStats() {\n        for (const fileMatch of this.searchResult.matches()) {\n            fileMatch.fileStat = undefined;\n        }\n    }\n    dispose() {\n        this.isDisposed = true;\n        this.saveState();\n        super.dispose();\n    }\n};\nSearchView = ( __decorate([\n    ( __param(1, IFileService)),\n    ( __param(2, IEditorService)),\n    ( __param(3, ICodeEditorService)),\n    ( __param(4, IProgressService)),\n    ( __param(5, INotificationService)),\n    ( __param(6, IDialogService)),\n    ( __param(7, ICommandService)),\n    ( __param(8, IContextViewService)),\n    ( __param(9, IInstantiationService)),\n    ( __param(10, IViewDescriptorService)),\n    ( __param(11, IConfigurationService)),\n    ( __param(12, IWorkspaceContextService)),\n    ( __param(13, ISearchWorkbenchService)),\n    ( __param(14, IContextKeyService)),\n    ( __param(15, IReplaceService)),\n    ( __param(16, ITextFileService)),\n    ( __param(17, IPreferencesService)),\n    ( __param(18, IThemeService)),\n    ( __param(19, ISearchHistoryService)),\n    ( __param(20, IContextMenuService)),\n    ( __param(21, IAccessibilityService)),\n    ( __param(22, IKeybindingService)),\n    ( __param(23, IStorageService)),\n    ( __param(24, IOpenerService)),\n    ( __param(25, ITelemetryService)),\n    ( __param(26, INotebookService)),\n    ( __param(27, ILogService))\n], SearchView));\nclass SearchLinkButton extends Disposable {\n    constructor(label, handler, tooltip) {\n        super();\n        this.element = $('a.pointer', { tabindex: 0, title: tooltip }, label);\n        this.addEventHandlers(handler);\n    }\n    addEventHandlers(handler) {\n        const wrappedHandler = (e) => {\n            dom.EventHelper.stop(e, false);\n            handler(e);\n        };\n        this._register(dom.addDisposableListener(this.element, dom.EventType.CLICK, wrappedHandler));\n        this._register(dom.addDisposableListener(this.element, dom.EventType.KEY_DOWN, e => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(10 ) || event.equals(3 )) {\n                wrappedHandler(e);\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }));\n    }\n}\nexport { SearchView };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IClipboardService } from 'monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { CopyMatchCommandId, FileMatchOrMatchFocusKey, CopyPathCommandId, FileMatchOrFolderMatchWithResourceFocusKey, CopyAllCommandId, HasSearchResults } from '../common/constants.js';\nimport { FileMatch, FolderMatchWithResource, Match, FolderMatch, searchMatchComparer } from './searchModel.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { category, getSearchView } from './searchActionsBase.js';\nimport { isWindows } from 'monaco-editor/esm/vs/base/common/platform.js';\nregisterAction2(class CopyMatchCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: CopyMatchCommandId,\n            title: {\n                value: ( nls.localize('copyMatchLabel', \"Copy\")),\n                original: 'Copy'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: FileMatchOrMatchFocusKey,\n                primary: 2048  | 33 ,\n            },\n            menu: [{\n                    id: MenuId.SearchContext,\n                    when: FileMatchOrMatchFocusKey,\n                    group: 'search_2',\n                    order: 1\n                }]\n        });\n    }\n    async run(accessor, match) {\n        await copyMatchCommand(accessor, match);\n    }\n});\nregisterAction2(class CopyPathCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: CopyPathCommandId,\n            title: {\n                value: ( nls.localize('copyPathLabel', \"Copy Path\")),\n                original: 'Copy Path'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: FileMatchOrFolderMatchWithResourceFocusKey,\n                primary: 2048  | 512  | 33 ,\n                win: {\n                    primary: 1024  | 512  | 33\n                },\n            },\n            menu: [{\n                    id: MenuId.SearchContext,\n                    when: FileMatchOrFolderMatchWithResourceFocusKey,\n                    group: 'search_2',\n                    order: 2\n                }]\n        });\n    }\n    async run(accessor, fileMatch) {\n        await copyPathCommand(accessor, fileMatch);\n    }\n});\nregisterAction2(class CopyAllCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: CopyAllCommandId,\n            title: {\n                value: ( nls.localize('copyAllLabel', \"Copy All\")),\n                original: 'Copy All'\n            },\n            category,\n            menu: [{\n                    id: MenuId.SearchContext,\n                    when: HasSearchResults,\n                    group: 'search_2',\n                    order: 3\n                }]\n        });\n    }\n    async run(accessor) {\n        await copyAllCommand(accessor);\n    }\n});\nconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\nasync function copyPathCommand(accessor, fileMatch) {\n    if (!fileMatch) {\n        const selection = getSelectedRow(accessor);\n        if (!(selection instanceof FileMatch || selection instanceof FolderMatchWithResource)) {\n            return;\n        }\n        fileMatch = selection;\n    }\n    const clipboardService = accessor.get(IClipboardService);\n    const labelService = accessor.get(ILabelService);\n    const text = labelService.getUriLabel(fileMatch.resource, { noPrefix: true });\n    await clipboardService.writeText(text);\n}\nasync function copyMatchCommand(accessor, match) {\n    if (!match) {\n        const selection = getSelectedRow(accessor);\n        if (!selection) {\n            return;\n        }\n        match = selection;\n    }\n    const clipboardService = accessor.get(IClipboardService);\n    const labelService = accessor.get(ILabelService);\n    let text;\n    if (match instanceof Match) {\n        text = matchToString(match);\n    }\n    else if (match instanceof FileMatch) {\n        text = fileMatchToString(match, labelService).text;\n    }\n    else if (match instanceof FolderMatch) {\n        text = folderMatchToString(match, labelService).text;\n    }\n    if (text) {\n        await clipboardService.writeText(text);\n    }\n}\nasync function copyAllCommand(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const clipboardService = accessor.get(IClipboardService);\n    const labelService = accessor.get(ILabelService);\n    const searchView = getSearchView(viewsService);\n    if (searchView) {\n        const root = searchView.searchResult;\n        const text = allFolderMatchesToString(root.folderMatches(), labelService);\n        await clipboardService.writeText(text);\n    }\n}\nfunction matchToString(match, indent = 0) {\n    const getFirstLinePrefix = () => `${match.range().startLineNumber},${match.range().startColumn}`;\n    const getOtherLinePrefix = (i) => match.range().startLineNumber + i + '';\n    const fullMatchLines = match.fullPreviewLines();\n    const largestPrefixSize = fullMatchLines.reduce((largest, _, i) => {\n        const thisSize = i === 0 ?\n            getFirstLinePrefix().length :\n            getOtherLinePrefix(i).length;\n        return Math.max(thisSize, largest);\n    }, 0);\n    const formattedLines = ( fullMatchLines\n        .map((line, i) => {\n        const prefix = i === 0 ?\n            getFirstLinePrefix() :\n            getOtherLinePrefix(i);\n        const paddingStr = ' '.repeat(largestPrefixSize - prefix.length);\n        const indentStr = ' '.repeat(indent);\n        return `${indentStr}${prefix}: ${paddingStr}${line}`;\n    }));\n    return formattedLines.join('\\n');\n}\nfunction fileFolderMatchToString(match, labelService) {\n    if (match instanceof FileMatch) {\n        return fileMatchToString(match, labelService);\n    }\n    else {\n        return folderMatchToString(match, labelService);\n    }\n}\nfunction fileMatchToString(fileMatch, labelService) {\n    const matchTextRows = ( fileMatch.matches()\n        .sort(searchMatchComparer)\n        .map(match => matchToString(match, 2)));\n    const uriString = labelService.getUriLabel(fileMatch.resource, { noPrefix: true });\n    return {\n        text: `${uriString}${lineDelimiter}${matchTextRows.join(lineDelimiter)}`,\n        count: matchTextRows.length\n    };\n}\nfunction folderMatchToString(folderMatch, labelService) {\n    const results = [];\n    let numMatches = 0;\n    const matches = folderMatch.matches().sort(searchMatchComparer);\n    matches.forEach(match => {\n        const result = fileFolderMatchToString(match, labelService);\n        numMatches += result.count;\n        results.push(result.text);\n    });\n    return {\n        text: results.join(lineDelimiter + lineDelimiter),\n        count: numMatches\n    };\n}\nfunction allFolderMatchesToString(folderMatches, labelService) {\n    const folderResults = [];\n    folderMatches = folderMatches.sort(searchMatchComparer);\n    for (let i = 0; i < folderMatches.length; i++) {\n        const folderResult = folderMatchToString(folderMatches[i], labelService);\n        if (folderResult.count) {\n            folderResults.push(folderResult.text);\n        }\n    }\n    return folderResults.join(lineDelimiter + lineDelimiter);\n}\nfunction getSelectedRow(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    return searchView?.getControl().getSelection()[0];\n}\nexport { lineDelimiter };\n","import { dirname } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IListService } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { RestrictSearchToFolderId, SearchViewVisibleKey, ResourceFolderFocusKey, ExcludeFolderFromSearchId, RevealInSideBarForSearchResults, FileFocusKey, HasSearchResults, FindInFilesActionId, FindInFolderId, FindInWorkspaceId } from '../common/constants.js';\nimport { OpenEditorCommandId } from '../../searchEditor/browser/constants.js';\nimport { FileMatch, Match } from './searchModel.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { resolveResourcesForSearchIncludes } from '../../../services/search/common/queryBuilder.js';\nimport { IExplorerService, getMultiSelectedResources } from '../../files/browser/files.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { VIEWLET_ID, FilesExplorerFocusCondition, ExplorerFolderContext, ExplorerRootContext } from '../../files/common/files.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { onUnexpectedError } from 'monaco-editor/esm/vs/base/common/errors.js';\nimport { category, getSearchView, openSearchView, getElementsToOperateOn } from './searchActionsBase.js';\nimport { withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { IConfigurationResolverService } from '../../../services/configurationResolver/common/configurationResolver.js';\nimport { IHistoryService } from '../../../services/history/common/history.js';\nimport { Schemas } from 'monaco-editor/esm/vs/base/common/network.js';\nregisterAction2(class RestrictSearchToFolderAction extends Action2 {\n    constructor() {\n        super({\n            id: RestrictSearchToFolderId,\n            title: {\n                value: ( nls.localize('restrictResultsToFolder', \"Restrict Search to Folder\")),\n                original: 'Restrict Search to Folder'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, ResourceFolderFocusKey)),\n                primary: 1024  | 512  | 36 ,\n            },\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    group: 'search',\n                    order: 3,\n                    when: ( ContextKeyExpr.and(ResourceFolderFocusKey))\n                }\n            ]\n        });\n    }\n    async run(accessor, folderMatch) {\n        await searchWithFolderCommand(accessor, false, true, undefined, folderMatch);\n    }\n});\nregisterAction2(class ExcludeFolderFromSearchAction extends Action2 {\n    constructor() {\n        super({\n            id: ExcludeFolderFromSearchId,\n            title: {\n                value: ( nls.localize('excludeFolderFromSearch', \"Exclude Folder from Search\")),\n                original: 'Exclude Folder from Search'\n            },\n            category,\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    group: 'search',\n                    order: 4,\n                    when: ( ContextKeyExpr.and(ResourceFolderFocusKey))\n                }\n            ]\n        });\n    }\n    async run(accessor, folderMatch) {\n        await searchWithFolderCommand(accessor, false, false, undefined, folderMatch);\n    }\n});\nregisterAction2(class RevealInSideBarForSearchResultsAction extends Action2 {\n    constructor() {\n        super({\n            id: RevealInSideBarForSearchResults,\n            title: {\n                value: ( nls.localize('revealInSideBar', \"Reveal in Explorer View\")),\n                original: 'Reveal in Explorer View'\n            },\n            category,\n            menu: [{\n                    id: MenuId.SearchContext,\n                    when: ( ContextKeyExpr.and(FileFocusKey, HasSearchResults)),\n                    group: 'search_3',\n                    order: 1\n                }]\n        });\n    }\n    async run(accessor, args) {\n        const paneCompositeService = accessor.get(IPaneCompositePartService);\n        const explorerService = accessor.get(IExplorerService);\n        const contextService = accessor.get(IWorkspaceContextService);\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (!searchView) {\n            return;\n        }\n        let fileMatch;\n        if (!(args instanceof FileMatch)) {\n            args = searchView.getControl().getFocus()[0];\n        }\n        if (args instanceof FileMatch) {\n            fileMatch = args;\n        }\n        else {\n            return;\n        }\n        paneCompositeService.openPaneComposite(VIEWLET_ID, 0 , false).then((viewlet) => {\n            if (!viewlet) {\n                return;\n            }\n            const explorerViewContainer = viewlet.getViewPaneContainer();\n            const uri = fileMatch.resource;\n            if (uri && contextService.isInsideWorkspace(uri)) {\n                const explorerView = explorerViewContainer.getExplorerView();\n                explorerView.setExpanded(true);\n                explorerService.select(uri, true).then(() => explorerView.focus(), onUnexpectedError);\n            }\n        });\n    }\n});\nregisterAction2(class FindInFilesAction extends Action2 {\n    constructor() {\n        super({\n            id: FindInFilesActionId,\n            title: {\n                value: ( nls.localize('findInFiles', \"Find in Files\")),\n                mnemonicTitle: ( nls.localize(\n                    { key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] },\n                    \"Find &&in Files\"\n                )),\n                original: 'Find in Files'\n            },\n            description: {\n                description: ( nls.localize('findInFiles.description', \"Open a workspace search\")),\n                args: [\n                    {\n                        name: ( nls.localize('findInFiles.args', \"A set of options for the search\")),\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                query: { 'type': 'string' },\n                                replace: { 'type': 'string' },\n                                preserveCase: { 'type': 'boolean' },\n                                triggerSearch: { 'type': 'boolean' },\n                                filesToInclude: { 'type': 'string' },\n                                filesToExclude: { 'type': 'string' },\n                                isRegex: { 'type': 'boolean' },\n                                isCaseSensitive: { 'type': 'boolean' },\n                                matchWholeWord: { 'type': 'boolean' },\n                                useExcludeSettingsAndIgnoreFiles: { 'type': 'boolean' },\n                                onlyOpenEditors: { 'type': 'boolean' },\n                            }\n                        }\n                    },\n                ]\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 36 ,\n            },\n            menu: [{\n                    id: MenuId.MenubarEditMenu,\n                    group: '4_find_global',\n                    order: 1,\n                }],\n            f1: true\n        });\n    }\n    async run(accessor, args = {}) {\n        findInFilesCommand(accessor, args);\n    }\n});\nregisterAction2(class FindInFolderAction extends Action2 {\n    constructor() {\n        super({\n            id: FindInFolderId,\n            title: {\n                value: ( nls.localize('findInFolder', \"Find in Folder...\")),\n                original: 'Find in Folder...'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext)),\n                primary: 1024  | 512  | 36 ,\n            },\n            menu: [\n                {\n                    id: MenuId.ExplorerContext,\n                    group: '4_search',\n                    order: 10,\n                    when: ( ContextKeyExpr.and(ExplorerFolderContext))\n                }\n            ]\n        });\n    }\n    async run(accessor, resource) {\n        await searchWithFolderCommand(accessor, true, true, resource);\n    }\n});\nregisterAction2(class FindInWorkspaceAction extends Action2 {\n    constructor() {\n        super({\n            id: FindInWorkspaceId,\n            title: {\n                value: ( nls.localize('findInWorkspace', \"Find in Workspace...\")),\n                original: 'Find in Workspace...'\n            },\n            category,\n            menu: [\n                {\n                    id: MenuId.ExplorerContext,\n                    group: '4_search',\n                    order: 10,\n                    when: ( ContextKeyExpr.and(ExplorerRootContext, ( ExplorerFolderContext.toNegated())))\n                }\n            ]\n        });\n    }\n    async run(accessor) {\n        const searchConfig = accessor.get(IConfigurationService).getValue().search;\n        const mode = searchConfig.mode;\n        if (mode === 'view') {\n            const searchView = await openSearchView(accessor.get(IViewsService), true);\n            searchView?.searchInFolders();\n        }\n        else {\n            return accessor.get(ICommandService).executeCommand(OpenEditorCommandId, {\n                location: mode === 'newEditor' ? 'new' : 'reuse',\n                filesToInclude: '',\n            });\n        }\n    }\n});\nasync function searchWithFolderCommand(accessor, isFromExplorer, isIncludes, resource, folderMatch) {\n    const listService = accessor.get(IListService);\n    const fileService = accessor.get(IFileService);\n    const viewsService = accessor.get(IViewsService);\n    const contextService = accessor.get(IWorkspaceContextService);\n    const commandService = accessor.get(ICommandService);\n    const searchConfig = accessor.get(IConfigurationService).getValue().search;\n    const mode = searchConfig.mode;\n    let resources;\n    if (isFromExplorer) {\n        resources = getMultiSelectedResources(resource, listService, accessor.get(IEditorService), accessor.get(IExplorerService));\n    }\n    else {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (!searchView) {\n            return;\n        }\n        resources = getMultiSelectedSearchResources(searchView.getControl(), folderMatch, searchConfig);\n    }\n    const resolvedResources = fileService.resolveAll(( resources.map(resource => ({ resource })))).then(results => {\n        const folders = [];\n        results.forEach(result => {\n            if (result.success && result.stat) {\n                folders.push(result.stat.isDirectory ? result.stat.resource : dirname(result.stat.resource));\n            }\n        });\n        return resolveResourcesForSearchIncludes(folders, contextService);\n    });\n    if (mode === 'view') {\n        const searchView = await openSearchView(viewsService, true);\n        if (resources && resources.length && searchView) {\n            if (isIncludes) {\n                searchView.searchInFolders(await resolvedResources);\n            }\n            else {\n                searchView.searchOutsideOfFolders(await resolvedResources);\n            }\n        }\n        return undefined;\n    }\n    else {\n        if (isIncludes) {\n            return commandService.executeCommand(OpenEditorCommandId, {\n                filesToInclude: (await resolvedResources).join(', '),\n                showIncludesExcludes: true,\n                location: mode === 'newEditor' ? 'new' : 'reuse',\n            });\n        }\n        else {\n            return commandService.executeCommand(OpenEditorCommandId, {\n                filesToExclude: (await resolvedResources).join(', '),\n                showIncludesExcludes: true,\n                location: mode === 'newEditor' ? 'new' : 'reuse',\n            });\n        }\n    }\n}\nfunction getMultiSelectedSearchResources(viewer, currElement, sortConfig) {\n    return ( getElementsToOperateOn(viewer, currElement, sortConfig)\n        .map(\n        (renderableMatch) => ((renderableMatch instanceof Match) ? null : renderableMatch.resource)\n    ))\n        .filter((renderableMatch) => (renderableMatch !== null));\n}\nasync function findInFilesCommand(accessor, _args = {}) {\n    const searchConfig = accessor.get(IConfigurationService).getValue().search;\n    const viewsService = accessor.get(IViewsService);\n    const commandService = accessor.get(ICommandService);\n    const args = {};\n    if (( Object.keys(_args)).length !== 0) {\n        const configurationResolverService = accessor.get(IConfigurationResolverService);\n        const historyService = accessor.get(IHistoryService);\n        const workspaceContextService = accessor.get(IWorkspaceContextService);\n        const activeWorkspaceRootUri = historyService.getLastActiveWorkspaceRoot();\n        const filteredActiveWorkspaceRootUri = activeWorkspaceRootUri?.scheme === Schemas.file || activeWorkspaceRootUri?.scheme === Schemas.vscodeRemote ? activeWorkspaceRootUri : undefined;\n        const lastActiveWorkspaceRoot = filteredActiveWorkspaceRootUri ? withNullAsUndefined(workspaceContextService.getWorkspaceFolder(filteredActiveWorkspaceRootUri)) : undefined;\n        for (const entry of Object.entries(_args)) {\n            const name = entry[0];\n            const value = entry[1];\n            if (value !== undefined) {\n                args[name] = (typeof value === 'string') ? await configurationResolverService.resolveAsync(lastActiveWorkspaceRoot, value) : value;\n            }\n        }\n    }\n    const mode = searchConfig.mode;\n    if (mode === 'view') {\n        openSearchView(viewsService, false).then(openedView => {\n            if (openedView) {\n                const searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n                searchAndReplaceWidget.toggleReplace(typeof args.replace === 'string');\n                let updatedText = false;\n                if (typeof args.query !== 'string') {\n                    updatedText = openedView.updateTextFromFindWidgetOrSelection({ allowUnselectedWord: typeof args.replace !== 'string' });\n                }\n                openedView.setSearchParameters(args);\n                openedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n            }\n        });\n    }\n    else {\n        const convertArgs = (args) => ({\n            location: mode === 'newEditor' ? 'new' : 'reuse',\n            query: args.query,\n            filesToInclude: args.filesToInclude,\n            filesToExclude: args.filesToExclude,\n            matchWholeWord: args.matchWholeWord,\n            isCaseSensitive: args.isCaseSensitive,\n            isRegexp: args.isRegex,\n            useExcludeSettingsAndIgnoreFiles: args.useExcludeSettingsAndIgnoreFiles,\n            onlyOpenEditors: args.onlyOpenEditors,\n            showIncludesExcludes: !!(args.filesToExclude || args.filesToExclude || !args.useExcludeSettingsAndIgnoreFiles),\n        });\n        commandService.executeCommand(OpenEditorCommandId, convertArgs(args));\n    }\n}\nexport { findInFilesCommand };\n","import { isMacintosh } from 'monaco-editor/esm/vs/base/common/platform.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { ToggleQueryDetailsActionId, SearchViewFocusedKey, CloseReplaceWidgetActionId, SearchViewVisibleKey, ReplaceInputBoxFocusedKey, ToggleCaseSensitiveCommandId, FileMatchOrFolderMatchFocusKey, ToggleWholeWordCommandId, ToggleRegexCommandId, TogglePreserveCaseId, OpenMatch, FileMatchOrMatchFocusKey, OpenMatchToSide, AddCursorsAtSearchResults, FocusNextInputActionId, InputBoxFocusedKey, FocusPreviousInputActionId, SearchInputBoxFocusedKey, FocusSearchFromResults, FirstMatchFocusKey, ToggleSearchOnTypeActionId, FocusSearchListCommandID, FocusNextSearchResultActionId, HasSearchResults, FocusPreviousSearchResultActionId, ReplaceInFilesActionId } from '../common/constants.js';\nimport { InSearchEditor } from '../../searchEditor/browser/constants.js';\nimport { FolderMatch } from './searchModel.js';\nimport { SearchEditorInput } from '../../searchEditor/browser/searchEditorInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ContextKeyExpr, IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { assertIsDefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { ToggleCaseSensitiveKeybinding, ToggleWholeWordKeybinding, ToggleRegexKeybinding, TogglePreserveCaseKeybinding } from 'monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js';\nimport { category, getSearchView, openSearchView } from './searchActionsBase.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from 'monaco-editor/esm/vs/platform/accessibility/common/accessibility.js';\nregisterAction2(class ToggleQueryDetailsAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleQueryDetailsActionId,\n            title: {\n                value: ( nls.localize('ToggleQueryDetailsAction.label', \"Toggle Query Details\")),\n                original: 'Toggle Query Details'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.or(SearchViewFocusedKey, InSearchEditor)),\n                primary: 2048  | 1024  | 40 ,\n            },\n        });\n    }\n    run(accessor) {\n        const contextService = accessor.get(IContextKeyService).getContext(document.activeElement);\n        if (contextService.getValue(InSearchEditor.serialize())) {\n            accessor.get(IEditorService).activeEditorPane.toggleQueryDetails();\n        }\n        else if (contextService.getValue(SearchViewFocusedKey.serialize())) {\n            const searchView = getSearchView(accessor.get(IViewsService));\n            assertIsDefined(searchView).toggleQueryDetails();\n        }\n    }\n});\nregisterAction2(class CloseReplaceAction extends Action2 {\n    constructor() {\n        super({\n            id: CloseReplaceWidgetActionId,\n            title: {\n                value: ( nls.localize('CloseReplaceWidget.label', \"Close Replace Widget\")),\n                original: 'Close Replace Widget'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, ReplaceInputBoxFocusedKey)),\n                primary: 9 ,\n            },\n        });\n    }\n    run(accessor) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            searchView.searchAndReplaceWidget.toggleReplace(false);\n            searchView.searchAndReplaceWidget.focus();\n        }\n        return Promise.resolve(null);\n    }\n});\nregisterAction2(class ToggleCaseSensitiveCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleCaseSensitiveCommandId,\n            title: {\n                value: ( nls.localize('ToggleCaseSensitiveCommandId.label', \"Toggle Case Sensitive\")),\n                original: 'Toggle Case Sensitive'\n            },\n            category,\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: isMacintosh ? ( ContextKeyExpr.and(SearchViewFocusedKey, ( FileMatchOrFolderMatchFocusKey.toNegated()))) : SearchViewFocusedKey,\n            }, ToggleCaseSensitiveKeybinding)\n        });\n    }\n    async run(accessor) {\n        toggleCaseSensitiveCommand(accessor);\n    }\n});\nregisterAction2(class ToggleWholeWordCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleWholeWordCommandId,\n            title: {\n                value: ( nls.localize('ToggleWholeWordCommandId.label', 'Toggle Whole Word')),\n                original: 'Toggle Whole Word'\n            },\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchViewFocusedKey,\n            }, ToggleWholeWordKeybinding),\n            category,\n        });\n    }\n    async run(accessor) {\n        return toggleWholeWordCommand(accessor);\n    }\n});\nregisterAction2(class ToggleRegexCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleRegexCommandId,\n            title: {\n                value: ( nls.localize('ToggleRegexCommandId.label', 'Toggle Regex')),\n                original: 'Toggle Regex'\n            },\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchViewFocusedKey,\n            }, ToggleRegexKeybinding),\n            category,\n        });\n    }\n    async run(accessor) {\n        return toggleRegexCommand(accessor);\n    }\n});\nregisterAction2(class TogglePreserveCaseAction extends Action2 {\n    constructor() {\n        super({\n            id: TogglePreserveCaseId,\n            title: {\n                value: ( nls.localize('TogglePreserveCaseId.label', 'Toggle Preserve Case')),\n                original: 'Toggle Preserve Case'\n            },\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchViewFocusedKey,\n            }, TogglePreserveCaseKeybinding),\n            category,\n        });\n    }\n    async run(accessor) {\n        return togglePreserveCaseCommand(accessor);\n    }\n});\nregisterAction2(class OpenMatchAction extends Action2 {\n    constructor() {\n        super({\n            id: OpenMatch,\n            title: {\n                value: ( nls.localize('OpenMatch.label', \"Open Match\")),\n                original: 'Open Match'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, FileMatchOrMatchFocusKey)),\n                primary: 3 ,\n                mac: {\n                    primary: 3 ,\n                    secondary: [2048  | 18 ]\n                },\n            },\n        });\n    }\n    run(accessor) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            const tree = searchView.getControl();\n            const viewer = searchView.getControl();\n            const focus = tree.getFocus()[0];\n            if (focus instanceof FolderMatch) {\n                viewer.toggleCollapsed(focus);\n            }\n            else {\n                searchView.open(tree.getFocus()[0], false, false, true);\n            }\n        }\n    }\n});\nregisterAction2(class OpenMatchToSideAction extends Action2 {\n    constructor() {\n        super({\n            id: OpenMatchToSide,\n            title: {\n                value: ( nls.localize('OpenMatchToSide.label', \"Open Match To Side\")),\n                original: 'Open Match To Side'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, FileMatchOrMatchFocusKey)),\n                primary: 2048  | 3 ,\n                mac: {\n                    primary: 256  | 3\n                },\n            },\n        });\n    }\n    run(accessor) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            const tree = searchView.getControl();\n            searchView.open(tree.getFocus()[0], false, true, true);\n        }\n    }\n});\nregisterAction2(class AddCursorsAtSearchResultsAction extends Action2 {\n    constructor() {\n        super({\n            id: AddCursorsAtSearchResults,\n            title: {\n                value: ( nls.localize('AddCursorsAtSearchResults.label', 'Add Cursors at Search Results')),\n                original: 'Add Cursors at Search Results'\n            },\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, FileMatchOrMatchFocusKey)),\n                primary: 2048  | 1024  | 42 ,\n            },\n            category,\n        });\n    }\n    async run(accessor) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            const tree = searchView.getControl();\n            searchView.openEditorWithMultiCursor(tree.getFocus()[0]);\n        }\n    }\n});\nregisterAction2(class FocusNextInputAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusNextInputActionId,\n            title: {\n                value: ( nls.localize('FocusNextInputAction.label', \"Focus Next Input\")),\n                original: 'Focus Next Input'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.or(( ContextKeyExpr.and(InSearchEditor, InputBoxFocusedKey)), ( ContextKeyExpr.and(SearchViewVisibleKey, InputBoxFocusedKey)))),\n                primary: 2048  | 18 ,\n            },\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.focusNextInput();\n        }\n        const searchView = getSearchView(accessor.get(IViewsService));\n        searchView?.focusNextInputBox();\n    }\n});\nregisterAction2(class FocusPreviousInputAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusPreviousInputActionId,\n            title: {\n                value: ( nls.localize('FocusPreviousInputAction.label', \"Focus Previous Input\")),\n                original: 'Focus Previous Input'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.or(( ContextKeyExpr.and(InSearchEditor, InputBoxFocusedKey)), ( ContextKeyExpr.and(\n                    SearchViewVisibleKey,\n                    InputBoxFocusedKey,\n                    ( SearchInputBoxFocusedKey.toNegated())\n                )))),\n                primary: 2048  | 16 ,\n            },\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.focusPrevInput();\n        }\n        const searchView = getSearchView(accessor.get(IViewsService));\n        searchView?.focusPreviousInputBox();\n    }\n});\nregisterAction2(class FocusSearchFromResultsAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusSearchFromResults,\n            title: {\n                value: ( nls.localize('FocusSearchFromResults.label', \"Focus Search From Results\")),\n                original: 'Focus Search From Results'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, ( ContextKeyExpr.or(FirstMatchFocusKey, CONTEXT_ACCESSIBILITY_MODE_ENABLED)))),\n                primary: 2048  | 16 ,\n            },\n        });\n    }\n    run(accessor) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        searchView?.focusPreviousInputBox();\n    }\n});\nregisterAction2(class ToggleSearchOnTypeAction extends Action2 {\n    static { this.searchOnTypeKey = 'search.searchOnType'; }\n    constructor() {\n        super({\n            id: ToggleSearchOnTypeActionId,\n            title: {\n                value: ( nls.localize('toggleTabs', 'Toggle Search on Type')),\n                original: 'Toggle Search on Type'\n            },\n            category,\n        });\n    }\n    async run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const searchOnType = configurationService.getValue(ToggleSearchOnTypeAction.searchOnTypeKey);\n        return configurationService.updateValue(ToggleSearchOnTypeAction.searchOnTypeKey, !searchOnType);\n    }\n});\nregisterAction2(class FocusSearchListCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusSearchListCommandID,\n            title: {\n                value: ( nls.localize('focusSearchListCommandLabel', \"Focus List\")),\n                original: 'Focus List'\n            },\n            category,\n            f1: true\n        });\n    }\n    async run(accessor) {\n        focusSearchListCommand(accessor);\n    }\n});\nregisterAction2(class FocusNextSearchResultAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusNextSearchResultActionId,\n            title: {\n                value: ( nls.localize('FocusNextSearchResult.label', 'Focus Next Search Result')),\n                original: 'Focus Next Search Result'\n            },\n            keybinding: [{\n                    primary: 62 ,\n                    weight: 200 ,\n                }],\n            category,\n            f1: true,\n            precondition: ( ContextKeyExpr.or(HasSearchResults, InSearchEditor)),\n        });\n    }\n    async run(accessor) {\n        return await focusNextSearchResult(accessor);\n    }\n});\nregisterAction2(class FocusPreviousSearchResultAction extends Action2 {\n    constructor() {\n        super({\n            id: FocusPreviousSearchResultActionId,\n            title: {\n                value: ( nls.localize('FocusPreviousSearchResult.label', 'Focus Previous Search Result')),\n                original: 'Focus Previous Search Result'\n            },\n            keybinding: [{\n                    primary: 1024  | 62 ,\n                    weight: 200 ,\n                }],\n            category,\n            f1: true,\n            precondition: ( ContextKeyExpr.or(HasSearchResults, InSearchEditor)),\n        });\n    }\n    async run(accessor) {\n        return await focusPreviousSearchResult(accessor);\n    }\n});\nregisterAction2(class ReplaceInFilesAction extends Action2 {\n    constructor() {\n        super({\n            id: ReplaceInFilesActionId,\n            title: {\n                value: ( nls.localize('replaceInFiles', 'Replace in Files')),\n                original: 'Replace in Files'\n            },\n            keybinding: [{\n                    primary: 2048  | 1024  | 38 ,\n                    weight: 200 ,\n                }],\n            category,\n            f1: true,\n            menu: [{\n                    id: MenuId.MenubarEditMenu,\n                    group: '4_find_global',\n                    order: 2\n                }],\n        });\n    }\n    async run(accessor) {\n        return await findOrReplaceInFiles(accessor, true);\n    }\n});\nfunction toggleCaseSensitiveCommand(accessor) {\n    const searchView = getSearchView(accessor.get(IViewsService));\n    searchView?.toggleCaseSensitive();\n}\nfunction toggleWholeWordCommand(accessor) {\n    const searchView = getSearchView(accessor.get(IViewsService));\n    searchView?.toggleWholeWords();\n}\nfunction toggleRegexCommand(accessor) {\n    const searchView = getSearchView(accessor.get(IViewsService));\n    searchView?.toggleRegex();\n}\nfunction togglePreserveCaseCommand(accessor) {\n    const searchView = getSearchView(accessor.get(IViewsService));\n    searchView?.togglePreserveCase();\n}\nconst focusSearchListCommand = accessor => {\n    const viewsService = accessor.get(IViewsService);\n    openSearchView(viewsService).then(searchView => {\n        searchView?.moveFocusToResults();\n    });\n};\nasync function focusNextSearchResult(accessor) {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        return editorService.activeEditorPane.focusNextResult();\n    }\n    return openSearchView(accessor.get(IViewsService)).then(searchView => {\n        searchView?.selectNextMatch();\n    });\n}\nasync function focusPreviousSearchResult(accessor) {\n    const editorService = accessor.get(IEditorService);\n    const input = editorService.activeEditor;\n    if (input instanceof SearchEditorInput) {\n        return editorService.activeEditorPane.focusPreviousResult();\n    }\n    return openSearchView(accessor.get(IViewsService)).then(searchView => {\n        searchView?.selectPreviousMatch();\n    });\n}\nasync function findOrReplaceInFiles(accessor, expandSearchReplaceWidget) {\n    return openSearchView(accessor.get(IViewsService), false).then(openedView => {\n        if (openedView) {\n            const searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n            searchAndReplaceWidget.toggleReplace(expandSearchReplaceWidget);\n            const updatedText = openedView.updateTextFromFindWidgetOrSelection({ allowUnselectedWord: !expandSearchReplaceWidget });\n            openedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n        }\n    });\n}\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { getSelectionKeyboardEvent } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { searchRemoveIcon, searchReplaceIcon } from './searchIcons.js';\nimport { RemoveActionId, SearchViewVisibleKey, FileMatchOrMatchFocusKey, ReplaceActionId, ReplaceActiveKey, MatchFocusKey, IsEditableItemKey, ReplaceAllInFileActionId, FileFocusKey, ReplaceAllInFolderActionId, FolderFocusKey } from '../common/constants.js';\nimport { IReplaceService } from './replace.js';\nimport { arrayContainsElementOrParent, SearchResult, Match, MatchInNotebook, FileMatch, FolderMatch } from './searchModel.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IUriIdentityService } from 'monaco-editor/esm/vs/platform/uriIdentity/common/uriIdentity.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { category, getSearchView, getElementsToOperateOn, shouldRefocus } from './searchActionsBase.js';\nimport { equals } from 'monaco-editor/esm/vs/base/common/arrays.js';\nregisterAction2(class RemoveAction extends Action2 {\n    constructor() {\n        super({\n            id: RemoveActionId,\n            title: {\n                value: ( nls.localize('RemoveAction.label', \"Dismiss\")),\n                original: 'Dismiss'\n            },\n            category,\n            icon: searchRemoveIcon,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, FileMatchOrMatchFocusKey)),\n                primary: 20 ,\n                mac: {\n                    primary: 2048  | 1 ,\n                },\n            },\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    group: 'search',\n                    order: 2,\n                },\n                {\n                    id: MenuId.SearchActionMenu,\n                    group: 'inline',\n                    order: 2,\n                },\n            ]\n        });\n    }\n    run(accessor, context) {\n        const viewsService = accessor.get(IViewsService);\n        const configurationService = accessor.get(IConfigurationService);\n        const searchView = getSearchView(viewsService);\n        if (!searchView) {\n            return;\n        }\n        let element = context?.element;\n        let viewer = context?.viewer;\n        if (!viewer) {\n            viewer = searchView.getControl();\n        }\n        if (!element) {\n            element = viewer.getFocus()[0] ?? undefined;\n        }\n        const elementsToRemove = getElementsToOperateOn(viewer, element, configurationService.getValue('search'));\n        let focusElement = viewer.getFocus()[0] ?? undefined;\n        if (elementsToRemove.length === 0) {\n            return;\n        }\n        if (!focusElement || (focusElement instanceof SearchResult)) {\n            focusElement = element;\n        }\n        let nextFocusElement;\n        const shouldRefocusMatch = shouldRefocus(elementsToRemove, focusElement);\n        if (focusElement && shouldRefocusMatch) {\n            nextFocusElement = getElementToFocusAfterRemoved(viewer, focusElement, elementsToRemove);\n        }\n        const searchResult = searchView.searchResult;\n        if (searchResult) {\n            searchResult.batchRemove(elementsToRemove);\n        }\n        if (focusElement && shouldRefocusMatch) {\n            if (!nextFocusElement) {\n                nextFocusElement = getLastNodeFromSameType(viewer, focusElement);\n            }\n            if (nextFocusElement && !arrayContainsElementOrParent(nextFocusElement, elementsToRemove)) {\n                viewer.reveal(nextFocusElement);\n                viewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n                viewer.setSelection([nextFocusElement], getSelectionKeyboardEvent());\n            }\n        }\n        else if (!equals(viewer.getFocus(), viewer.getSelection())) {\n            viewer.setSelection(viewer.getFocus());\n        }\n        viewer.domFocus();\n        return;\n    }\n});\nregisterAction2(class ReplaceAction extends Action2 {\n    constructor() {\n        super({\n            id: ReplaceActionId,\n            title: {\n                value: ( nls.localize('match.replace.label', \"Replace\")),\n                original: 'Replace'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(\n                    SearchViewVisibleKey,\n                    ReplaceActiveKey,\n                    MatchFocusKey,\n                    IsEditableItemKey\n                )),\n                primary: 1024  | 2048  | 22 ,\n            },\n            icon: searchReplaceIcon,\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        MatchFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'search',\n                    order: 1\n                },\n                {\n                    id: MenuId.SearchActionMenu,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        MatchFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'inline',\n                    order: 1\n                }\n            ]\n        });\n    }\n    async run(accessor, context) {\n        return performReplace(accessor, context);\n    }\n});\nregisterAction2(class ReplaceAllAction extends Action2 {\n    constructor() {\n        super({\n            id: ReplaceAllInFileActionId,\n            title: {\n                value: ( nls.localize('file.replaceAll.label', \"Replace All\")),\n                original: 'Replace All'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(\n                    SearchViewVisibleKey,\n                    ReplaceActiveKey,\n                    FileFocusKey,\n                    IsEditableItemKey\n                )),\n                primary: 1024  | 2048  | 22 ,\n                secondary: [2048  | 1024  | 3 ],\n            },\n            icon: searchReplaceIcon,\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        FileFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'search',\n                    order: 1\n                },\n                {\n                    id: MenuId.SearchActionMenu,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        FileFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'inline',\n                    order: 1\n                }\n            ]\n        });\n    }\n    async run(accessor, context) {\n        return performReplace(accessor, context);\n    }\n});\nregisterAction2(class ReplaceAllInFolderAction extends Action2 {\n    constructor() {\n        super({\n            id: ReplaceAllInFolderActionId,\n            title: {\n                value: ( nls.localize('file.replaceAll.label', \"Replace All\")),\n                original: 'Replace All'\n            },\n            category,\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(\n                    SearchViewVisibleKey,\n                    ReplaceActiveKey,\n                    FolderFocusKey,\n                    IsEditableItemKey\n                )),\n                primary: 1024  | 2048  | 22 ,\n                secondary: [2048  | 1024  | 3 ],\n            },\n            icon: searchReplaceIcon,\n            menu: [\n                {\n                    id: MenuId.SearchContext,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        FolderFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'search',\n                    order: 1\n                },\n                {\n                    id: MenuId.SearchActionMenu,\n                    when: ( ContextKeyExpr.and(\n                        ReplaceActiveKey,\n                        FolderFocusKey,\n                        IsEditableItemKey\n                    )),\n                    group: 'inline',\n                    order: 1\n                }\n            ]\n        });\n    }\n    async run(accessor, context) {\n        return performReplace(accessor, context);\n    }\n});\nfunction performReplace(accessor, context) {\n    const configurationService = accessor.get(IConfigurationService);\n    const viewsService = accessor.get(IViewsService);\n    const viewlet = getSearchView(viewsService);\n    const viewer = context?.viewer ?? viewlet?.getControl();\n    if (!viewer) {\n        return;\n    }\n    const element = context?.element ?? viewer.getFocus()[0];\n    const elementsToReplace = getElementsToOperateOn(viewer, element ?? undefined, configurationService.getValue('search'));\n    let focusElement = viewer.getFocus()[0];\n    if (!focusElement || (focusElement && !arrayContainsElementOrParent(focusElement, elementsToReplace)) || (focusElement instanceof SearchResult)) {\n        focusElement = element;\n    }\n    if (elementsToReplace.length === 0) {\n        return;\n    }\n    let nextFocusElement;\n    if (focusElement) {\n        nextFocusElement = getElementToFocusAfterRemoved(viewer, focusElement, elementsToReplace);\n    }\n    const searchResult = viewlet?.searchResult;\n    if (searchResult) {\n        searchResult.batchReplace(elementsToReplace);\n    }\n    if (focusElement) {\n        if (!nextFocusElement) {\n            nextFocusElement = getLastNodeFromSameType(viewer, focusElement);\n        }\n        if (nextFocusElement) {\n            viewer.reveal(nextFocusElement);\n            viewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n            viewer.setSelection([nextFocusElement], getSelectionKeyboardEvent());\n            if (nextFocusElement instanceof Match) {\n                const useReplacePreview = configurationService.getValue().search.useReplacePreview;\n                if (!useReplacePreview || hasToOpenFile(accessor, nextFocusElement) || nextFocusElement instanceof MatchInNotebook) {\n                    viewlet?.open(nextFocusElement, true);\n                }\n                else {\n                    accessor.get(IReplaceService).openReplacePreview(nextFocusElement, true);\n                }\n            }\n            else if (nextFocusElement instanceof FileMatch) {\n                viewlet?.open(nextFocusElement, true);\n            }\n        }\n    }\n    viewer.domFocus();\n}\nfunction hasToOpenFile(accessor, currBottomElem) {\n    if (!(currBottomElem instanceof Match)) {\n        return false;\n    }\n    const activeEditor = accessor.get(IEditorService).activeEditor;\n    const file = activeEditor?.resource;\n    if (file) {\n        return accessor.get(IUriIdentityService).extUri.isEqual(file, currBottomElem.parent().resource);\n    }\n    return false;\n}\nfunction compareLevels(elem1, elem2) {\n    if (elem1 instanceof Match) {\n        if (elem2 instanceof Match) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (elem1 instanceof FileMatch) {\n        if (elem2 instanceof Match) {\n            return 1;\n        }\n        else if (elem2 instanceof FileMatch) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else {\n        if (elem2 instanceof FolderMatch) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n}\nfunction getElementToFocusAfterRemoved(viewer, element, elementsToRemove) {\n    const navigator = viewer.navigate(element);\n    if (element instanceof FolderMatch) {\n        while (!!navigator.next() && (!(navigator.current() instanceof FolderMatch) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) { }\n    }\n    else if (element instanceof FileMatch) {\n        while (!!navigator.next() && (!(navigator.current() instanceof FileMatch) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) {\n            viewer.expand(navigator.current());\n        }\n    }\n    else {\n        while (navigator.next() && (!(navigator.current() instanceof Match) || arrayContainsElementOrParent(navigator.current(), elementsToRemove))) {\n            viewer.expand(navigator.current());\n        }\n    }\n    return navigator.current();\n}\nfunction getLastNodeFromSameType(viewer, element) {\n    let lastElem = viewer.lastVisibleElement ?? null;\n    while (lastElem) {\n        const compareVal = compareLevels(element, lastElem);\n        if (compareVal === -1) {\n            viewer.expand(lastElem);\n            lastElem = viewer.lastVisibleElement;\n        }\n        else if (compareVal === 1) {\n            lastElem = viewer.getParentElement(lastElem);\n        }\n        else {\n            return lastElem;\n        }\n    }\n    return undefined;\n}\nexport { getElementToFocusAfterRemoved, getLastNodeFromSameType };\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { ShowAllSymbolsActionId } from '../common/constants.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { IQuickInputService } from 'monaco-editor/esm/vs/platform/quickinput/common/quickInput.js';\nregisterAction2(class ShowAllSymbolsAction extends Action2 {\n    static { this.ID = 'workbench.action.showAllSymbols'; }\n    static { this.LABEL = ( nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\")); }\n    static { this.ALL_SYMBOLS_PREFIX = '#'; }\n    constructor() {\n        super({\n            id: ShowAllSymbolsActionId,\n            title: {\n                value: ( nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\")),\n                original: 'Go to Symbol in Workspace...',\n                mnemonicTitle: ( nls.localize(\n                    { key: 'miGotoSymbolInWorkspace', comment: ['&& denotes a mnemonic'] },\n                    \"Go to Symbol in &&Workspace...\"\n                ))\n            },\n            f1: true,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 50\n            },\n            menu: {\n                id: MenuId.MenubarGoMenu,\n                group: '3_global_nav',\n                order: 2\n            }\n        });\n    }\n    async run(accessor) {\n        accessor.get(IQuickInputService).quickAccess.show(ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX);\n    }\n});\n","import * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { WorkbenchListFocusContextKey } from 'monaco-editor/esm/vs/platform/list/browser/listService.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { searchStopIcon, searchRefreshIcon, searchCollapseAllIcon, searchExpandAllIcon, searchClearIcon, searchShowAsList, searchShowAsTree } from './searchIcons.js';\nimport { ClearSearchHistoryCommandId, CancelSearchActionId, SearchViewVisibleKey, RefreshSearchResultsActionId, ViewHasSearchPatternKey, CollapseSearchResultsActionId, HasSearchResults, ViewHasSomeCollapsibleKey, ExpandSearchResultsActionId, ClearSearchResultsActionId, ViewHasReplacePatternKey, ViewHasFilePatternKey, ViewAsTreeActionId, InTreeViewKey, ViewAsListActionId } from '../common/constants.js';\nimport { ISearchHistoryService } from '../common/searchHistoryService.js';\nimport { FolderMatchWorkspaceRoot, Match, FolderMatch, FolderMatchNoRoot, SearchResult, FileMatch } from './searchModel.js';\nimport { VIEW_ID } from '../../../services/search/common/search.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { SearchStateKey, SearchUIState } from '../common/search.js';\nimport { category, getSearchView } from './searchActionsBase.js';\nregisterAction2(class ClearSearchHistoryCommandAction extends Action2 {\n    constructor() {\n        super({\n            id: ClearSearchHistoryCommandId,\n            title: {\n                value: ( nls.localize('clearSearchHistoryLabel', \"Clear Search History\")),\n                original: 'Clear Search History'\n            },\n            category,\n            f1: true\n        });\n    }\n    async run(accessor) {\n        clearHistoryCommand(accessor);\n    }\n});\nregisterAction2(class CancelSearchAction extends Action2 {\n    constructor() {\n        super({\n            id: CancelSearchActionId,\n            title: {\n                value: ( nls.localize('CancelSearchAction.label', \"Cancel Search\")),\n                original: 'Cancel Search'\n            },\n            icon: searchStopIcon,\n            category,\n            f1: true,\n            precondition: ( ( SearchStateKey.isEqualTo(SearchUIState.Idle)).negate()),\n            keybinding: {\n                weight: 200 ,\n                when: ( ContextKeyExpr.and(SearchViewVisibleKey, WorkbenchListFocusContextKey)),\n                primary: 9 ,\n            },\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 0,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), ( SearchStateKey.isEqualTo(SearchUIState.SlowSearch)))),\n                }]\n        });\n    }\n    run(accessor) {\n        return cancelSearch(accessor);\n    }\n});\nregisterAction2(class RefreshAction extends Action2 {\n    constructor() {\n        super({\n            id: RefreshSearchResultsActionId,\n            title: {\n                value: ( nls.localize('RefreshAction.label', \"Refresh\")),\n                original: 'Refresh'\n            },\n            icon: searchRefreshIcon,\n            precondition: ViewHasSearchPatternKey,\n            category,\n            f1: true,\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 0,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), ( ( SearchStateKey.isEqualTo(SearchUIState.SlowSearch)).negate()))),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        return refreshSearch(accessor);\n    }\n});\nregisterAction2(class CollapseDeepestExpandedLevelAction extends Action2 {\n    constructor() {\n        super({\n            id: CollapseSearchResultsActionId,\n            title: {\n                value: ( nls.localize('CollapseDeepestExpandedLevelAction.label', \"Collapse All\")),\n                original: 'Collapse All'\n            },\n            category,\n            icon: searchCollapseAllIcon,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(HasSearchResults, ViewHasSomeCollapsibleKey)),\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 3,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), ( ContextKeyExpr.or(( HasSearchResults.negate()), ViewHasSomeCollapsibleKey)))),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        return collapseDeepestExpandedLevel(accessor);\n    }\n});\nregisterAction2(class ExpandAllAction extends Action2 {\n    constructor() {\n        super({\n            id: ExpandSearchResultsActionId,\n            title: {\n                value: ( nls.localize('ExpandAllAction.label', \"Expand All\")),\n                original: 'Expand All'\n            },\n            category,\n            icon: searchExpandAllIcon,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(HasSearchResults, ( ViewHasSomeCollapsibleKey.toNegated()))),\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 3,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), HasSearchResults, ( ViewHasSomeCollapsibleKey.toNegated()))),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        return expandAll(accessor);\n    }\n});\nregisterAction2(class ClearSearchResultsAction extends Action2 {\n    constructor() {\n        super({\n            id: ClearSearchResultsActionId,\n            title: {\n                value: ( nls.localize('ClearSearchResultsAction.label', \"Clear Search Results\")),\n                original: 'Clear Search Results'\n            },\n            category,\n            icon: searchClearIcon,\n            f1: true,\n            precondition: ( ContextKeyExpr.or(\n                HasSearchResults,\n                ViewHasSearchPatternKey,\n                ViewHasReplacePatternKey,\n                ViewHasFilePatternKey\n            )),\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 1,\n                    when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        return clearSearchResults(accessor);\n    }\n});\nregisterAction2(class ViewAsTreeAction extends Action2 {\n    constructor() {\n        super({\n            id: ViewAsTreeActionId,\n            title: {\n                value: ( nls.localize('ViewAsTreeAction.label', \"View as Tree\")),\n                original: 'View as Tree'\n            },\n            category,\n            icon: searchShowAsList,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(HasSearchResults, ( InTreeViewKey.toNegated()))),\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 2,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), ( InTreeViewKey.toNegated()))),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            searchView.setTreeView(true);\n        }\n    }\n});\nregisterAction2(class ViewAsListAction extends Action2 {\n    constructor() {\n        super({\n            id: ViewAsListActionId,\n            title: {\n                value: ( nls.localize('ViewAsListAction.label', \"View as List\")),\n                original: 'View as List'\n            },\n            category,\n            icon: searchShowAsTree,\n            f1: true,\n            precondition: ( ContextKeyExpr.and(HasSearchResults, InTreeViewKey)),\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 2,\n                    when: ( ContextKeyExpr.and(( ContextKeyExpr.equals('view', VIEW_ID)), InTreeViewKey)),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        const searchView = getSearchView(accessor.get(IViewsService));\n        if (searchView) {\n            searchView.setTreeView(false);\n        }\n    }\n});\nconst clearHistoryCommand = accessor => {\n    const searchHistoryService = accessor.get(ISearchHistoryService);\n    searchHistoryService.clearHistory();\n};\nfunction expandAll(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    if (searchView) {\n        const viewer = searchView.getControl();\n        viewer.expandAll();\n    }\n}\nfunction clearSearchResults(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    searchView?.clearSearchResults();\n}\nfunction cancelSearch(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    searchView?.cancelSearch();\n}\nfunction refreshSearch(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    searchView?.triggerQueryChange({ preserveFocus: false });\n}\nfunction collapseDeepestExpandedLevel(accessor) {\n    const viewsService = accessor.get(IViewsService);\n    const searchView = getSearchView(viewsService);\n    if (searchView) {\n        const viewer = searchView.getControl();\n        const navigator = viewer.navigate();\n        let node = navigator.first();\n        let canCollapseFileMatchLevel = false;\n        let canCollapseFirstLevel = false;\n        if (node instanceof FolderMatchWorkspaceRoot || searchView.isTreeLayoutViewVisible) {\n            while (node = navigator.next()) {\n                if (node instanceof Match) {\n                    canCollapseFileMatchLevel = true;\n                    break;\n                }\n                if (searchView.isTreeLayoutViewVisible && !canCollapseFirstLevel) {\n                    let nodeToTest = node;\n                    if (node instanceof FolderMatch) {\n                        const compressionStartNode = viewer.getCompressedTreeNode(node).element?.elements[0];\n                        nodeToTest = (compressionStartNode && !(compressionStartNode instanceof Match)) ? compressionStartNode : node;\n                    }\n                    const immediateParent = nodeToTest.parent();\n                    if (!(immediateParent instanceof FolderMatchWorkspaceRoot || immediateParent instanceof FolderMatchNoRoot || immediateParent instanceof SearchResult)) {\n                        canCollapseFirstLevel = true;\n                    }\n                }\n            }\n        }\n        if (canCollapseFileMatchLevel) {\n            node = navigator.first();\n            do {\n                if (node instanceof FileMatch) {\n                    viewer.collapse(node);\n                }\n            } while (node = navigator.next());\n        }\n        else if (canCollapseFirstLevel) {\n            node = navigator.first();\n            if (node) {\n                do {\n                    let nodeToTest = node;\n                    if (node instanceof FolderMatch) {\n                        const compressionStartNode = viewer.getCompressedTreeNode(node).element?.elements[0];\n                        nodeToTest = (compressionStartNode && !(compressionStartNode instanceof Match)) ? compressionStartNode : node;\n                    }\n                    const immediateParent = nodeToTest.parent();\n                    if (immediateParent instanceof FolderMatchWorkspaceRoot || immediateParent instanceof FolderMatchNoRoot) {\n                        if (viewer.hasElement(node)) {\n                            viewer.collapse(node, true);\n                        }\n                        else {\n                            viewer.collapseAll();\n                        }\n                    }\n                } while (node = navigator.next());\n            }\n        }\n        else {\n            viewer.collapseAll();\n        }\n        const firstFocusParent = viewer.getFocus()[0]?.parent();\n        if (firstFocusParent && (firstFocusParent instanceof FolderMatch || firstFocusParent instanceof FileMatch) &&\n            viewer.hasElement(firstFocusParent) && viewer.isCollapsed(firstFocusParent)) {\n            viewer.domFocus();\n            viewer.focusFirst();\n            viewer.setSelection(viewer.getFocus());\n        }\n    }\n}\n","import { ReplacePreviewContentProvider } from './replaceService.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nfunction registerContributions() {\n    ( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ReplacePreviewContentProvider, 1 );\n}\nexport { registerContributions };\n","import { ReplacePreviewContentProvider } from './replaceService.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { Extensions } from '../../../common/contributions.js';\nfunction registerContributions() {\n    ( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ReplacePreviewContentProvider, 1 );\n}\nexport { registerContributions };\n","import * as platform from 'monaco-editor/esm/vs/base/common/platform.js';\nimport { AbstractGotoLineQuickAccessProvider } from 'monaco-editor/esm/vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport * as nls from 'monaco-editor/esm/vs/nls.js';\nimport { Extensions as Extensions$2 } from 'monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { Extensions as Extensions$1 } from 'monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { defaultQuickAccessContextKeyValue } from '../../../browser/quickaccess.js';\nimport { Extensions } from '../../../common/views.js';\nimport { GotoSymbolQuickAccessProvider } from '../../codeEditor/browser/quickaccess/gotoSymbolQuickAccess.js';\nimport { AnythingQuickAccessProvider } from './anythingQuickAccess.js';\nimport { registerContributions } from './replaceContributions.js';\nimport { registerContributions as registerContributions$1 } from './notebookSearchContributions.js';\nimport { searchViewIcon } from './searchIcons.js';\nimport { SearchView } from './searchView.js';\nimport { registerContributions as registerContributions$2 } from './searchWidget.js';\nimport { SymbolsQuickAccessProvider } from './symbolsQuickAccess.js';\nimport { VIEWLET_ID, SEARCH_EXCLUDE_CONFIG, VIEW_ID } from '../../../services/search/common/search.js';\nimport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { assertType } from 'monaco-editor/esm/vs/base/common/types.js';\nimport { getWorkspaceSymbols } from '../common/search.js';\nimport { ShowAllSymbolsActionId } from '../common/constants.js';\nimport './searchActionsCopy.js';\nimport './searchActionsFind.js';\nimport './searchActionsNav.js';\nimport './searchActionsRemoveReplace.js';\nimport './searchActionsSymbol.js';\nimport './searchActionsTopBar.js';\nregisterContributions();\nregisterContributions$1();\nregisterContributions$2();\nconst SEARCH_MODE_CONFIG = 'search.mode';\nconst viewContainer = ( Registry.as(Extensions.ViewContainersRegistry)).registerViewContainer({\n    id: VIEWLET_ID,\n    title: { value: ( nls.localize('name', \"Search\")), original: 'Search' },\n    ctorDescriptor: ( new SyncDescriptor(\n        ViewPaneContainer,\n        [VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }]\n    )),\n    hideIfEmpty: true,\n    icon: searchViewIcon,\n    order: 1,\n}, 0 , { doNotRegisterOpenCommand: true });\nconst viewDescriptor = {\n    id: VIEW_ID,\n    containerIcon: searchViewIcon,\n    name: ( nls.localize('search', \"Search\")),\n    ctorDescriptor: ( new SyncDescriptor(SearchView)),\n    canToggleVisibility: false,\n    canMoveView: true,\n    openCommandActionDescriptor: {\n        id: viewContainer.id,\n        mnemonicTitle: ( nls.localize({ key: 'miViewSearch', comment: ['&& denotes a mnemonic'] }, \"&&Search\")),\n        keybindings: {\n            primary: 2048  | 1024  | 36 ,\n            when: ( ContextKeyExpr.regex('neverMatch', /doesNotMatch/))\n        },\n        order: 1\n    }\n};\n( Registry.as(Extensions.ViewsRegistry)).registerViews([viewDescriptor], viewContainer);\nconst quickAccessRegistry = ( Registry.as(Extensions$1.Quickaccess));\nquickAccessRegistry.registerQuickAccessProvider({\n    ctor: AnythingQuickAccessProvider,\n    prefix: AnythingQuickAccessProvider.PREFIX,\n    placeholder: ( nls.localize(\n        'anythingQuickAccessPlaceholder',\n        \"Search files by name (append {0} to go to line or {1} to go to symbol)\",\n        AbstractGotoLineQuickAccessProvider.PREFIX,\n        GotoSymbolQuickAccessProvider.PREFIX\n    )),\n    contextKey: defaultQuickAccessContextKeyValue,\n    helpEntries: [{ description: ( nls.localize('anythingQuickAccess', \"Go to File\")), commandId: 'workbench.action.quickOpen' }]\n});\nquickAccessRegistry.registerQuickAccessProvider({\n    ctor: SymbolsQuickAccessProvider,\n    prefix: SymbolsQuickAccessProvider.PREFIX,\n    placeholder: ( nls.localize('symbolsQuickAccessPlaceholder', \"Type the name of a symbol to open.\")),\n    contextKey: 'inWorkspaceSymbolsPicker',\n    helpEntries: [{ description: ( nls.localize('symbolsQuickAccess', \"Go to Symbol in Workspace\")), commandId: ShowAllSymbolsActionId }]\n});\nconst configurationRegistry = ( Registry.as(Extensions$2.Configuration));\nconfigurationRegistry.registerConfiguration({\n    id: 'search',\n    order: 13,\n    title: ( nls.localize('searchConfigurationTitle', \"Search\")),\n    type: 'object',\n    properties: {\n        [SEARCH_EXCLUDE_CONFIG]: {\n            type: 'object',\n            markdownDescription: ( nls.localize(\n                'exclude',\n                \"Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting.\"\n            )),\n            default: { '**/node_modules': true, '**/bower_components': true, '**/*.code-search': true },\n            additionalProperties: {\n                anyOf: [\n                    {\n                        type: 'boolean',\n                        description: ( nls.localize(\n                            'exclude.boolean',\n                            \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"\n                        )),\n                    },\n                    {\n                        type: 'object',\n                        properties: {\n                            when: {\n                                type: 'string',\n                                pattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n                                default: '$(basename).ext',\n                                markdownDescription: ( nls.localize(\n                                    { key: 'exclude.when', comment: ['\\\\$(basename) should not be translated'] },\n                                    'Additional check on the siblings of a matching file. Use \\\\$(basename) as variable for the matching file name.'\n                                ))\n                            }\n                        }\n                    }\n                ]\n            },\n            scope: 4\n        },\n        [SEARCH_MODE_CONFIG]: {\n            type: 'string',\n            enum: ['view', 'reuseEditor', 'newEditor'],\n            default: 'view',\n            markdownDescription: ( nls.localize(\n                'search.mode',\n                \"Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor.\"\n            )),\n            enumDescriptions: [\n                ( nls.localize(\n                    'search.mode.view',\n                    \"Search in the search view, either in the panel or side bars.\"\n                )),\n                ( nls.localize(\n                    'search.mode.reuseEditor',\n                    \"Search in an existing search editor if present, otherwise in a new search editor.\"\n                )),\n                ( nls.localize('search.mode.newEditor', \"Search in a new search editor.\")),\n            ]\n        },\n        'search.useRipgrep': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'useRipgrep',\n                \"This setting is deprecated and now falls back on \\\"search.usePCRE2\\\".\"\n            )),\n            deprecationMessage: ( nls.localize(\n                'useRipgrepDeprecated',\n                \"Deprecated. Consider \\\"search.usePCRE2\\\" for advanced regex feature support.\"\n            )),\n            default: true\n        },\n        'search.maintainFileSearchCache': {\n            type: 'boolean',\n            deprecationMessage: ( nls.localize(\n                'maintainFileSearchCacheDeprecated',\n                \"The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.\"\n            )),\n            description: ( nls.localize(\n                'search.maintainFileSearchCache',\n                \"When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.\"\n            )),\n            default: false\n        },\n        'search.useIgnoreFiles': {\n            type: 'boolean',\n            markdownDescription: ( nls.localize(\n                'useIgnoreFiles',\n                \"Controls whether to use `.gitignore` and `.ignore` files when searching for files.\"\n            )),\n            default: true,\n            scope: 4\n        },\n        'search.useGlobalIgnoreFiles': {\n            type: 'boolean',\n            markdownDescription: ( nls.localize(\n                'useGlobalIgnoreFiles',\n                \"Controls whether to use your global gitignore file (e.g., from `$HOME/.config/git/ignore`) when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.\"\n            )),\n            default: false,\n            scope: 4\n        },\n        'search.useParentIgnoreFiles': {\n            type: 'boolean',\n            markdownDescription: ( nls.localize(\n                'useParentIgnoreFiles',\n                \"Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.\"\n            )),\n            default: false,\n            scope: 4\n        },\n        'search.quickOpen.includeSymbols': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.quickOpen.includeSymbols',\n                \"Whether to include results from a global symbol search in the file results for Quick Open.\"\n            )),\n            default: false\n        },\n        'search.quickOpen.includeHistory': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.quickOpen.includeHistory',\n                \"Whether to include results from recently opened files in the file results for Quick Open.\"\n            )),\n            default: true\n        },\n        'search.quickOpen.history.filterSortOrder': {\n            'type': 'string',\n            'enum': ['default', 'recency'],\n            'default': 'default',\n            'enumDescriptions': [\n                ( nls.localize(\n                    'filterSortOrder.default',\n                    'History entries are sorted by relevance based on the filter value used. More relevant entries appear first.'\n                )),\n                ( nls.localize(\n                    'filterSortOrder.recency',\n                    'History entries are sorted by recency. More recently opened entries appear first.'\n                ))\n            ],\n            'description': ( nls.localize(\n                'filterSortOrder',\n                \"Controls sorting order of editor history in quick open when filtering.\"\n            ))\n        },\n        'search.followSymlinks': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.followSymlinks',\n                \"Controls whether to follow symlinks while searching.\"\n            )),\n            default: true\n        },\n        'search.smartCase': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.smartCase',\n                \"Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.\"\n            )),\n            default: false\n        },\n        'search.globalFindClipboard': {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'search.globalFindClipboard',\n                \"Controls whether the search view should read or modify the shared find clipboard on macOS.\"\n            )),\n            included: platform.isMacintosh\n        },\n        'search.location': {\n            type: 'string',\n            enum: ['sidebar', 'panel'],\n            default: 'sidebar',\n            description: ( nls.localize(\n                'search.location',\n                \"Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.\"\n            )),\n            deprecationMessage: ( nls.localize(\n                'search.location.deprecationMessage',\n                \"This setting is deprecated. You can drag the search icon to a new location instead.\"\n            ))\n        },\n        'search.maxResults': {\n            type: ['number', 'null'],\n            default: 20000,\n            markdownDescription: ( nls.localize(\n                'search.maxResults',\n                \"Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.\"\n            ))\n        },\n        'search.collapseResults': {\n            type: 'string',\n            enum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n            enumDescriptions: [\n                ( nls.localize(\n                    'search.collapseResults.auto',\n                    \"Files with less than 10 results are expanded. Others are collapsed.\"\n                )),\n                '',\n                ''\n            ],\n            default: 'alwaysExpand',\n            description: ( nls.localize(\n                'search.collapseAllResults',\n                \"Controls whether the search results will be collapsed or expanded.\"\n            )),\n        },\n        'search.useReplacePreview': {\n            type: 'boolean',\n            default: true,\n            description: ( nls.localize(\n                'search.useReplacePreview',\n                \"Controls whether to open Replace Preview when selecting or replacing a match.\"\n            )),\n        },\n        'search.showLineNumbers': {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'search.showLineNumbers',\n                \"Controls whether to show line numbers for search results.\"\n            )),\n        },\n        'search.usePCRE2': {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'search.usePCRE2',\n                \"Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.\"\n            )),\n            deprecationMessage: ( nls.localize(\n                'usePCRE2Deprecated',\n                \"Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.\"\n            )),\n        },\n        'search.actionsPosition': {\n            type: 'string',\n            enum: ['auto', 'right'],\n            enumDescriptions: [\n                ( nls.localize(\n                    'search.actionsPositionAuto',\n                    \"Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.\"\n                )),\n                ( nls.localize(\n                    'search.actionsPositionRight',\n                    \"Always position the actionbar to the right.\"\n                )),\n            ],\n            default: 'right',\n            description: ( nls.localize(\n                'search.actionsPosition',\n                \"Controls the positioning of the actionbar on rows in the search view.\"\n            ))\n        },\n        'search.searchOnType': {\n            type: 'boolean',\n            default: true,\n            description: ( nls.localize('search.searchOnType', \"Search all files as you type.\"))\n        },\n        'search.seedWithNearestWord': {\n            type: 'boolean',\n            default: false,\n            description: ( nls.localize(\n                'search.seedWithNearestWord',\n                \"Enable seeding search from the word nearest the cursor when the active editor has no selection.\"\n            ))\n        },\n        'search.seedOnFocus': {\n            type: 'boolean',\n            default: false,\n            markdownDescription: ( nls.localize(\n                'search.seedOnFocus',\n                \"Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.\"\n            ))\n        },\n        'search.searchOnTypeDebouncePeriod': {\n            type: 'number',\n            default: 300,\n            markdownDescription: ( nls.localize(\n                'search.searchOnTypeDebouncePeriod',\n                \"When {0} is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when {0} is disabled.\",\n                '`#search.searchOnType#`'\n            ))\n        },\n        'search.searchEditor.doubleClickBehaviour': {\n            type: 'string',\n            enum: ['selectWord', 'goToLocation', 'openLocationToSide'],\n            default: 'goToLocation',\n            enumDescriptions: [\n                ( nls.localize(\n                    'search.searchEditor.doubleClickBehaviour.selectWord',\n                    \"Double-clicking selects the word under the cursor.\"\n                )),\n                ( nls.localize(\n                    'search.searchEditor.doubleClickBehaviour.goToLocation',\n                    \"Double-clicking opens the result in the active editor group.\"\n                )),\n                ( nls.localize(\n                    'search.searchEditor.doubleClickBehaviour.openLocationToSide',\n                    \"Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist.\"\n                )),\n            ],\n            markdownDescription: ( nls.localize(\n                'search.searchEditor.doubleClickBehaviour',\n                \"Configure effect of double-clicking a result in a search editor.\"\n            ))\n        },\n        'search.searchEditor.reusePriorSearchConfiguration': {\n            type: 'boolean',\n            default: false,\n            markdownDescription: ( nls.localize(\n                { key: 'search.searchEditor.reusePriorSearchConfiguration', comment: ['\"Search Editor\" is a type of editor that can display search results. \"includes, excludes, and flags\" refers to the \"files to include\" and \"files to exclude\" input boxes, and the flags that control whether a query is case-sensitive or a regex.'] },\n                \"When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.\"\n            ))\n        },\n        'search.searchEditor.defaultNumberOfContextLines': {\n            type: ['number', 'null'],\n            default: 1,\n            markdownDescription: ( nls.localize(\n                'search.searchEditor.defaultNumberOfContextLines',\n                \"The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.\"\n            ))\n        },\n        'search.sortOrder': {\n            'type': 'string',\n            'enum': [\"default\" , \"fileNames\" , \"type\" , \"modified\" , \"countDescending\" , \"countAscending\" ],\n            'default': \"default\" ,\n            'enumDescriptions': [\n                ( nls.localize(\n                    'searchSortOrder.default',\n                    \"Results are sorted by folder and file names, in alphabetical order.\"\n                )),\n                ( nls.localize(\n                    'searchSortOrder.filesOnly',\n                    \"Results are sorted by file names ignoring folder order, in alphabetical order.\"\n                )),\n                ( nls.localize(\n                    'searchSortOrder.type',\n                    \"Results are sorted by file extensions, in alphabetical order.\"\n                )),\n                ( nls.localize(\n                    'searchSortOrder.modified',\n                    \"Results are sorted by file last modified date, in descending order.\"\n                )),\n                ( nls.localize(\n                    'searchSortOrder.countDescending',\n                    \"Results are sorted by count per file, in descending order.\"\n                )),\n                ( nls.localize(\n                    'searchSortOrder.countAscending',\n                    \"Results are sorted by count per file, in ascending order.\"\n                ))\n            ],\n            'description': ( nls.localize('search.sortOrder', \"Controls sorting order of search results.\"))\n        },\n        'search.decorations.colors': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.decorations.colors',\n                \"Controls whether search file decorations should use colors.\"\n            )),\n            default: true\n        },\n        'search.decorations.badges': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.decorations.badges',\n                \"Controls whether search file decorations should use badges.\"\n            )),\n            default: true\n        },\n        'search.defaultViewMode': {\n            'type': 'string',\n            'enum': [\"tree\" , \"list\" ],\n            'default': \"list\" ,\n            'enumDescriptions': [\n                ( nls.localize('scm.defaultViewMode.tree', \"Shows search results as a tree.\")),\n                ( nls.localize('scm.defaultViewMode.list', \"Shows search results as a list.\"))\n            ],\n            'description': ( nls.localize('search.defaultViewMode', \"Controls the default search result view mode.\"))\n        },\n        'search.experimental.closedNotebookRichContentResults': {\n            type: 'boolean',\n            description: ( nls.localize(\n                'search.experimental.closedNotebookResults',\n                \"Show notebook editor rich content results for closed notebooks. Please refresh your search results after changing this setting.\"\n            )),\n            default: false\n        }\n    }\n});\nCommandsRegistry.registerCommand('_executeWorkspaceSymbolProvider', async function (accessor, ...args) {\n    const [query] = args;\n    assertType(typeof query === 'string');\n    const result = await getWorkspaceSymbols(query);\n    return ( result.map(item => item.symbol));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport * as nls from '../../../../nls.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\nfunction writeIgnoreState(codeEditorService, model, state) {\n    codeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\n}\nfunction readIgnoreState(codeEditorService, model) {\n    return codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\n}\nlet UnusualLineTerminatorsDetector = class UnusualLineTerminatorsDetector extends Disposable {\n    constructor(_editor, _dialogService, _codeEditorService) {\n        super();\n        this._editor = _editor;\n        this._dialogService = _dialogService;\n        this._codeEditorService = _codeEditorService;\n        this._isPresentingDialog = false;\n        this._config = this._editor.getOption(124 /* EditorOption.unusualLineTerminators */);\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(124 /* EditorOption.unusualLineTerminators */)) {\n                this._config = this._editor.getOption(124 /* EditorOption.unusualLineTerminators */);\n                this._checkForUnusualLineTerminators();\n            }\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            this._checkForUnusualLineTerminators();\n        }));\n        this._register(this._editor.onDidChangeModelContent((e) => {\n            if (e.isUndoing) {\n                // skip checking in case of undoing\n                return;\n            }\n            this._checkForUnusualLineTerminators();\n        }));\n        this._checkForUnusualLineTerminators();\n    }\n    _checkForUnusualLineTerminators() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._config === 'off') {\n                return;\n            }\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            const model = this._editor.getModel();\n            if (!model.mightContainUnusualLineTerminators()) {\n                return;\n            }\n            const ignoreState = readIgnoreState(this._codeEditorService, model);\n            if (ignoreState === true) {\n                // this model should be ignored\n                return;\n            }\n            if (this._editor.getOption(89 /* EditorOption.readOnly */)) {\n                // read only editor => sorry!\n                return;\n            }\n            if (this._config === 'auto') {\n                // just do it!\n                model.removeUnusualLineTerminators(this._editor.getSelections());\n                return;\n            }\n            if (this._isPresentingDialog) {\n                // we're currently showing the dialog, which is async.\n                // avoid spamming the user\n                return;\n            }\n            let result;\n            try {\n                this._isPresentingDialog = true;\n                result = yield this._dialogService.confirm({\n                    title: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\n                    message: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\n                    detail: nls.localize('unusualLineTerminators.detail', \"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\", basename(model.uri)),\n                    primaryButton: nls.localize({ key: 'unusualLineTerminators.fix', comment: ['&& denotes a mnemonic'] }, \"&&Remove Unusual Line Terminators\"),\n                    cancelButton: nls.localize('unusualLineTerminators.ignore', \"Ignore\")\n                });\n            }\n            finally {\n                this._isPresentingDialog = false;\n            }\n            if (!result.confirmed) {\n                // this model should be ignored\n                writeIgnoreState(this._codeEditorService, model, true);\n                return;\n            }\n            model.removeUnusualLineTerminators(this._editor.getSelections());\n        });\n    }\n};\nUnusualLineTerminatorsDetector.ID = 'editor.contrib.unusualLineTerminatorsDetector';\nUnusualLineTerminatorsDetector = __decorate([\n    __param(1, IDialogService),\n    __param(2, ICodeEditorService)\n], UnusualLineTerminatorsDetector);\nexport { UnusualLineTerminatorsDetector };\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport * as dom from 'monaco-editor/esm/vs/base/browser/dom.js';\nimport { StandardKeyboardEvent } from 'monaco-editor/esm/vs/base/browser/keyboardEvent.js';\nimport { alert } from 'monaco-editor/esm/vs/base/browser/ui/aria/aria.js';\nimport { Delayer } from 'monaco-editor/esm/vs/base/common/async.js';\nimport { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nimport { assertIsDefined, withNullAsUndefined } from 'monaco-editor/esm/vs/base/common/types.js';\nimport './media/searchEditor.css.js';\nimport { Position } from 'monaco-editor/esm/vs/editor/common/core/position.js';\nimport { Range } from 'monaco-editor/esm/vs/editor/common/core/range.js';\nimport { Selection } from 'monaco-editor/esm/vs/editor/common/core/selection.js';\nimport { IModelService } from 'monaco-editor/esm/vs/editor/common/services/model.js';\nimport { ITextResourceConfigurationService } from 'monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js';\nimport { ReferencesController } from 'monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ICommandService } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IConfigurationService } from 'monaco-editor/esm/vs/platform/configuration/common/configuration.js';\nimport { IContextKeyService } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from 'monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js';\nimport { ILabelService } from 'monaco-editor/esm/vs/platform/label/common/label.js';\nimport { LongRunningOperation, IEditorProgressService } from 'monaco-editor/esm/vs/platform/progress/common/progress.js';\nimport { IStorageService } from 'monaco-editor/esm/vs/platform/storage/common/storage.js';\nimport { ITelemetryService } from 'monaco-editor/esm/vs/platform/telemetry/common/telemetry.js';\nimport { registerColor, inputBorder } from 'monaco-editor/esm/vs/platform/theme/common/colorRegistry.js';\nimport { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nimport { IWorkspaceContextService } from 'monaco-editor/esm/vs/platform/workspace/common/workspace.js';\nimport { AbstractTextCodeEditor } from '../../../browser/parts/editor/textCodeEditor.js';\nimport { IncludePatternInputWidget, ExcludePatternInputWidget } from '../../search/browser/patternInputWidget.js';\nimport { SearchWidget } from '../../search/browser/searchWidget.js';\nimport { InputBoxFocusedKey } from '../../search/common/constants.js';\nimport { QueryBuilder } from '../../../services/search/common/queryBuilder.js';\nimport { getOutOfWorkspaceEditorResources } from '../../search/common/search.js';\nimport { SearchModel } from '../../search/browser/searchModel.js';\nimport { SearchEditorID, InSearchEditor, SearchEditorInputTypeId } from './constants.js';\nimport { serializeSearchResultForEditor } from './searchEditorSerialization.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { searchDetailsIcon } from '../../search/browser/searchIcons.js';\nimport { IFileService } from 'monaco-editor/esm/vs/platform/files/common/files.js';\nimport { IOpenerService } from 'monaco-editor/esm/vs/platform/opener/common/opener.js';\nimport { INotificationService } from 'monaco-editor/esm/vs/platform/notification/common/notification.js';\nimport { renderSearchMessage } from '../../search/browser/searchMessage.js';\nimport { EditorExtensionsRegistry } from 'monaco-editor/esm/vs/editor/browser/editorExtensions.js';\nimport { UnusualLineTerminatorsDetector } from 'monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators.js';\nimport { getInputBoxStyle, defaultToggleStyles } from 'monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js';\nimport { ILogService } from 'monaco-editor/esm/vs/platform/log/common/log.js';\nconst RESULT_LINE_REGEX = /^(\\s+)(\\d+)(: |  )(\\s*)(.*)$/;\nconst FILE_LINE_REGEX = /^(\\S.*):$/;\nlet SearchEditor = class SearchEditor extends AbstractTextCodeEditor {\n    static { this.ID = SearchEditorID; }\n    static { this.SEARCH_EDITOR_VIEW_STATE_PREFERENCE_KEY = 'searchEditorViewState'; }\n    get searchResultEditor() { return this.editorControl; }\n    constructor(telemetryService, themeService, storageService, modelService, contextService, labelService, instantiationService, contextViewService, commandService, openerService, notificationService, progressService, textResourceService, editorGroupService, editorService, configurationService, fileService, logService) {\n        super(SearchEditor.ID, telemetryService, instantiationService, storageService, textResourceService, themeService, editorService, editorGroupService, fileService);\n        this.modelService = modelService;\n        this.contextService = contextService;\n        this.labelService = labelService;\n        this.contextViewService = contextViewService;\n        this.commandService = commandService;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.configurationService = configurationService;\n        this.logService = logService;\n        this.runSearchDelayer = ( new Delayer(0));\n        this.pauseSearching = false;\n        this.showingIncludesExcludes = false;\n        this.ongoingOperations = 0;\n        this.updatingModelForSearch = false;\n        this.container = dom.$('.search-editor');\n        this.searchOperation = this._register(( new LongRunningOperation(progressService)));\n        this._register(this.messageDisposables = ( new DisposableStore()));\n        this.searchHistoryDelayer = ( new Delayer(2000));\n        this.searchModel = this._register(this.instantiationService.createInstance(SearchModel));\n    }\n    createEditor(parent) {\n        dom.append(parent, this.container);\n        this.queryEditorContainer = dom.append(this.container, dom.$('.query-container'));\n        const searchResultContainer = dom.append(this.container, dom.$('.search-results'));\n        super.createEditor(searchResultContainer);\n        this.registerEditorListeners();\n        const scopedContextKeyService = assertIsDefined(this.scopedContextKeyService);\n        InSearchEditor.bindTo(scopedContextKeyService).set(true);\n        this.createQueryEditor(this.queryEditorContainer, this.instantiationService.createChild(( new ServiceCollection([IContextKeyService, scopedContextKeyService]))), InputBoxFocusedKey.bindTo(scopedContextKeyService));\n    }\n    createQueryEditor(container, scopedInstantiationService, inputBoxFocusedContextKey) {\n        const searchEditorInputboxStyles = getInputBoxStyle({ inputBorder: searchEditorTextInputBorder });\n        this.queryEditorWidget = this._register(scopedInstantiationService.createInstance(SearchWidget, container, { _hideReplaceToggle: true, showContextToggle: true, inputBoxStyles: searchEditorInputboxStyles, toggleStyles: defaultToggleStyles }));\n        this._register(this.queryEditorWidget.onReplaceToggled(() => this.reLayout()));\n        this._register(this.queryEditorWidget.onDidHeightChange(() => this.reLayout()));\n        this._register(this.queryEditorWidget.onSearchSubmit(({ delay }) => this.triggerSearch({ delay })));\n        if (this.queryEditorWidget.searchInput) {\n            this._register(this.queryEditorWidget.searchInput.onDidOptionChange(() => this.triggerSearch({ resetCursor: false })));\n        }\n        else {\n            this.logService.warn('SearchEditor: SearchWidget.searchInput is undefined, cannot register onDidOptionChange listener');\n        }\n        this._register(this.queryEditorWidget.onDidToggleContext(() => this.triggerSearch({ resetCursor: false })));\n        this.includesExcludesContainer = dom.append(container, dom.$('.includes-excludes'));\n        this.toggleQueryDetailsButton = dom.append(this.includesExcludesContainer, dom.$('.expand' + ThemeIcon.asCSSSelector(searchDetailsIcon), { tabindex: 0, role: 'button', title: ( localize('moreSearch', \"Toggle Search Details\")) }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.CLICK, e => {\n            dom.EventHelper.stop(e);\n            this.toggleIncludesExcludes();\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_UP, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(3 ) || event.equals(10 )) {\n                dom.EventHelper.stop(e);\n                this.toggleIncludesExcludes();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_DOWN, (e) => {\n            const event = ( new StandardKeyboardEvent(e));\n            if (event.equals(1024  | 2 )) {\n                if (this.queryEditorWidget.isReplaceActive()) {\n                    this.queryEditorWidget.focusReplaceAllAction();\n                }\n                else {\n                    this.queryEditorWidget.isReplaceShown() ? this.queryEditorWidget.replaceInput?.focusOnPreserve() : this.queryEditorWidget.focusRegexAction();\n                }\n                dom.EventHelper.stop(e);\n            }\n        }));\n        const folderIncludesList = dom.append(this.includesExcludesContainer, dom.$('.file-types.includes'));\n        const filesToIncludeTitle = ( localize('searchScope.includes', \"files to include\"));\n        dom.append(folderIncludesList, dom.$('h4', undefined, filesToIncludeTitle));\n        this.inputPatternIncludes = this._register(scopedInstantiationService.createInstance(IncludePatternInputWidget, folderIncludesList, this.contextViewService, {\n            ariaLabel: ( localize('label.includes', 'Search Include Patterns')),\n            inputBoxStyles: searchEditorInputboxStyles\n        }));\n        this.inputPatternIncludes.onSubmit(triggeredOnType => this.triggerSearch({ resetCursor: false, delay: triggeredOnType ? this.searchConfig.searchOnTypeDebouncePeriod : 0 }));\n        this._register(this.inputPatternIncludes.onChangeSearchInEditorsBox(() => this.triggerSearch()));\n        const excludesList = dom.append(this.includesExcludesContainer, dom.$('.file-types.excludes'));\n        const excludesTitle = ( localize('searchScope.excludes', \"files to exclude\"));\n        dom.append(excludesList, dom.$('h4', undefined, excludesTitle));\n        this.inputPatternExcludes = this._register(scopedInstantiationService.createInstance(ExcludePatternInputWidget, excludesList, this.contextViewService, {\n            ariaLabel: ( localize('label.excludes', 'Search Exclude Patterns')),\n            inputBoxStyles: searchEditorInputboxStyles\n        }));\n        this.inputPatternExcludes.onSubmit(triggeredOnType => this.triggerSearch({ resetCursor: false, delay: triggeredOnType ? this.searchConfig.searchOnTypeDebouncePeriod : 0 }));\n        this._register(this.inputPatternExcludes.onChangeIgnoreBox(() => this.triggerSearch()));\n        this.messageBox = dom.append(container, dom.$('.messages.text-search-provider-messages'));\n        [this.queryEditorWidget.searchInputFocusTracker, this.queryEditorWidget.replaceInputFocusTracker, this.inputPatternExcludes.inputFocusTracker, this.inputPatternIncludes.inputFocusTracker]\n            .forEach(tracker => {\n            if (!tracker) {\n                return;\n            }\n            this._register(tracker.onDidFocus(() => setTimeout(() => inputBoxFocusedContextKey.set(true), 0)));\n            this._register(tracker.onDidBlur(() => inputBoxFocusedContextKey.set(false)));\n        });\n    }\n    toggleRunAgainMessage(show) {\n        dom.clearNode(this.messageBox);\n        this.messageDisposables.clear();\n        if (show) {\n            const runAgainLink = dom.append(this.messageBox, dom.$('a.pointer.prominent.message', {}, ( localize('runSearch', \"Run Search\"))));\n            this.messageDisposables.add(dom.addDisposableListener(runAgainLink, dom.EventType.CLICK, async () => {\n                await this.triggerSearch();\n                this.searchResultEditor.focus();\n            }));\n        }\n    }\n    _getContributions() {\n        const skipContributions = [UnusualLineTerminatorsDetector.ID];\n        return EditorExtensionsRegistry.getEditorContributions().filter(c => skipContributions.indexOf(c.id) === -1);\n    }\n    getCodeEditorWidgetOptions() {\n        return { contributions: this._getContributions() };\n    }\n    registerEditorListeners() {\n        this.searchResultEditor.onMouseUp(e => {\n            if (e.event.detail === 2) {\n                const behaviour = this.searchConfig.searchEditor.doubleClickBehaviour;\n                const position = e.target.position;\n                if (position && behaviour !== 'selectWord') {\n                    const line = this.searchResultEditor.getModel()?.getLineContent(position.lineNumber) ?? '';\n                    if (line.match(RESULT_LINE_REGEX)) {\n                        this.searchResultEditor.setSelection(Range.fromPositions(position));\n                        this.commandService.executeCommand(behaviour === 'goToLocation' ? 'editor.action.goToDeclaration' : 'editor.action.openDeclarationToTheSide');\n                    }\n                    else if (line.match(FILE_LINE_REGEX)) {\n                        this.searchResultEditor.setSelection(Range.fromPositions(position));\n                        this.commandService.executeCommand('editor.action.peekDefinition');\n                    }\n                }\n            }\n        });\n        this._register(this.searchResultEditor.onDidChangeModelContent(() => {\n            if (!this.updatingModelForSearch) {\n                this.getInput()?.setDirty(true);\n            }\n        }));\n    }\n    getControl() {\n        return this.searchResultEditor;\n    }\n    focus() {\n        const viewState = this.loadEditorViewState(this.getInput());\n        if (viewState && viewState.focused === 'editor') {\n            this.searchResultEditor.focus();\n        }\n        else {\n            this.queryEditorWidget.focus();\n        }\n    }\n    focusSearchInput() {\n        this.queryEditorWidget.searchInput?.focus();\n    }\n    focusFilesToIncludeInput() {\n        if (!this.showingIncludesExcludes) {\n            this.toggleIncludesExcludes(true);\n        }\n        this.inputPatternIncludes.focus();\n    }\n    focusFilesToExcludeInput() {\n        if (!this.showingIncludesExcludes) {\n            this.toggleIncludesExcludes(true);\n        }\n        this.inputPatternExcludes.focus();\n    }\n    focusNextInput() {\n        if (this.queryEditorWidget.searchInputHasFocus()) {\n            if (this.showingIncludesExcludes) {\n                this.inputPatternIncludes.focus();\n            }\n            else {\n                this.searchResultEditor.focus();\n            }\n        }\n        else if (this.inputPatternIncludes.inputHasFocus()) {\n            this.inputPatternExcludes.focus();\n        }\n        else if (this.inputPatternExcludes.inputHasFocus()) {\n            this.searchResultEditor.focus();\n        }\n        else if (this.searchResultEditor.hasWidgetFocus()) ;\n    }\n    focusPrevInput() {\n        if (this.queryEditorWidget.searchInputHasFocus()) {\n            this.searchResultEditor.focus();\n        }\n        else if (this.inputPatternIncludes.inputHasFocus()) {\n            this.queryEditorWidget.searchInput?.focus();\n        }\n        else if (this.inputPatternExcludes.inputHasFocus()) {\n            this.inputPatternIncludes.focus();\n        }\n        else if (this.searchResultEditor.hasWidgetFocus()) ;\n    }\n    setQuery(query) {\n        this.queryEditorWidget.searchInput?.setValue(query);\n    }\n    selectQuery() {\n        this.queryEditorWidget.searchInput?.select();\n    }\n    toggleWholeWords() {\n        this.queryEditorWidget.searchInput?.setWholeWords(!this.queryEditorWidget.searchInput.getWholeWords());\n        this.triggerSearch({ resetCursor: false });\n    }\n    toggleRegex() {\n        this.queryEditorWidget.searchInput?.setRegex(!this.queryEditorWidget.searchInput.getRegex());\n        this.triggerSearch({ resetCursor: false });\n    }\n    toggleCaseSensitive() {\n        this.queryEditorWidget.searchInput?.setCaseSensitive(!this.queryEditorWidget.searchInput.getCaseSensitive());\n        this.triggerSearch({ resetCursor: false });\n    }\n    toggleContextLines() {\n        this.queryEditorWidget.toggleContextLines();\n    }\n    modifyContextLines(increase) {\n        this.queryEditorWidget.modifyContextLines(increase);\n    }\n    toggleQueryDetails() {\n        this.toggleIncludesExcludes();\n    }\n    deleteResultBlock() {\n        const linesToDelete = ( new Set());\n        const selections = this.searchResultEditor.getSelections();\n        const model = this.searchResultEditor.getModel();\n        if (!(selections && model)) {\n            return;\n        }\n        const maxLine = model.getLineCount();\n        const minLine = 1;\n        const deleteUp = (start) => {\n            for (let cursor = start; cursor >= minLine; cursor--) {\n                const line = model.getLineContent(cursor);\n                linesToDelete.add(cursor);\n                if (line[0] !== undefined && line[0] !== ' ') {\n                    break;\n                }\n            }\n        };\n        const deleteDown = (start) => {\n            linesToDelete.add(start);\n            for (let cursor = start + 1; cursor <= maxLine; cursor++) {\n                const line = model.getLineContent(cursor);\n                if (line[0] !== undefined && line[0] !== ' ') {\n                    return cursor;\n                }\n                linesToDelete.add(cursor);\n            }\n            return;\n        };\n        const endingCursorLines = [];\n        for (const selection of selections) {\n            const lineNumber = selection.startLineNumber;\n            endingCursorLines.push(deleteDown(lineNumber));\n            deleteUp(lineNumber);\n            for (let inner = selection.startLineNumber; inner <= selection.endLineNumber; inner++) {\n                linesToDelete.add(inner);\n            }\n        }\n        if (endingCursorLines.length === 0) {\n            endingCursorLines.push(1);\n        }\n        const isDefined = (x) => x !== undefined;\n        model.pushEditOperations(this.searchResultEditor.getSelections(), ( [...linesToDelete].map(line => ({ range: ( new Range(line, 1, line + 1, 1)), text: '' }))), () => ( endingCursorLines.filter(isDefined).map(line => ( new Selection(line, 1, line, 1)))));\n    }\n    cleanState() {\n        this.getInput()?.setDirty(false);\n    }\n    get searchConfig() {\n        return this.configurationService.getValue('search');\n    }\n    iterateThroughMatches(reverse) {\n        const model = this.searchResultEditor.getModel();\n        if (!model) {\n            return;\n        }\n        const lastLine = model.getLineCount() ?? 1;\n        const lastColumn = model.getLineLength(lastLine);\n        const fallbackStart = reverse ? ( new Position(lastLine, lastColumn)) : ( new Position(1, 1));\n        const currentPosition = this.searchResultEditor.getSelection()?.getStartPosition() ?? fallbackStart;\n        const matchRanges = this.getInput()?.getMatchRanges();\n        if (!matchRanges) {\n            return;\n        }\n        const matchRange = (reverse ? findPrevRange : findNextRange)(matchRanges, currentPosition);\n        this.searchResultEditor.setSelection(matchRange);\n        this.searchResultEditor.revealLineInCenterIfOutsideViewport(matchRange.startLineNumber);\n        this.searchResultEditor.focus();\n        const matchLineText = model.getLineContent(matchRange.startLineNumber);\n        const matchText = model.getValueInRange(matchRange);\n        let file = '';\n        for (let line = matchRange.startLineNumber; line >= 1; line--) {\n            const lineText = model.getValueInRange(( new Range(line, 1, line, 2)));\n            if (lineText !== ' ') {\n                file = model.getLineContent(line);\n                break;\n            }\n        }\n        alert(( localize(\n            'searchResultItem',\n            \"Matched {0} at {1} in file {2}\",\n            matchText,\n            matchLineText,\n            file.slice(0, file.length - 1)\n        )));\n    }\n    focusNextResult() {\n        this.iterateThroughMatches(false);\n    }\n    focusPreviousResult() {\n        this.iterateThroughMatches(true);\n    }\n    focusAllResults() {\n        this.searchResultEditor\n            .setSelections(( (this.getInput()?.getMatchRanges() ?? []).map(range => ( new Selection(\n            range.startLineNumber,\n            range.startColumn,\n            range.endLineNumber,\n            range.endColumn\n        )))));\n        this.searchResultEditor.focus();\n    }\n    async triggerSearch(_options) {\n        const options = { resetCursor: true, delay: 0, ..._options };\n        if (!this.pauseSearching) {\n            await this.runSearchDelayer.trigger(async () => {\n                this.toggleRunAgainMessage(false);\n                await this.doRunSearch();\n                if (options.resetCursor) {\n                    this.searchResultEditor.setPosition(( new Position(1, 1)));\n                    this.searchResultEditor.setScrollPosition({ scrollTop: 0, scrollLeft: 0 });\n                }\n                if (options.focusResults) {\n                    this.searchResultEditor.focus();\n                }\n            }, options.delay);\n        }\n    }\n    readConfigFromWidget() {\n        return {\n            isCaseSensitive: this.queryEditorWidget.searchInput?.getCaseSensitive() ?? false,\n            contextLines: this.queryEditorWidget.getContextLines(),\n            filesToExclude: this.inputPatternExcludes.getValue(),\n            filesToInclude: this.inputPatternIncludes.getValue(),\n            query: this.queryEditorWidget.searchInput?.getValue() ?? '',\n            isRegexp: this.queryEditorWidget.searchInput?.getRegex() ?? false,\n            matchWholeWord: this.queryEditorWidget.searchInput?.getWholeWords() ?? false,\n            useExcludeSettingsAndIgnoreFiles: this.inputPatternExcludes.useExcludesAndIgnoreFiles(),\n            onlyOpenEditors: this.inputPatternIncludes.onlySearchInOpenEditors(),\n            showIncludesExcludes: this.showingIncludesExcludes,\n            notebookSearchConfig: {\n                includeMarkupInput: this.queryEditorWidget.getNotebookFilters().markupInput,\n                includeMarkupPreview: this.queryEditorWidget.getNotebookFilters().markupPreview,\n                includeCodeInput: this.queryEditorWidget.getNotebookFilters().codeInput,\n                includeOutput: this.queryEditorWidget.getNotebookFilters().codeOutput,\n            }\n        };\n    }\n    async doRunSearch() {\n        this.searchModel.cancelSearch(true);\n        const startInput = this.getInput();\n        if (!startInput) {\n            return;\n        }\n        this.searchHistoryDelayer.trigger(() => {\n            this.queryEditorWidget.searchInput?.onSearchSubmit();\n            this.inputPatternExcludes.onSearchSubmit();\n            this.inputPatternIncludes.onSearchSubmit();\n        });\n        const config = this.readConfigFromWidget();\n        if (!config.query) {\n            return;\n        }\n        const content = {\n            pattern: config.query,\n            isRegExp: config.isRegexp,\n            isCaseSensitive: config.isCaseSensitive,\n            isWordMatch: config.matchWholeWord,\n        };\n        const options = {\n            _reason: 'searchEditor',\n            extraFileResources: this.instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n            maxResults: withNullAsUndefined(this.searchConfig.maxResults),\n            disregardIgnoreFiles: !config.useExcludeSettingsAndIgnoreFiles || undefined,\n            disregardExcludeSettings: !config.useExcludeSettingsAndIgnoreFiles || undefined,\n            excludePattern: config.filesToExclude,\n            includePattern: config.filesToInclude,\n            onlyOpenEditors: config.onlyOpenEditors,\n            previewOptions: {\n                matchLines: 1,\n                charsPerLine: 1000\n            },\n            afterContext: config.contextLines,\n            beforeContext: config.contextLines,\n            isSmartCase: this.searchConfig.smartCase,\n            expandPatterns: true,\n            notebookSearchConfig: {\n                includeMarkupInput: config.notebookSearchConfig.includeMarkupInput,\n                includeMarkupPreview: config.notebookSearchConfig.includeMarkupPreview,\n                includeCodeInput: config.notebookSearchConfig.includeCodeInput,\n                includeOutput: config.notebookSearchConfig.includeOutput,\n            }\n        };\n        const folderResources = this.contextService.getWorkspace().folders;\n        let query;\n        try {\n            const queryBuilder = this.instantiationService.createInstance(QueryBuilder);\n            query = queryBuilder.text(content, ( folderResources.map(folder => folder.uri)), options);\n        }\n        catch (err) {\n            return;\n        }\n        this.searchOperation.start(500);\n        this.ongoingOperations++;\n        const { configurationModel } = await startInput.resolveModels();\n        configurationModel.updateConfig(config);\n        startInput.ongoingSearchOperation = this.searchModel.search(query).finally(() => {\n            this.ongoingOperations--;\n            if (this.ongoingOperations === 0) {\n                this.searchOperation.stop();\n            }\n        });\n        const searchOperation = await startInput.ongoingSearchOperation;\n        await this.onSearchComplete(searchOperation, config, startInput);\n    }\n    async onSearchComplete(searchOperation, startConfig, startInput) {\n        const input = this.getInput();\n        if (!input ||\n            input !== startInput ||\n            JSON.stringify(startConfig) !== JSON.stringify(this.readConfigFromWidget())) {\n            return;\n        }\n        input.ongoingSearchOperation = undefined;\n        const sortOrder = this.searchConfig.sortOrder;\n        if (sortOrder === \"modified\" ) {\n            await this.retrieveFileStats(this.searchModel.searchResult);\n        }\n        const controller = ReferencesController.get(this.searchResultEditor);\n        controller?.closeWidget(false);\n        const labelFormatter = (uri) => this.labelService.getUriLabel(uri, { relative: true });\n        const results = serializeSearchResultForEditor(this.searchModel.searchResult, startConfig.filesToInclude, startConfig.filesToExclude, startConfig.contextLines, labelFormatter, sortOrder, searchOperation?.limitHit);\n        const { resultsModel } = await input.resolveModels();\n        this.updatingModelForSearch = true;\n        this.modelService.updateModel(resultsModel, results.text);\n        this.updatingModelForSearch = false;\n        if (searchOperation && searchOperation.messages) {\n            for (const message of searchOperation.messages) {\n                this.addMessage(message);\n            }\n        }\n        this.reLayout();\n        input.setDirty(!input.hasCapability(4 ));\n        input.setMatchRanges(results.matchRanges);\n    }\n    addMessage(message) {\n        let messageBox;\n        if (this.messageBox.firstChild) {\n            messageBox = this.messageBox.firstChild;\n        }\n        else {\n            messageBox = dom.append(this.messageBox, dom.$('.message'));\n        }\n        dom.append(messageBox, renderSearchMessage(message, this.instantiationService, this.notificationService, this.openerService, this.commandService, this.messageDisposables, () => this.triggerSearch()));\n    }\n    async retrieveFileStats(searchResult) {\n        const files = ( searchResult.matches().filter(f => !f.fileStat).map(f => f.resolveFileStat(this.fileService)));\n        await Promise.all(files);\n    }\n    layout(dimension) {\n        this.dimension = dimension;\n        this.reLayout();\n    }\n    getSelected() {\n        const selection = this.searchResultEditor.getSelection();\n        if (selection) {\n            return this.searchResultEditor.getModel()?.getValueInRange(selection) ?? '';\n        }\n        return '';\n    }\n    reLayout() {\n        if (this.dimension) {\n            this.queryEditorWidget.setWidth(this.dimension.width - 28 );\n            this.searchResultEditor.layout({ height: this.dimension.height - dom.getTotalHeight(this.queryEditorContainer), width: this.dimension.width });\n            this.inputPatternExcludes.setWidth(this.dimension.width - 28 );\n            this.inputPatternIncludes.setWidth(this.dimension.width - 28 );\n        }\n    }\n    getInput() {\n        return this._input;\n    }\n    setSearchConfig(config) {\n        this.priorConfig = config;\n        if (config.query !== undefined) {\n            this.queryEditorWidget.setValue(config.query);\n        }\n        if (config.isCaseSensitive !== undefined) {\n            this.queryEditorWidget.searchInput?.setCaseSensitive(config.isCaseSensitive);\n        }\n        if (config.isRegexp !== undefined) {\n            this.queryEditorWidget.searchInput?.setRegex(config.isRegexp);\n        }\n        if (config.matchWholeWord !== undefined) {\n            this.queryEditorWidget.searchInput?.setWholeWords(config.matchWholeWord);\n        }\n        if (config.contextLines !== undefined) {\n            this.queryEditorWidget.setContextLines(config.contextLines);\n        }\n        if (config.filesToExclude !== undefined) {\n            this.inputPatternExcludes.setValue(config.filesToExclude);\n        }\n        if (config.filesToInclude !== undefined) {\n            this.inputPatternIncludes.setValue(config.filesToInclude);\n        }\n        if (config.onlyOpenEditors !== undefined) {\n            this.inputPatternIncludes.setOnlySearchInOpenEditors(config.onlyOpenEditors);\n        }\n        if (config.useExcludeSettingsAndIgnoreFiles !== undefined) {\n            this.inputPatternExcludes.setUseExcludesAndIgnoreFiles(config.useExcludeSettingsAndIgnoreFiles);\n        }\n        if (config.showIncludesExcludes !== undefined) {\n            this.toggleIncludesExcludes(config.showIncludesExcludes);\n        }\n    }\n    async setInput(newInput, options, context, token) {\n        await super.setInput(newInput, options, context, token);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const { configurationModel, resultsModel } = await newInput.resolveModels();\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.searchResultEditor.setModel(resultsModel);\n        this.pauseSearching = true;\n        this.toggleRunAgainMessage(!newInput.ongoingSearchOperation && resultsModel.getLineCount() === 1 && resultsModel.getValue() === '' && configurationModel.config.query !== '');\n        this.setSearchConfig(configurationModel.config);\n        this._register(configurationModel.onConfigDidUpdate(newConfig => {\n            if (newConfig !== this.priorConfig) {\n                this.pauseSearching = true;\n                this.setSearchConfig(newConfig);\n                this.pauseSearching = false;\n            }\n        }));\n        this.restoreViewState(context);\n        if (!options?.preserveFocus) {\n            this.focus();\n        }\n        this.pauseSearching = false;\n        if (newInput.ongoingSearchOperation) {\n            const existingConfig = this.readConfigFromWidget();\n            newInput.ongoingSearchOperation.then(complete => {\n                this.onSearchComplete(complete, existingConfig, newInput);\n            });\n        }\n    }\n    toggleIncludesExcludes(_shouldShow) {\n        const cls = 'expanded';\n        const shouldShow = _shouldShow ?? !this.includesExcludesContainer.classList.contains(cls);\n        if (shouldShow) {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'true');\n            this.includesExcludesContainer.classList.add(cls);\n        }\n        else {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'false');\n            this.includesExcludesContainer.classList.remove(cls);\n        }\n        this.showingIncludesExcludes = this.includesExcludesContainer.classList.contains(cls);\n        this.reLayout();\n    }\n    toEditorViewStateResource(input) {\n        if (input.typeId === SearchEditorInputTypeId) {\n            return input.modelUri;\n        }\n        return undefined;\n    }\n    computeEditorViewState(resource) {\n        const control = this.getControl();\n        const editorViewState = control.saveViewState();\n        if (!editorViewState) {\n            return undefined;\n        }\n        if (( resource.toString()) !== this.getInput()?.modelUri.toString()) {\n            return undefined;\n        }\n        return { ...editorViewState, focused: this.searchResultEditor.hasWidgetFocus() ? 'editor' : 'input' };\n    }\n    tracksEditorViewState(input) {\n        return input.typeId === SearchEditorInputTypeId;\n    }\n    restoreViewState(context) {\n        const viewState = this.loadEditorViewState(this.getInput(), context);\n        if (viewState) {\n            this.searchResultEditor.restoreViewState(viewState);\n        }\n    }\n    getAriaLabel() {\n        return this.getInput()?.getName() ?? ( localize('searchEditor', \"Search\"));\n    }\n};\nSearchEditor = ( __decorate([\n    ( __param(0, ITelemetryService)),\n    ( __param(1, IThemeService)),\n    ( __param(2, IStorageService)),\n    ( __param(3, IModelService)),\n    ( __param(4, IWorkspaceContextService)),\n    ( __param(5, ILabelService)),\n    ( __param(6, IInstantiationService)),\n    ( __param(7, IContextViewService)),\n    ( __param(8, ICommandService)),\n    ( __param(9, IOpenerService)),\n    ( __param(10, INotificationService)),\n    ( __param(11, IEditorProgressService)),\n    ( __param(12, ITextResourceConfigurationService)),\n    ( __param(13, IEditorGroupsService)),\n    ( __param(14, IEditorService)),\n    ( __param(15, IConfigurationService)),\n    ( __param(16, IFileService)),\n    ( __param(17, ILogService))\n], SearchEditor));\nconst searchEditorTextInputBorder = registerColor('searchEditor.textInputBorder', { dark: inputBorder, light: inputBorder, hcDark: inputBorder, hcLight: inputBorder }, ( localize('textInputBoxBorder', \"Search editor text input box border.\")));\nfunction findNextRange(matchRanges, currentPosition) {\n    for (const matchRange of matchRanges) {\n        if (Position.isBefore(currentPosition, matchRange.getStartPosition())) {\n            return matchRange;\n        }\n    }\n    return matchRanges[0];\n}\nfunction findPrevRange(matchRanges, currentPosition) {\n    for (let i = matchRanges.length - 1; i >= 0; i--) {\n        const matchRange = matchRanges[i];\n        if (Position.isBefore(matchRange.getStartPosition(), currentPosition)) {\n            {\n                return matchRange;\n            }\n        }\n    }\n    return matchRanges[matchRanges.length - 1];\n}\nexport { SearchEditor };\n","import { __decorate, __param } from '../../../../../../node_modules/tslib/tslib.es6.js';\nimport { extname, isEqual } from 'monaco-editor/esm/vs/base/common/resources.js';\nimport { ToggleCaseSensitiveKeybinding, ToggleWholeWordKeybinding, ToggleRegexKeybinding } from 'monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerAction2, Action2, MenuId } from 'monaco-editor/esm/vs/platform/actions/common/actions.js';\nimport { CommandsRegistry } from 'monaco-editor/esm/vs/platform/commands/common/commands.js';\nimport { IContextKeyService, ContextKeyExpr } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { EditorPaneDescriptor } from '../../../browser/editor.js';\nimport { Extensions } from '../../../common/contributions.js';\nimport { EditorExtensions, DEFAULT_EDITOR_ASSOCIATION } from '../../../common/editor.js';\nimport { ActiveEditorContext } from '../../../common/contextkeys.js';\nimport { IViewsService } from '../../../common/views.js';\nimport { getSearchView } from '../../search/browser/searchActionsBase.js';\nimport { searchRefreshIcon, searchNewEditorIcon } from '../../search/browser/searchIcons.js';\nimport { HasSearchResults, SearchViewFocusedKey, SearchInputBoxFocusedKey } from '../../search/common/constants.js';\nimport { InSearchEditor, OpenNewEditorCommandId, OpenEditorCommandId, SearchEditorID, ToggleSearchEditorContextLinesCommandId, SearchEditorScheme } from './constants.js';\nimport { SearchEditor } from './searchEditor.js';\nimport { openNewSearchEditor, createEditorFromSearchResult, toggleSearchEditorCaseSensitiveCommand, toggleSearchEditorWholeWordCommand, toggleSearchEditorRegexCommand, toggleSearchEditorContextLinesCommand, modifySearchEditorContextLinesCommand, selectAllSearchEditorMatchesCommand, openSearchEditor } from './searchEditorActions.js';\nimport { SearchEditorInput, SEARCH_EDITOR_EXT, getOrMakeSearchEditorInput } from './searchEditorInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { VIEW_ID } from '../../../services/search/common/search.js';\nimport { RegisteredEditorPriority, IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IWorkingCopyEditorService } from '../../../services/workingCopy/common/workingCopyEditorService.js';\nimport { Disposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';\nconst OpenInEditorCommandId = 'search.action.openInEditor';\nconst OpenNewEditorToSideCommandId = 'search.action.openNewEditorToSide';\nconst FocusQueryEditorWidgetCommandId = 'search.action.focusQueryEditorWidget';\nconst FocusQueryEditorFilesToIncludeCommandId = 'search.action.focusFilesToInclude';\nconst FocusQueryEditorFilesToExcludeCommandId = 'search.action.focusFilesToExclude';\nconst ToggleSearchEditorCaseSensitiveCommandId = 'toggleSearchEditorCaseSensitive';\nconst ToggleSearchEditorWholeWordCommandId = 'toggleSearchEditorWholeWord';\nconst ToggleSearchEditorRegexCommandId = 'toggleSearchEditorRegex';\nconst IncreaseSearchEditorContextLinesCommandId = 'increaseSearchEditorContextLines';\nconst DecreaseSearchEditorContextLinesCommandId = 'decreaseSearchEditorContextLines';\nconst RerunSearchEditorSearchCommandId = 'rerunSearchEditorSearch';\nconst CleanSearchEditorStateCommandId = 'cleanSearchEditorState';\nconst SelectAllSearchEditorMatchesCommandId = 'selectAllSearchEditorMatches';\n( Registry.as(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(SearchEditor, SearchEditor.ID, ( localize('searchEditor', \"Search Editor\"))), [\n    ( new SyncDescriptor(SearchEditorInput))\n]);\nlet SearchEditorContribution = class SearchEditorContribution {\n    constructor(editorResolverService, instantiationService) {\n        editorResolverService.registerEditor('*' + SEARCH_EDITOR_EXT, {\n            id: SearchEditorInput.ID,\n            label: ( localize('promptOpenWith.searchEditor.displayName', \"Search Editor\")),\n            detail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n            priority: RegisteredEditorPriority.default,\n        }, {\n            singlePerResource: true,\n            canSupportResource: resource => (extname(resource) === SEARCH_EDITOR_EXT)\n        }, {\n            createEditorInput: ({ resource }) => {\n                return { editor: instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'existingFile', fileUri: resource }) };\n            }\n        });\n    }\n};\nSearchEditorContribution = ( __decorate([\n    ( __param(0, IEditorResolverService)),\n    ( __param(1, IInstantiationService))\n], SearchEditorContribution));\nconst workbenchContributionsRegistry = ( Registry.as(Extensions.Workbench));\nworkbenchContributionsRegistry.registerWorkbenchContribution(SearchEditorContribution, 1 );\nCommandsRegistry.registerCommand(CleanSearchEditorStateCommandId, (accessor) => {\n    const activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n    if (activeEditorPane instanceof SearchEditor) {\n        activeEditorPane.cleanState();\n    }\n});\nconst category = { value: ( localize('search', \"Search Editor\")), original: 'Search Editor' };\nconst translateLegacyConfig = (legacyConfig = {}) => {\n    const config = {};\n    const overrides = {\n        includes: 'filesToInclude',\n        excludes: 'filesToExclude',\n        wholeWord: 'matchWholeWord',\n        caseSensitive: 'isCaseSensitive',\n        regexp: 'isRegexp',\n        useIgnores: 'useExcludeSettingsAndIgnoreFiles',\n    };\n    Object.entries(legacyConfig).forEach(([key, value]) => {\n        config[overrides[key] ?? key] = value;\n    });\n    return config;\n};\nconst openArgDescription = {\n    description: 'Open a new search editor. Arguments passed can include variables like ${relativeFileDirname}.',\n    args: [{\n            name: 'Open new Search Editor args',\n            schema: {\n                properties: {\n                    query: { type: 'string' },\n                    filesToInclude: { type: 'string' },\n                    filesToExclude: { type: 'string' },\n                    contextLines: { type: 'number' },\n                    matchWholeWord: { type: 'boolean' },\n                    isCaseSensitive: { type: 'boolean' },\n                    isRegexp: { type: 'boolean' },\n                    useExcludeSettingsAndIgnoreFiles: { type: 'boolean' },\n                    showIncludesExcludes: { type: 'boolean' },\n                    triggerSearch: { type: 'boolean' },\n                    focusResults: { type: 'boolean' },\n                    onlyOpenEditors: { type: 'boolean' },\n                }\n            }\n        }]\n};\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'search.searchEditor.action.deleteFileResults',\n            title: { value: ( localize('searchEditor.deleteResultBlock', \"Delete File Results\")), original: 'Delete File Results' },\n            keybinding: {\n                weight: 100 ,\n                primary: 2048  | 1024  | 1 ,\n            },\n            precondition: InSearchEditor,\n            category,\n            f1: true,\n        });\n    }\n    async run(accessor) {\n        const contextService = accessor.get(IContextKeyService).getContext(document.activeElement);\n        if (contextService.getValue(InSearchEditor.serialize())) {\n            accessor.get(IEditorService).activeEditorPane.deleteResultBlock();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: OpenNewEditorCommandId,\n            title: { value: ( localize('search.openNewSearchEditor', \"New Search Editor\")), original: 'New Search Editor' },\n            category,\n            f1: true,\n            description: openArgDescription\n        });\n    }\n    async run(accessor, args) {\n        await accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'new', ...args }));\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: OpenEditorCommandId,\n            title: { value: ( localize('search.openSearchEditor', \"Open Search Editor\")), original: 'Open Search Editor' },\n            category,\n            f1: true,\n            description: openArgDescription\n        });\n    }\n    async run(accessor, args) {\n        await accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'reuse', ...args }));\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: OpenNewEditorToSideCommandId,\n            title: { value: ( localize('search.openNewEditorToSide', \"Open New Search Editor to the Side\")), original: 'Open new Search Editor to the Side' },\n            category,\n            f1: true,\n            description: openArgDescription\n        });\n    }\n    async run(accessor, args) {\n        await accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig(args), true);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: OpenInEditorCommandId,\n            title: { value: ( localize('search.openResultsInEditor', \"Open Results in Editor\")), original: 'Open Results in Editor' },\n            category,\n            f1: true,\n            keybinding: {\n                primary: 512  | 3 ,\n                when: ( ContextKeyExpr.and(HasSearchResults, SearchViewFocusedKey)),\n                weight: 200 ,\n                mac: {\n                    primary: 2048  | 3\n                }\n            },\n        });\n    }\n    async run(accessor) {\n        const viewsService = accessor.get(IViewsService);\n        const instantiationService = accessor.get(IInstantiationService);\n        const searchView = getSearchView(viewsService);\n        if (searchView) {\n            await instantiationService.invokeFunction(createEditorFromSearchResult, searchView.searchResult, searchView.searchIncludePattern.getValue(), searchView.searchExcludePattern.getValue(), searchView.searchIncludePattern.onlySearchInOpenEditors());\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: RerunSearchEditorSearchCommandId,\n            title: { value: ( localize('search.rerunSearchInEditor', \"Search Again\")), original: 'Search Again' },\n            category,\n            keybinding: {\n                primary: 2048  | 1024  | 48 ,\n                when: InSearchEditor,\n                weight: 100\n            },\n            icon: searchRefreshIcon,\n            menu: [{\n                    id: MenuId.EditorTitle,\n                    group: 'navigation',\n                    when: ( ActiveEditorContext.isEqualTo(SearchEditorID))\n                },\n                {\n                    id: MenuId.CommandPalette,\n                    when: ( ActiveEditorContext.isEqualTo(SearchEditorID))\n                }]\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.triggerSearch({ resetCursor: false });\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: FocusQueryEditorWidgetCommandId,\n            title: { value: ( localize('search.action.focusQueryEditorWidget', \"Focus Search Editor Input\")), original: 'Focus Search Editor Input' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: {\n                primary: 9 ,\n                weight: 100\n            }\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.focusSearchInput();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: FocusQueryEditorFilesToIncludeCommandId,\n            title: { value: ( localize(\n                'search.action.focusFilesToInclude',\n                \"Focus Search Editor Files to Include\"\n            )), original: 'Focus Search Editor Files to Include' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.focusFilesToIncludeInput();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: FocusQueryEditorFilesToExcludeCommandId,\n            title: { value: ( localize(\n                'search.action.focusFilesToExclude',\n                \"Focus Search Editor Files to Exclude\"\n            )), original: 'Focus Search Editor Files to Exclude' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n        });\n    }\n    async run(accessor) {\n        const editorService = accessor.get(IEditorService);\n        const input = editorService.activeEditor;\n        if (input instanceof SearchEditorInput) {\n            editorService.activeEditorPane.focusFilesToExcludeInput();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: ToggleSearchEditorCaseSensitiveCommandId,\n            title: { value: ( localize('searchEditor.action.toggleSearchEditorCaseSensitive', \"Toggle Match Case\")), original: 'Toggle Match Case' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchInputBoxFocusedKey,\n            }, ToggleCaseSensitiveKeybinding)\n        });\n    }\n    run(accessor) {\n        toggleSearchEditorCaseSensitiveCommand(accessor);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: ToggleSearchEditorWholeWordCommandId,\n            title: { value: ( localize(\n                'searchEditor.action.toggleSearchEditorWholeWord',\n                \"Toggle Match Whole Word\"\n            )), original: 'Toggle Match Whole Word' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchInputBoxFocusedKey,\n            }, ToggleWholeWordKeybinding)\n        });\n    }\n    run(accessor) {\n        toggleSearchEditorWholeWordCommand(accessor);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: ToggleSearchEditorRegexCommandId,\n            title: { value: ( localize(\n                'searchEditor.action.toggleSearchEditorRegex',\n                \"Toggle Use Regular Expression\"\n            )), original: 'Toggle Use Regular Expression\"' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: Object.assign({\n                weight: 200 ,\n                when: SearchInputBoxFocusedKey,\n            }, ToggleRegexKeybinding)\n        });\n    }\n    run(accessor) {\n        toggleSearchEditorRegexCommand(accessor);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: ToggleSearchEditorContextLinesCommandId,\n            title: { value: ( localize(\n                'searchEditor.action.toggleSearchEditorContextLines',\n                \"Toggle Context Lines\"\n            )), original: 'Toggle Context Lines\"' },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: {\n                weight: 200 ,\n                primary: 512  | 42 ,\n                mac: { primary: 2048  | 512  | 42  }\n            }\n        });\n    }\n    run(accessor) {\n        toggleSearchEditorContextLinesCommand(accessor);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: IncreaseSearchEditorContextLinesCommandId,\n            title: { original: 'Increase Context Lines', value: ( localize(\n                'searchEditor.action.increaseSearchEditorContextLines',\n                \"Increase Context Lines\"\n            )) },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: {\n                weight: 200 ,\n                primary: 512  | 86\n            }\n        });\n    }\n    run(accessor) { modifySearchEditorContextLinesCommand(accessor, true); }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: DecreaseSearchEditorContextLinesCommandId,\n            title: { original: 'Decrease Context Lines', value: ( localize(\n                'searchEditor.action.decreaseSearchEditorContextLines',\n                \"Decrease Context Lines\"\n            )) },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: {\n                weight: 200 ,\n                primary: 512  | 88\n            }\n        });\n    }\n    run(accessor) { modifySearchEditorContextLinesCommand(accessor, false); }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: SelectAllSearchEditorMatchesCommandId,\n            title: { original: 'Select All Matches', value: ( localize('searchEditor.action.selectAllSearchEditorMatches', \"Select All Matches\")) },\n            category,\n            f1: true,\n            precondition: InSearchEditor,\n            keybinding: {\n                weight: 200 ,\n                primary: 2048  | 1024  | 42 ,\n            }\n        });\n    }\n    run(accessor) {\n        selectAllSearchEditorMatchesCommand(accessor);\n    }\n});\nregisterAction2(class OpenSearchEditorAction extends Action2 {\n    constructor() {\n        super({\n            id: 'search.action.openNewEditorFromView',\n            title: ( localize('search.openNewEditor', \"Open New Search Editor\")),\n            category,\n            icon: searchNewEditorIcon,\n            menu: [{\n                    id: MenuId.ViewTitle,\n                    group: 'navigation',\n                    order: 2,\n                    when: ( ContextKeyExpr.equals('view', VIEW_ID)),\n                }]\n        });\n    }\n    run(accessor, ...args) {\n        return openSearchEditor(accessor);\n    }\n});\nlet SearchEditorWorkingCopyEditorHandler = class SearchEditorWorkingCopyEditorHandler extends Disposable {\n    constructor(instantiationService, workingCopyEditorService) {\n        super();\n        this.instantiationService = instantiationService;\n        this._register(workingCopyEditorService.registerHandler(this));\n    }\n    handles(workingCopy) {\n        return workingCopy.resource.scheme === SearchEditorScheme;\n    }\n    isOpen(workingCopy, editor) {\n        if (!this.handles(workingCopy)) {\n            return false;\n        }\n        return editor instanceof SearchEditorInput && isEqual(workingCopy.resource, editor.modelUri);\n    }\n    createEditor(workingCopy) {\n        const input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'model', modelUri: workingCopy.resource });\n        input.setDirty(true);\n        return input;\n    }\n};\nSearchEditorWorkingCopyEditorHandler = ( __decorate([\n    ( __param(0, IInstantiationService)),\n    ( __param(1, IWorkingCopyEditorService))\n], SearchEditorWorkingCopyEditorHandler));\nworkbenchContributionsRegistry.registerWorkbenchContribution(SearchEditorWorkingCopyEditorHandler, 2 );\n","import '../missing-services.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { ISearchService } from '../vscode/vs/workbench/services/search/common/search.js';\nimport { SearchService } from '../vscode/vs/workbench/services/search/common/searchService.js';\nimport { ISearchWorkbenchService, SearchWorkbenchService } from '../vscode/vs/workbench/contrib/search/browser/searchModel.js';\nimport { ISearchHistoryService, SearchHistoryService } from '../vscode/vs/workbench/contrib/search/common/searchHistoryService.js';\nimport { IReplaceService } from '../vscode/vs/workbench/contrib/search/browser/replace.js';\nimport { ReplaceService } from '../vscode/vs/workbench/contrib/search/browser/replaceService.js';\nimport '../vscode/vs/workbench/contrib/search/browser/search.contribution.js';\nimport '../vscode/vs/workbench/contrib/searchEditor/browser/searchEditor.contribution.js';\nfunction getServiceOverride() {\n    return {\n        [( ISearchService.toString())]: new SyncDescriptor(SearchService, [], true),\n        [( ISearchWorkbenchService.toString())]: new SyncDescriptor(SearchWorkbenchService, [], true),\n        [( ISearchHistoryService.toString())]: new SyncDescriptor(SearchHistoryService, [], true),\n        [( IReplaceService.toString())]: new SyncDescriptor(ReplaceService, [], true)\n    };\n}\nexport { getServiceOverride as default };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { ThemeIcon } from 'monaco-editor/esm/vs/base/common/themables.js';\nconst pinButtonClass = ThemeIcon.asClassName(Codicon.pin);\nconst pinnedButtonClass = ThemeIcon.asClassName(Codicon.pinned);\nconst buttonClasses = [pinButtonClass, pinnedButtonClass];\nasync function showWithPinnedItems(storageService, storageKey, quickPick, filterDuplicates) {\n    const itemsWithoutPinned = quickPick.items;\n    let itemsWithPinned = _formatPinnedItems(storageKey, quickPick, storageService, undefined, filterDuplicates);\n    quickPick.onDidTriggerItemButton(async (buttonEvent) => {\n        const expectedButton = buttonEvent.button.iconClass && buttonClasses.includes(buttonEvent.button.iconClass);\n        if (expectedButton) {\n            quickPick.items = itemsWithoutPinned;\n            itemsWithPinned = _formatPinnedItems(storageKey, quickPick, storageService, buttonEvent.item, filterDuplicates);\n            quickPick.items = quickPick.value ? itemsWithoutPinned : itemsWithPinned;\n        }\n    });\n    quickPick.onDidChangeValue(async (value) => {\n        if (quickPick.items === itemsWithPinned && value) {\n            quickPick.items = itemsWithoutPinned;\n        }\n        else if (quickPick.items === itemsWithoutPinned && !value) {\n            quickPick.items = itemsWithPinned;\n        }\n    });\n    quickPick.items = quickPick.value ? itemsWithoutPinned : itemsWithPinned;\n    quickPick.show();\n}\nfunction _formatPinnedItems(storageKey, quickPick, storageService, changedItem, filterDuplicates) {\n    const formattedItems = [];\n    let pinnedItems;\n    if (changedItem) {\n        pinnedItems = updatePinnedItems(storageKey, changedItem, storageService);\n    }\n    else {\n        pinnedItems = getPinnedItems(storageKey, storageService);\n    }\n    if (pinnedItems.length) {\n        formattedItems.push({ type: 'separator', label: ( localize(\"terminal.commands.pinned\", 'pinned')) });\n    }\n    const pinnedIds = ( new Set());\n    for (const itemToFind of pinnedItems) {\n        const itemToPin = quickPick.items.find(item => itemsMatch(item, itemToFind));\n        if (itemToPin) {\n            const pinnedItemId = getItemIdentifier(itemToPin);\n            const pinnedItem = Object.assign({}, itemToPin);\n            if (!filterDuplicates || !( pinnedIds.has(pinnedItemId))) {\n                pinnedIds.add(pinnedItemId);\n                updateButtons(pinnedItem, false);\n                formattedItems.push(pinnedItem);\n            }\n        }\n    }\n    for (const item of quickPick.items) {\n        updateButtons(item, true);\n        formattedItems.push(item);\n    }\n    return formattedItems;\n}\nfunction getItemIdentifier(item) {\n    return item.type === 'separator' ? '' : item.id || `${item.label}${item.description}${item.detail}}`;\n}\nfunction updateButtons(item, removePin) {\n    if (item.type === 'separator') {\n        return;\n    }\n    const newButtons = item.buttons?.filter(button => button.iconClass && !buttonClasses.includes(button.iconClass)) ?? [];\n    newButtons.unshift({\n        iconClass: removePin ? pinButtonClass : pinnedButtonClass,\n        tooltip: removePin ? ( localize('pinCommand', \"Pin command\")) : ( localize('pinnedCommand', \"Pinned command\")),\n        alwaysVisible: false\n    });\n    item.buttons = newButtons;\n}\nfunction itemsMatch(itemA, itemB) {\n    return getItemIdentifier(itemA) === getItemIdentifier(itemB);\n}\nfunction updatePinnedItems(storageKey, changedItem, storageService) {\n    const removePin = changedItem.buttons?.find(b => b.iconClass === pinnedButtonClass);\n    let items = getPinnedItems(storageKey, storageService);\n    if (removePin) {\n        items = items.filter(item => getItemIdentifier(item) !== getItemIdentifier(changedItem));\n    }\n    else {\n        items.push(changedItem);\n    }\n    storageService.store(storageKey, JSON.stringify(items), 1 , 1 );\n    return items;\n}\nfunction getPinnedItems(storageKey, storageService) {\n    const items = storageService.get(storageKey, 1 );\n    return items ? JSON.parse(items) : [];\n}\nexport { showWithPinnedItems };\n","import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';\nimport { localize } from 'monaco-editor/esm/vs/nls.js';\nimport { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';\nregisterIcon('extensions-view-icon', Codicon.extensions, ( localize('extensionsViewIcon', 'View icon of the extensions view.')));\nconst manageExtensionIcon = registerIcon('extensions-manage', Codicon.gear, ( localize(\n 'manageExtensionIcon',\n 'Icon for the \\'Manage\\' action in the extensions view.'\n)));\nregisterIcon('extensions-clear-search-results', Codicon.clearAll, ( localize(\n 'clearSearchResultsIcon',\n 'Icon for the \\'Clear Search Result\\' action in the extensions view.'\n)));\nregisterIcon('extensions-refresh', Codicon.refresh, ( localize('refreshIcon', 'Icon for the \\'Refresh\\' action in the extensions view.')));\nconst filterIcon = registerIcon('extensions-filter', Codicon.filter, ( localize('filterIcon', 'Icon for the \\'Filter\\' action in the extensions view.')));\nregisterIcon('extensions-install-local-in-remote', Codicon.cloudDownload, ( localize(\n 'installLocalInRemoteIcon',\n 'Icon for the \\'Install Local Extension in Remote\\' action in the extensions view.'\n)));\nregisterIcon('extensions-install-workspace-recommended', Codicon.cloudDownload, ( localize(\n 'installWorkspaceRecommendedIcon',\n 'Icon for the \\'Install Workspace Recommended Extensions\\' action in the extensions view.'\n)));\nregisterIcon('extensions-configure-recommended', Codicon.pencil, ( localize(\n 'configureRecommendedIcon',\n 'Icon for the \\'Configure Recommended Extensions\\' action in the extensions view.'\n)));\nconst syncEnabledIcon = registerIcon('extensions-sync-enabled', Codicon.sync, ( localize('syncEnabledIcon', 'Icon to indicate that an extension is synced.')));\nconst syncIgnoredIcon = registerIcon('extensions-sync-ignored', Codicon.syncIgnored, ( localize(\n 'syncIgnoredIcon',\n 'Icon to indicate that an extension is ignored when syncing.'\n)));\nregisterIcon('extensions-remote', Codicon.remote, ( localize(\n 'remoteIcon',\n 'Icon to indicate that an extension is remote in the extensions view and editor.'\n)));\nregisterIcon('extensions-install-count', Codicon.cloudDownload, ( localize(\n 'installCountIcon',\n 'Icon shown along with the install count in the extensions view and editor.'\n)));\nregisterIcon('extensions-rating', Codicon.star, ( localize(\n 'ratingIcon',\n 'Icon shown along with the rating in the extensions view and editor.'\n)));\nregisterIcon('extensions-verified-publisher', Codicon.verifiedFilled, ( localize(\n 'verifiedPublisher',\n 'Icon used for the verified extension publisher in the extensions view and editor.'\n)));\nconst preReleaseIcon = registerIcon('extensions-pre-release', Codicon.versions, ( localize(\n 'preReleaseIcon',\n 'Icon shown for extensions having pre-release versions in extensions view and editor.'\n)));\nregisterIcon('extensions-sponsor', Codicon.heartFilled, ( localize(\n 'sponsorIcon',\n 'Icon used for sponsoring extensions in the extensions view and editor.'\n)));\nregisterIcon('extensions-star-full', Codicon.starFull, ( localize(\n 'starFullIcon',\n 'Full star icon used for the rating in the extensions editor.'\n)));\nregisterIcon('extensions-star-half', Codicon.starHalf, ( localize(\n 'starHalfIcon',\n 'Half star icon used for the rating in the extensions editor.'\n)));\nregisterIcon('extensions-star-empty', Codicon.starEmpty, ( localize(\n 'starEmptyIcon',\n 'Empty star icon used for the rating in the extensions editor.'\n)));\nconst errorIcon = registerIcon('extensions-error-message', Codicon.error, ( localize('errorIcon', 'Icon shown with a error message in the extensions editor.')));\nconst warningIcon = registerIcon('extensions-warning-message', Codicon.warning, ( localize(\n 'warningIcon',\n 'Icon shown with a warning message in the extensions editor.'\n)));\nconst infoIcon = registerIcon('extensions-info-message', Codicon.info, ( localize('infoIcon', 'Icon shown with an info message in the extensions editor.')));\nconst trustIcon = registerIcon('extension-workspace-trust', Codicon.shield, ( localize(\n 'trustIcon',\n 'Icon shown with a workspace trust message in the extension editor.'\n)));\nregisterIcon('extension-activation-time', Codicon.history, ( localize(\n 'activationtimeIcon',\n 'Icon shown with a activation time message in the extension editor.'\n)));\nexport { errorIcon, filterIcon, infoIcon, manageExtensionIcon, preReleaseIcon, syncEnabledIcon, syncIgnoredIcon, trustIcon, warningIcon };\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","SearchService","constructor","modelService","editorService","telemetryService","logService","extensionService","fileService","uriIdentityService","super","this","fileSearchProviders","Map","textSearchProviders","deferredFileSearchesByScheme","deferredTextSearchesByScheme","loggedSchemesMissingProviders","Set","registerSearchResultProvider","scheme","type","provider","list","deferredMap","Error","set","has","get","complete","delete","textSearch","query","token","onProgress","notebookURIs","localResults","getLocalResults","arrays","results","values","forEach","otherResults","doSearch","progress","resource","debug","message","limitHit","fileSearch","trace","JSON","stringify","schemesInQuery","getSchemesInQuery","providerActivations","Promise","resolve","activateByEvent","providerPromise","all","whenInstalledExtensionsRegistered","isCancellationRequested","reject","exists","folderQueries","map","folder","filter","_","i","completes","searchWithProviders","item","length","stats","messages","text","trusted","c","onCancellationRequested","then","schemes","fq","add","extraFileResources","extraFile","waitForProvider","queryType","p","deferred","onProviderProgress","e2eSW","create","searchPs","fqs","groupFolderQueriesByScheme","someSchemeHasProvider","keys","some","async","schemeFQs","warn","oneSchemeQuery","endToEndTime","elapsed","sendTelemetry","err","searchError","undefined","queries","fileSchemeOnly","every","file","otherSchemeOnly","fileSearchStats","fromCache","cacheStats","detailStats","publicLog2","reason","_reason","resultCount","workspaceFolderCount","sortingTime","cacheWasResolved","cacheLookupTime","cacheFilterTime","cacheEntryCount","searchEngineStats","fileWalkTime","directoriesWalked","filesWalked","cmdTime","cmdResultCount","errorType","code","regexParseError","unknownEncoding","globParseError","invalidLiteral","other","canceled","error","uri","extUri","getComparisonKey","canonicalToOriginalResources","editorInput","editors","canonical","getCanonicalUri","supportSideBySide","PRIMARY","original","getOriginalUri","getModels","model","originalResource","getLanguageId","includePattern","untitled","hasProvider","matches","askMax","maxResults","Number","MAX_SAFE_INTEGER","findMatches","contentPattern","pattern","isRegExp","isCaseSensitive","isWordMatch","wordSeparators","slice","fileMatch","textSearchResults","previewOptions","fsPath","clearCache","cacheKey","clearPs","Array","from","REPLACE_PREVIEW","toReplaceResource","fileResource","with","network","internal","fragment","ReplacePreviewContentProvider","instantiationService","textModelResolverService","registerTextModelContentProvider","provideTextContent","createInstance","ReplacePreviewModel","languageService","replaceService","searchWorkbenchService","replacePreviewUri","replaceResource","parse","searchModel","searchResult","match","toString","sourceModel","_register","createModelReference","object","textEditorModel","sourceModelLanguageId","replacePreviewModel","createModel","createSnapshot","createById","onChange","forceUpdateModel","update","onReplaceTermChanged","onDispose","dispose","onWillDispose","override","isDisposed","updateReplacePreview","ReplaceService","REPLACE_SAVE_SOURCE","registerSource","nls","textFileService","bulkEditorService","labelService","notebookEditorModelResolverService","replace","arg","edits","createEdits","apply","rawTextPromises","e","vscodeNotebookCell","files","save","source","notebookResource","notebook","ref","settled","openReplacePreview","element","preserveFocus","sideBySide","pinned","parent","editor","openEditor","modified","label","name","description","getUriLabel","relative","options","revealIfVisible","input","disposable","editorControl","getControl","revealLineInCenter","range","startLineNumber","sourceModelRef","replaceModelRef","replaceModel","setValue","getValue","undo","applyEditsToPreview","resourceEdits","modelEdits","resourceEdit","replaceMove","lift","textEdit","pushEditOperations","sort","a","b","compareRangesUsingStarts","isWebviewMatch","createEdit","replaceString","cell","count","flatMap","LoadingPhase","FileQueryCacheState","loadingPhase","Loaded","previousCacheState","_cacheKey","isLoaded","isUpdating","Loading","cacheQuery","loadFn","disposeFn","nextId","Created","current","Object","assign","previous","load","loadPromise","Errored","Disposed","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","FindOptionsWidget","state","keybindingService","_hideSoon","_hide","_isVisible","_editor","_state","_keybindingService","_domNode","document","createElement","className","style","display","top","zIndex","setAttribute","toggleStyles","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","caseSensitive","appendTitle","_keybindingLabelFor","ToggleCaseSensitiveCommand","isChecked","matchCase","appendChild","domNode","change","checked","wholeWords","ToggleWholeWordCommand","wholeWord","regex","ToggleRegexCommand","isRegex","addOverlayWidget","onFindReplaceStateChange","somethingChanged","isRevealed","_revealTemporarily","dom","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","getId","ID","getDomNode","getPosition","preference","highlightFindOptions","_show","schedule","cancel","__decorate","decorators","target","key","desc","d","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","fulfilled","value","step","next","rejected","result","done","getSelectionSearchString","seedSearchStringFromSelection","seedSearchStringFromNonEmptySelection","hasModel","selection","getSelection","endLineNumber","isEmpty","wordAtPosition","getConfiguredWordAtPosition","getStartPosition","word","getModel","getValueLengthInRange","getValueInRange","CommonFindController","getContribution","contextKeyService","storageService","clipboardService","_findWidgetVisible","bindTo","_contextKeyService","_storageService","_clipboardService","_updateHistoryDelayer","loadQueryState","_onStateChanged","_model","onDidChangeModel","shouldRestartFind","disposeModel","searchScope","getBoolean","preserveCase","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","loop","getOption","saveQueryState","reset","searchString","setGlobalBufferTerm","store","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","isFindInputFocused","getState","closeFindWidget","focus","toggleCaseSensitive","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","selections","getSelections","endColumn","setEndPosition","getLineMaxColumn","setSearchString","strings","ignoreWhenVisible","opts","newState","stateChanges","selectionSearchString","getGlobalBufferTerm","isReplaceRevealed","currentSelections","start","moveToNextMatch","moveToPrevMatch","goToMatch","index","moveToMatch","replaceAll","selectAllMatches","globalFindClipboard","isTooLargeForSyncing","readFindText","writeFindText","FindController","_contextViewService","_themeService","_notificationService","_widget","_findOptionsWidget","_super","_createFindWidget","autoFindInSelection","call","focusReplaceInput","focusFindInput","saveViewState","_a","getViewState","restoreViewState","setViewState","StartFindAction","alias","precondition","or","kbOpts","kbExpr","primary","weight","menuOpts","menuId","MenubarEditMenu","group","title","comment","order","addImplementation","accessor","args","controller","findArgDescription","schema","properties","regexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","findInSelection","StartFindWithArgsAction","StartFindWithArgs","run","matchWholeWord","StartFindWithSelectionAction","StartFindWithSelection","mac","MatchFindAction","_run","MoveToMatchFindAction","GoToMatchFindAction","_highlightDecorations","matchesCount","notify","severity","Warning","inputBox","createInputBox","placeholder","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","currentMatch","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","show","changeDecorations","changeAccessor","deltaDecorations","isWholeLine","overviewRuler","color","position","Full","SelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","NextMatchFindAction","secondary","and","pushUndoStop","PreviousMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","FindCommand","bindToContribution","CloseFindWidgetCommand","handler","x","not","win","linux","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","SymbolsQuickAccessProvider","PREFIX","TYPING_SEARCH_DELAY","TREAT_AS_GLOBAL_SYMBOL_TYPES","defaultFilterValue","codeEditorService","getFocusedCodeEditor","openerService","configurationService","canAcceptInBackground","noResultsPick","delayer","configuration","editorConfig","workbench","openEditorPinned","enablePreviewFromQuickOpen","enablePreview","openSideBySideDirection","_getPicks","disposables","getSymbolPicks","trigger","doGetSymbolPicks","delay","symbolQuery","containerQuery","workspaceSymbols","symbolPicks","symbol","skipLocal","kind","containerName","symbolLabel","symbolLabelWithIcon","toIcon","symbolLabelIconOffset","symbolScore","symbolMatches","skipContainerQuery","symbolUri","location","containerLabel","containerScore","containerMatches","containerPath","deprecated","tags","indexOf","score","ariaLabel","highlights","strikethrough","buttons","iconClass","asClassName","splitHorizontal","splitVertical","tooltip","buttonIndex","keyMods","openSymbol","forceOpenSideBySide","CLOSE_PICKER","accept","event","inBackground","forcePinned","skipSorting","symbolA","symbolB","compareSymbols","symbolToOpen","resolveWorkspaceSymbol","http","https","open","fromUserGesture","allowContributedOpeners","ctrlCmd","collapseToStart","alt","symbolAName","toLowerCase","symbolBName","res","localeCompare","symbolAKind","symbolBKind","SHOW_ALL","configureTaskIcon","gear","removeTaskIcon","close","TaskQuickPick","_taskService","_configurationService","_quickInputService","_dialogService","_sorter","createSorter","_showDetail","_guessTaskLabel","task","_label","is","configures","objects","getTaskLabelWithIcon","labelGuess","icon","configurationProperties","tools","applyColorStyles","entry","themeService","colorTheme","getColorTheme","styleElement","iconClasses","body","_createTaskEntry","extraButtons","getTaskDescription","detail","_createEntriesForGroup","entries","tasks","groupLabel","_createTypeEntries","types","alwaysShow","_handleFolderTaskResult","folderTasks","configurations","byIdentifier","_dedupeConfiguredAndRecent","recentTasks","configuredTasks","dedupedConfiguredTasks","foundRecentTasks","fill","j","workspaceFolder","getWorkspaceFolder","definition","getDefinition","_key","recentKey","getRecentlyUsedKey","findIndex","compare","prunedRecentTasks","getTopLevelEntries","defaultEntry","_topLevelEntries","getSavedTasks","reverse","getWorkspaceTasks","extensionTaskTypes","taskTypes","dedupeAndPrune","removeRecentButton","isSingleConfigured","handleSettingOption","selectedType","confirmed","confirm","cancelButton","updateValue","setTimeout","placeHolder","startAtType","picker","createQuickPick","matchOnDescription","ignoreFocusOut","onDidTriggerItemButton","context","button","removeRecentlyUsedTask","indexToRemove","items","customize","canOpenConfig","openConfig","firstLevelTask","topLevelEntriesResult","_toTask","taskQuickPickEntries","_doPickerFirstLevel","selectedEntry","doPickerSecondLevel","settingType","firstLevelPickerResult","once","selectedItems","busy","t","allSettingEntries","_getEntriesForProvider","gruntEntry","getSettingEntry","gulpEntry","jakeEntry","toUpperCase","settingEntry","resolvedTask","tryResolveTask","TasksQuickAccessProvider","taskQuickPick","topLevelPicks","taskPicks","quickAccessEntry","REFRESH_PICKER","showResult","attachProblemMatcher","isEditorSymbolQuickPickItem","pick","candidate","AnythingQuickAccessProvider","NO_RESULTS_PICK","MAX_RESULTS","SYMBOL_PICKS_MERGE_DELAY","preserveInput","LAST","searchService","contextService","pathService","environmentService","workingCopyService","historyService","filesConfigurationService","textModelService","quickInputService","pickState","editorViewState","scorerCache","fileQueryCache","lastOriginalFilter","lastFilter","lastRange","lastGlobalPicks","isQuickNavigating","quickNavigate","createFileQueryCache","rememberEditorViewState","activeEditorPane","restoreEditorViewState","viewState","labelOnlyEditorHistoryPickAccessor","skipDescription","fileQueryDelayer","fileQueryBuilder","helpQuickAccess","workspaceSymbolsQuickAccess","editorSymbolsQuickAccess","searchConfig","search","quickAccessConfig","quickOpen","includeSymbols","includeHistory","historyFilterSortOrder","history","filterSortOrder","shortAutoSaveDelay","getAutoSaveMode","provide","runOptions","editorDecorationsDisposable","onDidChangeActive","activeItems","decorateAndRevealSymbolRange","Gesture","activeEditor","isEqual","None","activeEditorControl","activeTextEditorControl","revealRangeInCenter","decoration","originalFilter","filterWithRange","lastWasFiltering","picks","activePick","activePickIsEditorSymbol","activePickIsNoResultsInEditorSymbols","active","doGetPicks","enableEditorSymbolSearch","includeHelp","editorSymbolPicks","getEditorSymbolPicks","historyEditorPicks","getEditorHistoryPicks","getHelpPicks","additionalPicks","additionalPicksExcludes","historyEditorPick","getAdditionalPicks","mergeDelay","excludes","filePicks","getFilePicks","getWorkspaceSymbolPicks","sortedAnythingPicks","anyPickA","anyPickB","filteredAnythingPicks","anythingPick","labelMatch","descriptionMatch","normalized","getHistory","createAnythingPick","editorHistoryScorerAccessor","containsPathSeparator","editorHistoryPicks","vscodeTerminal","editorHistoryPick","editorA","editorB","getWorkspace","folders","getFileQueryOptions","absolutePathResult","getAbsolutePathFileResult","fileMatches","absolutePathPick","end","doFileSearch","fileSearchResults","relativePathFileResults","getFileSearchResults","getRelativePathFileResults","relativePathFileResultsMap","relativePathFileResult","filePattern","doGetFileSearchResults","additionalFileSearchResults","existingFileSearchResultsMap","fileSearchResult","additionalFileSearchResult","invokeFunction","sortByScore","userHome","detildifiedQuery","path","isAbsolutePathQuery","isAbsolute","fileURI","remoteAuthority","defaultUriScheme","stat","isFile","resources","toResource","providers","getQuickAccessProviders","mapOfProviders","prefix","importantProviders","AddProvider","modifications","providerSpecificOptions","quickAccess","preserveValue","providerOptions","filterSegments","split","trim","activeGlobalPick","activeGlobalResource","includes","doGetEditorSymbolPicks","revealIfOpened","ignoreError","modelReference","extraContainerLabel","editorSymbolPick","openAnything","resourceOrEditor","isEditorHistoryEntry","isUri","isDirty","extraClasses","getName","getDescription","isSaving","getLabelExtraClasses","labelAndDescription","iconClassesValue","getIconClasses","concat","buttonsValue","circleFilled","alwaysVisible","removeFromHistory","REMOVE_ITEM","NO_ACTION","editorOptions","targetGroup","resourceEditorInput","searchDetailsIcon","ellipsis","searchShowContextIcon","listSelection","searchHideReplaceIcon","chevronRight","searchShowReplaceIcon","chevronDown","searchReplaceAllIcon","searchReplaceIcon","searchRemoveIcon","searchRefreshIcon","refresh","searchCollapseAllIcon","collapseAll","searchExpandAllIcon","expandAll","searchShowAsTree","listTree","searchShowAsList","listFlat","searchClearIcon","clearAll","searchStopIcon","searchStop","searchViewIcon","searchNewEditorIcon","newFile","wordHighlightBackground","dark","light","hcDark","hcLight","wordHighlightBorder","overviewRulerWordHighlightForeground","overviewRulerWordHighlightStrongForeground","overviewRulerWordHighlightTextForeground","_SELECTION_HIGHLIGHT_OPTIONS","register","stickiness","Center","minimap","Inline","_SELECTION_HIGHLIGHT_OPTIONS_NO_OVERVIEW","getSelectionHighlightDecorationOptions","hasSemanticHighlights","theme","collector","selectionHighlight","getColor","addRule","transparent","announceCursorChange","previousCursorState","cursorState","cursorDiff","cs","find","pcs","equals","cursorPositions","lineNumber","column","join","msg","InsertCursorAbove","editorTextFocus","MenubarSelectionMenu","useLogicalLine","logicalLine","viewModel","_getViewModel","cursorConfig","readOnly","pushStackElement","getCursorStates","setCursorStates","addCursorUp","revealTopMostCursor","InsertCursorBelow","addCursorDown","revealBottomMostCursor","InsertCursorAtEndOfEachLineSelected","getCursorsForSelection","currentLineMaxColumn","newSelections","sel","setSelections","InsertCursorAtEndOfLineSelected","lineCount","getLineCount","startColumn","InsertCursorAtTopOfLineSelected","MultiCursorSessionResult","revealRange","revealScrollType","MultiCursorSession","findController","findState","hasTextFocus","isDisconnectedFromFindController","s","searchText","addSelectionToNextFindMatch","nextMatch","_getNextMatch","allSelections","moveSelectionToNextFindMatch","lastAddedSelection","findNextMatch","getEndPosition","addSelectionToPreviousFindMatch","previousMatch","_getPreviousMatch","moveSelectionToPreviousFindMatch","findPreviousMatch","selectAll","editorModel","MultiCursorSelectionController","_sessionDispose","_ignoreSelectionChange","_session","_endSession","_beginSessionIfNeeded","session","isRegexOverride","onDidChangeCursorSelection","onDidBlurEditorText","clear","_setSelections","_expandEmptyToWord","_applySessionResult","revealRangeInCenterIfOutsideViewport","getSession","modelRangesContainSameText","resultingSelections","len","editorSelection","intersectRanges","m","selectAllUsingSelections","MultiCursorSelectionControllerAction","multiCursorController","newFindController","SelectionHighlighterState","_searchText","_matchCase","_wordSeparators","prevState","_modelVersionId","getVersionId","_cachedFindMatches","SelectionHighlighter","_languageFeaturesService","_isEnabled","_decorations","createDecorationsCollection","updateSoon","_update","onDidChangeConfiguration","_setState","onDidChangeModelContent","_createState","oldState","isEnabled","test","findStateSearchString","mySearchString","isTooLargeForTokenization","allMatches","lenJ","cmp","areIntersecting","documentHighlightProvider","decorations","ranges","selectedText","FocusNextCursor","firstCursor","shift","revealPrimaryCursor","FocusPreviousCursor","pop","unshift","writable","contextMenuOpts","NotebookEditor","PatternInputWidget","OPTION_CHANGE","contextViewProvider","_onSubmit","onSubmit","_onCancel","onCancel","width","render","inputFocusTracker","setWidth","newWidth","layout","setInputWidth","select","inputHasFocus","hasFocus","getSubcontrolsWidth","clearHistory","prependHistory","onSearchSubmit","addToHistory","showNextTerm","showNextValue","showPreviousTerm","showPreviousValue","classList","showPlaceholderOnFocus","validationOptions","validation","showHistoryHint","inputBoxStyles","onDidChange","fire","inputElement","onkeyup","keyboardEvent","onInputKeyUp","controls","renderSubcontrols","_controlsDiv","keyCode","IncludePatternInputWidget","_onChangeSearchInEditorsBoxEmitter","onChangeSearchInEditorsBox","useSearchInEditorsBox","onlySearchInOpenEditors","setOnlySearchInOpenEditors","controlsDiv","book","viaKeyboard","ExcludePatternInputWidget","_onChangeIgnoreBoxEmitter","onChangeIgnoreBox","useExcludesAndIgnoreFilesBox","useExcludesAndIgnoreFiles","setUseExcludesAndIgnoreFiles","exclude","actionClassName","category","appendKeyBindingLabel","inputKeyBinding","keyBinding","doAppendKeyBindingLabel","getSearchView","viewsService","getActiveViewWithId","getElementsToOperateOn","viewer","currElement","sortConfig","elements","sortOrder","openSearchView","openView","view","renderSearchMessage","notificationService","commandService","disposableStore","triggerSearch","div","$","linkedText","Information","Info","node","nodes","createTextNode","link","opener","href","parsed","command","executeCommand","ToggleCaseSensitiveCommandId","ToggleWholeWordCommandId","ToggleRegexCommandId","TogglePreserveCaseId","ShowAllSymbolsActionId","SearchViewVisibleKey","SearchViewFocusedKey","InputBoxFocusedKey","SearchInputBoxFocusedKey","ReplaceInputBoxFocusedKey","PatternIncludesFocusedKey","PatternExcludesFocusedKey","ReplaceActiveKey","HasSearchResults","FirstMatchFocusKey","FileMatchOrMatchFocusKey","FileMatchOrFolderMatchFocusKey","FileMatchOrFolderMatchWithResourceFocusKey","FileFocusKey","FolderFocusKey","ResourceFolderFocusKey","IsEditableItemKey","MatchFocusKey","ViewHasSearchPatternKey","ViewHasReplacePatternKey","ViewHasFilePatternKey","ViewHasSomeCollapsibleKey","InTreeViewKey","SearchDelegate","ITEM_HEIGHT","getHeight","getTemplateId","FolderMatchRenderer","TEMPLATE_ID","FileMatchRenderer","MatchRenderer","console","searchView","labels","templateId","renderCompressedElements","templateData","height","compressed","fileKind","ROOT_FOLDER","FOLDER","setResource","separator","getSeparator","setLabel","renderFolderDetails","renderTemplate","container","folderMatchElement","supportDescriptionHighlights","supportHighlights","badge","actionBarContainer","elementDisposables","contextKeyServiceMain","createScoped","createChild","actions","SearchActionMenu","menuOptions","shouldForwardArgs","hiddenItemStrategy","toolbarOptions","primaryGroup","g","renderElement","folderMatch","setFile","hidePath","isTreeLayoutViewVisible","hasOnlyReadOnlyMatches","disposeElement","disposeCompressedElements","disposeTemplate","recursiveMatchCount","setCount","setTitleFormat","fileMatchElement","el","decorationConfig","hideIcon","fileDecorations","colors","badges","twistieContainer","parentElement","querySelector","before","after","preview","isReplaceActive","textContent","inside","toggle","substr","numLines","extraLinesStr","showLineNumbers","lineNumberStr","getMatchTitle","startLine","SearchAccessibilityProvider","getWidgetAriaLabel","getAriaLabel","allDownstreamFileMatches","reduce","total","path$1","matchString","getMatchString","matchText","InSearchEditor","SearchEditorScheme","SearchEditorWorkingCopyTypeId","SearchEditorFindMatchClass","SearchEditorID","OpenEditorCommandId","ToggleSearchEditorContextLinesCommandId","SearchEditorInputTypeId","NotebookFindFilters","markupInput","_markupInput","_onDidChange","markupPreview","_markupPreview","codeInput","_codeInput","codeOutput","_codeOutput","_initialMarkupInput","_initialMarkupPreview","_initialCodeInput","_initialCodeOutput","isModified","v","NOTEBOOK_FIND_FILTERS","NOTEBOOK_FIND_IN_MARKUP_INPUT","NOTEBOOK_FIND_IN_MARKUP_PREVIEW","NOTEBOOK_FIND_IN_CODE_INPUT","NOTEBOOK_FIND_IN_CODE_OUTPUT","NotebookFindFilterActionViewItem","filters","action","actionRunner","contextMenuService","getActions","classNames","class","anchorAlignmentProvider","updateChecked","markdownInput","enabled","markdownPreview","_action","NotebookFindInputFilterButton","_actionbar","_toggleStyles","_filtersAction","_filterButtonContainer","createFilters","applyStyles","filterChecked","border","borderRadius","borderColor","backgroundColor","actionViewItemProvider","SearchFindInput","filterStartVisiblitity","_filterChecked","_visible","_findFilter","paddingRight","filterVisible","updateStyles","setEnabled","disable","enable","_searchWidget","searchWidget","triggerReplaceAll","ctrlKeyMod","stopPropagationForMultiLineUpwards","textarea","isMultiline","clientHeight","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","SearchWidget","INPUT_MAX_HEIGHT","REPLACE_ALL_DISABLED_LABEL","REPLACE_ALL_ENABLED_LABEL","keyBindingService2","contextViewService","clipboardServce","accessibilityService","ignoreGlobalFindBufferOnNextFocus","previousGlobalFindBufferValue","_onSearchSubmit","_onSearchCancel","onSearchCancel","_onReplaceToggled","onReplaceToggled","_onReplaceStateChange","onReplaceStateChange","_onPreserveCaseChange","onPreserveCaseChange","_onReplaceValueChanged","onReplaceValueChanged","_onReplaceAll","onReplaceAll","_onBlur","onBlur","_onDidHeightChange","onDidHeightChange","_onDidToggleContext","onDidToggleContext","replaceActive","searchInputBoxFocused","replaceInputBoxFocused","notebookOptions","isInNotebookMarkdownInput","isInNotebookMarkdownPreview","isInNotebookCellInput","isInNotebookCellOutput","_notebookFilters","searchInput","onDidEditorsChange","_hasNotebookOpen","_replaceHistoryDelayer","affectsConfiguration","updateAccessibilitySupport","onDidChangeScreenReaderOptimized","getNotebookFilters","focusReplace","suppressGlobalSearchBuffer","isReplaceShown","replaceInput","setReplaceAllActionState","replaceContainer","contains","getReplaceValue","toggleReplace","onToggleReplaceButton","getSearchHistory","getReplaceHistory","prependSearchHistory","prependReplaceHistory","showNextSearchTerm","showPreviousSearchTerm","showNextReplaceTerm","showPreviousReplaceTerm","searchInputHasFocus","replaceInputHasFocus","focusReplaceAllAction","replaceActionBar","focusRegexAction","focusOnRegex","_hideReplaceToggle","renderToggleReplaceButton","renderSearchInput","renderReplaceInput","setFocusInputOnOptionClick","isScreenReaderOptimized","toggleReplaceButton","buttonBackground","buttonBorder","buttonForeground","buttonHoverBackground","buttonSecondaryBackground","buttonSecondaryForeground","buttonSecondaryHoverBackground","buttonSeparator","onDidClick","inputOptions","validateSearchInput","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","searchHistory","flexibleHeight","flexibleMaxHeight","showCommonFindToggles","searchInputContainer","onKeyDown","onSearchInputKeyDown","setRegex","setCaseSensitive","setWholeWords","isWholeWords","onCaseSensitiveKeyDown","onRegexKeyDown","onSearchInputChanged","searchInputFocusTracker","onDidFocus","useGlobalFindBuffer","searchConfiguration","globalBufferText","onDidBlur","showContextToggle","onContextLinesChanged","contextLinesInput","searchEditor","defaultNumberOfContextLines","setContextLines","lines","replaceBox","appendPreserveCaseLabel","replaceHistory","onDidOptionChange","getPreserveCase","onReplaceInputKeyDown","replaceValue","replaceAllAction","onkeydown","onReplaceActionbarKeyDown","replaceInputFocusTracker","onPreserveCaseKeyDown","remove","asClassNameArray","updateReplaceActiveState","currentState","getRegex","clearMessage","searchOnType","RegExp","matchienessHeuristic","delayMultiplier","submitSearch","searchOnTypeDebouncePeriod","insertAtCursor","preventDefault","focusOnCaseSensitive","focusOnPreserve","triggeredOnType","validate","isInputValid","getContextLines","modifyContextLines","increase","toggleContextLines","translateRangeLines","n","matchToSearchResultFormat","longestLineNumber","fullMatchLines","fullPreviewLines","sourceLine","getLinePrefix","repeat","prefixOffset","line","rangeOnThisLine","matchRange","rangeInPreview","lineRange","matchesToSearchResultFormat","sortedMatches","matchContext","labelFormatter","shouldUseHeader","matchRanges","targetLineNumberToOffset","lastLine","seenLines","extractSearchQueryFromLines","filesToInclude","filesToExclude","isRegexp","useExcludeSettingsAndIgnoreFiles","contextLines","showIncludesExcludes","onlyOpenEditors","notebookSearchConfig","includeMarkupInput","includeMarkupPreview","includeCodeInput","includeOutput","unescapeNewlines","str","out","escaped","parseYML","exec","serializeSearchResultForEditor","rawIncludePattern","rawExcludePattern","config","userDisabledExcludesAndIgnoreFiles","notebookInfo","contentPatternToSearchConfiguration","filecount","fileCount","resultcount","info","matchComparer","allResults","flattenSearchResultSerializations","folderMatches","textSerializations","textMatches","cellSerializations","cellMatches","cellIndex","cellMatch","contentMatches","cellMatchToSearchResultFormat","fileMatchToSearchResultFormat","serializations","serialized","parseSavedSearchEditor","read","parseSerializedSearchEditor","headerlines","bodylines","inHeader","SearchConfigurationModel","_onConfigDidUpdate","onConfigDidUpdate","updateConfig","SearchEditorModel","searchEditorModelFactory","models","initializeModelFromExistingModel","workingCopyBackupService","ongoingResolve","tryFetchModelFromBackupService","resultsModel","configurationModel","initializeModelFromRawData","contents","initializeModelFromExistingFile","existingFile","backup","typeId","factory","destroyModel","SEARCH_EDITOR_EXT","SearchEditorInput","editorId","capabilities","backingUri","modelUri","fileDialogService","dirty","_onDidChangeContent","onDidChangeContent","_onDidSave","onDidSave","oldDecorationsIDs","memento","onWillSaveState","saveMemento","workingCopyAdapter","hasCapability","onDidChangeDirty","revert","registerWorkingCopy","resolveModels","write","serializeForDisk","setDirty","saveAs","tryReadConfigSync","_cachedConfigurationModel","registerConfigChangeListeners","configChangeListenerDisposable","lastLabel","_onDidChangeLabel","getMemento","data","_cachedResultsModel","pickFileToSave","suggestFileName","availableFileSystems","toWrite","overwrite","getOrMakeSearchEditorInput","fileUri","setMatchRanges","getMatchRanges","maxLength","originalURI","trimToMax","wasDirty","_onDidChangeDirty","rename","getAllDecorations","soft","content","buffer","fromString","searchFileName","defaultFilePath","toUntyped","existingData","Math","random","searchEditorSettings","reuseOldSettings","reusePriorSearchConfiguration","resultsContents","backupOf","modifySearchEditorContextLinesCommand","openNewSearchEditor","_args","toSide","editorGroupsService","configurationResolverService","workspaceContextService","activeWorkspaceRootUri","getLastActiveWorkspaceRoot","lastActiveWorkspaceRoot","activeModel","selected","getOriginalEditor","getModifiedEditor","seedWithNearestWord","getWordAtPosition","getSelected","resolveAsync","existing","getEditors","getGroup","groupId","setQuery","selectQuery","setSearchConfig","focusResults","focusSearchInput","createEditorFromSearchResult","SEARCH_CANCELLED_MESSAGE","SearchView","ACTIONS_RIGHT_CLASS_NAME","progressService","dialogService","viewDescriptorService","preferencesService","searchHistoryService","notebookService","lastFocusState","messageDisposables","changedWhileHidden","currentSearchQ","pauseSearching","_visibleMatches","viewletVisible","firstMatchFocused","fileMatchOrMatchFocused","fileMatchOrFolderMatchFocus","fileMatchOrFolderMatchWithResourceFocus","fileMatchFocused","folderMatchFocused","folderMatchWithResourceFocused","hasSearchResultsKey","matchFocused","searchStateKey","hasSearchPatternKey","hasReplacePatternKey","hasFilePatternKey","hasSomeCollapsibleResultKey","treeViewKey","inputBoxFocused","inputPatternIncludesFocused","inputPatternExclusionsFocused","isEditableItem","removeFileStats","refreshTree","queryBuilder","viewletState","onDidFilesChange","onFilesChanged","onUntitledDidDispose","onDidChangeWorkbenchState","onDidClearHistory","onConfigurationUpdated","delayedRefresh","addToSearchHistoryDelayer","toggleCollapseStateDelayer","triggerQueryDelayer","treeAccessibilityProvider","defaultViewMode","_refreshResultsScheduler","_updateResults","bind","_saveSearchHistoryService","SEARCH_HISTORY_KEY","restoredHistory","include","inputPatternIncludes","inputPatternExcludes","visible","setTreeView","updateIndentStyles","getFileIconTheme","Idle","getContainer","getWorkbenchState","searchWithoutFolderMessageElement","renderBody","searchWidgetsContainerElement","createSearchWidget","filePatterns","patternExclusions","patternExclusionsHistory","patternIncludes","patternIncludesHistory","queryDetailsExpanded","queryDetails","toggleQueryDetailsButton","asCSSSelector","tabindex","role","CLICK","stop","toggleQueryDetails","KEY_UP","KEY_DOWN","folderIncludesList","filesToIncludeTitle","cancelSearch","triggerQueryChange","trackInputBox","excludesList","excludesTitle","updateHasFilePatternKey","onFilePatternSubmit","messagesElement","showSearchWithoutFolderMessage","createSearchResultsView","onSearchResultsChanged","onDidChangeBodyVisibility","onVisibilityChanged","onDidFileIconThemeChange","resultsElement","hidesExplorerArrows","refreshAndUpdateCount","toggleHighlights","searchAndReplaceWidget","searchIncludePattern","searchExcludePattern","replaceText","showReplace","updateHasPatternKey","updateHasReplacePatternKey","reLayout","contextKey","isVisible","updateSearchResultCount","clearingAll","collapseResults","added","removed","retrieveFileStats","tree","setChildren","createResultIterator","createIterator","rerender","fm","createFolderIterator","children","incompressible","childFolderIncompressible","createFileIterator","collapsed","PreserveOrCollapsed","PreserveOrExpanded","occurrences","afterReplaceAllMessage","buildAfterReplaceAllMessage","progressComplete","progressReporter","withProgress","getProgressLocation","confirmation","buildReplaceAllConfirmationMessage","primaryButton","messageEl","errors","wasHidden","newMessage","delegate","treeLabels","onDidChangeVisibility","identityProvider","accessibilityProvider","dnd","multipleSelectionSupport","selectionNavigation","overrideStyles","listBackground","getBackgroundColor","additionalScrollHeight","onContextMenu","updateHasSomeCollapsible","hasSomeCollapsible","onDidChangeCollapseState","debounce","onDidOpen","last","selectedMatch","currentSelectedFileMatch","setSelectedMatch","onFocus","onDidChangeFocus","getFocus","any","isDOMFocused","navigate","first","editable","browserEvent","showContextMenu","SearchContext","menuActionOptions","getAnchor","anchor","getActionsContext","navigator","isCollapsed","selectNextMatch","hasSearchResults","expand","setFocus","setSelection","reveal","aria","selectPreviousMatch","prev","nextPrev","nextItem","moveFocusToResults","domFocus","updatedText","seedOnFocus","updateTextFromSelection","allowSearchOnType","updateTextFromFindWidgetOrSelection","allowUnselectedWord","updateTextFromFindWidget","listCodeEditors","getParentEditor","window","updateText","getSearchTextFromEditor","focusNextInputBox","moveFocusFromSearchOrReplace","selectTreeIfNotSelected","showsFileTypes","focusPreviousInputBox","moveFocusFromResults","size","actionsPosition","widgetHeight","messagesHeight","layoutBody","allSearchFieldsClear","allFilePatternFieldsClear","clearSearchResults","clearInput","showEmptyStage","clearFilePatternFields","getNode","focusNext","activeElement","lineText","getLineContent","substring","getCaseSensitive","getWholeWords","setPreserveCase","setSearchParameters","String","moveFocus","skipLayout","cls","Boolean","searchInFolders","folderPaths","_searchWithIncludeOrExclude","searchOutsideOfFolders","folderPath","_options","_onQueryChanged","excludePatternText","includePatternText","excludePattern","charsPerLine","disregardIgnoreFiles","disregardExcludeSettings","matchLines","isSmartCase","smartCase","expandPatterns","folderResources","onQueryValidationError","showMessage","validateQuery","onQueryTriggered","folderQueriesExistP","catch","existResults","existingFolderQueries","folderQuery","nonExistantPath","searchPathNotFoundError","_progress","Searching","slowTimer","SlowSearch","onComplete","completed","clearTimeout","onlyMatch","hasResults","exit","hasExcludes","hasIncludes","searchAgainButton","SearchLinkButton","onSearchAgain","openSettingsButton","onOpenSettings","learnMoreButton","onLearnMore","addMessage","openSettings","openWorkspaceSettings","openUserSettings","onEnableExcludes","onDisableSearchInOpenEditors","disregardExcludesAndIgnores","msgWasHidden","resultMsg","buildResultCountMessage","excludesDisabledMessage","enableExcludesButton","searchingInOpenMessage","disableOpenEditorsButton","openInEditorTooltip","openInEditorButton","messageBox","firstChild","textEl","openFolderButton","platform","forceHideMessages","shouldOpenInNotebookEditor","getContributedNotebookTypes","lineMatch","useReplacePreview","resourceInput","getSelectionFrom","oldParentMatches","indexedCellOptions","rangeHighlightDecorations","highlightRange","removeHighlightRange","elemParent","showMatch","editorWidget","bindNotebookEditorWidget","updateMatchesForEditorWidget","matchIndex","openEditorWithMultiCursor","codeEditor","gotDeleted","deletedMatches","changedMatches","updateFileStats","saveState","patternExcludes","patternExcludesHistory","f","fileStat","resolveFileStat","addEventHandlers","wrappedHandler","keybinding","when","menu","getSelectedRow","matchToString","fileMatchToString","folderMatchToString","writeText","copyMatchCommand","noPrefix","copyPathCommand","folderResults","folderResult","allFolderMatchesToString","copyAllCommand","indent","getFirstLinePrefix","getOtherLinePrefix","largestPrefixSize","largest","thisSize","max","paddingStr","matchTextRows","numMatches","fileFolderMatchToString","searchWithFolderCommand","isFromExplorer","isIncludes","listService","mode","renderableMatch","resolvedResources","resolveAll","success","isDirectory","paneCompositeService","explorerService","openPaneComposite","viewlet","explorerViewContainer","getViewPaneContainer","isInsideWorkspace","explorerView","getExplorerView","setExpanded","mnemonicTitle","f1","filteredActiveWorkspaceRootUri","vscodeRemote","openedView","convertArgs","findInFilesCommand","ExplorerContext","toNegated","getContext","serialize","toggleCaseSensitiveCommand","toggleWholeWordCommand","toggleRegexCommand","togglePreserveCaseCommand","toggleCollapsed","focusNextInput","focusPrevInput","ToggleSearchOnTypeAction","searchOnTypeKey","focusSearchListCommand","focusNextResult","focusNextSearchResult","focusPreviousResult","focusPreviousSearchResult","expandSearchReplaceWidget","findOrReplaceInFiles","performReplace","elementsToReplace","nextFocusElement","focusElement","getElementToFocusAfterRemoved","batchReplace","getLastNodeFromSameType","currBottomElem","hasToOpenFile","elementsToRemove","lastElem","lastVisibleElement","compareVal","elem2","elem1","getParentElement","shouldRefocusMatch","elem","getDownstreamFileMatch","hasDownstreamMatch","shouldRefocus","batchRemove","ShowAllSymbolsAction","LABEL","ALL_SYMBOLS_PREFIX","MenubarGoMenu","clearHistoryCommand","isEqualTo","negate","ViewTitle","refreshSearch","canCollapseFileMatchLevel","canCollapseFirstLevel","nodeToTest","compressionStartNode","getCompressedTreeNode","immediateParent","collapse","hasElement","firstFocusParent","focusFirst","collapseDeepestExpandedLevel","as","Workbench","registerWorkbenchContribution","registerCommandAndKeybindingRule","isSearchViewFocused","viewContainer","ViewContainersRegistry","registerViewContainer","ctorDescriptor","mergeViewWithContainerWhenSingleView","hideIfEmpty","doNotRegisterOpenCommand","viewDescriptor","containerIcon","canToggleVisibility","canMoveView","openCommandActionDescriptor","keybindings","ViewsRegistry","registerViews","quickAccessRegistry","Quickaccess","registerQuickAccessProvider","ctor","helpEntries","commandId","Configuration","registerConfiguration","markdownDescription","default","additionalProperties","anyOf","scope","enum","enumDescriptions","deprecationMessage","included","registerCommand","ignoreUnusualLineTerminators","UnusualLineTerminatorsDetector","_codeEditorService","_isPresentingDialog","_config","hasChanged","_checkForUnusualLineTerminators","isUndoing","mightContainUnusualLineTerminators","ignoreState","getModelProperty","readIgnoreState","removeUnusualLineTerminators","setModelProperty","writeIgnoreState","RESULT_LINE_REGEX","FILE_LINE_REGEX","SearchEditor","SEARCH_EDITOR_VIEW_STATE_PREFERENCE_KEY","searchResultEditor","textResourceService","editorGroupService","runSearchDelayer","showingIncludesExcludes","ongoingOperations","updatingModelForSearch","searchOperation","searchHistoryDelayer","createEditor","queryEditorContainer","searchResultContainer","registerEditorListeners","scopedContextKeyService","createQueryEditor","scopedInstantiationService","inputBoxFocusedContextKey","searchEditorInputboxStyles","inputBorder","searchEditorTextInputBorder","queryEditorWidget","resetCursor","includesExcludesContainer","toggleIncludesExcludes","tracker","toggleRunAgainMessage","runAgainLink","_getContributions","skipContributions","getEditorContributions","getCodeEditorWidgetOptions","contributions","onMouseUp","behaviour","doubleClickBehaviour","fromPositions","getInput","loadEditorViewState","focused","focusFilesToIncludeInput","focusFilesToExcludeInput","hasWidgetFocus","deleteResultBlock","linesToDelete","maxLine","deleteUp","cursor","deleteDown","endingCursorLines","inner","isDefined","cleanState","iterateThroughMatches","lastColumn","getLineLength","fallbackStart","currentPosition","findPrevRange","findNextRange","revealLineInCenterIfOutsideViewport","matchLineText","focusAllResults","doRunSearch","setPosition","setScrollPosition","scrollTop","scrollLeft","readConfigFromWidget","startInput","afterContext","beforeContext","ongoingSearchOperation","finally","onSearchComplete","startConfig","closeWidget","updateModel","dimension","_input","priorConfig","setInput","newInput","setModel","newConfig","existingConfig","_shouldShow","toEditorViewStateResource","computeEditorViewState","tracksEditorViewState","isBefore","EditorPane","registerEditorPane","SearchEditorContribution","editorResolverService","registerEditor","providerDisplayName","priority","singlePerResource","canSupportResource","createEditorInput","workbenchContributionsRegistry","translateLegacyConfig","legacyConfig","overrides","regexp","useIgnores","openArgDescription","EditorTitle","CommandPalette","toggleSearchEditorCaseSensitiveCommand","toggleSearchEditorWholeWordCommand","toggleSearchEditorRegexCommand","toggleSearchEditorContextLinesCommand","selectAllSearchEditorMatchesCommand","openSearchEditor","SearchEditorWorkingCopyEditorHandler","workingCopyEditorService","registerHandler","handles","workingCopy","isOpen","getServiceOverride","pinButtonClass","pin","pinnedButtonClass","buttonClasses","showWithPinnedItems","storageKey","quickPick","filterDuplicates","itemsWithoutPinned","itemsWithPinned","_formatPinnedItems","buttonEvent","changedItem","formattedItems","pinnedItems","removePin","getPinnedItems","getItemIdentifier","updatePinnedItems","pinnedIds","itemToFind","itemToPin","itemsMatch","itemB","pinnedItemId","pinnedItem","updateButtons","newButtons","extensions","manageExtensionIcon","filterIcon","cloudDownload","pencil","syncEnabledIcon","sync","syncIgnoredIcon","syncIgnored","remote","star","verifiedFilled","preReleaseIcon","versions","heartFilled","starFull","starHalf","starEmpty","errorIcon","warningIcon","warning","infoIcon","trustIcon","shield"],"sourceRoot":""}