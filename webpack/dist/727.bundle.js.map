{"version":3,"file":"727.bundle.js","mappings":"kSAUA,IAAIA,EAAkB,MAClB,WAAAC,CAAYC,GACRC,KAAKD,qBAAuBA,EAC5BC,KAAKD,qBAAqBE,eAAe,IAC7C,GAMJ,SAASC,IACL,MAAO,KACA,UACH,CAAG,IAAiBC,YAAc,IAAI,IAAe,IAA0B,IAAI,GAE3F,CATAN,GAAkB,OAAW,EACvB,OAAQ,EAAG,OACdA,GACD,IAASO,GAAG,IAAWC,WAAYC,8BAA8BT,EAAiB,E","sources":["webpack://monaco-custom-bundle/./node_modules/vscode/dist/service-override/languages.js"],"sourcesContent":["import { __decorate, __param } from '../node_modules/tslib/tslib.es6.js';\nimport '../missing-services.js';\nimport { SyncDescriptor } from 'monaco-editor/esm/vs/platform/instantiation/common/descriptors.js';\nimport { WorkbenchLanguageService } from '../vscode/vs/workbench/services/language/common/languageService.js';\nimport { LanguageConfigurationFileHandler } from '../vscode/vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint.js';\nimport { Extensions } from '../vscode/vs/workbench/common/contributions.js';\nimport { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';\nimport { IInstantiationService } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';\nimport { ILanguageService } from 'monaco-editor/esm/vs/editor/common/languages/language.js';\nimport getServiceOverride$1 from './files.js';\nlet ExtensionPoints = class ExtensionPoints {\n    constructor(instantiationService) {\n        this.instantiationService = instantiationService;\n        this.instantiationService.createInstance(LanguageConfigurationFileHandler);\n    }\n};\nExtensionPoints = __decorate([\n    ( __param(0, IInstantiationService))\n], ExtensionPoints);\n( Registry.as(Extensions.Workbench)).registerWorkbenchContribution(ExtensionPoints, 1 );\nfunction getServiceOverride() {\n    return {\n        ...getServiceOverride$1(),\n        [( ILanguageService.toString())]: new SyncDescriptor(WorkbenchLanguageService, [], false)\n    };\n}\nexport { ExtensionPoints, getServiceOverride as default };\n"],"names":["ExtensionPoints","constructor","instantiationService","this","createInstance","getServiceOverride","toString","as","Workbench","registerWorkbenchContribution"],"sourceRoot":""}